{
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/MQTTLib.py": [
        "AWSIoTPythonSDK.core.shadow.shadowManager",
        "AWSIoTPythonSDK.core.shadow.deviceShadow",
        "AWSIoTPythonSDK.core.protocol.mqttCore"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/__init__.py": [],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/__init__.py": [],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/protocol/__init__.py": [],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/protocol/mqttCore.py": [
        "AWSIoTPythonSDK.core.util.offlinePublishQueue",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.disconnectTimeoutException",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.unsubscribeTimeoutException",
        "logging",
        "threading",
        "threading.Lock",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.publishError",
        "sys",
        "ssl",
        "AWSIoTPythonSDK.core.protocol.paho.client",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.unsubscribeError",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.publishQueueDisabledException",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.subscribeTimeoutException",
        "time",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.subscribeError",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.disconnectError",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.connectError",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.publishQueueFullException",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.connectTimeoutException"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/protocol/paho/__init__.py": [],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/protocol/paho/client.py": [
        "random",
        "struct",
        "platform",
        "ssl",
        "AWSIoTPythonSDK.core.protocol.paho.securedWebsocket.securedWebsocketCore",
        "threading",
        "socket",
        "select",
        "errno",
        "dns.resolver",
        "AWSIoTPythonSDK.core.util.progressiveBackoffCore",
        "sys",
        "time"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/protocol/paho/securedWebsocket/__init__.py": [],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/protocol/paho/securedWebsocket/securedWebsocketCore.py": [
        "hashlib",
        "struct",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.wssHandShakeError",
        "base64",
        "sys",
        "ssl",
        "AWSIoTPythonSDK.exception.AWSIoTExceptions.wssNoKeyInEnvironmentError",
        "os",
        "AWSIoTPythonSDK.core.util.sigV4Core.sigV4Core",
        "socket"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/shadow/__init__.py": [],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/shadow/deviceShadow.py": [
        "logging",
        "string",
        "threading.Thread",
        "threading.Lock",
        "random",
        "threading.Timer",
        "json"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/shadow/shadowManager.py": [
        "threading.Lock",
        "logging",
        "time"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/util/__init__.py": [],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/util/offlinePublishQueue.py": [
        "logging"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/util/progressiveBackoffCore.py": [
        "threading",
        "logging",
        "time"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/core/util/sigV4Core.py": [
        "hashlib",
        "logging",
        "urllib.quote",
        "datetime",
        "ConfigParser.NoOptionError",
        "ConfigParser.NoSectionError",
        "os",
        "hmac",
        "ConfigParser.ConfigParser"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/exception/AWSIoTExceptions.py": [
        "AWSIoTPythonSDK.exception.operationError",
        "AWSIoTPythonSDK.exception.operationTimeoutException"
    ],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/exception/__init__.py": [],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/exception/operationError.py": [],
    "/tmp/AWSIoTPythonSDK/AWSIoTPythonSDK/exception/operationTimeoutException.py": []
}
{
    "/tmp/Adafruit_BBIO/Adafruit_BBIO/__init__.py": []
}
{
    "/tmp/Adafruit_GPIO/Adafruit_GPIO/FT232H.py": [
        "subprocess",
        "atexit",
        "GPIO",
        "math",
        "ftdi1",
        "sys",
        "logging",
        "time",
        "os"
    ],
    "/tmp/Adafruit_GPIO/Adafruit_GPIO/GPIO.py": [
        "RPi.GPIO",
        "mraa",
        "Adafruit_BBIO.GPIO",
        "Adafruit_GPIO.Platform"
    ],
    "/tmp/Adafruit_GPIO/Adafruit_GPIO/I2C.py": [
        "Adafruit_PureIO.smbus",
        "logging",
        "subprocess",
        "Adafruit_GPIO.Platform"
    ],
    "/tmp/Adafruit_GPIO/Adafruit_GPIO/MCP230xx.py": [
        "Adafruit_GPIO.I2C",
        "Adafruit_GPIO",
        "math"
    ],
    "/tmp/Adafruit_GPIO/Adafruit_GPIO/PCF8574.py": [
        "Adafruit_GPIO",
        "Adafruit_GPIO.I2C"
    ],
    "/tmp/Adafruit_GPIO/Adafruit_GPIO/PWM.py": [
        "RPi.GPIO",
        "Adafruit_BBIO.PWM",
        "Adafruit_GPIO.Platform"
    ],
    "/tmp/Adafruit_GPIO/Adafruit_GPIO/Platform.py": [
        "mraa",
        "re",
        "platform"
    ],
    "/tmp/Adafruit_GPIO/Adafruit_GPIO/SPI.py": [
        "spidev",
        "mraa",
        "operator",
        "Adafruit_GPIO"
    ],
    "/tmp/Adafruit_GPIO/Adafruit_GPIO/__init__.py": [
        "__future__.absolute_import"
    ]
}
{
    "/tmp/Adafruit_SSD1306/Adafruit_SSD1306/SSD1306.py": [
        "Adafruit_GPIO.I2C",
        "Adafruit_GPIO",
        "Adafruit_GPIO.SPI",
        "__future__.division",
        "logging",
        "time"
    ],
    "/tmp/Adafruit_SSD1306/Adafruit_SSD1306/__init__.py": []
}
{
    "/tmp/CHIP_IO/CHIP_IO/LRADC.py": [
        "os"
    ],
    "/tmp/CHIP_IO/CHIP_IO/OverlayManager.py": [
        "time",
        "shutil",
        "os"
    ],
    "/tmp/CHIP_IO/CHIP_IO/Utilities.py": [
        "glob",
        "subprocess",
        "re"
    ],
    "/tmp/CHIP_IO/CHIP_IO/__init__.py": []
}
{
    "/tmp/DirectPy/DirectPy.py": [
        "requests"
    ]
}
{
    "/tmp/ISStreamer/ISStreamer/Streamer.py": [
        "httplib",
        "uuid",
        "datetime",
        "sys",
        "threading",
        "json",
        "version",
        "configutil",
        "time",
        "collections",
        "csv"
    ],
    "/tmp/ISStreamer/ISStreamer/__init__.py": [],
    "/tmp/ISStreamer/ISStreamer/configutil.py": [
        "ConfigParser",
        "os"
    ],
    "/tmp/ISStreamer/ISStreamer/version.py": []
}
{
    "/tmp/PyISY/PyISY/Climate.py": [
        "VarEvents.Var",
        "xml.dom.minidom",
        "VarEvents.Property",
        "time.sleep"
    ],
    "/tmp/PyISY/PyISY/Connection.py": [
        "urllib.parse.urlencode",
        "requests.adapters.HTTPAdapter",
        "urllib.parse.quote",
        "sys",
        "ssl",
        "requests.packages.urllib3.poolmanager.PoolManager",
        "requests"
    ],
    "/tmp/PyISY/PyISY/Events/__init__.py": [
        ".eventsSSL.SSLEventStream",
        ".events.EventStream"
    ],
    "/tmp/PyISY/PyISY/Events/events.py": [
        "xml",
        "xml.dom.minidom",
        "socket",
        "threading.Thread",
        "base64",
        "datetime",
        ".strings",
        "select"
    ],
    "/tmp/PyISY/PyISY/Events/eventsSSL.py": [
        "xml",
        "xml.dom.minidom",
        "socket",
        "threading.Thread",
        "base64",
        "datetime",
        "sys",
        "ssl",
        "PyISY.Events.strings",
        "select"
    ],
    "/tmp/PyISY/PyISY/Events/strings.py": [],
    "/tmp/PyISY/PyISY/ISY.py": [
        ".Events.get_stream",
        ".Climate.Climate",
        "logging",
        "threading.Thread",
        ".Programs.Programs",
        ".Variables.Variables",
        ".Connection.Connection",
        ".Nodes.Nodes",
        ".configuration.configuration"
    ],
    "/tmp/PyISY/PyISY/Nodes/__init__.py": [
        ".node.Node",
        "xml.dom.minidom",
        ".group.Group",
        "time.sleep"
    ],
    "/tmp/PyISY/PyISY/Nodes/group.py": [
        "VarEvents.Property"
    ],
    "/tmp/PyISY/PyISY/Nodes/node.py": [
        "xml.dom.minidom",
        "..constants._change2update_interval",
        "time.sleep",
        "VarEvents.Property"
    ],
    "/tmp/PyISY/PyISY/Programs/__init__.py": [
        "xml.dom.minidom",
        "..Nodes.NodeIterator",
        ".program.Program",
        "time.sleep",
        ".folder.Folder",
        "datetime.datetime",
        "..constants._empty_time"
    ],
    "/tmp/PyISY/PyISY/Programs/folder.py": [
        "..constants._change2update_interval",
        "VarEvents.Property"
    ],
    "/tmp/PyISY/PyISY/Programs/program.py": [
        ".folder.Folder",
        "..constants._change2update_interval",
        "..constants._empty_time",
        "VarEvents.Property"
    ],
    "/tmp/PyISY/PyISY/Variables/__init__.py": [
        ".variable.Variable",
        "xml.dom.minidom",
        "time.sleep",
        "datetime.datetime"
    ],
    "/tmp/PyISY/PyISY/Variables/variable.py": [
        "..constants._change2update_interval",
        "..constants._empty_time",
        "VarEvents.Property"
    ],
    "/tmp/PyISY/PyISY/__init__.py": [],
    "/tmp/PyISY/PyISY/configuration.py": [
        "xml.dom.minidom"
    ],
    "/tmp/PyISY/PyISY/constants.py": [
        "datetime"
    ],
    "/tmp/PyISY/PyISY/networking.py": [
        "xml.dom.minidom",
        "time.sleep"
    ]
}
{
    "/tmp/PyMata/PyMata/__init__.py": [],
    "/tmp/PyMata/PyMata/pymata.py": [
        "collections.deque",
        "sys",
        "threading",
        ".pymata_command_handler.PyMataCommandHandler",
        "time",
        ".pymata_serial.PyMataSerial"
    ],
    "/tmp/PyMata/PyMata/pymata_command_handler.py": [
        "threading",
        "time"
    ],
    "/tmp/PyMata/PyMata/pymata_serial.py": [
        "sys",
        "threading",
        "time",
        "serial"
    ]
}
{
    "/tmp/RPi.GPIO/RPi/GPIO/__init__.py": []
}
{
    "/tmp/SimpleCV/SimpleCV/Camera.py": [
        "SimpleCV.Display.Display",
        "pygame.camera",
        "sane",
        "piggyphoto",
        "cv2",
        "cv2",
        "cv2",
        "SimpleCV.ImageClass.ImageSet",
        "SimpleCV.Color.Color",
        "SimpleCV.ImageClass.Image",
        "SimpleCV.ImageClass.ColorSpace",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Color.py": [
        "random",
        "SimpleCV.ImageClass",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/ColorModel.py": [
        "SimpleCV.base",
        "SimpleCV.ImageClass"
    ],
    "/tmp/SimpleCV/SimpleCV/Display.py": [
        "SimpleCV.ImageClass",
        "base",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/DrawingLayer.py": [
        "SimpleCV.Color"
    ],
    "/tmp/SimpleCV/SimpleCV/EXIF.py": [
        "sys",
        "getopt"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/BOFFeatureExtractor.py": [
        "SimpleCV.ImageClass.Image",
        "SimpleCV.Features.FeatureExtractorBase",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/Blob.py": [
        "SimpleCV.Color.Color",
        "SimpleCV.ImageClass.Image",
        "SimpleCV.Features.Features.Feature",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/BlobMaker.py": [
        "cv2",
        "SimpleCV.Features.Features.FeatureSet",
        "SimpleCV.ImageClass.Image",
        "SimpleCV.base",
        "SimpleCV.Features.Blob.Blob"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/Detection.py": [
        "SimpleCV.Color",
        "SimpleCV.Features.Features.Feature",
        "SimpleCV.ImageClass",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/EdgeHistogramFeatureExtractor.py": [
        "SimpleCV.Features.FeatureExtractorBase",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/FeatureExtractorBase.py": [
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/Features.py": [
        "copy",
        "SimpleCV.base",
        "SimpleCV.Color"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/HaarCascade.py": [
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/HaarLikeFeature.py": [],
    "/tmp/SimpleCV/SimpleCV/Features/HaarLikeFeatureExtractor.py": [
        "SimpleCV.Features.HaarLikeFeature",
        "SimpleCV.Features.FeatureExtractorBase",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/HueHistogramFeatureExtractor.py": [
        "SimpleCV.Features.FeatureExtractorBase",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/MorphologyFeatureExtractor.py": [
        "SimpleCV.Features.FeatureExtractorBase",
        "SimpleCV.Features.BlobMaker",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/TrackSet.py": [
        "SimpleCV.Image",
        "SimpleCV.Color",
        "cv2",
        "SimpleCV.base",
        "SimpleCV.Features.Features.FeatureSet",
        "cv2.cv"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/Tracking.py": [
        "SimpleCV.Features.Features.Feature",
        "SimpleCV.ImageClass",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Features/__init__.py": [],
    "/tmp/SimpleCV/SimpleCV/Font.py": [
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/ImageClass.py": [
        "BeautifulSoup.BeautifulSoup",
        "IPython.core.display",
        "IPython.core.display.Image",
        "webm.decode",
        "string",
        "os",
        "SimpleCV.Display.Display",
        "IPython.core.display",
        "webm.handlers.BitmapHandler",
        "webm.encode",
        "glob",
        "IPython.core.display.Image",
        "tempfile",
        "flickrapi",
        "pycurl",
        "cv2",
        "cv2",
        "cv2",
        "cv2",
        "SimpleCV.Features.HaarCascade.HaarCascade",
        "zbar",
        "webbrowser",
        "SimpleCV.Display.Display",
        "cv2",
        "cv2",
        "cv2",
        "cv2",
        "cv2",
        "cv2",
        "cv2",
        "cv2",
        "SimpleCV.Features.Chessboard",
        "SimpleCV.Features.Feature",
        "SimpleCV.Stream.JpegStreamer",
        "SimpleCV.Features.KeyPoint",
        "SimpleCV.Features.Circle",
        "SimpleCV.Features.KeypointMatch",
        "SimpleCV.Color",
        "SimpleCV.Features.Barcode",
        "SimpleCV.Font",
        "SimpleCV.Features.TrackSet",
        "SimpleCV.Features.FeatureSet",
        "SimpleCV.Features.Line",
        "SimpleCV.Features.HaarFeature",
        "SimpleCV.Features.Motion",
        "SimpleCV.Features.BlobMaker",
        "SimpleCV.Features.CAMShift",
        "SimpleCV.Features.TemplateMatch",
        "SimpleCV.Features.Corner",
        "SimpleCV.base",
        "SimpleCV.DrawingLayer"
    ],
    "/tmp/SimpleCV/SimpleCV/MachineLearning/KNNClassifier.py": [
        "SimpleCV.ImageClass.Image",
        "SimpleCV.base",
        "SimpleCV.DrawingLayer"
    ],
    "/tmp/SimpleCV/SimpleCV/MachineLearning/NaiveBayesClassifier.py": [
        "SimpleCV.ImageClass.Image",
        "SimpleCV.base",
        "SimpleCV.DrawingLayer"
    ],
    "/tmp/SimpleCV/SimpleCV/MachineLearning/SVMClassifier.py": [
        "SimpleCV.ImageClass.Image",
        "SimpleCV.base",
        "SimpleCV.DrawingLayer"
    ],
    "/tmp/SimpleCV/SimpleCV/MachineLearning/TreeClassifier.py": [
        "SimpleCV.ImageClass.Image",
        "SimpleCV.base",
        "SimpleCV.DrawingLayer"
    ],
    "/tmp/SimpleCV/SimpleCV/MachineLearning/__init__.py": [],
    "/tmp/SimpleCV/SimpleCV/Segmentation/ColorSegmentation.py": [
        "SimpleCV.ColorModel.ColorModel",
        "SimpleCV.ImageClass.Image",
        "SimpleCV.Segmentation.SegmentationBase.SegmentationBase",
        "SimpleCV.Features.BlobMaker",
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Segmentation/DiffSegmentation.py": [
        "SimpleCV.ImageClass.Image",
        "SimpleCV.base",
        "SimpleCV.Features.BlobMaker",
        "SimpleCV.Segmentation.SegmentationBase.SegmentationBase"
    ],
    "/tmp/SimpleCV/SimpleCV/Segmentation/RunningSegmentation.py": [
        "SimpleCV.ImageClass.Image",
        "SimpleCV.base",
        "SimpleCV.Features.BlobMaker",
        "SimpleCV.Segmentation.SegmentationBase.SegmentationBase"
    ],
    "/tmp/SimpleCV/SimpleCV/Segmentation/SegmentationBase.py": [
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/Segmentation/__init__.py": [],
    "/tmp/SimpleCV/SimpleCV/Shell/Example.py": [
        "subprocess.call",
        "SimpleCV",
        "os"
    ],
    "/tmp/SimpleCV/SimpleCV/Shell/Shell.py": [
        "matplotlib.pyplot",
        "pylab",
        "IPython.frontend.html.notebook.kernelmanager",
        "IPython.frontend.html.notebook.notebookapp",
        "SimpleCV.Shell.Tutorial",
        "IPython.config.loader.Config",
        "platform",
        "subprocess.call",
        "SimpleCV.__init__",
        "IPython.frontend.terminal.embed.InteractiveShellEmbed",
        "IPython.Shell.IPShellEmbed",
        "sys",
        "webbrowser",
        "SimpleCV.Shell.Example"
    ],
    "/tmp/SimpleCV/SimpleCV/Shell/Tutorial.py": [
        "code.InteractiveInterpreter",
        "platform",
        "subprocess.call",
        "SimpleCV"
    ],
    "/tmp/SimpleCV/SimpleCV/Shell/__init__.py": [],
    "/tmp/SimpleCV/SimpleCV/Stream.py": [
        "SimpleCV.base"
    ],
    "/tmp/SimpleCV/SimpleCV/__init__.py": [
        "SimpleCV.ColorModel",
        "SimpleCV.Color",
        "SimpleCV.Display",
        "SimpleCV.Shell",
        "SimpleCV.Stream",
        "SimpleCV.Camera",
        "SimpleCV.ImageClass",
        "SimpleCV.Segmentation",
        "SimpleCV.Font",
        "SimpleCV.Features",
        "SimpleCV.MachineLearning",
        "SimpleCV.base",
        "SimpleCV.DrawingLayer"
    ],
    "/tmp/SimpleCV/SimpleCV/base.py": [
        "platform",
        "cv2.__version__",
        "pickle",
        "pygame",
        "tempfile",
        "orange",
        "EXIF",
        "zipfile",
        "pickle",
        "types.FloatType",
        "logging",
        "os",
        "IPython",
        "PIL.Image",
        "cv",
        "types.LongType",
        "types.IntType",
        "math",
        "numpy",
        "urllib2",
        "sys"
    ],
    "/tmp/SimpleCV/SimpleCV/tests/YCrCbtests.py": [
        "SimpleCV"
    ],
    "/tmp/SimpleCV/SimpleCV/tests/__init__.py": [],
    "/tmp/SimpleCV/SimpleCV/tests/test_cameras.py": [
        "SimpleCV"
    ],
    "/tmp/SimpleCV/SimpleCV/tests/test_display.py": [
        "SimpleCV",
        "pickle",
        "nose.tools.with_setup"
    ],
    "/tmp/SimpleCV/SimpleCV/tests/test_haar_cascade.py": [
        "SimpleCV"
    ],
    "/tmp/SimpleCV/SimpleCV/tests/test_optional.py": [
        "nose.tools.with_setup",
        "SimpleCV"
    ],
    "/tmp/SimpleCV/SimpleCV/tests/test_stereovision.py": [
        "nose.tools.with_setup",
        "SimpleCV"
    ],
    "/tmp/SimpleCV/SimpleCV/tests/tests.py": [
        "pickle",
        "os",
        "nose.tools.with_setup",
        "SimpleCV"
    ],
    "/tmp/SimpleCV/SimpleCV/tests/vcamera_tests.py": [
        "SimpleCV"
    ]
}
{
    "/tmp/TwitterAPI/TwitterAPI/BearerAuth.py": [
        ".constants",
        "base64",
        "requests"
    ],
    "/tmp/TwitterAPI/TwitterAPI/TwitterAPI.py": [
        "datetime.datetime",
        "requests.packages.urllib3.exceptions.ProtocolError",
        "requests.exceptions.ReadTimeout",
        "requests.exceptions.ConnectionError",
        ".constants",
        "json",
        "requests.packages.urllib3.exceptions.ReadTimeoutError",
        "requests.exceptions.SSLError",
        ".TwitterError",
        "ssl",
        "requests_oauthlib.OAuth1",
        ".BearerAuth.BearerAuth",
        "socket",
        "time",
        "requests"
    ],
    "/tmp/TwitterAPI/TwitterAPI/TwitterError.py": [
        "logging"
    ],
    "/tmp/TwitterAPI/TwitterAPI/TwitterOAuth.py": [
        "os"
    ],
    "/tmp/TwitterAPI/TwitterAPI/TwitterRestPager.py": [
        ".TwitterError",
        "time"
    ],
    "/tmp/TwitterAPI/TwitterAPI/__init__.py": [
        ".TwitterError.TwitterConnectionError",
        "logging",
        ".TwitterAPI.TwitterAPI",
        ".TwitterRestPager.TwitterRestPager",
        ".TwitterOAuth.TwitterOAuth",
        ".TwitterError.TwitterRequestError"
    ],
    "/tmp/TwitterAPI/TwitterAPI/constants.py": []
}
{
    "/tmp/aiohttp/aiohttp/__init__.py": [
        ".resolver",
        "multidict",
        ".errors",
        ".client",
        ".client_reqrep",
        ".parsers",
        ".multipart",
        "multidict",
        ".connector",
        ".streams",
        ".helpers",
        "._ws_impl.WSMsgType",
        ".protocol"
    ],
    "/tmp/aiohttp/aiohttp/_ws_impl.py": [
        "os",
        "sys",
        "json",
        "random",
        "binascii",
        "enum.IntEnum",
        "aiohttp.errors",
        "struct.Struct",
        "aiohttp.hdrs",
        "hashlib",
        "base64",
        "aiohttp.log.ws_logger",
        "collections",
        "._websocket._websocket_mask_cython"
    ],
    "/tmp/aiohttp/aiohttp/abc.py": [
        "abc.abstractmethod",
        "collections.abc.Sized",
        "sys",
        "asyncio",
        "collections.abc.Iterable",
        "abc.ABC"
    ],
    "/tmp/aiohttp/aiohttp/client.py": [
        "multidict.MultiDict",
        "asyncio.coroutines",
        "._ws_impl.WebSocketParser",
        "sys",
        "asyncio",
        ".cookiejar.CookieJar",
        "base64",
        ".errors.WSServerHandshakeError",
        "yarl.URL",
        ".helpers",
        ".hdrs",
        "multidict.CIMultiDict",
        "multidict.MultiDictProxy",
        "aiohttp",
        "os",
        "traceback",
        "warnings",
        ".helpers.Timeout",
        "multidict.istr",
        ".client_ws.ClientWebSocketResponse",
        "collections.abc.Coroutine",
        "._ws_impl.WebSocketWriter",
        "._ws_impl.WS_KEY",
        "hashlib",
        ".client_reqrep.ClientResponse",
        ".client_reqrep.ClientRequest"
    ],
    "/tmp/aiohttp/aiohttp/client_reqrep.py": [
        "multidict.MultiDict",
        "aiohttp",
        ".multipart.MultipartWriter",
        "mimetypes",
        "traceback",
        "os",
        "chardet",
        "sys",
        "warnings",
        ".helpers.Timeout",
        "asyncio",
        ".log.client_logger",
        "multidict.CIMultiDictProxy",
        "yarl.URL",
        ".streams.FlowControlStreamReader",
        ".helpers",
        "io",
        "json",
        ".hdrs",
        ".helpers.HeadersMixin",
        "multidict.CIMultiDict",
        "http.cookies",
        ".protocol.HttpMessage",
        "multidict.MultiDictProxy",
        ".streams"
    ],
    "/tmp/aiohttp/aiohttp/client_ws.py": [
        "json",
        "._ws_impl.WSMsgType",
        "._ws_impl.WebSocketError",
        "._ws_impl.CLOSED_MESSAGE",
        "._ws_impl.WSMessage",
        "sys",
        "asyncio"
    ],
    "/tmp/aiohttp/aiohttp/connector.py": [
        ".errors.ProxyConnectionError",
        "math.ceil",
        "hashlib.sha1",
        "functools",
        "traceback",
        "sys",
        "warnings",
        "hashlib.md5",
        "aiohttp",
        "collections.defaultdict",
        "asyncio",
        ".errors.ServerDisconnectedError",
        "itertools.chain",
        ".errors.ClientOSError",
        "types.MappingProxyType",
        ".errors.FingerprintMismatch",
        "yarl.URL",
        ".errors.ClientTimeoutError",
        ".helpers",
        ".helpers.is_ip_address",
        "ssl",
        ".hdrs",
        ".errors.HttpProxyError",
        "http.cookies",
        ".helpers.sentinel",
        ".client.ClientRequest",
        ".resolver.DefaultResolver",
        "hashlib.sha256"
    ],
    "/tmp/aiohttp/aiohttp/cookiejar.py": [
        "http.cookies.SimpleCookie",
        "math.ceil",
        "pickle",
        "yarl.URL",
        ".helpers.is_ip_address",
        ".abc.AbstractCookieJar",
        "collections.defaultdict",
        "datetime",
        "http.cookies.Morsel",
        "pathlib",
        "collections.abc.Mapping",
        "re"
    ],
    "/tmp/aiohttp/aiohttp/errors.py": [
        "asyncio.TimeoutError"
    ],
    "/tmp/aiohttp/aiohttp/file_sender.py": [
        ".hdrs",
        ".web_exceptions.HTTPPartialContent",
        ".helpers.create_future",
        ".web_exceptions.HTTPOk",
        ".web_exceptions.HTTPRequestRangeNotSatisfiable",
        "mimetypes",
        ".web_reqrep.StreamResponse",
        "os",
        ".web_exceptions.HTTPNotModified",
        "asyncio"
    ],
    "/tmp/aiohttp/aiohttp/hdrs.py": [
        "multidict.istr"
    ],
    "/tmp/aiohttp/aiohttp/helpers.py": [
        ".multipart",
        "multidict.MultiDict",
        "io",
        "asyncio",
        "async_timeout.timeout",
        "base64",
        "collections.namedtuple",
        "time.gmtime",
        "collections.MutableSequence",
        ".hdrs",
        "binascii",
        "multidict.MultiDictProxy",
        "functools",
        "os",
        "warnings",
        "pathlib.Path",
        "time.time",
        "functools.total_ordering",
        "re",
        "cgi",
        "datetime",
        "urllib.parse.urlencode"
    ],
    "/tmp/aiohttp/aiohttp/log.py": [
        "logging"
    ],
    "/tmp/aiohttp/aiohttp/multipart.py": [
        "collections.Sequence",
        "urllib.parse.unquote",
        "zlib",
        "sys",
        "asyncio",
        "json",
        ".hdrs.CONTENT_TRANSFER_ENCODING",
        "base64",
        "urllib.parse.parse_qsl",
        "io",
        "multidict.CIMultiDict",
        "re",
        "mimetypes",
        "os",
        "warnings",
        "uuid",
        "collections.deque",
        ".helpers.parse_mimetype",
        ".hdrs.CONTENT_ENCODING",
        ".hdrs.CONTENT_DISPOSITION",
        "urllib.parse.quote",
        ".hdrs.CONTENT_TYPE",
        "binascii",
        "urllib.parse.urlencode",
        ".hdrs.CONTENT_LENGTH",
        ".protocol.HttpParser",
        "collections.Mapping",
        "pathlib.Path"
    ],
    "/tmp/aiohttp/aiohttp/parsers.py": [
        ".streams.FlowControlDataQueue",
        ".errors",
        "asyncio.streams",
        "socket",
        ".streams.EofStream"
    ],
    "/tmp/aiohttp/aiohttp/protocol.py": [
        "aiohttp",
        "functools",
        "zlib",
        "sys",
        "abc.ABC",
        "wsgiref.handlers.format_date_time",
        "re",
        "multidict.istr",
        ".errors",
        "string",
        "abc.abstractmethod",
        ".log.internal_logger",
        ".hdrs",
        "multidict.CIMultiDict",
        "http.server",
        "collections"
    ],
    "/tmp/aiohttp/aiohttp/pytest_plugin.py": [
        ".test_utils.unused_port",
        ".test_utils.TestServer",
        "aiohttp.web.Application",
        "asyncio",
        ".test_utils.RawTestServer",
        ".test_utils.setup_test_loop",
        ".test_utils.teardown_test_loop",
        ".test_utils.TestClient",
        "pytest",
        ".test_utils.loop_context",
        "contextlib"
    ],
    "/tmp/aiohttp/aiohttp/resolver.py": [
        "socket",
        "asyncio",
        ".abc.AbstractResolver"
    ],
    "/tmp/aiohttp/aiohttp/server.py": [
        "aiohttp.helpers._get_kwarg",
        "aiohttp",
        "contextlib.suppress",
        "traceback",
        "aiohttp.helpers.ensure_future",
        "warnings",
        "aiohttp.helpers.Timeout",
        "asyncio",
        "html.escape",
        "aiohttp.errors",
        "aiohttp.helpers",
        "aiohttp.hdrs",
        "aiohttp.log.server_logger",
        "aiohttp.streams",
        "http.server",
        "socket",
        "aiohttp.log.access_logger"
    ],
    "/tmp/aiohttp/aiohttp/signals.py": [
        "itertools.count",
        "aiohttp.helpers.FrozenList",
        "asyncio"
    ],
    "/tmp/aiohttp/aiohttp/streams.py": [
        "traceback",
        "sys",
        "asyncio",
        ".helpers",
        "functools",
        "collections",
        ".log.internal_logger"
    ],
    "/tmp/aiohttp/aiohttp/test_utils.py": [
        "aiohttp",
        ".web.Request",
        "functools",
        "unittest",
        "socket",
        "sys",
        ".web.Server",
        "asyncio",
        ".web.UrlMappingMatchInfo",
        "unittest.mock",
        "abc.ABC",
        ".signals.Signal",
        ".protocol.RawRequestMessage",
        "gc",
        "aiohttp.client._RequestContextManager",
        "yarl.URL",
        "abc.abstractmethod",
        ".web.Application",
        ".protocol.HttpVersion",
        ".hdrs",
        "multidict.CIMultiDict",
        ".helpers.sentinel",
        ".ClientSession",
        "contextlib"
    ],
    "/tmp/aiohttp/aiohttp/web.py": [
        "importlib.import_module",
        "argparse.ArgumentParser",
        ".signals.PostSignal",
        ".web_urldispatcher",
        ".web_reqrep",
        "sys",
        ".web_server.Server",
        "asyncio",
        ".log.web_logger",
        ".web_ws",
        "warnings",
        ".helpers.FrozenList",
        ".signals.Signal",
        ".abc.AbstractMatchInfo",
        ".web_server",
        "yarl.URL",
        ".signals.PreSignal",
        "collections.MutableMapping",
        ".web_exceptions",
        ".abc.AbstractRouter",
        ".hdrs",
        ".log.access_logger",
        ".helpers.sentinel"
    ],
    "/tmp/aiohttp/aiohttp/web_exceptions.py": [
        ".web_reqrep.Response"
    ],
    "/tmp/aiohttp/aiohttp/web_reqrep.py": [
        ".multipart",
        "enum",
        "multidict.MultiDict",
        ".protocol.HttpVersion11",
        ".helpers.sentinel",
        "multidict.CIMultiDictProxy",
        "warnings",
        ".helpers.reify",
        "email.utils.parsedate",
        "json",
        "asyncio",
        "time",
        "binascii",
        "types.MappingProxyType",
        ".protocol.WebResponse",
        "http.cookies.SimpleCookie",
        "yarl.URL",
        "math",
        "io",
        ".hdrs",
        ".helpers.HeadersMixin",
        "multidict.CIMultiDict",
        "re",
        "cgi",
        "multidict.MultiDictProxy",
        "datetime",
        ".protocol.HttpVersion10",
        "collections"
    ],
    "/tmp/aiohttp/aiohttp/web_server.py": [
        ".web_exceptions.HTTPInternalServerError",
        "html.escape",
        ".web_reqrep.BaseRequest",
        ".helpers.TimeService",
        "asyncio",
        "traceback",
        ".server.ServerHttpProtocol",
        ".web_exceptions.HTTPException"
    ],
    "/tmp/aiohttp/aiohttp/web_urldispatcher.py": [
        "yarl.unquote",
        "sys",
        "asyncio",
        "collections.abc.Container",
        ".web_exceptions.HTTPMethodNotAllowed",
        "re",
        "types.MappingProxyType",
        "yarl.quote",
        "yarl.URL",
        ".web_exceptions.HTTPExpectationFailed",
        ".web_exceptions.HTTPNotFound",
        "keyword",
        ".hdrs",
        ".file_sender.FileSender",
        ".web_reqrep.StreamResponse",
        ".abc.AbstractMatchInfo",
        "collections",
        "collections.abc.Sized",
        ".web_exceptions.HTTPForbidden",
        "os",
        "warnings",
        "pathlib.Path",
        "abc",
        ".abc.AbstractView",
        ".protocol.HttpVersion11",
        ".abc.AbstractRouter",
        "inspect",
        "collections.abc.Iterable",
        ".web_reqrep.Response"
    ],
    "/tmp/aiohttp/aiohttp/web_ws.py": [
        ".errors.HttpProcessingError",
        "warnings",
        "json",
        "._ws_impl.WSMessage",
        "sys",
        "._ws_impl.WSMsgType",
        ".Timeout",
        "asyncio",
        "._ws_impl.do_handshake",
        ".web_exceptions.HTTPBadRequest",
        ".web_exceptions.HTTPMethodNotAllowed",
        "._ws_impl.WebSocketError",
        ".hdrs",
        "collections.namedtuple",
        ".errors.ClientDisconnectedError",
        ".web_exceptions.HTTPInternalServerError",
        ".web_reqrep.StreamResponse",
        "._ws_impl.CLOSED_MESSAGE"
    ],
    "/tmp/aiohttp/aiohttp/worker.py": [
        "uvloop",
        "aiohttp.web_server.Server",
        "signal",
        "aiohttp.helpers.ensure_future",
        "os",
        "ssl",
        "sys",
        "logging",
        "asyncio",
        "gunicorn.workers.base",
        "gunicorn.config.AccessLogFormat",
        "socket",
        "aiohttp.wsgi.WSGIServerHttpProtocol",
        "aiohttp.helpers.AccessLogger",
        "re"
    ],
    "/tmp/aiohttp/aiohttp/wsgi.py": [
        "aiohttp",
        "os",
        "io",
        "sys",
        "asyncio",
        "urllib.parse.urlsplit",
        "aiohttp.hdrs",
        "inspect",
        "socket",
        "aiohttp.server"
    ]
}
{
    "/tmp/aiohttp_cors/aiohttp_cors/__about__.py": [],
    "/tmp/aiohttp_cors/aiohttp_cors/__init__.py": [
        ".__about__.__email__",
        ".__about__.__version__",
        ".__about__.__copyright__",
        "typing.Union",
        ".__about__.__uri__",
        ".cors_config.CorsConfig",
        ".__about__.__title__",
        ".__about__.__license__",
        "typing.Any",
        ".__about__.__author__",
        ".__about__.__summary__",
        ".resource_options.ResourceOptions",
        "typing.Mapping",
        "aiohttp.web"
    ],
    "/tmp/aiohttp_cors/aiohttp_cors/_log.py": [
        "logging"
    ],
    "/tmp/aiohttp_cors/aiohttp_cors/abc.py": [
        "abc.ABCMeta",
        "abc.abstractmethod",
        "asyncio",
        "aiohttp.web"
    ],
    "/tmp/aiohttp_cors/aiohttp_cors/cors_config.py": [
        ".urldispatcher_router_adapter.ResourcesUrlDispatcherRouterAdapter",
        "aiohttp.hdrs",
        "typing.Union",
        "typing.Mapping",
        "asyncio",
        "typing.Any",
        ".resource_options.ResourceOptions",
        ".urldispatcher_router_adapter.OldRoutesUrlDispatcherRouterAdapter",
        ".abc.AbstractRouterAdapter",
        "collections",
        "aiohttp.web"
    ],
    "/tmp/aiohttp_cors/aiohttp_cors/resource_options.py": [
        "numbers",
        "collections.abc"
    ],
    "/tmp/aiohttp_cors/aiohttp_cors/urldispatcher_router_adapter.py": [
        "aiohttp.hdrs",
        "asyncio",
        "typing.Union",
        ".abc.AbstractRouterAdapter",
        "collections",
        "re",
        "aiohttp.web"
    ]
}
{
    "/tmp/apcaccess/apcaccess/__init__.py": [],
    "/tmp/apcaccess/apcaccess/__main__.py": [
        "apcaccess.status",
        "argparse"
    ],
    "/tmp/apcaccess/apcaccess/status.py": [
        "collections.OrderedDict",
        "__future__.print_function",
        "socket"
    ]
}
{
    "/tmp/apns2/apns2/__init__.py": [],
    "/tmp/apns2/apns2/client.py": [
        "apns2.errors.exception_class_for_reason",
        "enum.Enum",
        "hyper.HTTP20Connection",
        "json.dumps",
        "json",
        "hyper.tls.init_context"
    ],
    "/tmp/apns2/apns2/errors.py": [],
    "/tmp/apns2/apns2/payload.py": []
}
{
    "/tmp/astral/astral.py": [
        "__future__.unicode_literals",
        "math.pow",
        "datetime",
        "math.tan",
        "math.asin",
        "math.floor",
        "json",
        "math.degrees",
        "math.sin",
        "urllib.request.URLError",
        "urllib.request.urlopen",
        "math.ceil",
        "sys",
        "urllib.parse.quote_plus",
        "pytz",
        "math.cos",
        "math.radians",
        "math.atan2",
        "time.time",
        "math.acos"
    ]
}
{
    "/tmp/async_timeout/async_timeout/__init__.py": [
        "asyncio"
    ]
}
{
    "/tmp/batinfo/batinfo/__init__.py": [
        "batinfo.battery.Battery",
        "batinfo.battery.Batteries"
    ],
    "/tmp/batinfo/batinfo/battery.py": [
        "logging",
        "json",
        "os"
    ]
}
{
    "/tmp/blinkstick/blinkstick/__init__.py": [],
    "/tmp/blinkstick/blinkstick/_version.py": [],
    "/tmp/blinkstick/blinkstick/blinkstick.py": [
        "usb.util",
        "random.randint",
        "ctypes",
        "re",
        "collections",
        "._version.__version__",
        "sys",
        "pywinusb.hid",
        "time"
    ]
}
{
    "/tmp/blockchain/blockchain/__init__.py": [],
    "/tmp/blockchain/blockchain/blockexplorer.py": [
        ".util",
        "json"
    ],
    "/tmp/blockchain/blockchain/createwallet.py": [
        ".util",
        "json"
    ],
    "/tmp/blockchain/blockchain/exceptions.py": [],
    "/tmp/blockchain/blockchain/exchangerates.py": [
        ".util",
        "json"
    ],
    "/tmp/blockchain/blockchain/pushtx.py": [
        ".util"
    ],
    "/tmp/blockchain/blockchain/statistics.py": [
        ".util",
        "json"
    ],
    "/tmp/blockchain/blockchain/util.py": [
        "urllib.urlencode",
        "urllib2.urlopen",
        ".exceptions",
        "sys",
        "urllib2.HTTPError"
    ],
    "/tmp/blockchain/blockchain/v2/__init__.py": [],
    "/tmp/blockchain/blockchain/v2/receive.py": [
        "..util",
        "json"
    ],
    "/tmp/blockchain/blockchain/wallet.py": [
        ".exceptions",
        ".util",
        "json"
    ]
}
{
    "/tmp/bluepy_devices/bluepy_devices/__init__.py": [],
    "/tmp/bluepy_devices/bluepy_devices/devices/__init__.py": [],
    "/tmp/bluepy_devices/bluepy_devices/devices/eq3btsmart.py": [
        "..lib.connection.BTLEConnection",
        "struct",
        "datetime.datetime"
    ],
    "/tmp/bluepy_devices/bluepy_devices/lib/__init__.py": [],
    "/tmp/bluepy_devices/bluepy_devices/lib/connection.py": [
        "struct",
        "bluepy.btle",
        "logging"
    ]
}
{
    "/tmp/boto3/boto3/__init__.py": [
        "logging",
        "boto3.session.Session"
    ],
    "/tmp/boto3/boto3/compat.py": [
        "socket",
        "errno",
        "botocore.vendored.six",
        "sys",
        "os"
    ],
    "/tmp/boto3/boto3/docs/__init__.py": [
        "boto3.docs.service.ServiceDocumenter",
        "os"
    ],
    "/tmp/boto3/boto3/docs/action.py": [
        "botocore.xform_name",
        "botocore.docs.method.document_custom_method",
        "boto3.docs.utils.get_resource_public_actions",
        "botocore.docs.method.document_model_driven_method",
        "botocore.utils.get_service_module_name",
        "botocore.model.OperationModel",
        "boto3.docs.utils.get_resource_ignore_params",
        "boto3.docs.method.document_model_driven_resource_method",
        "boto3.docs.utils.add_resource_type_overview",
        "boto3.docs.base.BaseDocumenter"
    ],
    "/tmp/boto3/boto3/docs/attr.py": [
        "boto3.docs.utils.get_identifier_description",
        "botocore.docs.params.ResponseParamsDocumenter"
    ],
    "/tmp/boto3/boto3/docs/base.py": [
        "botocore.compat.OrderedDict"
    ],
    "/tmp/boto3/boto3/docs/client.py": [
        "botocore.docs.client.ClientDocumenter"
    ],
    "/tmp/boto3/boto3/docs/collection.py": [
        "botocore.xform_name",
        "botocore.docs.utils.DocumentedShape",
        "botocore.docs.method.get_instance_public_methods",
        "boto3.docs.utils.get_resource_ignore_params",
        "boto3.docs.method.document_model_driven_resource_method",
        "boto3.docs.utils.add_resource_type_overview",
        "boto3.docs.base.BaseDocumenter"
    ],
    "/tmp/boto3/boto3/docs/docstring.py": [
        "boto3.docs.collection.document_collection_object",
        "boto3.docs.attr.document_identifier",
        "botocore.docs.docstring.LazyLoadedDocstring",
        "boto3.docs.collection.document_batch_action",
        "boto3.docs.action.document_action",
        "boto3.docs.collection.document_collection_method",
        "boto3.docs.attr.document_attribute",
        "boto3.docs.waiter.document_resource_waiter",
        "boto3.docs.action.document_load_reload_action",
        "boto3.docs.subresource.document_sub_resource",
        "boto3.docs.attr.document_reference"
    ],
    "/tmp/boto3/boto3/docs/method.py": [
        "botocore.docs.method.document_model_driven_method"
    ],
    "/tmp/boto3/boto3/docs/resource.py": [
        "boto3.docs.subresource.SubResourceDocumenter",
        "botocore.xform_name",
        "botocore.docs.utils.get_official_service_name",
        "boto3.docs.waiter.WaiterResourceDocumenter",
        "boto3.docs.attr.document_identifier",
        "boto3.docs.utils.get_identifier_values_for_example",
        "boto3.docs.attr.document_reference",
        "boto3.docs.utils.get_identifier_args_for_signature",
        "boto3.docs.utils.get_identifier_description",
        "boto3.docs.action.ActionDocumenter",
        "boto3.docs.attr.document_attribute",
        "boto3.docs.utils.add_resource_type_overview",
        "boto3.docs.collection.CollectionDocumenter",
        "boto3.docs.base.BaseDocumenter"
    ],
    "/tmp/boto3/boto3/docs/service.py": [
        "boto3.utils.ServiceContext",
        "boto3.docs.resource.ResourceDocumenter",
        "botocore.exceptions.DataNotFoundError",
        "boto3",
        "boto3.docs.client.Boto3ClientDocumenter",
        "boto3.docs.resource.ServiceResourceDocumenter",
        "botocore.docs.service.ServiceDocumenter",
        "os",
        "botocore.docs.bcdoc.restdoc.DocumentStructure"
    ],
    "/tmp/boto3/boto3/docs/subresource.py": [
        "botocore.xform_name",
        "boto3.docs.utils.get_identifier_description",
        "boto3.docs.utils.get_identifier_args_for_signature",
        "boto3.docs.utils.get_identifier_values_for_example",
        "botocore.utils.get_service_module_name",
        "boto3.docs.utils.add_resource_type_overview",
        "boto3.docs.base.BaseDocumenter"
    ],
    "/tmp/boto3/boto3/docs/utils.py": [
        "botocore.compat.six",
        "inspect",
        "jmespath"
    ],
    "/tmp/boto3/boto3/docs/waiter.py": [
        "botocore.xform_name",
        "botocore.docs.method.document_model_driven_method",
        "botocore.utils.get_service_module_name",
        "boto3.docs.utils.get_resource_ignore_params",
        "boto3.docs.utils.add_resource_type_overview",
        "boto3.docs.base.BaseDocumenter"
    ],
    "/tmp/boto3/boto3/dynamodb/__init__.py": [],
    "/tmp/boto3/boto3/dynamodb/conditions.py": [
        "boto3.exceptions.DynamoDBNeedsConditionError",
        "re",
        "boto3.exceptions.DynamoDBNeedsKeyConditionError",
        "collections.namedtuple",
        "boto3.exceptions.DynamoDBOperationNotSupportedError"
    ],
    "/tmp/boto3/boto3/dynamodb/table.py": [
        "logging"
    ],
    "/tmp/boto3/boto3/dynamodb/transform.py": [
        "boto3.dynamodb.types.TypeSerializer",
        "boto3.dynamodb.conditions.ConditionExpressionBuilder",
        "boto3.dynamodb.conditions.ConditionBase",
        "collections.Mapping",
        "collections.MutableSequence",
        "boto3.docs.utils.DocumentModifiedShape",
        "copy",
        "boto3.dynamodb.types.TypeDeserializer"
    ],
    "/tmp/boto3/boto3/dynamodb/types.py": [
        "decimal.Inexact",
        "botocore.compat.six",
        "collections.Mapping",
        "decimal.Overflow",
        "decimal.Decimal",
        "decimal.Context",
        "decimal.Underflow",
        "collections.Set",
        "decimal.Rounded",
        "decimal.Clamped"
    ],
    "/tmp/boto3/boto3/ec2/__init__.py": [],
    "/tmp/boto3/boto3/ec2/createtags.py": [],
    "/tmp/boto3/boto3/ec2/deletetags.py": [
        "boto3.resources.action.CustomModeledAction"
    ],
    "/tmp/boto3/boto3/exceptions.py": [
        "botocore.exceptions"
    ],
    "/tmp/boto3/boto3/resources/__init__.py": [],
    "/tmp/boto3/boto3/resources/action.py": [
        "botocore.xform_name",
        "logging",
        ".params.create_request_parameters",
        "boto3.docs.docstring.ActionDocstring",
        ".response.RawHandler",
        ".response.ResourceHandler",
        ".model.Action",
        "boto3.utils.inject_attribute"
    ],
    "/tmp/boto3/boto3/resources/base.py": [
        "boto3",
        "logging"
    ],
    "/tmp/boto3/boto3/resources/collection.py": [
        "botocore.xform_name",
        "logging",
        ".params.create_request_parameters",
        "..docs.docstring",
        "botocore.utils.merge_dicts",
        ".response.ResourceHandler",
        "copy",
        ".action.BatchAction"
    ],
    "/tmp/boto3/boto3/resources/factory.py": [
        "functools.partial",
        "..exceptions.ResourceLoadException",
        ".model.ResourceModel",
        ".base.ResourceMeta",
        "..docs.docstring",
        ".response.build_identifiers",
        ".action.WaiterAction",
        ".action.ServiceAction",
        ".response.ResourceHandler",
        "logging",
        ".base.ServiceResource",
        ".collection.CollectionFactory"
    ],
    "/tmp/boto3/boto3/resources/model.py": [
        "botocore.xform_name",
        "logging"
    ],
    "/tmp/boto3/boto3/resources/params.py": [
        "botocore.xform_name",
        "re",
        "..exceptions.ResourceLoadException",
        "jmespath"
    ],
    "/tmp/boto3/boto3/resources/response.py": [
        "botocore.xform_name",
        ".params.get_data_member",
        "jmespath"
    ],
    "/tmp/boto3/boto3/s3/__init__.py": [],
    "/tmp/boto3/boto3/s3/inject.py": [
        "boto3.utils",
        "boto3.s3.transfer.S3Transfer",
        "boto3.s3.transfer.ProgressCallbackInvoker",
        "boto3.s3.transfer.create_transfer_manager",
        "boto3.s3.transfer.TransferConfig",
        "botocore.exceptions.ClientError"
    ],
    "/tmp/boto3/boto3/s3/transfer.py": [
        "boto3.exceptions.S3UploadFailedError",
        "s3transfer.futures.NonThreadedExecutor",
        "botocore.compat.six",
        "s3transfer.manager.TransferConfig",
        "botocore.exceptions.ClientError",
        "s3transfer.subscribers.BaseSubscriber",
        "boto3.exceptions.RetriesExceededError",
        "s3transfer.exceptions.RetriesExceededError",
        "s3transfer.manager.TransferManager",
        "s3transfer.utils.OSUtils"
    ],
    "/tmp/boto3/boto3/session.py": [
        "copy",
        "botocore.exceptions.UnknownServiceError",
        "boto3.exceptions.ResourceNotExistsError",
        "botocore.exceptions.DataNotFoundError",
        "os",
        "boto3.exceptions.UnknownAPIVersionError",
        "boto3.utils",
        ".resources.factory.ResourceFactory",
        "botocore.session",
        "botocore.client.Config"
    ],
    "/tmp/boto3/boto3/utils.py": [
        "collections.namedtuple",
        "sys"
    ]
}
{
    "/tmp/cherrypy/cherrypy/__init__.py": [
        "threading.local",
        "cherrypy.process",
        "cherrypy._cpserver",
        "cherrypy._cptree",
        "cherrypy._cprequest",
        "cherrypy._cplogging",
        "cherrypy._cpchecker",
        "cherrypy._cpconfig",
        "cherrypy.lib.httputil",
        "pkg_resources",
        "pydoc"
    ],
    "/tmp/cherrypy/cherrypy/__main__.py": [
        "cherrypy.daemon.run"
    ],
    "/tmp/cherrypy/cherrypy/_cpchecker.py": [
        "cherrypy._cpcompat.builtins",
        "cherrypy",
        "warnings",
        "cherrypy._cpcompat.iteritems",
        "os",
        "cherrypy._cpcompat.copykeys"
    ],
    "/tmp/cherrypy/cherrypy/_cpcompat.py": [
        "cgi.escape",
        "re",
        "urllib.unquote",
        "six",
        "binascii",
        "base64.decodestring",
        "sys",
        "threading",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/_cpconfig.py": [
        "cherrypy._cpserver",
        "cherrypy",
        "cherrypy._cpcompat.text_or_bytes",
        "cherrypy.lib.reprconf"
    ],
    "/tmp/cherrypy/cherrypy/_cpdispatch.py": [
        "routes",
        "routes",
        "cherrypy.lib.xmlrpcutil",
        "cherrypy.lib.httputil",
        "string",
        "cherrypy",
        "inspect",
        "sys",
        "types"
    ],
    "/tmp/cherrypy/cherrypy/_cperror.py": [
        "cherrypy",
        "cherrypy",
        "cherrypy",
        "cherrypy",
        "cherrypy",
        "cherrypy",
        "cherrypy",
        "cherrypy.lib.encoding.UTF8StreamEncoder",
        "cherrypy",
        "traceback",
        "cherrypy._cpcompat.iteritems",
        "contextlib",
        "six",
        "cherrypy._cpcompat.tonative",
        "sys.exc_info",
        "traceback.format_exception",
        "cherrypy._cpcompat.text_or_bytes",
        "cherrypy._cpcompat.urljoin",
        "cherrypy._cpcompat.escape_html",
        "cherrypy.lib.httputil",
        "xml.sax.saxutils",
        "cherrypy._cpcompat.ntob"
    ],
    "/tmp/cherrypy/cherrypy/_cplogging.py": [
        "types",
        "cherrypy._cperror",
        "logging",
        "cherrypy",
        "six",
        "datetime",
        "sys",
        "cherrypy._cpcompat.ntob",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/_cpmodpy.py": [
        "mod_python.apache",
        "mod_python.apache",
        "logging",
        "cherrypy",
        "cherrypy._cperror.format_exc",
        "cherrypy.lib.httputil",
        "subprocess",
        "sys",
        "re",
        "cherrypy._cpcompat.copyitems",
        "io",
        "cherrypy._cperror.bare_error",
        "cherrypy._cpcompat.ntob",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/_cpnative_server.py": [
        "logging",
        "cherrypy",
        "cherrypy._cperror.format_exc",
        "sys",
        "cheroot.server",
        "io",
        "cherrypy._cperror.bare_error",
        "cherrypy.lib.httputil"
    ],
    "/tmp/cherrypy/cherrypy/_cpreqbody.py": [
        "cherrypy",
        "tempfile",
        "cherrypy._cpcompat.ntou",
        "sys",
        "re",
        "cherrypy._cpcompat.ntob",
        "cherrypy.lib.httputil",
        "cherrypy._cpcompat.text_or_bytes"
    ],
    "/tmp/cherrypy/cherrypy/_cprequest.py": [
        "cherrypy",
        "cherrypy._cpcompat.SimpleCookie",
        "cherrypy.lib.httputil",
        "six",
        "cherrypy._cpcompat.copykeys",
        "warnings",
        "cherrypy._cpcompat.text_or_bytes",
        "sys",
        "cherrypy._cpconfig",
        "cherrypy._cpcompat.ntob",
        "cherrypy.lib.file_generator",
        "cherrypy._cpreqbody",
        "cherrypy._cperror.format_exc",
        "time",
        "cherrypy._cperror.bare_error",
        "cherrypy._cpcompat.CookieError"
    ],
    "/tmp/cherrypy/cherrypy/_cpserver.py": [
        "cherrypy._cpwsgi_server",
        "socket",
        "cherrypy.process.servers.ServerAdapter",
        "cherrypy",
        "cherrypy._cpcompat.text_or_bytes",
        "six",
        "cherrypy.lib.reprconf.attributes"
    ],
    "/tmp/cherrypy/cherrypy/_cptools.py": [
        "types",
        "cherrypy.lib.jsontools",
        "cherrypy.lib.xmlrpcutil",
        "cherrypy",
        "cherrypy.lib.auth_digest",
        "warnings",
        "cherrypy._helper.expose",
        "cherrypy.lib.auth_basic",
        "sys",
        "cherrypy.lib.caching",
        "cherrypy.lib.sessions"
    ],
    "/tmp/cherrypy/cherrypy/_cptree.py": [
        "cherrypy",
        "cherrypy._cplogging",
        "cherrypy.tools",
        "cherrypy.lib.httputil",
        "six",
        "cherrypy._cpcompat.ntou",
        "cherrypy._cpconfig",
        "cherrypy._cpwsgi",
        "cherrypy._cprequest",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/_cpwsgi.py": [
        "cherrypy",
        "cherrypy._cperror",
        "six",
        "cherrypy._cpcompat.ntou",
        "sys",
        "io",
        "cherrypy._cpcompat.ntob",
        "cherrypy.lib.httputil",
        "cherrypy.lib.is_closable_iterator"
    ],
    "/tmp/cherrypy/cherrypy/_cpwsgi_server.py": [
        "sys",
        "cheroot.server",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/_helper.py": [
        "sys",
        "types",
        "inspect",
        "cherrypy",
        "cherrypy._cpcompat.text_or_bytes",
        "six",
        "cherrypy._cpcompat.urljoin",
        "cherrypy._cpcompat.urlencode"
    ],
    "/tmp/cherrypy/cherrypy/daemon.py": [
        "optparse.OptionParser",
        "cherrypy",
        "cherrypy.process.servers",
        "sys",
        "cherrypy.Application",
        "cherrypy.process.plugins"
    ],
    "/tmp/cherrypy/cherrypy/lib/__init__.py": [
        "types.GeneratorType",
        "inspect"
    ],
    "/tmp/cherrypy/cherrypy/lib/auth.py": [
        "cherrypy.lib.httpauth",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/lib/auth_basic.py": [
        "cherrypy",
        "binascii",
        "cherrypy._cpcompat.base64_decode"
    ],
    "/tmp/cherrypy/cherrypy/lib/auth_digest.py": [
        "cherrypy",
        "cherrypy._cpcompat.parse_http_list",
        "cherrypy._cpcompat.ntob",
        "hashlib.md5",
        "cherrypy._cpcompat.parse_keqv_list",
        "time"
    ],
    "/tmp/cherrypy/cherrypy/lib/caching.py": [
        "cherrypy.lib.cptools",
        "cherrypy._cpcompat.sorted",
        "cherrypy",
        "datetime",
        "sys",
        "threading",
        "cherrypy._cpcompat.copyitems",
        "time",
        "cherrypy._cpcompat.ntob",
        "cherrypy.lib.httputil",
        "cherrypy._cpcompat.Event"
    ],
    "/tmp/cherrypy/cherrypy/lib/covercp.py": [
        "cherrypy",
        "cherrypy",
        "coverage.coverage",
        "cherrypy",
        "re",
        "cgi",
        "warnings",
        "sys",
        "cherrypy._cpcompat.quote_plus",
        "coverage.coverage",
        "os.path"
    ],
    "/tmp/cherrypy/cherrypy/lib/cpstats.py": [
        "logging",
        "cherrypy",
        "sys",
        "threading",
        "cherrypy._cpcompat.json",
        "time",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/lib/cptools.py": [
        "cherrypy._cprequest",
        "cherrypy",
        "six",
        "re",
        "cherrypy.lib.is_iterator",
        "cherrypy._cpcompat.text_or_bytes",
        "cherrypy.lib.httputil",
        "hashlib.md5",
        "logging"
    ],
    "/tmp/cherrypy/cherrypy/lib/encoding.py": [
        "zlib",
        "gzip",
        "cherrypy.lib.set_vary_header",
        "struct",
        "cherrypy",
        "cherrypy._cpcompat.text_or_bytes",
        "six",
        "cherrypy.lib.is_closable_iterator",
        "io",
        "time",
        "cherrypy._cpcompat.ntob",
        "cherrypy.lib.file_generator"
    ],
    "/tmp/cherrypy/cherrypy/lib/gctools.py": [
        "cherrypy.process.plugins.SimplePlugin",
        "cherrypy",
        "inspect",
        "sys",
        "cherrypy._cpwsgi",
        "gc",
        "time",
        "cherrypy._cprequest"
    ],
    "/tmp/cherrypy/cherrypy/lib/httpauth.py": [
        "cherrypy._cpcompat.base64_decode",
        "hashlib.md5",
        "cherrypy._cpcompat.parse_http_list",
        "cherrypy._cpcompat.ntob",
        "cherrypy._cpcompat.parse_keqv_list",
        "time"
    ],
    "/tmp/cherrypy/cherrypy/lib/httputil.py": [
        "functools",
        "cherrypy._cpcompat.ntob",
        "six",
        "re",
        "cgi.parse_header",
        "cherrypy._cpcompat.text_or_bytes",
        "cherrypy._cpcompat.reversed",
        "binascii.b2a_base64",
        "cherrypy._cpcompat.ntou",
        "cherrypy._cpcompat.iteritems",
        "cherrypy._cpcompat.sorted",
        "email.utils",
        "cherrypy._cpcompat.unquote_qs",
        "email.Header.decode_header",
        "cherrypy._cpcompat.BaseHTTPRequestHandler"
    ],
    "/tmp/cherrypy/cherrypy/lib/jsontools.py": [
        "cherrypy._cpcompat.json_decode",
        "cherrypy._cpcompat.json_encode",
        "cherrypy",
        "cherrypy._cpcompat.text_or_bytes",
        "cherrypy._cpcompat.ntou"
    ],
    "/tmp/cherrypy/cherrypy/lib/lockfile.py": [
        "fcntl",
        "os",
        "msvcrt"
    ],
    "/tmp/cherrypy/cherrypy/lib/locking.py": [
        "datetime"
    ],
    "/tmp/cherrypy/cherrypy/lib/profiler.py": [
        "cherrypy",
        "warnings",
        "sys",
        "io",
        "os.path"
    ],
    "/tmp/cherrypy/cherrypy/lib/reprconf.py": [
        "compiler",
        "ast",
        "ast",
        "builtins",
        "__builtin__",
        "operator",
        "sys",
        "ConfigParser.ConfigParser"
    ],
    "/tmp/cherrypy/cherrypy/lib/sessions.py": [
        "memcache",
        "cherrypy",
        "cherrypy._cpcompat.random20",
        "datetime",
        "cherrypy.lib.httputil",
        "cherrypy.lib.locking",
        "cherrypy.lib.is_iterator",
        "sys",
        "cherrypy._cpcompat.copyitems",
        "cherrypy.lib.lockfile",
        "os",
        "threading",
        "time",
        "cherrypy._cpcompat.pickle"
    ],
    "/tmp/cherrypy/cherrypy/lib/static.py": [
        "mimetools.choose_boundary",
        "cherrypy._cpcompat.unquote",
        "stat",
        "cherrypy",
        "cherrypy.lib.cptools",
        "cherrypy.lib.httputil",
        "mimetypes",
        "re",
        "cherrypy.lib.file_generator_limited",
        "cherrypy._cpcompat.ntob",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/lib/xmlrpcutil.py": [
        "xmlrpclib",
        "cherrypy",
        "sys",
        "cherrypy._cpcompat.ntob"
    ],
    "/tmp/cherrypy/cherrypy/process/__init__.py": [],
    "/tmp/cherrypy/cherrypy/process/plugins.py": [
        "cherrypy._cpcompat.get_thread_ident",
        "signal",
        "re",
        "cherrypy._cpcompat.text_or_bytes",
        "cherrypy._cpcompat.Timer",
        "sys",
        "cherrypy._cpcompat.ntob",
        "threading",
        "time",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/process/servers.py": [
        "threading",
        "flup.server.cgi.WSGIServer",
        "socket",
        "flup.server.fcgi.WSGIServer",
        "flup.server.scgi.WSGIServer",
        "warnings",
        "portend",
        "sys",
        "contextlib",
        "time",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/process/win32.py": [
        "cherrypy.process",
        "cherrypy.process",
        "win32event",
        "cherrypy.process.plugins",
        "cherrypy.process.wspbus",
        "win32serviceutil",
        "win32con",
        "win32service",
        "os",
        "win32api"
    ],
    "/tmp/cherrypy/cherrypy/process/wspbus.py": [
        "_systemrestart.SystemRestart",
        "fcntl",
        "six",
        "threading",
        "warnings",
        "traceback",
        "sys",
        "atexit",
        "time",
        "operator",
        "cherrypy._cpcompat._args_from_interpreter_flags",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/scaffold/__init__.py": [
        "cherrypy",
        "cherrypy.url",
        "cherrypy.tools",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/__init__.py": [
        "sys",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/_test_decorators.py": [
        "cherrypy",
        "cherrypy.expose",
        "cherrypy._cpcompat.ntob",
        "cherrypy.tools"
    ],
    "/tmp/cherrypy/cherrypy/test/_test_states_demo.py": [
        "signal.signal",
        "signal.SIGTERM",
        "cherrypy",
        "os",
        "sys",
        "time"
    ],
    "/tmp/cherrypy/cherrypy/test/benchmark.py": [
        "cherrypy",
        "cherrypy._cpmodpy",
        "cherrypy.lib.httputil",
        "cherrypy._cperror",
        "re",
        "getopt",
        "cherrypy._cpcompat.ntob",
        "sys",
        "time",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/checkerdemo.py": [
        "os",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/helper.py": [
        "testconfig",
        "wsgiref.validate",
        "cherrypy.test.modpy",
        "cherrypy.test.modpy",
        "cherrypy.test.modwsgi",
        "cherrypy.test.modfcgid",
        "cherrypy.test.modfastcgi",
        "cherrypy",
        "unittest",
        "portend",
        "io",
        "cherrypy.lib.httputil",
        "datetime",
        "six",
        "cherrypy.test.webtest",
        "re",
        "warnings",
        "cherrypy._cpcompat.text_or_bytes",
        "sys",
        "cherrypy.lib.reprconf.unrepr",
        "cherrypy._cpcompat.copyitems",
        "cherrypy._cpcompat.ntob",
        "subprocess",
        "logging",
        "cherrypy.lib.gctools",
        "nose",
        "time",
        "cherrypy._cpcompat.HTTPSConnection",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/logtest.py": [
        "tty",
        "cherrypy._cpcompat.text_or_bytes",
        "six",
        "termios",
        "sys",
        "time",
        "cherrypy._cpcompat.ntob",
        "msvcrt"
    ],
    "/tmp/cherrypy/cherrypy/test/modfastcgi.py": [
        "cherrypy",
        "cherrypy.test.helper",
        "cherrypy.process.servers",
        "re",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/modfcgid.py": [
        "cherrypy",
        "cherrypy.test.helper",
        "cherrypy.process.servers",
        "re",
        "cherrypy._cpcompat.ntob",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/modpy.py": [
        "cherrypy",
        "mod_python.apache",
        "mod_python.apache",
        "cherrypy",
        "cherrypy.test.helper",
        "re",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/modwsgi.py": [
        "cherrypy",
        "cherrypy.test.helper",
        "cherrypy.test.webtest",
        "portend",
        "sys",
        "re",
        "time",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/sessiondemo.py": [
        "cherrypy",
        "cherrypy.lib.sessions",
        "datetime.datetime",
        "sys",
        "cherrypy._cpcompat.copyitems",
        "calendar"
    ],
    "/tmp/cherrypy/cherrypy/test/test_auth_basic.py": [
        "cherrypy.test.helper",
        "cherrypy.lib.auth_basic",
        "cherrypy",
        "cherrypy._cpcompat.ntob",
        "hashlib.md5"
    ],
    "/tmp/cherrypy/cherrypy/test/test_auth_digest.py": [
        "cherrypy.lib.auth_digest",
        "cherrypy.test.helper",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/test_bus.py": [
        "unittest",
        "cherrypy.process.wspbus",
        "threading",
        "time"
    ],
    "/tmp/cherrypy/cherrypy/test/test_caching.py": [
        "itertools.count",
        "cherrypy.test.helper",
        "cherrypy",
        "cherrypy._cpcompat.quote",
        "cherrypy.lib.httputil",
        "datetime",
        "cherrypy._cpcompat.xrange",
        "threading",
        "pytest",
        "time",
        "cherrypy._cpcompat.ntob",
        "cherrypy._cpcompat.next",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/test_compat.py": [
        "cherrypy._cpcompat",
        "__future__.unicode_literals",
        "unittest",
        "six",
        "nose"
    ],
    "/tmp/cherrypy/cherrypy/test/test_config.py": [
        "cherrypy.tutorial.thing2",
        "textwrap.dedent",
        "textwrap.dedent",
        "textwrap.dedent",
        "cherrypy._cpcompat",
        "cherrypy.test.helper",
        "cherrypy",
        "unittest",
        "six",
        "sys",
        "io",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/test_config_server.py": [
        "os",
        "cherrypy.test.helper",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/test_conn.py": [
        "cherrypy",
        "cherrypy._cpcompat.BadStatusLine",
        "cherrypy.test.helper",
        "errno",
        "six",
        "cherrypy.test.webtest",
        "cherrypy._cpcompat.tonative",
        "pytest",
        "cherrypy._cpcompat.urlopen",
        "sys",
        "cherrypy._cpcompat.HTTPConnection",
        "cherrypy._cpcompat.NotConnected",
        "cherrypy._cpcompat.ntob",
        "socket",
        "time",
        "cherrypy._cpcompat.HTTPSConnection"
    ],
    "/tmp/cherrypy/cherrypy/test/test_core.py": [
        "xml.etree.ElementTree",
        "cherrypy.test.helper",
        "cherrypy",
        "cherrypy.tools",
        "cherrypy.lib.httputil",
        "cherrypy._cpcompat.ntou",
        "sys",
        "cherrypy._cptools",
        "cherrypy.lib.static",
        "cherrypy._cpcompat.itervalues",
        "cherrypy.test._test_decorators.ExposeExamples",
        "cherrypy._cpcompat.ntob",
        "os",
        "types"
    ],
    "/tmp/cherrypy/cherrypy/test/test_dynamicobjectmapping.py": [
        "cherrypy",
        "cherrypy.test.helper",
        "six",
        "cherrypy._cpcompat.sorted"
    ],
    "/tmp/cherrypy/cherrypy/test/test_encoding.py": [
        "cherrypy.test.helper",
        "cherrypy",
        "six",
        "cherrypy._cpcompat.IncompleteRead",
        "cherrypy._cpcompat.ntou",
        "io",
        "gzip",
        "cherrypy._cpcompat.ntob",
        "unittest.mock"
    ],
    "/tmp/cherrypy/cherrypy/test/test_etags.py": [
        "cherrypy.test.helper",
        "cherrypy._cpcompat.ntou",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/test_http.py": [
        "cherrypy.test.helper",
        "mimetypes",
        "socket",
        "cherrypy",
        "errno",
        "six",
        "sys",
        "cherrypy._cpcompat.HTTPConnection",
        "cherrypy._cpcompat.HTTPSConnection",
        "cherrypy._cpcompat.ntob",
        "unittest.mock"
    ],
    "/tmp/cherrypy/cherrypy/test/test_httpauth.py": [
        "cherrypy.lib.httpauth",
        "hashlib.sha1",
        "cherrypy",
        "cherrypy.test.helper",
        "cherrypy._cpcompat.ntob",
        "hashlib.md5"
    ],
    "/tmp/cherrypy/cherrypy/test/test_httplib.py": [
        "unittest",
        "cherrypy.lib.httputil"
    ],
    "/tmp/cherrypy/cherrypy/test/test_iterator.py": [
        "random",
        "time",
        "cherrypy",
        "cherrypy.test.helper",
        "six"
    ],
    "/tmp/cherrypy/cherrypy/test/test_json.py": [
        "cherrypy",
        "cherrypy.test.helper",
        "cherrypy._cpcompat.json"
    ],
    "/tmp/cherrypy/cherrypy/test/test_logging.py": [
        "cherrypy.test.helper",
        "cherrypy",
        "six",
        "cherrypy._cpcompat.ntou",
        "cherrypy.test.logtest",
        "cherrypy._cpcompat.ntob",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/test_mime.py": [
        "cherrypy",
        "cherrypy.test.helper",
        "cherrypy._cpcompat.ntou",
        "cherrypy._cpcompat.sorted",
        "cherrypy._cpcompat.ntob"
    ],
    "/tmp/cherrypy/cherrypy/test/test_misc_tools.py": [
        "cherrypy",
        "cherrypy.test.helper",
        "os",
        "cherrypy.tools"
    ],
    "/tmp/cherrypy/cherrypy/test/test_objectmapping.py": [
        "cherrypy.test.helper",
        "cherrypy",
        "cherrypy._cpcompat.ntou",
        "sys",
        "cherrypy._cptree.Application"
    ],
    "/tmp/cherrypy/cherrypy/test/test_params.py": [
        "sys",
        "cherrypy.test.helper",
        "textwrap",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/test_proxy.py": [
        "socket",
        "cherrypy.test.helper",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/test_refleaks.py": [
        "cherrypy.test.helper",
        "cherrypy",
        "threading",
        "platform",
        "itertools",
        "cherrypy._cpcompat.HTTPConnection",
        "cherrypy._cpcompat.HTTPSConnection"
    ],
    "/tmp/cherrypy/cherrypy/test/test_request_obj.py": [
        "functools.wraps",
        "cherrypy.test.helper",
        "cherrypy",
        "cherrypy.lib.httputil",
        "six",
        "cherrypy._cpcompat.IncompleteRead",
        "sys",
        "cherrypy._cpcompat.ntou",
        "cherrypy._cpcompat.ntob",
        "os",
        "types"
    ],
    "/tmp/cherrypy/cherrypy/test/test_routes.py": [
        "cherrypy",
        "cherrypy.test.helper",
        "nose",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/test_session.py": [
        "cherrypy.test.helper",
        "cherrypy.lib.httputil.response_codes",
        "cherrypy.lib.reprconf",
        "cherrypy",
        "pytest",
        "cherrypy._cpcompat.copykeys",
        "cherrypy._cpcompat.json_decode",
        "cherrypy.lib.sessions",
        "cherrypy._cpcompat.HTTPConnection",
        "socket",
        "threading",
        "time",
        "cherrypy._cpcompat.HTTPSConnection",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/test_sessionauthenticate.py": [
        "cherrypy.test.helper",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/test_states.py": [
        "signal.SIGHUP",
        "signal.SIGHUP",
        "cherrypy._cpcompat.BadStatusLine",
        "cherrypy.test.helper",
        "cherrypy.process.servers",
        "warnings",
        "signal",
        "portend",
        "sys",
        "pytest",
        "time",
        "cherrypy._cpcompat.ntob",
        "os",
        "unittest"
    ],
    "/tmp/cherrypy/cherrypy/test/test_static.py": [
        "cherrypy.test.helper",
        "cherrypy._cpcompat.HTTPConnection",
        "cherrypy",
        "six.moves.urllib",
        "sys",
        "platform",
        "cherrypy._cpcompat.tonative",
        "pytest",
        "contextlib",
        "cherrypy._cpcompat.ntou",
        "io",
        "cherrypy._cpcompat.HTTPSConnection",
        "cherrypy.lib.static",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/test_tools.py": [
        "cherrypy.test.helper",
        "cherrypy._cpcompat.itervalues",
        "cherrypy",
        "cherrypy._cpcompat.xrange",
        "unittest",
        "six",
        "cherrypy._cpcompat.IncompleteRead",
        "sys",
        "cherrypy.test._test_decorators",
        "cherrypy._cpcompat.copyitems",
        "cherrypy._cpcompat.ntou",
        "io",
        "time",
        "gzip",
        "cherrypy._cpcompat.ntob",
        "cherrypy.tools",
        "types"
    ],
    "/tmp/cherrypy/cherrypy/test/test_tutorials.py": [
        "importlib",
        "cherrypy",
        "six",
        "sys",
        "imp",
        "cherrypy.test.helper",
        "types"
    ],
    "/tmp/cherrypy/cherrypy/test/test_virtualhost.py": [
        "os",
        "cherrypy.test.helper",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/test_wsgi_ns.py": [
        "cherrypy._cpcompat.ntob",
        "cherrypy.test.helper",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/test_wsgi_unix_socket.py": [
        "socket",
        "cherrypy",
        "tempfile",
        "atexit",
        "pytest",
        "cherrypy.test.helper",
        "cherrypy._cpcompat.HTTPConnection",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/test/test_wsgi_vhost.py": [
        "cherrypy.test.helper",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/test/test_wsgiapps.py": [
        "cherrypy",
        "os",
        "cherrypy",
        "cherrypy",
        "cherrypy",
        "sys",
        "cherrypy._cpcompat.ntob",
        "cherrypy.test.helper"
    ],
    "/tmp/cherrypy/cherrypy/test/test_xmlrpc.py": [
        "xmlrpc.client.SafeTransport",
        "cherrypy.test.helper",
        "cherrypy",
        "xmlrpc.client.Fault",
        "six",
        "xmlrpc.client.DateTime",
        "sys",
        "cherrypy._cptools",
        "xmlrpc.client.ProtocolError",
        "xmlrpc.client.ServerProxy",
        "socket"
    ],
    "/tmp/cherrypy/cherrypy/test/webtest.py": [
        "tty",
        "six",
        "unittest",
        "msvcrt",
        "pprint",
        "re",
        "json",
        "cherrypy._cpcompat.text_or_bytes",
        "termios",
        "sys",
        "cherrypy._cpcompat.HTTPConnection",
        "types",
        "socket",
        "traceback",
        "time",
        "cherrypy._cpcompat.HTTPSConnection",
        "os"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/__init__.py": [],
    "/tmp/cherrypy/cherrypy/tutorial/tut01_helloworld.py": [
        "os.path",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/tut02_expose_methods.py": [
        "os.path",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/tut03_get_and_post.py": [
        "os.path",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/tut04_complex_site.py": [
        "cherrypy",
        "os.path"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/tut05_derived_objects.py": [
        "cherrypy",
        "os.path"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/tut06_default_method.py": [
        "os.path",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/tut07_sessions.py": [
        "os.path",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/tut08_generators_and_yield.py": [
        "os.path",
        "cherrypy"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/tut09_files.py": [
        "cherrypy",
        "cherrypy.lib.static",
        "os.path"
    ],
    "/tmp/cherrypy/cherrypy/tutorial/tut10_http_errors.py": [
        "cherrypy",
        "os.path"
    ]
}
{
    "/tmp/colorlog/colorlog/__init__.py": [
        "colorlog.logging.info",
        "colorlog.logging.exception",
        "colorlog.logging.log",
        "colorlog.logging.critical",
        "colorlog.colorlog.LevelFormatter",
        "colorlog.colorlog.ColoredFormatter",
        "colorlog.logging.getLogger",
        "colorlog.logging.warning",
        "colorlog.colorlog.escape_codes",
        "colorlog.colorlog.TTYColoredFormatter",
        "colorlog.logging.error",
        "colorlog.logging.debug",
        "colorlog.logging.StreamHandler",
        "__future__.absolute_import",
        "colorlog.logging.basicConfig",
        "colorlog.logging.root",
        "colorlog.colorlog.default_log_colors"
    ],
    "/tmp/colorlog/colorlog/colorlog.py": [
        "logging",
        "colorlog.escape_codes.escape_codes",
        "sys",
        "collections",
        "__future__.absolute_import",
        "colorlog.escape_codes.parse_colors"
    ],
    "/tmp/colorlog/colorlog/escape_codes.py": [
        "colorama"
    ],
    "/tmp/colorlog/colorlog/logging.py": [
        "logging",
        "functools",
        "__future__.absolute_import",
        "colorlog.colorlog.ColoredFormatter"
    ],
    "/tmp/colorlog/colorlog/tests/conftest.py": [
        "logging",
        "colorlog",
        "inspect",
        "sys",
        "pytest",
        "__future__.print_function"
    ],
    "/tmp/colorlog/colorlog/tests/test_colorlog.py": [
        "colorlog",
        "sys",
        "pytest"
    ],
    "/tmp/colorlog/colorlog/tests/test_config.py": [
        "logging.config",
        "sys",
        "pytest",
        "os.path"
    ],
    "/tmp/colorlog/colorlog/tests/test_escape_codes.py": [
        "pytest",
        "colorlog.escape_codes.esc",
        "colorlog.escape_codes.escape_codes",
        "colorlog.escape_codes.parse_colors"
    ],
    "/tmp/colorlog/colorlog/tests/test_example.py": [
        "colorlog"
    ],
    "/tmp/colorlog/colorlog/tests/test_exports.py": [],
    "/tmp/colorlog/colorlog/tests/test_logging.py": [
        "logging",
        "colorlog"
    ]
}
{
    "/tmp/distro/distro.py": [
        "subprocess",
        "re",
        "json",
        "sys",
        "argparse",
        "logging",
        "shlex",
        "os"
    ]
}
{
    "/tmp/dlipower/dlipower/__init__.py": [
        "json",
        "os"
    ],
    "/tmp/dlipower/dlipower/debug.py": [
        ".__init__.__git_origin__",
        ".__init__.__git_version__",
        ".__init__.__git_hash__",
        ".__init__.__version__",
        "os",
        ".__init__.__git_branch__",
        "__future__.print_function",
        ".__init__.__source_url__"
    ],
    "/tmp/dlipower/dlipower/dlipower.py": [
        "logging",
        "six.moves.urllib.parse.quote",
        "bs4.BeautifulSoup",
        "json",
        "time",
        "requests",
        "os",
        "multiprocessing",
        "__future__.print_function"
    ]
}
{
    "/tmp/dropbox/dropbox/__init__.py": [
        "__future__.absolute_import"
    ],
    "/tmp/dropbox/dropbox/async.py": [
        "stone_base",
        "stone_validators"
    ],
    "/tmp/dropbox/dropbox/auth.py": [
        "stone_base",
        "stone_validators"
    ],
    "/tmp/dropbox/dropbox/babel_serializers.py": [
        "six",
        "functools",
        "datetime",
        "msgpack",
        "base64",
        "json",
        "collections",
        "babel_validators"
    ],
    "/tmp/dropbox/dropbox/babel_validators.py": [
        "six",
        "datetime",
        "numbers",
        "abc.abstractmethod",
        "abc.ABCMeta",
        "re",
        "math"
    ],
    "/tmp/dropbox/dropbox/base.py": [
        ".files",
        ".sharing",
        ".users",
        "warnings",
        "abc.abstractmethod",
        ".auth",
        "abc.ABCMeta",
        ".async",
        ".properties"
    ],
    "/tmp/dropbox/dropbox/base_team.py": [
        "warnings",
        "abc.abstractmethod",
        "abc.ABCMeta",
        ".team",
        ".async",
        ".properties"
    ],
    "/tmp/dropbox/dropbox/client.py": [
        "six",
        ".rest.RESTClient",
        "__future__.absolute_import",
        ".rest.ErrorResponse",
        "base64",
        "urllib",
        "re",
        "simplejson",
        "io.BytesIO",
        ".session.DropboxOAuth2Session",
        "warnings",
        ".rest.params_to_urlencoded",
        ".session.DropboxSession",
        ".session.BaseSession",
        "os"
    ],
    "/tmp/dropbox/dropbox/common.py": [
        "stone_validators"
    ],
    "/tmp/dropbox/dropbox/dropbox.py": [
        ".exceptions.RateLimitError",
        "random",
        "contextlib",
        ".base.DropboxBase",
        ".exceptions.AuthError",
        ".auth.AuthError_validator",
        "six",
        "json",
        ".exceptions.HttpError",
        ".exceptions.BadInputError",
        ".files",
        ".stone_serializers",
        ".exceptions.ApiError",
        ".exceptions.InternalServerError",
        ".auth.RateLimitError_validator",
        "logging",
        ".session.pinned_session",
        ".base_team.DropboxTeamBase",
        "time",
        "requests",
        "os"
    ],
    "/tmp/dropbox/dropbox/exceptions.py": [],
    "/tmp/dropbox/dropbox/files.py": [
        "common",
        "async",
        "stone_base",
        "stone_validators",
        "properties",
        "users"
    ],
    "/tmp/dropbox/dropbox/oauth.py": [
        "six",
        ".session.pinned_session",
        "base64",
        "urllib",
        "os"
    ],
    "/tmp/dropbox/dropbox/properties.py": [
        "stone_base",
        "stone_validators"
    ],
    "/tmp/dropbox/dropbox/rest.py": [
        "dropbox.__version__",
        "socket",
        "six",
        "urllib3",
        "pkg_resources",
        "urllib",
        "sys",
        "ssl",
        "simplejson",
        "io"
    ],
    "/tmp/dropbox/dropbox/session.py": [
        "six",
        "requests.adapters.HTTPAdapter",
        ".rest",
        "urllib.parse.parse_qs",
        "random",
        "pkg_resources",
        "urllib",
        "ssl",
        "requests.packages.urllib3.poolmanager.PoolManager",
        "time",
        "requests"
    ],
    "/tmp/dropbox/dropbox/sharing.py": [
        "team_common",
        "common",
        "async",
        "stone_base",
        "stone_validators",
        "files",
        "users"
    ],
    "/tmp/dropbox/dropbox/stone_base.py": [
        "__future__.unicode_literals",
        "stone_validators",
        "__future__.absolute_import"
    ],
    "/tmp/dropbox/dropbox/stone_serializers.py": [
        "base64",
        "__future__.unicode_literals",
        "functools",
        "__future__.absolute_import",
        "datetime",
        "msgpack",
        "six",
        "json",
        "collections",
        "stone_validators"
    ],
    "/tmp/dropbox/dropbox/stone_validators.py": [
        "six",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "datetime",
        "numbers",
        "abc.abstractmethod",
        "abc.ABCMeta",
        "re",
        "math"
    ],
    "/tmp/dropbox/dropbox/team.py": [
        "team_policies",
        "team_common",
        "async",
        "common",
        "stone_base",
        "stone_validators",
        "properties",
        "users"
    ],
    "/tmp/dropbox/dropbox/team_common.py": [
        "stone_base",
        "stone_validators"
    ],
    "/tmp/dropbox/dropbox/team_policies.py": [
        "stone_base",
        "stone_validators"
    ],
    "/tmp/dropbox/dropbox/users.py": [
        "team_policies",
        "stone_base",
        "stone_validators"
    ]
}
{
    "/tmp/dsmr_parser/dsmr_parser/__init__.py": [],
    "/tmp/dsmr_parser/dsmr_parser/__main__.py": [
        "argparse",
        "functools.partial",
        "dsmr_parser.clients.create_tcp_dsmr_reader",
        "logging",
        "asyncio",
        "dsmr_parser.clients.create_dsmr_reader"
    ],
    "/tmp/dsmr_parser/dsmr_parser/clients/__init__.py": [],
    "/tmp/dsmr_parser/dsmr_parser/clients/protocol.py": [
        "dsmr_parser.clients.settings.SERIAL_SETTINGS_V2_2",
        "dsmr_parser.telegram_specifications",
        "dsmr_parser.exceptions.ParseError",
        "dsmr_parser.clients.settings.SERIAL_SETTINGS_V4",
        "asyncio",
        "logging",
        "functools.partial",
        "serial_asyncio.create_serial_connection",
        "dsmr_parser.parsers.TelegramParser",
        "dsmr_parser.clients.telegram_buffer.TelegramBuffer"
    ],
    "/tmp/dsmr_parser/dsmr_parser/clients/serial_.py": [
        "serial_asyncio",
        "asyncio",
        "dsmr_parser.parsers.TelegramParser",
        "dsmr_parser.exceptions.ParseError",
        "logging",
        "serial",
        "dsmr_parser.clients.telegram_buffer.TelegramBuffer"
    ],
    "/tmp/dsmr_parser/dsmr_parser/clients/settings.py": [
        "serial"
    ],
    "/tmp/dsmr_parser/dsmr_parser/clients/telegram_buffer.py": [
        "re"
    ],
    "/tmp/dsmr_parser/dsmr_parser/exceptions.py": [],
    "/tmp/dsmr_parser/dsmr_parser/obis_references.py": [],
    "/tmp/dsmr_parser/dsmr_parser/objects.py": [],
    "/tmp/dsmr_parser/dsmr_parser/parsers.py": [
        "dsmr_parser.exceptions.InvalidChecksumError",
        "logging",
        "PyCRC.CRC16.CRC16",
        "dsmr_parser.objects.MBusObject",
        "dsmr_parser.exceptions.ParseError",
        "re",
        "dsmr_parser.objects.CosemObject"
    ],
    "/tmp/dsmr_parser/dsmr_parser/telegram_specifications.py": [
        "dsmr_parser.value_types.timestamp",
        "decimal.Decimal",
        "dsmr_parser.parsers.CosemParser",
        "dsmr_parser.parsers.ValueParser",
        "dsmr_parser.parsers.MBusParser",
        "dsmr_parser.obis_references"
    ],
    "/tmp/dsmr_parser/dsmr_parser/value_types.py": [
        "pytz",
        "datetime"
    ]
}
{
    "/tmp/dweepy/dweepy.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "datetime",
        "urllib",
        "json",
        "requests.exceptions.ChunkedEncodingError",
        "requests"
    ]
}
{
    "/tmp/enocean/enocean/__init__.py": [],
    "/tmp/enocean/enocean/communicators/__init__.py": [],
    "/tmp/enocean/enocean/communicators/communicator.py": [
        "__future__.division",
        "logging",
        "__future__.unicode_literals",
        "enocean.protocol.packet.Packet",
        "Queue",
        "threading",
        "__future__.print_function",
        "enocean.protocol.constants.PARSE_RESULT"
    ],
    "/tmp/enocean/enocean/communicators/serialcommunicator.py": [
        "__future__.division",
        "logging",
        "__future__.unicode_literals",
        "enocean.communicators.communicator.Communicator",
        "serial",
        "__future__.print_function"
    ],
    "/tmp/enocean/enocean/communicators/tcpcommunicator.py": [
        "__future__.division",
        "logging",
        "socket",
        "__future__.unicode_literals",
        "enocean.communicators.communicator.Communicator",
        "__future__.print_function"
    ],
    "/tmp/enocean/enocean/communicators/utils.py": [
        "__future__.unicode_literals",
        "__future__.division",
        "socket",
        "__future__.print_function"
    ],
    "/tmp/enocean/enocean/consolelogger.py": [
        "__future__.unicode_literals",
        "__future__.division",
        "logging",
        "__future__.print_function"
    ],
    "/tmp/enocean/enocean/protocol/__init__.py": [],
    "/tmp/enocean/enocean/protocol/constants.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "enum.IntEnum",
        "__future__.print_function"
    ],
    "/tmp/enocean/enocean/protocol/crc8.py": [
        "__future__.unicode_literals",
        "__future__.division",
        "__future__.print_function"
    ],
    "/tmp/enocean/enocean/protocol/eep.py": [
        "__future__.division",
        "logging",
        "__future__.unicode_literals",
        "bs4.BeautifulSoup",
        "os",
        "__future__.print_function"
    ],
    "/tmp/enocean/enocean/protocol/packet.py": [
        "__future__.division",
        "logging",
        "__future__.unicode_literals",
        "enocean.protocol.crc8",
        "enocean.protocol.eep.EEP",
        "enocean.protocol.constants.PACKET",
        "enocean.protocol.constants.RORG",
        "enocean.protocol.constants.DB0",
        "enocean.protocol.constants.DB3",
        "enocean.protocol.constants.DB2",
        "__future__.print_function",
        "enocean.protocol.constants.PARSE_RESULT"
    ]
}
{
    "/tmp/envirophat/envirophat/__init__.py": [
        ".lsm303d.lsm303d",
        ".bmp280.bmp280",
        ".i2c_bus.bus",
        ".tcs3472.tcs3472",
        ".ads1015.ads1015"
    ],
    "/tmp/envirophat/envirophat/ads1015.py": [
        "time"
    ],
    "/tmp/envirophat/envirophat/bmp280.py": [
        "time"
    ],
    "/tmp/envirophat/envirophat/i2c_bus.py": [
        "RPi.GPIO",
        "smbus",
        "sys.exit",
        "sys.version_info"
    ],
    "/tmp/envirophat/envirophat/leds.py": [
        "RPi.GPIO",
        "sys.exit"
    ],
    "/tmp/envirophat/envirophat/lsm303d.py": [
        "math"
    ],
    "/tmp/envirophat/envirophat/tcs3472.py": []
}
{
    "/tmp/evdev/evdev/__init__.py": [],
    "/tmp/evdev/evdev/device.py": [
        "evdev.eventio.EventIO",
        "evdev._input",
        "evdev.ecodes",
        "evdev.util",
        "collections",
        "os"
    ],
    "/tmp/evdev/evdev/ecodes.py": [
        "evdev._ecodes"
    ],
    "/tmp/evdev/evdev/eventio.py": [
        "fcntl",
        "evdev._input",
        "functools",
        "evdev.events.InputEvent",
        "evdev._uinput",
        "os",
        "select"
    ],
    "/tmp/evdev/evdev/eventio_async.py": [
        "evdev.eventio",
        "select",
        "asyncio"
    ],
    "/tmp/evdev/evdev/events.py": [
        "evdev.ecodes.EV_REL",
        "evdev.ecodes.keys",
        "evdev.ecodes.EV_ABS",
        "evdev.ecodes.SYN",
        "evdev.ecodes.ABS",
        "evdev.ecodes.EV_SYN",
        "evdev.ecodes.REL",
        "evdev.ecodes.EV_KEY"
    ],
    "/tmp/evdev/evdev/evtest.py": [
        "atexit",
        "optparse",
        "evdev.ecodes",
        "evdev.list_devices",
        "termios",
        "sys",
        "re",
        "evdev.AbsInfo",
        "__future__.print_function",
        "evdev.InputDevice",
        "select"
    ],
    "/tmp/evdev/evdev/ff.py": [
        "ctypes"
    ],
    "/tmp/evdev/evdev/genecodes.py": [
        "sys",
        "re",
        "os",
        "__future__.print_function"
    ],
    "/tmp/evdev/evdev/uinput.py": [
        "stat",
        "evdev.eventio.EventIO",
        "evdev.ecodes",
        "evdev.util",
        "evdev._uinput",
        "time",
        "evdev.device",
        "os"
    ],
    "/tmp/evdev/evdev/util.py": [
        "stat",
        "glob",
        "evdev.ecodes",
        "evdev.events.event_factory",
        "os"
    ]
}
{
    "/tmp/evohomeclient/evohomeclient/__init__.py": [
        "time",
        "sys",
        "json",
        "codecs",
        "requests",
        "__future__.print_function"
    ],
    "/tmp/evohomeclient/evohomeclient/test.py": [
        "evohomeclient.EvohomeClient"
    ]
}
{
    "/tmp/feedparser/feedparser.py": [
        "datetime",
        "xml.sax",
        "struct",
        "collections",
        "html.entities.entitydefs",
        "urllib.parse",
        "re",
        "cgi",
        "codecs",
        "warnings",
        "copy",
        "io.StringIO",
        "string",
        "email._parseaddr",
        "html.entities.name2codepoint",
        "time"
    ]
}
{
    "/tmp/fixerio/fixerio/__init__.py": [
        "__future__.unicode_literals"
    ],
    "/tmp/fixerio/fixerio/client.py": [
        "urlparse.urljoin",
        ".exceptions.FixerioException",
        "__future__.unicode_literals",
        "datetime",
        "requests"
    ],
    "/tmp/fixerio/fixerio/exceptions.py": []
}
{
    "/tmp/flask/flask/__init__.py": [
        ".json"
    ],
    "/tmp/flask/flask/__main__.py": [
        ".cli.main"
    ],
    "/tmp/flask/flask/_compat.py": [
        "sys"
    ],
    "/tmp/flask/flask/app.py": [
        "warnings.warn",
        "warnings.warn",
        "warnings.warn",
        "flask.logging.create_logger",
        "werkzeug.serving.run_simple",
        "flask.testing.FlaskClient",
        ".debughelpers.FormDataRoutingRedirect",
        "flask.testing.make_test_environ_builder",
        ".helpers.find_package",
        ".helpers._PackageBoundObject",
        "itertools.chain",
        ".ctx._AppCtxGlobals",
        ".templating.Environment",
        ".signals.request_tearing_down",
        ".globals.session",
        ".sessions.SecureCookieSessionInterface",
        ".helpers.get_flashed_messages",
        "werkzeug.datastructures.ImmutableDict",
        "._compat.reraise",
        ".config.Config",
        "werkzeug.exceptions.BadRequest",
        "werkzeug.routing.Map",
        "datetime.timedelta",
        "werkzeug.routing.BuildError",
        ".ctx.AppContext",
        ".json",
        ".helpers.locked_cached_property",
        ".templating.DispatchingJinjaLoader",
        ".helpers._endpoint_from_view_func",
        ".wrappers.Response",
        ".signals.request_started",
        "._compat.integer_types",
        "werkzeug.exceptions.HTTPException",
        ".globals._request_ctx_stack",
        "._compat.text_type",
        ".wrappers.Request",
        "werkzeug.routing.Rule",
        "sys",
        "functools.update_wrapper",
        "werkzeug.exceptions.InternalServerError",
        ".signals.got_request_exception",
        "werkzeug.exceptions.MethodNotAllowed",
        ".cli",
        "werkzeug.routing.RequestRedirect",
        ".signals.appcontext_tearing_down",
        ".templating._default_template_ctx_processor",
        ".helpers.url_for",
        ".globals.g",
        "threading.Lock",
        ".globals.request",
        "._compat.string_types",
        "werkzeug.exceptions.default_exceptions",
        ".config.ConfigAttribute",
        ".signals.request_finished",
        ".helpers.get_debug_flag",
        ".ctx.RequestContext",
        "os"
    ],
    "/tmp/flask/flask/blueprints.py": [
        "warnings.warn",
        "functools.update_wrapper",
        ".helpers._endpoint_from_view_func",
        ".helpers._PackageBoundObject"
    ],
    "/tmp/flask/flask/cli.py": [
        ".Flask",
        "pkg_resources",
        "werkzeug.serving.run_simple",
        "code",
        "flask.globals._app_ctx_stack",
        "._compat.reraise",
        "click",
        ".__version__",
        "threading.Thread",
        "sys",
        "functools.update_wrapper",
        "._compat.iteritems",
        "threading.Lock",
        ".helpers.get_debug_flag",
        "os"
    ],
    "/tmp/flask/flask/config.py": [
        "errno",
        "._compat.string_types",
        "werkzeug.utils.import_string",
        ".json",
        "._compat.iteritems",
        "os",
        "types"
    ],
    "/tmp/flask/flask/ctx.py": [
        "werkzeug.exceptions.HTTPException",
        ".signals.appcontext_pushed",
        ".globals._request_ctx_stack",
        "sys",
        "functools.update_wrapper",
        ".signals.appcontext_popped",
        ".globals._app_ctx_stack",
        "._compat.BROKEN_PYPY_CTXMGR_EXIT",
        "._compat.reraise"
    ],
    "/tmp/flask/flask/debughelpers.py": [
        ".blueprints.Blueprint",
        ".globals._request_ctx_stack",
        ".app.Flask",
        "._compat.text_type",
        "._compat.implements_to_string"
    ],
    "/tmp/flask/flask/ext/__init__.py": [
        "..exthook.ExtensionImporter"
    ],
    "/tmp/flask/flask/exthook.py": [
        "warnings",
        "sys",
        "._compat.reraise",
        "os"
    ],
    "/tmp/flask/flask/globals.py": [
        "functools.partial",
        "werkzeug.local.LocalProxy",
        "werkzeug.local.LocalStack"
    ],
    "/tmp/flask/flask/helpers.py": [
        "warnings.warn",
        ".globals.current_app",
        ".globals.session",
        "werkzeug.exceptions.BadRequest",
        "pkgutil",
        "werkzeug.routing.BuildError",
        "urlparse.quote",
        "jinja2.FileSystemLoader",
        ".globals._app_ctx_stack",
        "werkzeug.exceptions.RequestedRangeNotSatisfiable",
        "mimetypes",
        "zlib.adler32",
        ".globals._request_ctx_stack",
        "._compat.text_type",
        "threading.RLock",
        "sys",
        "werkzeug.datastructures.Headers",
        "werkzeug.datastructures.Range",
        "posixpath",
        "werkzeug.exceptions.NotFound",
        "werkzeug.utils.wrap_file",
        "functools.update_wrapper",
        ".globals.request",
        "._compat.string_types",
        ".signals.message_flashed",
        "time.time",
        "os"
    ],
    "/tmp/flask/flask/json.py": [
        "itsdangerous.json",
        "._compat.PY2",
        "werkzeug.http.http_date",
        "io",
        "uuid",
        ".globals.current_app",
        "._compat.text_type",
        "jinja2.Markup",
        "datetime.date",
        ".globals.request"
    ],
    "/tmp/flask/flask/logging.py": [
        ".globals._request_ctx_stack",
        "werkzeug.local.LocalProxy",
        "__future__.absolute_import",
        "sys",
        "logging.getLogger",
        "logging.ERROR",
        "logging.DEBUG",
        "logging.StreamHandler",
        "logging.Formatter",
        "logging.getLoggerClass"
    ],
    "/tmp/flask/flask/sessions.py": [
        "flask.debughelpers.UnexpectedUnicodeError",
        "datetime.datetime",
        "itsdangerous.BadSignature",
        "werkzeug.http.http_date",
        "base64.b64encode",
        "uuid",
        ".json",
        "._compat.text_type",
        ".helpers.total_seconds",
        ".Markup",
        "._compat.iteritems",
        "base64.b64decode",
        "hashlib",
        "werkzeug.datastructures.CallbackDict",
        "werkzeug.http.parse_date",
        "itsdangerous.URLSafeTimedSerializer"
    ],
    "/tmp/flask/flask/signals.py": [],
    "/tmp/flask/flask/templating.py": [
        ".debughelpers.explain_template_loading_attempts",
        "jinja2.Environment",
        "jinja2.TemplateNotFound",
        ".globals._request_ctx_stack",
        "jinja2.BaseLoader",
        ".signals.before_render_template",
        ".globals._app_ctx_stack",
        ".signals.template_rendered"
    ],
    "/tmp/flask/flask/testing.py": [
        "werkzeug",
        "flask._request_ctx_stack",
        "contextlib.contextmanager",
        "werkzeug.test.Client",
        "urlparse.urlsplit",
        "werkzeug.test.EnvironBuilder"
    ],
    "/tmp/flask/flask/views.py": [
        ".globals.request",
        "._compat.with_metaclass"
    ],
    "/tmp/flask/flask/wrappers.py": [
        "warnings.warn",
        "warnings.warn",
        ".debughelpers.attach_enctype_error_multidict",
        ".globals._request_ctx_stack",
        "werkzeug.wrappers.Request",
        ".json",
        "werkzeug.wrappers.Response",
        "werkzeug.exceptions.BadRequest"
    ]
}
{
    "/tmp/flask_login/flask_login/__about__.py": [],
    "/tmp/flask_login/flask_login/__init__.py": [
        ".utils.login_user",
        ".config.AUTH_HEADER_NAME",
        ".utils.set_login_view",
        ".config.LOGIN_MESSAGE_CATEGORY",
        ".utils.encode_cookie",
        ".config.COOKIE_HTTPONLY",
        ".utils.login_url",
        ".utils.decode_cookie",
        ".signals.user_accessed",
        ".signals.user_needs_refresh",
        ".config.ID_ATTRIBUTE",
        ".utils.login_required",
        ".signals.user_logged_out",
        ".signals.user_unauthorized",
        ".utils.logout_user",
        ".utils.current_user",
        ".mixins.UserMixin",
        ".login_manager.LoginManager",
        ".config.COOKIE_NAME",
        ".config.REFRESH_MESSAGE_CATEGORY",
        ".config.COOKIE_DURATION",
        ".mixins.AnonymousUserMixin",
        ".signals.user_loaded_from_cookie",
        ".signals.session_protected",
        ".config.COOKIE_SECURE",
        ".utils.fresh_login_required",
        ".signals.user_logged_in",
        ".utils.login_fresh",
        ".utils.make_next_param",
        ".signals.user_loaded_from_header",
        ".signals.user_login_confirmed",
        ".utils.confirm_login",
        ".signals.user_loaded_from_request",
        ".config.REFRESH_MESSAGE",
        ".config.LOGIN_MESSAGE"
    ],
    "/tmp/flask_login/flask_login/_compat.py": [
        "urllib.parse.urlparse",
        "sys",
        "urllib.parse.urlunparse"
    ],
    "/tmp/flask_login/flask_login/config.py": [
        "datetime.timedelta"
    ],
    "/tmp/flask_login/flask_login/login_manager.py": [
        "warnings",
        ".config.AUTH_HEADER_NAME",
        "datetime.datetime",
        "flask.session",
        ".config.LOGIN_MESSAGE_CATEGORY",
        ".utils.encode_cookie",
        ".config.COOKIE_HTTPONLY",
        ".utils.login_url",
        ".utils._create_identifier",
        ".utils.decode_cookie",
        "flask.redirect",
        ".signals.user_accessed",
        ".signals.user_needs_refresh",
        ".config.ID_ATTRIBUTE",
        "flask.flash",
        "flask.current_app",
        ".signals.user_unauthorized",
        ".utils._get_user",
        ".mixins.AnonymousUserMixin",
        ".config.REFRESH_MESSAGE_CATEGORY",
        "flask._request_ctx_stack",
        "._compat.text_type",
        ".config.COOKIE_DURATION",
        ".config.COOKIE_NAME",
        ".signals.user_loaded_from_cookie",
        ".signals.session_protected",
        ".config.COOKIE_SECURE",
        ".signals.user_loaded_from_header",
        "flask.request",
        ".config.SESSION_KEYS",
        ".utils._user_context_processor",
        "flask.abort",
        ".signals.user_loaded_from_request",
        ".config.REFRESH_MESSAGE",
        ".config.LOGIN_MESSAGE"
    ],
    "/tmp/flask_login/flask_login/mixins.py": [
        "._compat.text_type",
        "._compat.PY2"
    ],
    "/tmp/flask_login/flask_login/signals.py": [
        "flask.signals.Namespace"
    ],
    "/tmp/flask_login/flask_login/utils.py": [
        ".signals.user_logged_out",
        "werkzeug.local.LocalProxy",
        "flask.session",
        "._compat.urlunparse",
        "functools.wraps",
        "flask.current_app",
        "werkzeug.urls.url_encode",
        "hashlib.sha512",
        ".config.EXEMPT_METHODS",
        "flask._request_ctx_stack",
        "._compat.text_type",
        ".config.COOKIE_NAME",
        ".signals.user_logged_in",
        "flask.url_for",
        "flask.has_request_context",
        "flask.request",
        ".signals.user_login_confirmed",
        "._compat.urlparse",
        "werkzeug.security.safe_str_cmp",
        "hmac",
        "werkzeug.urls.url_decode"
    ]
}
{
    "/tmp/flask_socketio/flask_socketio/__init__.py": [
        "geventwebsocket.handler.WebSocketHandler",
        "gevent.pywsgi",
        "werkzeug._internal._log",
        "gevent.monkey",
        "eventlet.wsgi",
        ".test_client.SocketIOTestClient",
        "werkzeug.debug.DebuggedApplication",
        "socketio",
        ".namespace.Namespace",
        "sys",
        "flask",
        "flask.json",
        "werkzeug.serving.run_with_reloader"
    ],
    "/tmp/flask_socketio/flask_socketio/cli.py": [
        "werkzeug.serving.run_with_reloader",
        "flask.cli.pass_script_info",
        "sys",
        "flask.cli.get_debug_flag",
        "os",
        "click",
        "flask.cli.run_command"
    ],
    "/tmp/flask_socketio/flask_socketio/namespace.py": [
        "socketio.Namespace"
    ],
    "/tmp/flask_socketio/flask_socketio/test_client.py": [
        "werkzeug.test.EnvironBuilder",
        "socketio.pubsub_manager.PubSubManager",
        "uuid",
        "socketio.packet"
    ]
}
{
    "/tmp/freesms/freesms/__init__.py": [
        "requests"
    ]
}
{
    "/tmp/fritzconnection/fritzconnection/__init__.py": [],
    "/tmp/fritzconnection/fritzconnection/fritzconnection.py": [
        "requests.auth.HTTPDigestAuth",
        "lxml.etree",
        "argparse",
        "requests"
    ],
    "/tmp/fritzconnection/fritzconnection/fritzhosts.py": [
        "argparse",
        "fritzconnection"
    ],
    "/tmp/fritzconnection/fritzconnection/fritzmonitor.py": [
        "argparse",
        "tkinter.font",
        ".fritzconnection",
        ".fritztools",
        "tkinter",
        ".fritzstatus"
    ],
    "/tmp/fritzconnection/fritzconnection/fritzstatus.py": [
        "argparse",
        "fritzconnection",
        "fritztools",
        "collections",
        "time"
    ],
    "/tmp/fritzconnection/fritzconnection/fritztools.py": [
        "__future__.division"
    ],
    "/tmp/fritzconnection/fritzconnection/test.py": [
        "fritzconnection.FritzService",
        "fritzconnection.FritzDescParser",
        "unittest",
        "fritzconnection.FritzSCDPParser",
        "fritzconnection.FritzXmlParser",
        "os.path",
        "fritzconnection.FritzAction"
    ]
}
{
    "/tmp/fuzzywuzzy/fuzzywuzzy/StringMatcher.py": [
        "warnings.warn",
        "Levenshtein"
    ],
    "/tmp/fuzzywuzzy/fuzzywuzzy/__init__.py": [],
    "/tmp/fuzzywuzzy/fuzzywuzzy/fuzz.py": [
        "warnings",
        "__future__.unicode_literals",
        ".utils",
        "platform",
        "difflib.SequenceMatcher"
    ],
    "/tmp/fuzzywuzzy/fuzzywuzzy/process.py": [
        "heapq",
        "logging",
        ".utils",
        ".fuzz"
    ],
    "/tmp/fuzzywuzzy/fuzzywuzzy/string_processing.py": [
        "__future__.unicode_literals",
        "sys",
        "re"
    ],
    "/tmp/fuzzywuzzy/fuzzywuzzy/utils.py": [
        "__future__.unicode_literals",
        "functools",
        "sys",
        "fuzzywuzzy.string_processing.StringProcessor"
    ]
}
{
    "/tmp/gdata/gdata/Crypto/Cipher/__init__.py": [],
    "/tmp/gdata/gdata/Crypto/Hash/HMAC.py": [
        "md5",
        "string"
    ],
    "/tmp/gdata/gdata/Crypto/Hash/MD5.py": [
        "md5"
    ],
    "/tmp/gdata/gdata/Crypto/Hash/SHA.py": [
        "sha"
    ],
    "/tmp/gdata/gdata/Crypto/Hash/__init__.py": [],
    "/tmp/gdata/gdata/Crypto/Protocol/AllOrNothing.py": [
        "Crypto.Util.randpool",
        "Crypto.Util.number.bytes_to_long",
        "operator",
        "base64",
        "getopt",
        "Crypto.Util.number.long_to_bytes",
        "string",
        "sys"
    ],
    "/tmp/gdata/gdata/Crypto/Protocol/Chaffing.py": [
        "Crypto.Util.randpool",
        "Crypto.Util.number.bytes_to_long",
        "Crypto.Hash.SHA",
        "base64.encodestring",
        "Crypto.Hash.HMAC"
    ],
    "/tmp/gdata/gdata/Crypto/Protocol/__init__.py": [],
    "/tmp/gdata/gdata/Crypto/PublicKey/DSA.py": [
        "Crypto.Util.number.bytes_to_long",
        "Crypto.Util.number",
        "Crypto.Hash.SHA",
        "Crypto.PublicKey.pubkey",
        "Crypto.Util.number.long_to_bytes"
    ],
    "/tmp/gdata/gdata/Crypto/PublicKey/ElGamal.py": [
        "Crypto.Util.number",
        "Crypto.PublicKey.pubkey"
    ],
    "/tmp/gdata/gdata/Crypto/PublicKey/RSA.py": [
        "Crypto.Util.number",
        "Crypto.PublicKey.pubkey"
    ],
    "/tmp/gdata/gdata/Crypto/PublicKey/__init__.py": [],
    "/tmp/gdata/gdata/Crypto/PublicKey/pubkey.py": [
        "Crypto.Util.number",
        "types",
        "warnings"
    ],
    "/tmp/gdata/gdata/Crypto/PublicKey/qNEW.py": [
        "Crypto.Util.number",
        "Crypto.Hash.SHA",
        "Crypto.PublicKey.pubkey"
    ],
    "/tmp/gdata/gdata/Crypto/Util/RFC1751.py": [
        "string",
        "binascii"
    ],
    "/tmp/gdata/gdata/Crypto/Util/__init__.py": [],
    "/tmp/gdata/gdata/Crypto/Util/number.py": [
        "warnings",
        "struct"
    ],
    "/tmp/gdata/gdata/Crypto/Util/randpool.py": [
        "os",
        "warnings",
        "termios",
        "tempfile",
        "time",
        "array",
        "os",
        "msvcrt",
        "types",
        "Crypto.Util.number.long_to_bytes"
    ],
    "/tmp/gdata/gdata/Crypto/Util/test.py": [
        "time",
        "time",
        "string",
        "string",
        "Crypto.Cipher",
        "binascii",
        "testdata"
    ],
    "/tmp/gdata/gdata/Crypto/__init__.py": [],
    "/tmp/gdata/gdata/Crypto/test.py": [
        "sys",
        "distutils.util.get_platform",
        "Crypto.Util.test",
        "os"
    ],
    "/tmp/gdata/gdata/__init__.py": [
        "elementtree.ElementTree",
        "os",
        "atom"
    ],
    "/tmp/gdata/gdata/acl/__init__.py": [],
    "/tmp/gdata/gdata/acl/data.py": [
        "gdata.opensearch.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/alt/__init__.py": [],
    "/tmp/gdata/gdata/alt/app_engine.py": [
        "google.appengine.api.memcache",
        "google.appengine.ext.db"
    ],
    "/tmp/gdata/gdata/alt/appengine.py": [
        "google.appengine.api.users",
        "StringIO",
        "google.appengine.ext.db",
        "google.appengine.api.urlfetch",
        "google.appengine.api.memcache",
        "atom.token_store",
        "pickle"
    ],
    "/tmp/gdata/gdata/analytics/__init__.py": [
        "gdata",
        "atom"
    ],
    "/tmp/gdata/gdata/analytics/client.py": [
        "gdata.gauth"
    ],
    "/tmp/gdata/gdata/analytics/data.py": [
        "gdata.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/analytics/service.py": [
        "gdata.analytics",
        "urllib"
    ],
    "/tmp/gdata/gdata/apps/__init__.py": [
        "gdata",
        "atom"
    ],
    "/tmp/gdata/gdata/apps/adminsettings/__init__.py": [],
    "/tmp/gdata/gdata/apps/adminsettings/service.py": [
        "urllib",
        "base64.b64encode",
        "gdata.service"
    ],
    "/tmp/gdata/gdata/apps/apps_property_entry.py": [
        "gdata.data"
    ],
    "/tmp/gdata/gdata/apps/audit/__init__.py": [],
    "/tmp/gdata/gdata/apps/audit/service.py": [
        "gdata.service",
        "base64.b64encode"
    ],
    "/tmp/gdata/gdata/apps/client.py": [
        "gdata.service"
    ],
    "/tmp/gdata/gdata/apps/data.py": [
        "gdata.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/apps/emailsettings/__init__.py": [],
    "/tmp/gdata/gdata/apps/emailsettings/client.py": [
        "gdata.client",
        "urllib"
    ],
    "/tmp/gdata/gdata/apps/emailsettings/data.py": [
        "gdata.data"
    ],
    "/tmp/gdata/gdata/apps/emailsettings/service.py": [
        "gdata.service"
    ],
    "/tmp/gdata/gdata/apps/groups/__init__.py": [],
    "/tmp/gdata/gdata/apps/groups/client.py": [
        "gdata.client",
        "urllib"
    ],
    "/tmp/gdata/gdata/apps/groups/data.py": [
        "gdata.data"
    ],
    "/tmp/gdata/gdata/apps/groups/service.py": [
        "gdata.service",
        "urllib"
    ],
    "/tmp/gdata/gdata/apps/migration/__init__.py": [
        "gdata",
        "atom"
    ],
    "/tmp/gdata/gdata/apps/migration/service.py": [
        "atom.service.deprecation",
        "gdata.service",
        "gdata.apps.migration.MailEntryProperties",
        "base64",
        "threading",
        "gdata.apps.migration",
        "time"
    ],
    "/tmp/gdata/gdata/apps/multidomain/__init__.py": [],
    "/tmp/gdata/gdata/apps/multidomain/client.py": [
        "gdata.client",
        "urllib"
    ],
    "/tmp/gdata/gdata/apps/multidomain/data.py": [
        "gdata.data"
    ],
    "/tmp/gdata/gdata/apps/organization/__init__.py": [],
    "/tmp/gdata/gdata/apps/organization/client.py": [
        "gdata.client",
        "urllib"
    ],
    "/tmp/gdata/gdata/apps/organization/data.py": [
        "gdata.data"
    ],
    "/tmp/gdata/gdata/apps/organization/service.py": [
        "gdata.service"
    ],
    "/tmp/gdata/gdata/apps/service.py": [
        "elementtree.ElementTree",
        "gdata.apps"
    ],
    "/tmp/gdata/gdata/apps_property.py": [
        "gdata.apps",
        "atom.core"
    ],
    "/tmp/gdata/gdata/auth.py": [
        "random",
        "gdata.gauth",
        "urllib",
        "tlslite.tlslite.utils.cryptomath",
        "math",
        "cgi",
        "gdata.oauth.rsa",
        "tlslite.tlslite.utils.keyfactory",
        "atom.url",
        "gdata.oauth",
        "types",
        "time"
    ],
    "/tmp/gdata/gdata/blogger/__init__.py": [
        "gdata",
        "re",
        "atom"
    ],
    "/tmp/gdata/gdata/blogger/client.py": [
        "gdata.blogger.data",
        "atom.http_core"
    ],
    "/tmp/gdata/gdata/blogger/data.py": [
        "gdata.data",
        "re",
        "atom.core",
        "urlparse"
    ],
    "/tmp/gdata/gdata/blogger/service.py": [
        "gdata.blogger"
    ],
    "/tmp/gdata/gdata/books/__init__.py": [
        "gdata",
        "doctest",
        "atom"
    ],
    "/tmp/gdata/gdata/books/data.py": [
        "gdata.opensearch.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/books/service.py": [
        "gdata.service",
        "gdata.books",
        "shlex.split"
    ],
    "/tmp/gdata/gdata/calendar/__init__.py": [
        "atom",
        "gdata"
    ],
    "/tmp/gdata/gdata/calendar/client.py": [
        "gdata.gauth"
    ],
    "/tmp/gdata/gdata/calendar/data.py": [
        "gdata.opensearch.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/calendar/service.py": [
        "gdata.calendar",
        "urllib"
    ],
    "/tmp/gdata/gdata/calendar_resource/__init__.py": [],
    "/tmp/gdata/gdata/calendar_resource/client.py": [
        "gdata.client",
        "urllib"
    ],
    "/tmp/gdata/gdata/calendar_resource/data.py": [
        "gdata.data"
    ],
    "/tmp/gdata/gdata/client.py": [
        "gdata.data",
        "atom.http_core"
    ],
    "/tmp/gdata/gdata/codesearch/__init__.py": [
        "gdata",
        "atom"
    ],
    "/tmp/gdata/gdata/codesearch/service.py": [
        "gdata.codesearch"
    ],
    "/tmp/gdata/gdata/contacts/__init__.py": [
        "gdata",
        "atom"
    ],
    "/tmp/gdata/gdata/contacts/client.py": [
        "gdata.gauth",
        "types.DictionaryType",
        "atom.http_core",
        "types.ListType"
    ],
    "/tmp/gdata/gdata/contacts/data.py": [
        "gdata.data",
        "atom.core"
    ],
    "/tmp/gdata/gdata/contacts/service.py": [
        "gdata.service"
    ],
    "/tmp/gdata/gdata/contentforshopping/__init__.py": [],
    "/tmp/gdata/gdata/contentforshopping/client.py": [
        "gdata.client",
        "gdata.contentforshopping.data.ClientAccount",
        "gdata.contentforshopping.data.DatafeedEntry",
        "gdata.contentforshopping.data.ClientAccountFeed",
        "gdata.contentforshopping.data.DataQualityFeed",
        "gdata.contentforshopping.data.UsersFeed",
        "urllib",
        "gdata.contentforshopping.data.ProductFeed",
        "gdata.contentforshopping.data.InventoryFeed",
        "gdata.contentforshopping.data.UsersEntry",
        "atom.data",
        "gdata.contentforshopping.data.ProductEntry",
        "gdata.contentforshopping.data.DatafeedFeed",
        "gdata.contentforshopping.data.DataQualityEntry"
    ],
    "/tmp/gdata/gdata/contentforshopping/data.py": [
        "gdata.data",
        "atom.http_core"
    ],
    "/tmp/gdata/gdata/core.py": [
        "json"
    ],
    "/tmp/gdata/gdata/data.py": [
        "os",
        "atom.data"
    ],
    "/tmp/gdata/gdata/docs/__init__.py": [
        "gdata",
        "atom"
    ],
    "/tmp/gdata/gdata/docs/client.py": [
        "gdata.gauth",
        "urllib",
        "atom.http_core"
    ],
    "/tmp/gdata/gdata/docs/data.py": [
        "gdata.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/docs/service.py": [
        "gdata.docs",
        "urllib",
        "re",
        "atom"
    ],
    "/tmp/gdata/gdata/dublincore/__init__.py": [],
    "/tmp/gdata/gdata/dublincore/data.py": [
        "atom.core"
    ],
    "/tmp/gdata/gdata/exif/__init__.py": [
        "time",
        "datetime",
        "atom"
    ],
    "/tmp/gdata/gdata/finance/__init__.py": [
        "gdata",
        "atom"
    ],
    "/tmp/gdata/gdata/finance/data.py": [
        "gdata.opensearch.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/finance/service.py": [
        "gdata.finance"
    ],
    "/tmp/gdata/gdata/gauth.py": [
        "base64",
        "tlslite.tlslite.utils.keyfactory",
        "sha",
        "base64",
        "hashlib",
        "hmac",
        "tlslite.tlslite.utils.keyfactory",
        "base64",
        "httplib2",
        "gdata.alt.app_engine",
        "gdata.alt.app_engine",
        "gdata.alt.app_engine",
        "random",
        "datetime",
        "urllib",
        "json",
        "cgi.parse_qsl",
        "urlparse",
        "atom.http_core",
        "time"
    ],
    "/tmp/gdata/gdata/geo/__init__.py": [
        "atom"
    ],
    "/tmp/gdata/gdata/geo/data.py": [
        "atom.core"
    ],
    "/tmp/gdata/gdata/health/__init__.py": [
        "gdata",
        "atom"
    ],
    "/tmp/gdata/gdata/health/service.py": [
        "gdata.service",
        "atom"
    ],
    "/tmp/gdata/gdata/media/__init__.py": [
        "atom"
    ],
    "/tmp/gdata/gdata/media/data.py": [
        "atom.core"
    ],
    "/tmp/gdata/gdata/notebook/__init__.py": [],
    "/tmp/gdata/gdata/notebook/data.py": [
        "gdata.opensearch.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/oauth/__init__.py": [
        "hashlib",
        "sha",
        "random",
        "binascii",
        "urllib",
        "cgi",
        "urlparse",
        "time",
        "hmac"
    ],
    "/tmp/gdata/gdata/oauth/rsa.py": [
        "tlslite.tlslite.utils.keyfactory",
        "binascii",
        "gdata.oauth"
    ],
    "/tmp/gdata/gdata/opensearch/__init__.py": [],
    "/tmp/gdata/gdata/opensearch/data.py": [
        "atom.core"
    ],
    "/tmp/gdata/gdata/photos/__init__.py": [
        "time",
        "datetime",
        "elementtree.ElementTree",
        "gdata",
        "re",
        "gdata.exif",
        "atom",
        "gdata.geo",
        "gdata.media"
    ],
    "/tmp/gdata/gdata/photos/service.py": [
        "gdata.photos",
        "atom",
        "StringIO",
        "time",
        "os.path"
    ],
    "/tmp/gdata/gdata/projecthosting/__init__.py": [],
    "/tmp/gdata/gdata/projecthosting/client.py": [
        "gdata.projecthosting.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/projecthosting/data.py": [
        "gdata.data",
        "atom.core"
    ],
    "/tmp/gdata/gdata/sample_util.py": [
        "getpass",
        "gdata.gauth",
        "sys"
    ],
    "/tmp/gdata/gdata/service.py": [
        "gdata.alt.appengine",
        "time",
        "atom.token_store",
        "elementtree.ElementTree",
        "gdata.gauth",
        "urllib",
        "re",
        "urlparse"
    ],
    "/tmp/gdata/gdata/sites/__init__.py": [],
    "/tmp/gdata/gdata/sites/client.py": [
        "gdata.gauth",
        "atom.data"
    ],
    "/tmp/gdata/gdata/sites/data.py": [
        "gdata.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/spreadsheet/__init__.py": [
        "elementtree.ElementTree",
        "gdata",
        "string",
        "atom"
    ],
    "/tmp/gdata/gdata/spreadsheet/service.py": [
        "gdata.spreadsheet",
        "atom"
    ],
    "/tmp/gdata/gdata/spreadsheet/text_db.py": [
        "gdata.docs.service",
        "StringIO"
    ],
    "/tmp/gdata/gdata/spreadsheets/__init__.py": [],
    "/tmp/gdata/gdata/spreadsheets/client.py": [
        "gdata.spreadsheets.data",
        "atom.http_core"
    ],
    "/tmp/gdata/gdata/spreadsheets/data.py": [
        "atom.core",
        "gdata.data"
    ],
    "/tmp/gdata/gdata/test_config.py": [
        "inspect",
        "unittest",
        "getpass",
        "gdata.gauth",
        "sys",
        "atom.mock_http_core"
    ],
    "/tmp/gdata/gdata/test_data.py": [],
    "/tmp/gdata/gdata/tlslite/BaseDB.py": [
        "anydbm",
        "thread"
    ],
    "/tmp/gdata/gdata/tlslite/Checker.py": [
        "cryptoIDlib.CertChain",
        "errors",
        "X509CertChain.X509CertChain"
    ],
    "/tmp/gdata/gdata/tlslite/FileObject.py": [],
    "/tmp/gdata/gdata/tlslite/HandshakeSettings.py": [
        "constants.CertificateType",
        "utils.cryptomath",
        "utils.cipherfactory"
    ],
    "/tmp/gdata/gdata/tlslite/Session.py": [
        "mathtls",
        "constants",
        "utils.compat"
    ],
    "/tmp/gdata/gdata/tlslite/SessionCache.py": [
        "doctest",
        "SessionCache",
        "thread",
        "time"
    ],
    "/tmp/gdata/gdata/tlslite/SharedKeyDB.py": [
        "BaseDB.BaseDB",
        "Session.Session"
    ],
    "/tmp/gdata/gdata/tlslite/TLSConnection.py": [
        "cryptoIDlib.CertChain",
        "cryptoIDlib.CertChain",
        "constants",
        "errors",
        "socket",
        "messages",
        "mathtls",
        "TLSRecordLayer.TLSRecordLayer",
        "Session.Session",
        "__future__.generators",
        "HandshakeSettings.HandshakeSettings",
        "utils.cryptomath.getRandomBytes"
    ],
    "/tmp/gdata/gdata/tlslite/TLSRecordLayer.py": [
        "constants",
        "errors",
        "utils.cipherfactory.createTripleDES",
        "utils.cipherfactory.createAES",
        "socket",
        "messages",
        "errno",
        "utils.cryptomath",
        "FileObject.FileObject",
        "mathtls",
        "sha",
        "utils.codec",
        "__future__.generators",
        "utils.compat",
        "utils.cryptomath.getRandomBytes",
        "utils.hmac",
        "utils.cipherfactory.createRC4",
        "md5"
    ],
    "/tmp/gdata/gdata/tlslite/VerifierDB.py": [
        "mathtls",
        "utils.compat",
        "utils.cryptomath",
        "BaseDB.BaseDB"
    ],
    "/tmp/gdata/gdata/tlslite/X509.py": [
        "cryptlib_py",
        "array",
        "utils.ASN1Parser.ASN1Parser",
        "utils.keyfactory._createPublicRSAKey",
        "utils.cryptomath"
    ],
    "/tmp/gdata/gdata/tlslite/X509CertChain.py": [
        "cryptlib_py",
        "cryptlib_py",
        "array"
    ],
    "/tmp/gdata/gdata/tlslite/__init__.py": [],
    "/tmp/gdata/gdata/tlslite/api.py": [],
    "/tmp/gdata/gdata/tlslite/constants.py": [],
    "/tmp/gdata/gdata/tlslite/errors.py": [
        "constants.AlertDescription"
    ],
    "/tmp/gdata/gdata/tlslite/integration/AsyncStateMachine.py": [],
    "/tmp/gdata/gdata/tlslite/integration/ClientHelper.py": [
        "gdata.tlslite.Checker.Checker"
    ],
    "/tmp/gdata/gdata/tlslite/integration/HTTPTLSConnection.py": [
        "httplib",
        "socket",
        "gdata.tlslite.TLSConnection.TLSConnection",
        "gdata.tlslite.integration.ClientHelper.ClientHelper"
    ],
    "/tmp/gdata/gdata/tlslite/integration/IMAP4_TLS.py": [
        "socket",
        "gdata.tlslite.TLSConnection.TLSConnection",
        "gdata.tlslite.integration.ClientHelper.ClientHelper",
        "imaplib.IMAP4"
    ],
    "/tmp/gdata/gdata/tlslite/integration/IntegrationHelper.py": [],
    "/tmp/gdata/gdata/tlslite/integration/POP3_TLS.py": [
        "socket",
        "gdata.tlslite.TLSConnection.TLSConnection",
        "poplib.POP3",
        "gdata.tlslite.integration.ClientHelper.ClientHelper"
    ],
    "/tmp/gdata/gdata/tlslite/integration/SMTP_TLS.py": [
        "gdata.tlslite.TLSConnection.TLSConnection",
        "smtplib.SMTP",
        "gdata.tlslite.integration.ClientHelper.ClientHelper"
    ],
    "/tmp/gdata/gdata/tlslite/integration/TLSAsyncDispatcherMixIn.py": [
        "gdata.tlslite.TLSConnection.TLSConnection",
        "asyncore",
        "AsyncStateMachine.AsyncStateMachine"
    ],
    "/tmp/gdata/gdata/tlslite/integration/TLSSocketServerMixIn.py": [
        "gdata.tlslite.TLSConnection.TLSConnection"
    ],
    "/tmp/gdata/gdata/tlslite/integration/TLSTwistedProtocolWrapper.py": [
        "socket",
        "AsyncStateMachine.AsyncStateMachine",
        "errno",
        "gdata.tlslite.TLSConnection.TLSConnection",
        "twisted.python.failure.Failure",
        "twisted.protocols.policies.ProtocolWrapper",
        "gdata.tlslite.errors"
    ],
    "/tmp/gdata/gdata/tlslite/integration/XMLRPCTransport.py": [
        "httplib",
        "xmlrpclib",
        "gdata.tlslite.integration.ClientHelper.ClientHelper",
        "gdata.tlslite.integration.HTTPTLSConnection.HTTPTLSConnection"
    ],
    "/tmp/gdata/gdata/tlslite/integration/__init__.py": [],
    "/tmp/gdata/gdata/tlslite/mathtls.py": [
        "md5",
        "utils.cryptomath",
        "sha",
        "utils.compat",
        "hmac",
        "md5"
    ],
    "/tmp/gdata/gdata/tlslite/messages.py": [
        "cryptoIDlib.CertChain",
        "constants",
        "sha",
        "X509.X509",
        "utils.cryptomath",
        "X509CertChain.X509CertChain",
        "utils.codec",
        "utils.compat",
        "md5",
        "errors"
    ],
    "/tmp/gdata/gdata/tlslite/utils/AES.py": [],
    "/tmp/gdata/gdata/tlslite/utils/ASN1Parser.py": [
        "codec",
        "compat"
    ],
    "/tmp/gdata/gdata/tlslite/utils/Cryptlib_AES.py": [
        "AES",
        "cryptomath"
    ],
    "/tmp/gdata/gdata/tlslite/utils/Cryptlib_RC4.py": [
        "RC4.RC4",
        "cryptomath"
    ],
    "/tmp/gdata/gdata/tlslite/utils/Cryptlib_TripleDES.py": [
        "cryptomath",
        "TripleDES"
    ],
    "/tmp/gdata/gdata/tlslite/utils/OpenSSL_AES.py": [
        "AES",
        "cryptomath"
    ],
    "/tmp/gdata/gdata/tlslite/utils/OpenSSL_RC4.py": [
        "RC4.RC4",
        "cryptomath"
    ],
    "/tmp/gdata/gdata/tlslite/utils/OpenSSL_RSAKey.py": [
        "getpass.getpass",
        "cryptomath",
        "Python_RSAKey.Python_RSAKey",
        "RSAKey"
    ],
    "/tmp/gdata/gdata/tlslite/utils/OpenSSL_TripleDES.py": [
        "cryptomath",
        "TripleDES"
    ],
    "/tmp/gdata/gdata/tlslite/utils/PyCrypto_AES.py": [
        "AES",
        "cryptomath",
        "Crypto.Cipher.AES"
    ],
    "/tmp/gdata/gdata/tlslite/utils/PyCrypto_RC4.py": [
        "cryptomath",
        "RC4",
        "Crypto.Cipher.ARC4"
    ],
    "/tmp/gdata/gdata/tlslite/utils/PyCrypto_RSAKey.py": [
        "cryptomath",
        "Python_RSAKey.Python_RSAKey",
        "Crypto.PublicKey.RSA",
        "RSAKey"
    ],
    "/tmp/gdata/gdata/tlslite/utils/PyCrypto_TripleDES.py": [
        "cryptomath",
        "TripleDES",
        "Crypto.Cipher.DES3"
    ],
    "/tmp/gdata/gdata/tlslite/utils/Python_AES.py": [
        "AES",
        "cryptomath",
        "rijndael.rijndael"
    ],
    "/tmp/gdata/gdata/tlslite/utils/Python_RC4.py": [
        "RC4.RC4",
        "cryptomath"
    ],
    "/tmp/gdata/gdata/tlslite/utils/Python_RSAKey.py": [
        "xmltools",
        "cryptomath",
        "ASN1Parser.ASN1Parser",
        "RSAKey"
    ],
    "/tmp/gdata/gdata/tlslite/utils/RC4.py": [],
    "/tmp/gdata/gdata/tlslite/utils/RSAKey.py": [
        "cryptomath"
    ],
    "/tmp/gdata/gdata/tlslite/utils/TripleDES.py": [],
    "/tmp/gdata/gdata/tlslite/utils/__init__.py": [],
    "/tmp/gdata/gdata/tlslite/utils/cipherfactory.py": [
        "PyCrypto_AES",
        "Python_AES",
        "Cryptlib_TripleDES",
        "Cryptlib_AES",
        "OpenSSL_RC4",
        "OpenSSL_AES",
        "Python_RC4",
        "cryptomath",
        "PyCrypto_RC4",
        "PyCrypto_TripleDES",
        "Cryptlib_RC4",
        "OpenSSL_TripleDES"
    ],
    "/tmp/gdata/gdata/tlslite/utils/codec.py": [
        "compat"
    ],
    "/tmp/gdata/gdata/tlslite/utils/compat.py": [
        "java",
        "jarray",
        "traceback",
        "sys",
        "math",
        "array",
        "os"
    ],
    "/tmp/gdata/gdata/tlslite/utils/cryptomath.py": [
        "base64",
        "binascii",
        "compat",
        "math",
        "sys",
        "gmpy",
        "win32prng",
        "hashlib.sha1",
        "os",
        "cryptlib_py"
    ],
    "/tmp/gdata/gdata/tlslite/utils/dateFuncs.py": [
        "java",
        "datetime.timedelta",
        "datetime.datetime",
        "os"
    ],
    "/tmp/gdata/gdata/tlslite/utils/hmac.py": [
        "md5"
    ],
    "/tmp/gdata/gdata/tlslite/utils/jython_compat.py": [
        "array",
        "java",
        "jarray",
        "math",
        "sys",
        "traceback",
        "sha",
        "os"
    ],
    "/tmp/gdata/gdata/tlslite/utils/keyfactory.py": [
        "OpenSSL_RSAKey.OpenSSL_RSAKey",
        "PyCrypto_RSAKey.PyCrypto_RSAKey",
        "Python_RSAKey.Python_RSAKey",
        "RSAKey.RSAKey",
        "cryptomath"
    ],
    "/tmp/gdata/gdata/tlslite/utils/rijndael.py": [
        "string",
        "warnings",
        "copy",
        "exceptions",
        "os"
    ],
    "/tmp/gdata/gdata/tlslite/utils/xmltools.py": [
        "javax.xml.parsers",
        "java",
        "re",
        "compat",
        "xml.sax.saxutils",
        "xml.dom.minidom",
        "os"
    ],
    "/tmp/gdata/gdata/urlfetch.py": [
        "StringIO",
        "google.appengine.api.urlfetch",
        "atom.http_interface"
    ],
    "/tmp/gdata/gdata/webmastertools/__init__.py": [
        "gdata",
        "atom"
    ],
    "/tmp/gdata/gdata/webmastertools/data.py": [
        "gdata.opensearch.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/webmastertools/service.py": [
        "gdata.service",
        "gdata.webmastertools",
        "urllib",
        "atom"
    ],
    "/tmp/gdata/gdata/youtube/__init__.py": [
        "gdata.media",
        "gdata",
        "gdata.geo",
        "atom"
    ],
    "/tmp/gdata/gdata/youtube/client.py": [
        "atom.http_core",
        "gdata.youtube.data"
    ],
    "/tmp/gdata/gdata/youtube/data.py": [
        "gdata.youtube.data",
        "atom.data"
    ],
    "/tmp/gdata/gdata/youtube/service.py": [
        "gdata.youtube",
        "elementtree.ElementTree",
        "atom",
        "os"
    ]
}
{
    "/tmp/gevent/gevent/__init__.py": [
        "gevent.hub.reinit",
        "__future__.absolute_import",
        "gevent.hub.sleep",
        "gevent.hub.GreenletExit",
        "gevent.greenlet.killall",
        "gevent.os.fork",
        "collections.namedtuple",
        "gevent.hub.iwait",
        "gevent.hub.spawn_raw",
        "gevent.greenlet.Greenlet",
        "gevent.timeout.Timeout",
        "gevent.signal",
        "gevent.hub.wait",
        "gevent.timeout.with_timeout",
        "gevent.hub.getcurrent",
        "gevent.hub.idle",
        "gevent.hub.signal",
        "gevent.hub.get_hub",
        "gevent.hub.kill"
    ],
    "/tmp/gevent/gevent/_compat.py": [
        "__future__.division",
        "__future__.absolute_import",
        "sys",
        "__builtin__",
        "__future__.print_function"
    ],
    "/tmp/gevent/gevent/_fileobjectcommon.py": [
        "io.TextIOWrapper"
    ],
    "/tmp/gevent/gevent/_fileobjectposix.py": [
        "array",
        "io.RawIOBase",
        "io.UnsupportedOperation",
        "gevent._fileobjectcommon.FileObjectBase",
        "gevent._fileobjectcommon.cancel_wait_ex",
        "gevent.os._read",
        "io.BufferedWriter",
        "__future__.absolute_import",
        "gevent.os.make_nonblocking",
        "io.BufferedReader",
        "io",
        "gevent.hub.get_hub",
        "gevent.os._write",
        "os",
        "gevent.os.ignored_errors",
        "io.BytesIO",
        "io.DEFAULT_BUFFER_SIZE"
    ],
    "/tmp/gevent/gevent/_semaphore.py": [
        "gevent.hub.getcurrent",
        "gevent.hub.get_hub",
        "sys",
        "gevent.timeout.Timeout"
    ],
    "/tmp/gevent/gevent/_socket2.py": [
        "gevent.ssl",
        "gevent._socketcommon",
        "time",
        "gevent._compat.PYPY",
        "gevent._util.copy_globals"
    ],
    "/tmp/gevent/gevent/_socket3.py": [
        "io",
        "gevent._compat.PYPY",
        "os",
        "sys",
        "_socket",
        "time",
        "io.BytesIO",
        "__future__.absolute_import",
        "gevent._socketcommon",
        "gevent.fileobject.FileObjectPosix",
        "os.dup",
        "gevent._util.copy_globals"
    ],
    "/tmp/gevent/gevent/_socketcommon.py": [
        "gevent._util._NONE",
        "__future__.absolute_import",
        "_socket",
        "errno.EWOULDBLOCK",
        "gevent.hub.ConcurrentObjectUseError",
        "sys",
        "gevent.timeout.Timeout",
        "socket",
        "gevent._util.copy_globals",
        "gevent._compat.integer_types",
        "gevent._compat.string_types",
        "gevent.hub.get_hub"
    ],
    "/tmp/gevent/gevent/_ssl2.py": [
        "gevent.socket.timeout_default",
        "__future__.absolute_import",
        "errno",
        "gevent.socket.EWOULDBLOCK",
        "gevent.socket.timeout",
        "gevent.socket.error",
        "gevent._compat.PYPY",
        "gevent._util.copy_globals",
        "sys",
        "gevent._socket2.socket",
        "gevent.socket._fileobject",
        "ssl"
    ],
    "/tmp/gevent/gevent/_ssl3.py": [
        "gevent.socket.timeout_default",
        "__future__.absolute_import",
        "errno",
        "gevent.socket.timeout",
        "gevent.socket.error",
        "gevent._util.copy_globals",
        "weakref.ref",
        "gevent.socket.socket",
        "ssl"
    ],
    "/tmp/gevent/gevent/_sslgte279.py": [
        "gevent.socket.timeout_default",
        "__future__.absolute_import",
        "errno",
        "gevent.socket.timeout",
        "gevent.socket.error",
        "gevent.socket.create_connection",
        "gevent._compat.PYPY",
        "gevent._util.copy_globals",
        "gevent._socket2.socket",
        "ssl"
    ],
    "/tmp/gevent/gevent/_tblib.py": [
        "ctypes",
        "types.TracebackType",
        "copyreg",
        "pickle",
        "platform",
        "types.CodeType",
        "re",
        "types.TracebackType",
        "sys"
    ],
    "/tmp/gevent/gevent/_threading.py": [
        "heapq",
        "gevent._compat.PY3",
        "__future__.absolute_import",
        "time.sleep",
        "queue.Empty",
        "queue.Full",
        "gevent.monkey",
        "collections.deque",
        "time.time"
    ],
    "/tmp/gevent/gevent/_util.py": [
        "__future__.division",
        "__future__.absolute_import",
        "__future__.print_function",
        "gevent._compat.iteritems"
    ],
    "/tmp/gevent/gevent/_util_py2.py": [],
    "/tmp/gevent/gevent/backdoor.py": [
        "builtins",
        "__builtin__",
        "gevent.server.StreamServer",
        "gevent.hub.getcurrent",
        "gevent.pool.Pool",
        "__future__.absolute_import",
        "sys",
        "gevent.greenlet.Greenlet",
        "code.InteractiveConsole",
        "__future__.print_function"
    ],
    "/tmp/gevent/gevent/baseserver.py": [
        "gevent.pool.Pool",
        "gevent._compat.xrange",
        "errno",
        "_socket",
        "gevent._compat.string_types",
        "sys",
        "gevent._compat.integer_types",
        "gevent.greenlet.Greenlet",
        "gevent.hub.get_hub",
        "gevent.event.Event"
    ],
    "/tmp/gevent/gevent/builtins.py": [
        "weakref",
        "builtins",
        "gevent.lock.RLock",
        "sys",
        "imp",
        "__future__.absolute_import"
    ],
    "/tmp/gevent/gevent/core.py": [
        "os",
        "gevent._util.copy_globals",
        "__future__.absolute_import",
        "gevent.libev.corecffi"
    ],
    "/tmp/gevent/gevent/event.py": [
        "gevent.hub._NONE",
        "gevent.hub.getcurrent",
        "gevent._tblib.dump_traceback",
        "sys",
        "gevent.hub.InvalidSwitchError",
        "gevent.timeout.Timeout",
        "gevent.hub.get_hub",
        "gevent._compat.reraise",
        "gevent._tblib.load_traceback",
        "__future__.print_function"
    ],
    "/tmp/gevent/gevent/fileobject.py": [
        "functools",
        "__future__.absolute_import",
        "gevent.lock.Semaphore",
        "gevent._compat.reraise",
        "gevent._fileobjectcommon.FileObjectClosed",
        "sys",
        "gevent.hub._import",
        "gevent._fileobjectposix.FileObjectPosix",
        "gevent.lock.DummySemaphore",
        "gevent._fileobjectcommon.FileObjectBase",
        "gevent._compat.integer_types",
        "gevent.hub.get_hub",
        "os"
    ],
    "/tmp/gevent/gevent/greenlet.py": [
        "gevent._compat.PY3",
        "__future__.absolute_import",
        "gevent.hub.InvalidSwitchError",
        "gevent._compat.reraise",
        "gevent.hub.GreenletExit",
        "gevent._util.Lazy",
        "_continuation",
        "gevent._tblib.dump_traceback",
        "gevent._tblib.load_traceback",
        "collections.deque",
        "gevent.hub.iwait",
        "gevent.hub.Waiter",
        "sys",
        "gevent.timeout.Timeout",
        "gevent._compat.PYPY",
        "gevent.hub.wait",
        "gevent.hub.getcurrent",
        "greenlet.greenlet",
        "gevent.hub.get_hub"
    ],
    "/tmp/gevent/gevent/hub.py": [
        "gevent.Greenlet",
        "time",
        "gevent._util._NONE",
        "gevent._compat.xrange",
        "__future__.absolute_import",
        "greenlet.GreenletExit",
        "functools.partial",
        "sys",
        "greenlet.greenlet",
        "_thread",
        "greenlet.getcurrent",
        "traceback",
        "gevent._compat.string_types",
        "gevent._util.readproperty",
        "os"
    ],
    "/tmp/gevent/gevent/libev/__init__.py": [],
    "/tmp/gevent/gevent/libev/_corecffi_build.py": [
        "struct",
        "__future__.absolute_import",
        "sys",
        "cffi.FFI",
        "os.path",
        "__future__.print_function"
    ],
    "/tmp/gevent/gevent/libev/corecffi.py": [
        "__future__.absolute_import",
        "gevent.libev._corecffi",
        "__future__.print_function",
        "traceback",
        "signal",
        "os",
        "__builtin__",
        "sys"
    ],
    "/tmp/gevent/gevent/local.py": [
        "weakref.ref",
        "contextlib.contextmanager",
        "gevent.hub.getcurrent",
        "gevent.lock.RLock",
        "copy.copy",
        "gevent._compat.PYPY"
    ],
    "/tmp/gevent/gevent/lock.py": [
        "gevent._semaphore.BoundedSemaphore",
        "gevent.hub.getcurrent",
        "thread.get_ident",
        "__future__.absolute_import",
        "thread.allocate_lock",
        "gevent._semaphore.Semaphore",
        "gevent._compat.PYPY"
    ],
    "/tmp/gevent/gevent/monkey.py": [
        "warnings",
        "gevent.fileobject.FileObjectThread",
        "gevent.hub.sleep",
        "time",
        "importlib._bootstrap",
        "gevent.event.Event",
        "gevent.threading.main_native_thread",
        "gevent.local.local",
        "gevent.socket",
        "gevent.socket",
        "pprint",
        "os",
        "inspect.getargspec",
        "gevent.hub.sleep",
        "time.time",
        "__future__.absolute_import",
        "sys",
        "__builtin__",
        "__future__.print_function"
    ],
    "/tmp/gevent/gevent/os.py": [
        "gevent._compat.PY3",
        "__future__.absolute_import",
        "errno",
        "gevent.hub.reinit",
        "time",
        "sys",
        "gevent._util.copy_globals",
        "gevent.hub.get_hub",
        "os"
    ],
    "/tmp/gevent/gevent/pool.py": [
        "gevent.queue.Queue",
        "gevent.hub.GreenletExit",
        "bisect.insort_right",
        "gevent.lock.DummySemaphore",
        "gevent.greenlet.joinall",
        "gevent.hub.getcurrent",
        "gevent.hub.kill",
        "gevent.greenlet.Greenlet",
        "gevent.timeout.Timeout",
        "gevent.lock.Semaphore",
        "gevent.event.Event"
    ],
    "/tmp/gevent/gevent/pywsgi.py": [
        "argparse",
        "gevent.monkey",
        "importlib",
        "urllib.parse.unquote",
        "mimetools",
        "functools.partial",
        "gevent._compat.PY3",
        "datetime.datetime",
        "gevent",
        "gevent._compat.reraise",
        "gevent.hub.GreenletExit",
        "errno",
        "io.BytesIO",
        "string",
        "sys",
        "gevent.socket",
        "gevent.server.StreamServer",
        "traceback",
        "http.client",
        "time"
    ],
    "/tmp/gevent/gevent/queue.py": [
        "warnings",
        "gevent.event.Event",
        "heapq",
        "gevent.hub.Waiter",
        "gevent.hub.getcurrent",
        "__future__.absolute_import",
        "sys",
        "gevent.hub.InvalidSwitchError",
        "collections",
        "gevent.timeout.Timeout",
        "gevent.hub.get_hub",
        "queue"
    ],
    "/tmp/gevent/gevent/resolver_ares.py": [
        "gevent.socket.AF_INET6",
        "_socket.getaddrinfo",
        "gevent.socket.SOCK_RAW",
        "gevent.socket.AF_UNSPEC",
        "gevent.socket.AI_NUMERICHOST",
        "gevent._compat.PY3",
        "gevent.socket.SOCK_STREAM",
        "__future__.absolute_import",
        "gevent.socket.AF_INET",
        "gevent.socket.EAI_SERVICE",
        "gevent._compat.reraise",
        "gevent.socket.AI_PASSIVE",
        "gevent.socket.SOCK_DGRAM",
        "gevent.ares.channel",
        "gevent.hub.Waiter",
        "gevent._compat.text_type",
        "_socket.error",
        "_socket.gaierror",
        "sys",
        "gevent._compat.integer_types",
        "gevent._compat.string_types",
        "gevent.ares.InvalidIP",
        "gevent.hub.get_hub",
        "os",
        "_socket.getservbyname"
    ],
    "/tmp/gevent/gevent/resolver_thread.py": [
        "gevent._compat.text_type",
        "_socket",
        "gevent.hub.get_hub"
    ],
    "/tmp/gevent/gevent/select.py": [
        "gevent._util._NONE",
        "gevent.hub.sleep",
        "gevent._compat.iteritems",
        "__future__.absolute_import",
        "select.POLLNVAL",
        "select.POLLIN",
        "select",
        "gevent._compat.itervalues",
        "gevent.hub.get_hub",
        "sys",
        "select.select",
        "errno.EINTR",
        "gevent._util.copy_globals",
        "gevent._compat.integer_types",
        "select.POLLOUT",
        "gevent.event.Event"
    ],
    "/tmp/gevent/gevent/server.py": [
        "gevent.ssl.wrap_socket",
        "gevent.lock.Semaphore",
        "gevent.socket.EWOULDBLOCK",
        "gevent._compat.PY3",
        "gevent.socket.socket",
        "gevent.baseserver.BaseServer",
        "_socket",
        "sys",
        "gevent._compat.PYPY"
    ],
    "/tmp/gevent/gevent/signal.py": [
        "gevent.get_hub",
        "gevent.Greenlet",
        "gevent._util._NONE",
        "signal",
        "__future__.absolute_import",
        "gevent.os",
        "gevent._util.copy_globals"
    ],
    "/tmp/gevent/gevent/socket.py": [
        "gevent._socket2",
        "gevent._socketcommon",
        "gevent._compat.PY3",
        "sys",
        "gevent._util.copy_globals"
    ],
    "/tmp/gevent/gevent/ssl.py": [
        "gevent._compat.PY2",
        "gevent._util.copy_globals",
        "gevent._ssl3"
    ],
    "/tmp/gevent/gevent/subprocess.py": [
        "warnings",
        "subprocess",
        "gevent._util._NONE",
        "gevent._compat.xrange",
        "gevent._compat.PY3",
        "__future__.absolute_import",
        "gc",
        "pickle",
        "gevent._compat.reraise",
        "msvcrt",
        "gevent.event.AsyncResult",
        "gevent.monkey",
        "errno",
        "gevent.os.fork_and_watch",
        "__future__.print_function",
        "gevent.hub.linkproxy",
        "fcntl",
        "gevent.hub.get_hub",
        "sys",
        "gevent.greenlet.Greenlet",
        "gevent.timeout.Timeout",
        "gevent.fileobject.FileObject",
        "gevent._util.copy_globals",
        "gevent.greenlet.joinall",
        "gevent.hub.getcurrent",
        "signal",
        "traceback",
        "gevent._compat.string_types",
        "gevent._compat.integer_types",
        "gevent.hub.sleep",
        "os"
    ],
    "/tmp/gevent/gevent/thread.py": [
        "gevent._compat.PY3",
        "__future__.absolute_import",
        "_thread",
        "gevent.hub.GreenletExit",
        "gevent.lock.BoundedSemaphore",
        "sys",
        "gevent.greenlet.Greenlet",
        "gevent._compat.PYPY",
        "gevent._util.copy_globals",
        "gevent.hub.getcurrent"
    ],
    "/tmp/gevent/gevent/threading.py": [
        "__future__.absolute_import",
        "gevent.thread.start_new_thread",
        "sys",
        "gevent._compat.PYPY",
        "threading",
        "gevent.thread.allocate_lock"
    ],
    "/tmp/gevent/gevent/threadpool.py": [
        "threading",
        "gevent.monkey",
        "gevent.lock.Semaphore",
        "concurrent.futures._base",
        "__future__.absolute_import",
        "gevent.hub.sleep",
        "gevent.hub.getcurrent",
        "gevent._util.Lazy",
        "gevent.event.AsyncResult",
        "gevent.hub._get_hub",
        "gevent.timeout.Timeout",
        "gevent._threading.Lock",
        "gevent._threading.Queue",
        "concurrent.futures",
        "gevent.greenlet.Greenlet",
        "gevent._threading.start_new_thread",
        "sys",
        "gevent.pool.GroupMappingMixin",
        "gevent._compat.integer_types",
        "gevent.hub.get_hub",
        "os"
    ],
    "/tmp/gevent/gevent/timeout.py": [
        "gevent.hub._NONE",
        "gevent.hub.getcurrent",
        "gevent._compat.string_types",
        "gevent.hub.get_hub"
    ],
    "/tmp/gevent/gevent/util.py": [
        "functools",
        "__future__.absolute_import"
    ],
    "/tmp/gevent/gevent/win32util.py": [
        "os",
        "__future__.absolute_import"
    ],
    "/tmp/gevent/gevent/wsgi.py": []
}
{
    "/tmp/googlemaps/googlemaps/__init__.py": [
        "googlemaps.client.Client"
    ],
    "/tmp/googlemaps/googlemaps/client.py": [
        "urllib.urlencode",
        "functools",
        "random",
        "datetime.datetime",
        "googlemaps.roads.speed_limits",
        "googlemaps.directions.directions",
        "googlemaps.geocoding.reverse_geocode",
        "googlemaps.timezone.timezone",
        "googlemaps.places.places_nearby",
        "googlemaps.places.places_radar",
        "googlemaps.places.places_autocomplete_query",
        "googlemaps.roads.snapped_speed_limits",
        "base64",
        "re",
        "googlemaps.geocoding.geocode",
        "collections",
        "googlemaps.roads.snap_to_roads",
        "googlemaps.elevation.elevation",
        "datetime.timedelta",
        "googlemaps",
        "googlemaps.distance_matrix.distance_matrix",
        "hashlib",
        "googlemaps.places.places",
        "googlemaps.elevation.elevation_along_path",
        "googlemaps.places.place",
        "googlemaps.places.places_photo",
        "time",
        "googlemaps.places.places_autocomplete",
        "requests",
        "googlemaps.roads.nearest_roads",
        "hmac"
    ],
    "/tmp/googlemaps/googlemaps/convert.py": [
        "time"
    ],
    "/tmp/googlemaps/googlemaps/directions.py": [
        "googlemaps.convert"
    ],
    "/tmp/googlemaps/googlemaps/distance_matrix.py": [
        "googlemaps.convert"
    ],
    "/tmp/googlemaps/googlemaps/elevation.py": [
        "googlemaps.convert"
    ],
    "/tmp/googlemaps/googlemaps/exceptions.py": [],
    "/tmp/googlemaps/googlemaps/geocoding.py": [
        "googlemaps.convert"
    ],
    "/tmp/googlemaps/googlemaps/places.py": [
        "googlemaps.convert"
    ],
    "/tmp/googlemaps/googlemaps/roads.py": [
        "googlemaps.convert",
        "googlemaps"
    ],
    "/tmp/googlemaps/googlemaps/timezone.py": [
        "googlemaps.convert",
        "datetime.datetime"
    ]
}
{
    "/tmp/gopigo/gopigo/__init__.py": [],
    "/tmp/gopigo/gopigo/gopigo.py": [
        "RPi.GPIO",
        "smbus",
        "time"
    ]
}
{
    "/tmp/gps3/gps3/__init__.py": [],
    "/tmp/gps3/gps3/agps3.py": [
        "socket",
        "sys",
        "json",
        "__future__.print_function",
        "select"
    ],
    "/tmp/gps3/gps3/agps3threaded.py": [
        ".agps3",
        "threading.Thread",
        "sys",
        "time.sleep",
        "os.path",
        "misc.add_args",
        "__future__.print_function"
    ],
    "/tmp/gps3/gps3/gps3.py": [
        "socket",
        "sys",
        "json",
        "__future__.print_function",
        "select"
    ],
    "/tmp/gps3/gps3/misc.py": [
        "subprocess.call",
        "argparse",
        "math.modf",
        "datetime.datetime"
    ]
}
{
    "/tmp/grequests/grequests.py": [
        "functools.partial",
        "requests.Session",
        "traceback",
        "gevent.monkey",
        "gevent",
        "gevent.pool.Pool"
    ]
}
{
    "/tmp/grovepi/grovepi/__init__.py": [],
    "/tmp/grovepi/grovepi/grovepi.py": [
        "RPi.GPIO",
        "struct",
        "smbus",
        "math",
        "time"
    ]
}
{
    "/tmp/gspread/gspread/__init__.py": [],
    "/tmp/gspread/gspread/client.py": [
        "httplib2",
        ".urlencode",
        ".exceptions.UpdateCellError",
        ".exceptions.RequestError",
        ".urls.DRIVE_FILES_API_V2_URL",
        ".exceptions.SpreadsheetNotFound",
        ".ns._ns",
        ".models.Spreadsheet",
        ".urls.DRIVE_FILES_UPLOAD_API_V2_URL",
        "json",
        ".urls.construct_url",
        ".utils.extract_id_from_url",
        "xml.etree.ElementTree",
        ".utils.finditem",
        ".httpsession.HTTPSession"
    ],
    "/tmp/gspread/gspread/exceptions.py": [],
    "/tmp/gspread/gspread/httpsession.py": [
        "urllib.parse.urlencode",
        "requests",
        ".exceptions.RequestError"
    ],
    "/tmp/gspread/gspread/models.py": [
        "warnings",
        "warnings",
        ".urlencode",
        "itertools.chain",
        "xml.etree.ElementTree",
        ".utils.finditem",
        ".ns.ATOM_NS",
        "functools.wraps",
        ".utils.rowcol_to_a1",
        ".ns._ns",
        ".utils.a1_to_rowcol",
        ".exceptions.WorksheetNotFound",
        ".utils.numericise_all",
        "collections.defaultdict",
        ".ns.BATCH_NS",
        ".ns._ns1",
        "xml.etree.ElementTree.Element",
        ".urls.construct_url",
        ".exceptions.CellNotFound",
        ".ns.SPREADSHEET_NS",
        "xml.etree.ElementTree.SubElement"
    ],
    "/tmp/gspread/gspread/ns.py": [],
    "/tmp/gspread/gspread/urls.py": [
        ".exceptions.UnsupportedFeedTypeError",
        "re",
        ".exceptions.UrlParameterMissing"
    ],
    "/tmp/gspread/gspread/utils.py": [
        ".exceptions.NoValidUrlKeyFound",
        "re",
        "doctest",
        ".exceptions.IncorrectCellLabel",
        "xml.etree.ElementTree"
    ]
}
{
    "/tmp/gtts/gtts/__init__.py": [],
    "/tmp/gtts/gtts/tts.py": [
        "re",
        "requests",
        "gtts_token.gtts_token.Token"
    ],
    "/tmp/gtts/gtts/version.py": []
}
{
    "/tmp/gtts_token/gtts_token/__init__.py": [],
    "/tmp/gtts_token/gtts_token/gtts_token.py": [
        "re",
        "time",
        "calendar",
        "requests",
        "math"
    ],
    "/tmp/gtts_token/gtts_token/version.py": []
}
{
    "/tmp/hbmqtt/hbmqtt/__init__.py": [],
    "/tmp/hbmqtt/hbmqtt/adapters.py": [
        "websockets.protocol.WebSocketCommonProtocol",
        "asyncio.StreamReader",
        "io",
        "asyncio",
        "logging",
        "asyncio.StreamWriter",
        "websockets.exceptions.ConnectionClosed"
    ],
    "/tmp/hbmqtt/hbmqtt/broker.py": [
        "re",
        "hbmqtt.adapters.WebSocketsWriter",
        "websockets",
        "asyncio.ensure_future",
        "hbmqtt.adapters.StreamReaderAdapter",
        "sys",
        "hbmqtt.mqtt.protocol.broker_handler.BrokerProtocolHandler",
        ".plugins.manager.BaseContext",
        "hbmqtt.errors.HBMQTTException",
        "asyncio",
        ".plugins.manager.PluginManager",
        "collections.deque",
        "hbmqtt.utils.gen_client_id",
        "re",
        "hbmqtt.adapters.StreamWriterAdapter",
        "transitions.MachineError",
        "asyncio.CancelledError",
        "transitions.Machine",
        "hbmqtt.errors.MQTTException",
        "hbmqtt.utils.format_client_message",
        "hbmqtt.session.Session",
        "logging",
        "ssl",
        "functools.partial",
        "hbmqtt.adapters.WebSocketsReader",
        "hbmqtt.adapters.ReaderAdapter",
        "hbmqtt.adapters.WriterAdapter"
    ],
    "/tmp/hbmqtt/hbmqtt/client.py": [
        "hbmqtt.utils.gen_client_id",
        "asyncio.ensure_future",
        "websockets.uri.InvalidURI",
        "hbmqtt.adapters.WebSocketsWriter",
        "websockets",
        "sys",
        "hbmqtt.adapters.StreamReaderAdapter",
        "logging",
        "functools.wraps",
        "urllib.parse.urlparse",
        "hbmqtt.utils.not_in_dict_or_none",
        "hbmqtt.mqtt.protocol.client_handler.ClientProtocolHandler",
        "hbmqtt.plugins.manager.PluginManager",
        "collections.deque",
        "hbmqtt.mqtt.constants",
        "hbmqtt.adapters.StreamWriterAdapter",
        "hbmqtt.mqtt.connect",
        "websockets.handshake.InvalidHandshake",
        "hbmqtt.session.Session",
        "hbmqtt.mqtt.protocol.handler.ProtocolHandlerException",
        "ssl",
        "hbmqtt.adapters.WebSocketsReader",
        "hbmqtt.plugins.manager.BaseContext",
        "hbmqtt.mqtt.connack",
        "urllib.parse.urlunparse"
    ],
    "/tmp/hbmqtt/hbmqtt/codecs.py": [
        "hbmqtt.errors.NoDataException",
        "struct.pack",
        "struct.unpack",
        "asyncio"
    ],
    "/tmp/hbmqtt/hbmqtt/errors.py": [],
    "/tmp/hbmqtt/hbmqtt/mqtt/__init__.py": [
        "hbmqtt.mqtt.subscribe.SubscribePacket",
        "hbmqtt.mqtt.pingresp.PingRespPacket",
        "hbmqtt.mqtt.suback.SubackPacket",
        "hbmqtt.mqtt.disconnect.DisconnectPacket",
        "hbmqtt.mqtt.unsubscribe.UnsubscribePacket",
        "hbmqtt.mqtt.unsuback.UnsubackPacket",
        "hbmqtt.mqtt.pubrec.PubrecPacket",
        "hbmqtt.mqtt.publish.PublishPacket",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.pubcomp.PubcompPacket",
        "hbmqtt.mqtt.packet",
        "hbmqtt.mqtt.puback.PubackPacket",
        "hbmqtt.mqtt.connack.ConnackPacket",
        "hbmqtt.mqtt.pubrel.PubrelPacket",
        "hbmqtt.mqtt.pingreq.PingReqPacket",
        "hbmqtt.mqtt.connect.ConnectPacket"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/connack.py": [
        "hbmqtt.adapters.ReaderAdapter",
        "hbmqtt.errors.HBMQTTException",
        "asyncio",
        "hbmqtt.codecs.read_or_raise",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.codecs.bytes_to_int",
        "hbmqtt.mqtt.packet.CONNACK",
        "hbmqtt.mqtt.packet.MQTTVariableHeader"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/connect.py": [
        "hbmqtt.errors.NoDataException",
        "hbmqtt.mqtt.packet.MQTTPayload",
        "hbmqtt.mqtt.packet.MQTTVariableHeader",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.packet.CONNECT",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.codecs",
        "hbmqtt.adapters.ReaderAdapter"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/constants.py": [],
    "/tmp/hbmqtt/hbmqtt/mqtt/disconnect.py": [
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.packet.DISCONNECT"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/packet.py": [
        "struct.unpack",
        "hbmqtt.errors.MQTTException",
        "hbmqtt.adapters.ReaderAdapter",
        "hbmqtt.errors.CodecException",
        "datetime.datetime",
        "hbmqtt.codecs",
        "hbmqtt.adapters.WriterAdapter"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/pingreq.py": [
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.packet.PINGREQ"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/pingresp.py": [
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.packet.PINGRESP"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/protocol/__init__.py": [],
    "/tmp/hbmqtt/hbmqtt/mqtt/protocol/broker_handler.py": [
        "hbmqtt.mqtt.subscribe.SubscribePacket",
        ".handler.EVENT_MQTT_PACKET_SENT",
        "hbmqtt.mqtt.protocol.handler.ProtocolHandler",
        "hbmqtt.mqtt.unsuback.UnsubackPacket",
        "hbmqtt.mqtt.unsubscribe.UnsubscribePacket",
        "hbmqtt.mqtt.pingresp.PingRespPacket",
        "hbmqtt.mqtt.suback.SubackPacket",
        "hbmqtt.session.Session",
        "asyncio",
        "hbmqtt.adapters.WriterAdapter",
        "hbmqtt.errors.MQTTException",
        "hbmqtt.adapters.ReaderAdapter",
        "hbmqtt.mqtt.connack",
        "asyncio.Queue",
        "hbmqtt.mqtt.pingreq.PingReqPacket",
        "hbmqtt.plugins.manager.PluginManager",
        "asyncio.futures",
        "hbmqtt.utils.format_client_message",
        ".handler.EVENT_MQTT_PACKET_RECEIVED",
        "hbmqtt.mqtt.connect.ConnectPacket"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/protocol/client_handler.py": [
        "hbmqtt.mqtt.subscribe.SubscribePacket",
        "hbmqtt.mqtt.connect.ConnectPayload",
        "hbmqtt.mqtt.protocol.handler.ProtocolHandler",
        "hbmqtt.mqtt.disconnect.DisconnectPacket",
        "hbmqtt.mqtt.unsubscribe.UnsubscribePacket",
        "hbmqtt.mqtt.connect.ConnectVariableHeader",
        "hbmqtt.mqtt.unsuback.UnsubackPacket",
        "hbmqtt.mqtt.pingresp.PingRespPacket",
        "hbmqtt.mqtt.suback.SubackPacket",
        "sys",
        "hbmqtt.session.Session",
        "hbmqtt.mqtt.protocol.handler.EVENT_MQTT_PACKET_RECEIVED",
        "asyncio",
        "hbmqtt.mqtt.connack.ConnackPacket",
        "hbmqtt.mqtt.pingreq.PingReqPacket",
        "hbmqtt.plugins.manager.PluginManager",
        "asyncio.futures",
        "asyncio.ensure_future",
        "hbmqtt.mqtt.connect.ConnectPacket"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/protocol/handler.py": [
        "hbmqtt.mqtt.subscribe.SubscribePacket",
        "asyncio.InvalidStateError",
        "hbmqtt.session.OutgoingApplicationMessage",
        "hbmqtt.mqtt.disconnect.DisconnectPacket",
        "hbmqtt.mqtt.unsubscribe.UnsubscribePacket",
        "hbmqtt.mqtt.publish.PublishPacket",
        "hbmqtt.session.IncomingApplicationMessage",
        "hbmqtt.mqtt.suback.SubackPacket",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.pubcomp.PubcompPacket",
        "sys",
        "collections",
        "hbmqtt.mqtt.puback.PubackPacket",
        "asyncio.ensure_future",
        "hbmqtt.plugins.manager.PluginManager",
        "hbmqtt.mqtt.constants",
        "hbmqtt.mqtt.connect.ConnectPacket",
        "hbmqtt.mqtt.unsuback.UnsubackPacket",
        "hbmqtt.mqtt.packet_class",
        "itertools",
        "hbmqtt.mqtt.pingresp.PingRespPacket",
        "hbmqtt.session.Session",
        "logging",
        "hbmqtt.mqtt.packet",
        "hbmqtt.session.OUTGOING",
        "hbmqtt.mqtt.pubrec.PubrecPacket",
        "hbmqtt.mqtt.connack.ConnackPacket",
        "hbmqtt.mqtt.pubrel.PubrelPacket",
        "hbmqtt.mqtt.pingreq.PingReqPacket",
        "hbmqtt.adapters.ReaderAdapter",
        "hbmqtt.adapters.WriterAdapter",
        "hbmqtt.session.INCOMING"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/puback.py": [
        "hbmqtt.mqtt.packet.PUBACK",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.mqtt.packet.PacketIdVariableHeader",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.errors.HBMQTTException"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/pubcomp.py": [
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.mqtt.packet.PacketIdVariableHeader",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.packet.PUBCOMP"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/publish.py": [
        "hbmqtt.mqtt.packet.MQTTPayload",
        "hbmqtt.errors.MQTTException",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.codecs",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.packet.PUBLISH",
        "hbmqtt.mqtt.packet.MQTTVariableHeader"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/pubrec.py": [
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.mqtt.packet.PacketIdVariableHeader",
        "hbmqtt.mqtt.packet.PUBREC",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.errors.HBMQTTException"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/pubrel.py": [
        "hbmqtt.mqtt.packet.PUBREL",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.mqtt.packet.PacketIdVariableHeader",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.errors.HBMQTTException"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/suback.py": [
        "hbmqtt.adapters.ReaderAdapter",
        "hbmqtt.mqtt.packet.MQTTPayload",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.mqtt.packet.PacketIdVariableHeader",
        "hbmqtt.mqtt.packet.SUBACK",
        "hbmqtt.codecs",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.packet.MQTTVariableHeader"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/subscribe.py": [
        "hbmqtt.mqtt.packet.MQTTPayload",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.mqtt.packet.PacketIdVariableHeader",
        "hbmqtt.codecs",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.errors.HBMQTTException",
        "hbmqtt.mqtt.packet.MQTTVariableHeader",
        "hbmqtt.mqtt.packet.SUBSCRIBE"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/unsuback.py": [
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.mqtt.packet.PacketIdVariableHeader",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.mqtt.packet.UNSUBACK",
        "hbmqtt.errors.HBMQTTException"
    ],
    "/tmp/hbmqtt/hbmqtt/mqtt/unsubscribe.py": [
        "hbmqtt.mqtt.packet.MQTTPayload",
        "hbmqtt.mqtt.packet.MQTTPacket",
        "hbmqtt.mqtt.packet.PacketIdVariableHeader",
        "hbmqtt.codecs",
        "hbmqtt.mqtt.packet.MQTTFixedHeader",
        "hbmqtt.mqtt.packet.MQTTVariableHeader",
        "hbmqtt.mqtt.packet.UNSUBSCRIBE",
        "hbmqtt.errors.HBMQTTException"
    ],
    "/tmp/hbmqtt/hbmqtt/plugins/__init__.py": [],
    "/tmp/hbmqtt/hbmqtt/plugins/authentication.py": [
        "logging",
        "passlib.apps.custom_app_context",
        "asyncio"
    ],
    "/tmp/hbmqtt/hbmqtt/plugins/logging.py": [
        "functools.partial",
        "logging",
        "asyncio"
    ],
    "/tmp/hbmqtt/hbmqtt/plugins/manager.py": [
        "collections.namedtuple",
        "copy",
        "sys",
        "asyncio.ensure_future",
        "logging",
        "asyncio",
        "pkg_resources"
    ],
    "/tmp/hbmqtt/hbmqtt/plugins/persistence.py": [
        "sqlite3",
        "pickle",
        "asyncio"
    ],
    "/tmp/hbmqtt/hbmqtt/plugins/sys/__init__.py": [],
    "/tmp/hbmqtt/hbmqtt/plugins/sys/broker.py": [
        "hbmqtt.version.get_version",
        "asyncio",
        "sys",
        "asyncio.ensure_future",
        "datetime.datetime",
        "hbmqtt.codecs.int_to_bytes_str",
        "hbmqtt.mqtt.packet.PUBLISH",
        "collections.deque"
    ],
    "/tmp/hbmqtt/hbmqtt/session.py": [
        "asyncio.Queue",
        "collections.OrderedDict",
        "transitions.Machine",
        "hbmqtt.mqtt.publish.PublishPacket",
        "asyncio"
    ],
    "/tmp/hbmqtt/hbmqtt/utils.py": [
        "random",
        "yaml"
    ],
    "/tmp/hbmqtt/hbmqtt/version.py": [
        "hbmqtt.VERSION",
        "subprocess",
        "os",
        "datetime"
    ]
}
{
    "/tmp/heatmiserV3/heatmiserV3/__init__.py": [],
    "/tmp/heatmiserV3/heatmiserV3/connection.py": [
        "serial",
        ".constants"
    ],
    "/tmp/heatmiserV3/heatmiserV3/constants.py": [
        "serial"
    ],
    "/tmp/heatmiserV3/heatmiserV3/heatmiser.py": [
        "sys",
        "serial",
        ".constants"
    ]
}
{
    "/tmp/hid/hid/__init__.py": [
        "atexit",
        "ctypes"
    ]
}
{
    "/tmp/hikvision/hikvision/__init__.py": [],
    "/tmp/hikvision/hikvision/api.py": [
        "hikvision.constants.DEFAULT_SENS_LEVEL",
        "hikvision.constants.DEFAULT_HEADERS",
        "logging",
        "hikvision.error.MissingParamError",
        "requests.auth.HTTPBasicAuth",
        "requests.exceptions.ConnectionError",
        "hikvision.error.HikvisionError",
        "hikvision.constants.XML_ENCODING",
        "re",
        "hikvision.constants.DEFAULT_PORT",
        "requests",
        "xml.etree.ElementTree"
    ],
    "/tmp/hikvision/hikvision/constants.py": [],
    "/tmp/hikvision/hikvision/error.py": []
}
{
    "/tmp/httplib2/httplib2/__init__.py": [
        "email.header.Header",
        "urllib.parse.urlencode",
        "base64",
        "hmac",
        "io",
        "email.feedparser",
        ".iri2uri.iri2uri",
        "os",
        "socket",
        "time",
        "copy",
        "ssl",
        "calendar",
        "hashlib.md5",
        "zlib",
        "errno",
        "random",
        "re",
        "gzip",
        "urllib.parse",
        "hashlib.sha1",
        "http.client",
        "gettext.gettext"
    ],
    "/tmp/httplib2/httplib2/iri2uri.py": [
        "unittest",
        "urllib.parse"
    ]
}
{
    "/tmp/ibmiotf/ibmiotf/__init__.py": [
        "logging.handlers.RotatingFileHandler",
        "paho.mqtt.client",
        "pkg_resources.get_distribution",
        "sys",
        "ssl",
        "logging",
        "socket",
        "threading",
        "time",
        "os"
    ],
    "/tmp/ibmiotf/ibmiotf/api.py": [
        "ibmiotf",
        "logging",
        "base64",
        "json",
        "requests"
    ],
    "/tmp/ibmiotf/ibmiotf/application.py": [
        "ibmiotf.api",
        "datetime.datetime",
        "paho.mqtt.client",
        "ConfigParser",
        "uuid",
        "ibmiotf.codecs.jsonCodec",
        "ibmiotf.codecs.jsonIotfCodec",
        "re",
        "json",
        "ibmiotf.ConnectionException",
        "iso8601",
        "ibmiotf.MissingMessageEncoderException",
        "requests",
        "os"
    ],
    "/tmp/ibmiotf/ibmiotf/codecs/__init__.py": [],
    "/tmp/ibmiotf/ibmiotf/codecs/jsonCodec.py": [
        "ibmiotf.InvalidEventException",
        "datetime.datetime",
        "json",
        "pytz",
        "ibmiotf.Message"
    ],
    "/tmp/ibmiotf/ibmiotf/codecs/jsonIotfCodec.py": [
        "ibmiotf.InvalidEventException",
        "iso8601",
        "json",
        "pytz",
        "ibmiotf.Message",
        "datetime.datetime"
    ],
    "/tmp/ibmiotf/ibmiotf/device.py": [
        "ibmiotf.MissingMessageDecoderException",
        "datetime.datetime",
        "ibmiotf.AbstractClient",
        "paho.mqtt.client",
        "ConfigParser",
        "uuid",
        "ibmiotf.codecs.jsonIotfCodec",
        "re",
        "json",
        "ibmiotf.ConnectionException",
        "ibmiotf.codecs.jsonCodec",
        "ibmiotf.InvalidEventException",
        "pytz",
        "ibmiotf.UnsupportedAuthenticationMethod",
        "threading",
        "ibmiotf.MissingMessageEncoderException",
        "requests",
        "ibmiotf.ConfigurationException"
    ],
    "/tmp/ibmiotf/ibmiotf/gateway.py": [
        "ibmiotf.MissingMessageDecoderException",
        "datetime.datetime",
        "ibmiotf.api",
        "ibmiotf.AbstractClient",
        "paho.mqtt.client",
        "ConfigParser",
        "uuid",
        "ibmiotf.codecs.jsonIotfCodec",
        "re",
        "json",
        "ibmiotf.ConfigurationException",
        "ibmiotf.ConnectionException",
        "ibmiotf.codecs.jsonCodec",
        "ibmiotf.InvalidEventException",
        "pytz",
        "ibmiotf.UnsupportedAuthenticationMethod",
        "logging",
        "threading",
        "ibmiotf.MissingMessageEncoderException",
        "requests"
    ]
}
{
    "/tmp/imutils/imutils/__init__.py": [],
    "/tmp/imutils/imutils/contours.py": [
        "cv2"
    ],
    "/tmp/imutils/imutils/convenience.py": [
        "cv2",
        "urllib.request.urlopen",
        "cv2",
        "sys",
        "numpy"
    ],
    "/tmp/imutils/imutils/encodings.py": [
        "base64",
        "sys",
        "json",
        "numpy"
    ],
    "/tmp/imutils/imutils/io/__init__.py": [],
    "/tmp/imutils/imutils/io/tempfile.py": [
        "os",
        "uuid"
    ],
    "/tmp/imutils/imutils/meta.py": [
        "re",
        "cv2",
        "__future__.print_function"
    ],
    "/tmp/imutils/imutils/object_detection.py": [
        "numpy"
    ],
    "/tmp/imutils/imutils/paths.py": [
        "os"
    ],
    "/tmp/imutils/imutils/perspective.py": [
        "numpy",
        "cv2",
        "scipy.spatial.distance"
    ],
    "/tmp/imutils/imutils/video/__init__.py": [],
    "/tmp/imutils/imutils/video/count_frames.py": [
        "..convenience.is_cv3",
        "cv2"
    ],
    "/tmp/imutils/imutils/video/filevideostream.py": [
        "sys",
        "Queue.Queue",
        "cv2",
        "threading.Thread"
    ],
    "/tmp/imutils/imutils/video/fps.py": [
        "datetime"
    ],
    "/tmp/imutils/imutils/video/pivideostream.py": [
        "picamera.array.PiRGBArray",
        "picamera.PiCamera",
        "threading.Thread"
    ],
    "/tmp/imutils/imutils/video/videostream.py": [
        ".pivideostream.PiVideoStream",
        ".webcamvideostream.WebcamVideoStream"
    ],
    "/tmp/imutils/imutils/video/webcamvideostream.py": [
        "cv2",
        "threading.Thread"
    ]
}
{
    "/tmp/insteonlocal/insteonlocal/Dimmer.py": [
        "pprint"
    ],
    "/tmp/insteonlocal/insteonlocal/Group.py": [],
    "/tmp/insteonlocal/insteonlocal/Hub.py": [
        "collections.OrderedDict",
        "insteonlocal.Group.Group",
        "io.StringIO",
        "pprint",
        "insteonlocal.Switch.Switch",
        "pkg_resources",
        "json",
        "time.sleep",
        "insteonlocal.Dimmer.Dimmer",
        "logging.handlers",
        "requests"
    ],
    "/tmp/insteonlocal/insteonlocal/Switch.py": [
        "pprint"
    ],
    "/tmp/insteonlocal/insteonlocal/__init__.py": []
}
{
    "/tmp/jinja2/jinja2/__init__.py": [
        "jinja2.utils.have_async_gen",
        "jinja2.asyncsupport.patch_all",
        "jinja2.loaders.PrefixLoader",
        "jinja2.exceptions.TemplatesNotFound",
        "jinja2.exceptions.TemplateError",
        "jinja2.loaders.BaseLoader",
        "jinja2.environment.Environment",
        "jinja2.bccache.MemcachedBytecodeCache",
        "jinja2.utils.contextfunction",
        "jinja2.environment.Template",
        "jinja2.utils.escape",
        "jinja2.exceptions.TemplateNotFound",
        "jinja2.loaders.PackageLoader",
        "jinja2.exceptions.TemplateSyntaxError",
        "jinja2.loaders.FileSystemLoader",
        "jinja2.runtime.make_logging_undefined",
        "jinja2.filters.evalcontextfilter",
        "jinja2.loaders.ChoiceLoader",
        "jinja2.exceptions.UndefinedError",
        "jinja2.utils.evalcontextfunction",
        "jinja2.loaders.ModuleLoader",
        "jinja2.filters.contextfilter",
        "jinja2.utils.environmentfunction",
        "jinja2.runtime.Undefined",
        "jinja2.exceptions.TemplateAssertionError",
        "jinja2.utils.Markup",
        "jinja2.loaders.DictLoader",
        "jinja2.filters.environmentfilter",
        "jinja2.utils.select_autoescape",
        "jinja2.runtime.DebugUndefined",
        "jinja2.runtime.StrictUndefined",
        "jinja2.utils.is_undefined",
        "jinja2.bccache.BytecodeCache",
        "jinja2.utils.clear_caches",
        "jinja2.bccache.FileSystemBytecodeCache",
        "jinja2.loaders.FunctionLoader"
    ],
    "/tmp/jinja2/jinja2/_compat.py": [
        "cStringIO.StringIO",
        "sys",
        "cStringIO.StringIO"
    ],
    "/tmp/jinja2/jinja2/_stringdefs.py": [
        "jinja2._compat.unichr",
        "unicodedata"
    ],
    "/tmp/jinja2/jinja2/asyncfilters.py": [
        "jinja2.asyncsupport.auto_aiter",
        "functools.wraps",
        "jinja2.filters"
    ],
    "/tmp/jinja2/jinja2/asyncsupport.py": [
        "jinja2.Template",
        "jinja2.runtime.BlockReference",
        "jinja2.asyncfilters.ASYNC_FILTERS",
        "jinja2.filters.FILTERS",
        "jinja2.utils.Markup",
        "jinja2.runtime.LoopContextBase",
        "sys",
        "asyncio",
        "functools.update_wrapper",
        "jinja2.utils.internalcode",
        "jinja2.environment.TemplateModule",
        "jinja2.utils.concat",
        "inspect",
        "jinja2.runtime._last_iteration"
    ],
    "/tmp/jinja2/jinja2/bccache.py": [
        "os.remove",
        "jinja2._compat.PY2",
        "stat",
        "tempfile",
        "errno",
        "jinja2._compat.BytesIO",
        "os.listdir",
        "jinja2.utils.open_if_exists",
        "jinja2._compat.text_type",
        "sys",
        "os.path",
        "hashlib.sha1",
        "os",
        "marshal",
        "fnmatch",
        "jinja2._compat.pickle"
    ],
    "/tmp/jinja2/jinja2/compiler.py": [
        "jinja2.runtime.__all__",
        "itertools.chain",
        "jinja2._compat.izip",
        "jinja2._compat.range_type",
        "jinja2.utils.escape",
        "jinja2.optimizer.Optimizer",
        "jinja2.idtracking.VAR_LOAD_UNDEFINED",
        "jinja2.idtracking.VAR_LOAD_ALIAS",
        "jinja2.visitor.NodeVisitor",
        "jinja2.nodes",
        "jinja2.exceptions.TemplateAssertionError",
        "jinja2._compat.text_type",
        "jinja2.utils.Markup",
        "jinja2.idtracking.VAR_LOAD_PARAMETER",
        "functools.update_wrapper",
        "jinja2._compat.NativeStringIO",
        "jinja2._compat.iteritems",
        "keyword.iskeyword",
        "jinja2._compat.imap",
        "jinja2.utils.concat",
        "jinja2.nodes.EvalContext",
        "jinja2._compat.string_types",
        "jinja2.idtracking.Symbols",
        "jinja2.idtracking.VAR_LOAD_RESOLVE"
    ],
    "/tmp/jinja2/jinja2/constants.py": [],
    "/tmp/jinja2/jinja2/debug.py": [
        "jinja2.debugrenderer.render_traceback",
        "ctypes",
        "types.TracebackType",
        "jinja2._compat.PY2",
        "types.CodeType",
        "jinja2._compat.reraise",
        "jinja2.exceptions.TemplateSyntaxError",
        "types.TracebackType",
        "jinja2.utils.missing",
        "sys",
        "jinja2._compat.iteritems",
        "jinja2.utils.internal_code",
        "traceback"
    ],
    "/tmp/jinja2/jinja2/defaults.py": [
        "jinja2._compat.range_type",
        "jinja2.utils.generate_lorem_ipsum",
        "jinja2.utils.Cycler",
        "jinja2.utils.Joiner"
    ],
    "/tmp/jinja2/jinja2/environment.py": [
        "zipfile.ZipFile",
        "zipfile.ZIP_DEFLATED",
        "imp",
        "jinja2.loaders.ModuleLoader",
        "zipfile.ZIP_STORED",
        "warnings.warn",
        "zipfile.ZipInfo",
        "marshal",
        "jinja2.debug.make_traceback",
        "jinja2.defaults.LINE_COMMENT_PREFIX",
        "jinja2.exceptions.TemplatesNotFound",
        "jinja2.compiler.CodeGenerator",
        "functools.partial",
        "jinja2.runtime.new_context",
        "jinja2.defaults.TRIM_BLOCKS",
        "jinja2._compat.PY2",
        "jinja2.defaults.BLOCK_END_STRING",
        "functools.reduce",
        "jinja2.defaults.DEFAULT_TESTS",
        "jinja2.defaults.BLOCK_START_STRING",
        "jinja2.runtime.Context",
        "jinja2._compat.reraise",
        "jinja2.defaults.LSTRIP_BLOCKS",
        "jinja2.utils.consume",
        "jinja2.utils.import_string",
        "jinja2.exceptions.TemplateNotFound",
        "jinja2.utils.internalcode",
        "jinja2.exceptions.TemplateSyntaxError",
        "jinja2.defaults.COMMENT_END_STRING",
        "jinja2.defaults.VARIABLE_START_STRING",
        "jinja2._compat.imap",
        "jinja2.defaults.DEFAULT_POLICIES",
        "jinja2.defaults.VARIABLE_END_STRING",
        "jinja2._compat.implements_to_string",
        "jinja2.nodes",
        "jinja2.defaults.DEFAULT_FILTERS",
        "jinja2._compat.ifilter",
        "jinja2.utils.have_async_gen",
        "jinja2.runtime.Undefined",
        "jinja2.defaults.COMMENT_START_STRING",
        "jinja2.utils.missing",
        "jinja2._compat.text_type",
        "jinja2.utils.Markup",
        "jinja2.defaults.KEEP_TRAILING_NEWLINE",
        "jinja2._compat.implements_iterator",
        "sys",
        "jinja2.defaults.DEFAULT_NAMESPACE",
        "jinja2._compat.iteritems",
        "jinja2.exceptions.TemplateRuntimeError",
        "jinja2._compat.PYPY",
        "jinja2.compiler.generate",
        "jinja2.utils.concat",
        "jinja2.utils.LRUCache",
        "jinja2.nodes.EvalContext",
        "jinja2.defaults.LINE_STATEMENT_PREFIX",
        "jinja2.lexer.TokenStream",
        "jinja2.parser.Parser",
        "jinja2._compat.string_types",
        "jinja2.lexer.get_lexer",
        "weakref",
        "jinja2._compat.encode_filename",
        "jinja2.defaults.NEWLINE_SEQUENCE",
        "os"
    ],
    "/tmp/jinja2/jinja2/exceptions.py": [
        "jinja2._compat.text_type",
        "jinja2._compat.PY2",
        "jinja2._compat.implements_to_string",
        "jinja2._compat.imap"
    ],
    "/tmp/jinja2/jinja2/ext.py": [
        "jinja2.defaults.LINE_COMMENT_PREFIX",
        "jinja2.defaults.TRIM_BLOCKS",
        "jinja2.defaults.BLOCK_END_STRING",
        "jinja2.environment.Environment",
        "jinja2.defaults.BLOCK_START_STRING",
        "jinja2.defaults.LSTRIP_BLOCKS",
        "jinja2.defaults.COMMENT_START_STRING",
        "jinja2.exceptions.TemplateSyntaxError",
        "jinja2.defaults.COMMENT_END_STRING",
        "jinja2.defaults.VARIABLE_START_STRING",
        "jinja2.defaults.VARIABLE_END_STRING",
        "jinja2.nodes",
        "jinja2.exceptions.TemplateAssertionError",
        "jinja2.utils.Markup",
        "jinja2.defaults.LINE_STATEMENT_PREFIX",
        "jinja2._compat.with_metaclass",
        "jinja2._compat.iteritems",
        "jinja2.runtime.concat",
        "jinja2.defaults.KEEP_TRAILING_NEWLINE",
        "jinja2._compat.string_types",
        "jinja2.utils.contextfunction",
        "jinja2.utils.import_string",
        "jinja2.defaults.NEWLINE_SEQUENCE"
    ],
    "/tmp/jinja2/jinja2/filters.py": [
        "textwrap",
        "jinja2.utils.escape",
        "jinja2.utils.htmlsafe_json_dumps",
        "jinja2.utils.urlize",
        "jinja2.exceptions.FilterArgumentError",
        "re",
        "math",
        "collections.namedtuple",
        "jinja2.runtime.Undefined",
        "jinja2._compat.text_type",
        "jinja2.utils.Markup",
        "random.choice",
        "jinja2.utils.unicode_urlencode",
        "jinja2._compat.iteritems",
        "jinja2.utils.soft_unicode",
        "jinja2._compat.imap",
        "jinja2._compat.string_types",
        "jinja2.utils.pformat",
        "itertools.groupby"
    ],
    "/tmp/jinja2/jinja2/idtracking.py": [
        "jinja2._compat.iteritems",
        "jinja2.visitor.NodeVisitor"
    ],
    "/tmp/jinja2/jinja2/lexer.py": [
        "jinja2._compat.intern",
        "jinja2.exceptions.TemplateSyntaxError",
        "re",
        "jinja2._stringdefs",
        "collections.deque",
        "jinja2._compat.text_type",
        "jinja2._compat.iteritems",
        "jinja2.utils.LRUCache",
        "jinja2._compat.implements_iterator",
        "operator.itemgetter"
    ],
    "/tmp/jinja2/jinja2/loaders.py": [
        "pkg_resources.DefaultProvider",
        "pkg_resources.ResourceManager",
        "pkg_resources.get_provider",
        "weakref",
        "hashlib.sha1",
        "jinja2.utils.internalcode",
        "jinja2.utils.open_if_exists",
        "jinja2._compat.string_types",
        "sys",
        "jinja2.exceptions.TemplateNotFound",
        "jinja2._compat.iteritems",
        "os.path",
        "types.ModuleType",
        "os"
    ],
    "/tmp/jinja2/jinja2/meta.py": [
        "jinja2.compiler.CodeGenerator",
        "jinja2._compat.string_types",
        "jinja2._compat.iteritems",
        "jinja2.nodes"
    ],
    "/tmp/jinja2/jinja2/nodes.py": [
        ".compiler.has_safe_repr",
        "jinja2._compat.PY2",
        "operator",
        "jinja2._compat.izip",
        "collections.deque",
        "jinja2._compat.text_type",
        "jinja2.utils.Markup",
        "jinja2._compat.with_metaclass",
        "types"
    ],
    "/tmp/jinja2/jinja2/optimizer.py": [
        "jinja2.nodes",
        "jinja2.visitor.NodeTransformer"
    ],
    "/tmp/jinja2/jinja2/parser.py": [
        "jinja2.lexer.describe_token",
        "jinja2.exceptions.TemplateAssertionError",
        "jinja2.lexer.describe_token_expr",
        "jinja2.exceptions.TemplateSyntaxError",
        "jinja2.nodes",
        "jinja2._compat.imap"
    ],
    "/tmp/jinja2/jinja2/runtime.py": [
        "logging",
        "itertools.chain",
        "jinja2._compat.PY2",
        "jinja2.utils.evalcontextfunction",
        "jinja2.utils.escape",
        "jinja2.exceptions.TemplateNotFound",
        "jinja2.utils.internalcode",
        "collections.Mapping",
        "jinja2._compat.implements_to_string",
        "jinja2.exceptions.UndefinedError",
        "jinja2.nodes._context_function_types",
        "jinja2._compat.implements_iterator",
        "jinja2.utils.missing",
        "jinja2._compat.text_type",
        "jinja2.utils.Markup",
        "sys",
        "jinja2._compat.iteritems",
        "jinja2.exceptions.TemplateRuntimeError",
        "jinja2.utils.soft_unicode",
        "jinja2._compat.imap",
        "jinja2.utils.concat",
        "jinja2.nodes.EvalContext",
        "jinja2._compat.string_types",
        "jinja2.utils.object_type_repr"
    ],
    "/tmp/jinja2/jinja2/sandbox.py": [
        "jinja2._compat.PY2",
        "jinja2.environment.Environment",
        "operator",
        "string.Formatter",
        "collections.MutableMapping",
        "collections.Mapping",
        "UserList.UserList",
        "jinja2.utils.Markup",
        "collections.deque",
        "collections.MutableSet",
        "warnings",
        "UserDict.UserDict",
        "markupsafe.EscapeFormatter",
        "collections.MutableSequence",
        "UserDict.DictMixin",
        "jinja2.exceptions.SecurityError",
        "types",
        "sets.Set",
        "jinja2._compat.string_types"
    ],
    "/tmp/jinja2/jinja2/tests.py": [
        "collections.Mapping",
        "re",
        "jinja2.runtime.Undefined",
        "jinja2._compat.text_type",
        "jinja2._compat.integer_types",
        "decimal",
        "jinja2._compat.string_types"
    ],
    "/tmp/jinja2/jinja2/utils.py": [
        "jinja2.runtime.Undefined",
        "jinja2.lexer._lexer_cache",
        "jinja2.environment._spontaneous_environments",
        "pprint.pformat",
        "pretty.pretty",
        "random.randrange",
        "random.choice",
        "jinja2.constants.LOREM_IPSUM_WORDS",
        "collections.MutableMapping",
        "markupsafe.escape",
        "errno",
        "jinja2._compat.url_quote",
        "re",
        "json",
        "markupsafe.Markup",
        "collections.deque",
        "jinja2._compat.text_type",
        "jinja2._compat.implements_iterator",
        "threading.Lock",
        "jinja2._compat.string_types"
    ],
    "/tmp/jinja2/jinja2/visitor.py": [
        "jinja2.nodes.Node"
    ]
}
{
    "/tmp/jsonrpc_async/jsonrpc_async/__init__.py": [],
    "/tmp/jsonrpc_async/jsonrpc_async/jsonrpc.py": [
        "aiohttp",
        "jsonrpc_base",
        "functools",
        "jsonrpc_base.TransportError",
        "asyncio"
    ]
}
{
    "/tmp/jsonrpc_requests/jsonrpc_requests/__init__.py": [],
    "/tmp/jsonrpc_requests/jsonrpc_requests/jsonrpc.py": [
        "functools",
        "random",
        "sys",
        "json",
        "collections",
        "requests"
    ]
}
{
    "/tmp/jwt/jwt/__init__.py": [
        "__future__.absolute_import"
    ],
    "/tmp/jwt/jwt/exceptions.py": [],
    "/tmp/jwt/jwt/interfaces.py": [
        "json",
        "__future__.absolute_import"
    ],
    "/tmp/jwt/jwt/jwk.py": [
        "jwt.exceptions.UnsupportedKeyType",
        "jwt.utils.int_to_base64",
        "jwt.utils.base64_to_int",
        "Crypto.PublicKey.RSA",
        "__future__.absolute_import",
        "sys",
        "jwt.utils.b64_decode",
        "jwt.exceptions.KeyNotFound",
        "jwt.utils.b64_encode"
    ],
    "/tmp/jwt/jwt/jws.py": [
        "Crypto.PublicKey.RSA._RSAobj",
        "__future__.absolute_import",
        "jwt.utils.b64_encode",
        "Crypto.Hash.SHA512",
        "Crypto.Hash.SHA256",
        "Crypto.Signature.PKCS1_v1_5",
        "jwt.interfaces.Impl",
        "jwt.exceptions.KeyNotFound",
        "collections.namedtuple",
        "jwt.exceptions.MalformedJWT",
        "Crypto.Hash.SHA384",
        "hashlib",
        "jwt.exceptions.UnsupportedAlgorithm",
        "jwt.utils.b64_decode",
        "jwt.exceptions.InvalidKeyType",
        "hmac"
    ],
    "/tmp/jwt/jwt/jwt.py": [
        "jwt.jws.JWS",
        "jwt.exceptions.MalformedJWT",
        "jwt.exceptions.UnsupportedAlgorithm",
        "json",
        "jwt.utils.b64_decode",
        "__future__.absolute_import",
        "jwt.utils.b64_encode",
        "jwt.interfaces.Impl"
    ],
    "/tmp/jwt/jwt/tests/__init__.py": [
        "jwt.interfaces.Impl",
        "unittest"
    ],
    "/tmp/jwt/jwt/tests/test_jwk.py": [
        "jwt.jwk.OctKey",
        "jwt.jwk.RSAKey",
        "jwt.jwk.JWKSet",
        "unittest",
        "jwt.utils.int_to_base64",
        "jwt.utils.b64_decode"
    ],
    "/tmp/jwt/jwt/tests/test_jws.py": [
        "jwt.jwk.JWK",
        "jwt.jws.plaintext_jwt",
        "hmac",
        "jwt.jws.hmac_signer",
        "jwt.jws.JWS",
        "jwt.jws.hs256",
        "jwt.jws.hs384",
        "jwt.jws.hs512",
        "Crypto.Signature.PKCS1_v1_5",
        "jwt.jws.JWS",
        "Crypto.Hash.SHA256",
        "jwt.jws.rsa_signer",
        "Crypto.Hash.SHA256",
        "jwt.jws.rs256",
        "jwt.jws.rs384",
        "Crypto.Hash.SHA384",
        "Crypto.Hash.SHA512",
        "jwt.jws.rs512",
        "jwt.jws.JWS",
        "jwt.jwk.JWK",
        "jwt.jwk.JWKSet",
        "jwt.exceptions.UnsupportedAlgorithm",
        "jwt.jws.rs256",
        "jwt.jws.hs256",
        "jwt.jws.KeyNotFound",
        "jwt.exceptions.MalformedJWT",
        "jwt.jws.MalformedJWT",
        "hashlib",
        "unittest"
    ],
    "/tmp/jwt/jwt/tests/test_jwt.py": [
        "jwt.jwt.JWT",
        "jwt.jwk.JWKSet",
        "collections.OrderedDict",
        "unittest",
        "jwt.exceptions.MalformedJWT",
        "jwt.exceptions.UnsupportedAlgorithm",
        "json"
    ],
    "/tmp/jwt/jwt/tests/test_utils.py": [
        "unittest",
        "jwt.utils"
    ],
    "/tmp/jwt/jwt/utils.py": [
        "base64",
        "__future__.absolute_import",
        "sys"
    ]
}
{
    "/tmp/keyring/keyring/__init__.py": [
        "logging",
        "pkg_resources",
        "__future__.absolute_import"
    ],
    "/tmp/keyring/keyring/__main__.py": [
        "keyring.cli"
    ],
    "/tmp/keyring/keyring/backend.py": [
        ".py27compat.filter",
        ".errors",
        "logging",
        "importlib",
        ".backends",
        "pkg_resources",
        "__future__.absolute_import",
        ".util",
        "abc",
        ".py27compat.add_metaclass",
        ".util.properties"
    ],
    "/tmp/keyring/keyring/backends/OS_X.py": [
        "..errors.PasswordSetError",
        "..backend.KeyringBackend",
        "..errors.PasswordDeleteError",
        "platform",
        "._OS_X_API",
        "..util.properties"
    ],
    "/tmp/keyring/keyring/backends/SecretService.py": [
        "logging",
        "..backend.KeyringBackend",
        "secretstorage",
        "..errors.PasswordDeleteError",
        "..errors.ExceptionRaisedContext",
        "..errors.InitError",
        "secretstorage.exceptions",
        "..util.properties"
    ],
    "/tmp/keyring/keyring/backends/Windows.py": [
        "..backend.KeyringBackend",
        "__future__.unicode_literals",
        "functools",
        "..errors.PasswordDeleteError",
        "..errors.ExceptionRaisedContext",
        "..util.properties",
        "win32cred",
        "pywintypes",
        "..py27compat.unicode_str"
    ],
    "/tmp/keyring/keyring/backends/_OS_X_API.py": [
        "contextlib",
        "ctypes.c_uint16",
        "ctypes.c_uint32",
        "ctypes.c_char_p",
        "ctypes.c_void_p",
        "ctypes",
        "ctypes.c_int32",
        "ctypes.POINTER"
    ],
    "/tmp/keyring/keyring/backends/__init__.py": [],
    "/tmp/keyring/keyring/backends/fail.py": [
        "..backend.KeyringBackend"
    ],
    "/tmp/keyring/keyring/backends/kwallet.py": [
        "..errors.PasswordSetError",
        "..backend.KeyringBackend",
        "dbus",
        "..errors.PasswordDeleteError",
        "__future__.absolute_import",
        "..util.properties"
    ],
    "/tmp/keyring/keyring/cli.py": [
        "sys",
        ".get_password",
        ".set_keyring",
        "getpass",
        "__future__.print_function",
        ".core",
        ".set_password",
        ".delete_password",
        "optparse.OptionParser"
    ],
    "/tmp/keyring/keyring/core.py": [
        "operator",
        ".backends.fail",
        ".backend",
        ".util.platform_",
        ".logger",
        ".py27compat.configparser",
        ".py33compat.max",
        "sys",
        "logging",
        ".py27compat.filter",
        "os"
    ],
    "/tmp/keyring/keyring/credentials.py": [
        "abc",
        ".py27compat.add_metaclass",
        "os"
    ],
    "/tmp/keyring/keyring/errors.py": [
        "sys"
    ],
    "/tmp/keyring/keyring/getpassbackend.py": [
        "getpass",
        ".core"
    ],
    "/tmp/keyring/keyring/http.py": [
        "getpass",
        ".get_password",
        ".set_password",
        ".delete_password"
    ],
    "/tmp/keyring/keyring/py27compat.py": [],
    "/tmp/keyring/keyring/py33compat.py": [
        ".py27compat.builtins"
    ],
    "/tmp/keyring/keyring/tests/__init__.py": [
        "sys",
        "logging"
    ],
    "/tmp/keyring/keyring/tests/backends/__init__.py": [],
    "/tmp/keyring/keyring/tests/backends/test_OS_X.py": [
        "unittest",
        "sys",
        "keyring.backends.OS_X",
        "..test_backend.BackendBasicTests"
    ],
    "/tmp/keyring/keyring/tests/backends/test_SecretService.py": [
        "unittest",
        "..util",
        "..test_backend.BackendBasicTests",
        "keyring.backends.SecretService"
    ],
    "/tmp/keyring/keyring/tests/backends/test_Windows.py": [
        "unittest",
        "keyring.backends.Windows",
        "sys",
        "..test_backend.BackendBasicTests",
        "__future__.print_function"
    ],
    "/tmp/keyring/keyring/tests/backends/test_kwallet.py": [
        "unittest",
        "..test_backend.BackendBasicTests",
        "keyring.backends.kwallet"
    ],
    "/tmp/keyring/keyring/tests/test_backend.py": [
        "keyring.errors",
        "string",
        "__future__.unicode_literals",
        "pytest",
        ".util.random_string"
    ],
    "/tmp/keyring/keyring/tests/util.py": [
        "string",
        "random",
        "sys",
        "contextlib",
        "os"
    ],
    "/tmp/keyring/keyring/util/__init__.py": [
        "functools"
    ],
    "/tmp/keyring/keyring/util/escape.py": [
        "string",
        "sys",
        "re"
    ],
    "/tmp/keyring/keyring/util/platform_.py": [
        "__future__.absolute_import",
        "platform",
        "os"
    ],
    "/tmp/keyring/keyring/util/properties.py": [
        "collections.Callable"
    ]
}
{
    "/tmp/knxip/knxip/__init__.py": [],
    "/tmp/knxip/knxip/conversion.py": [
        "datetime.timedelta",
        "datetime.datetime",
        "knxip.core.KNXException",
        "datetime.time",
        "datetime.date"
    ],
    "/tmp/knxip/knxip/core.py": [
        "re",
        "knxip.helper.tohex"
    ],
    "/tmp/knxip/knxip/gatewayscanner.py": [
        "knxip.helper.int_to_array",
        "knxip.helper.ip_to_array",
        "struct",
        "logging",
        "asyncio"
    ],
    "/tmp/knxip/knxip/helper.py": [],
    "/tmp/knxip/knxip/ip.py": [
        "knxip.gatewayscanner.GatewayScanner",
        "knxip.helper.int_to_array",
        "logging",
        "socket",
        "socketserver",
        "knxip.core.ValueCache",
        "queue",
        "threading",
        "knxip.core.KNXException",
        "time",
        "knxip.core.E_NO_ERROR",
        "knxip.helper.ip_to_array"
    ]
}
{
    "/tmp/libnacl/libnacl/__init__.py": [
        "os",
        "sys",
        "ctypes"
    ],
    "/tmp/libnacl/libnacl/base.py": [
        "msgpack",
        "json",
        "os",
        "stat",
        "libnacl.encode"
    ],
    "/tmp/libnacl/libnacl/blake.py": [
        "libnacl",
        "binascii"
    ],
    "/tmp/libnacl/libnacl/dual.py": [
        "libnacl.sign"
    ],
    "/tmp/libnacl/libnacl/encode.py": [
        "base64",
        "binascii"
    ],
    "/tmp/libnacl/libnacl/public.py": [
        "libnacl.base"
    ],
    "/tmp/libnacl/libnacl/secret.py": [
        "libnacl.base"
    ],
    "/tmp/libnacl/libnacl/sign.py": [
        "libnacl.encode"
    ],
    "/tmp/libnacl/libnacl/utils.py": [
        "msgpack",
        "json",
        "libnacl.dual",
        "struct",
        "time"
    ],
    "/tmp/libnacl/libnacl/version.py": []
}
{
    "/tmp/libsoundtouch/libsoundtouch/__init__.py": [
        "libsoundtouch.device.SoundTouchDevice"
    ],
    "/tmp/libsoundtouch/libsoundtouch/device.py": [
        "xml.dom.minidom",
        "logging",
        "requests"
    ]
}
{
    "/tmp/liffylights/liffylights.py": [
        "enum.IntEnum",
        "io",
        "struct",
        "ipaddress",
        "socket",
        "queue",
        "threading",
        "time",
        "struct.pack"
    ]
}
{
    "/tmp/lightify/lightify/__init__.py": [
        "logging",
        "socket",
        "binascii",
        "struct"
    ]
}
{
    "/tmp/limitlessled/limitlessled/__init__.py": [
        "collections.namedtuple",
        "logging"
    ],
    "/tmp/limitlessled/limitlessled/bridge.py": [
        "limitlessled.group.rgbw.RGBW",
        "limitlessled.MIN_WAIT",
        "socket",
        "limitlessled.REPS",
        "queue",
        "threading",
        "limitlessled.group.white.WhiteGroup",
        "time",
        "limitlessled.group.white.WHITE",
        "limitlessled.group.rgbw.RgbwGroup"
    ],
    "/tmp/limitlessled/limitlessled/group/__init__.py": [
        "limitlessled.pipeline.Pipeline",
        "limitlessled.MIN_WAIT",
        "limitlessled.REPS",
        "queue",
        "threading",
        "limitlessled.pipeline.PipelineQueue",
        "time",
        "math"
    ],
    "/tmp/limitlessled/limitlessled/group/rgbw.py": [
        "limitlessled.group.Group",
        "limitlessled.Color",
        "colorsys.rgb_to_hsv",
        "limitlessled.util",
        "limitlessled.group.rate",
        "limitlessled.util.steps",
        "time",
        "colorsys.hsv_to_rgb",
        "math"
    ],
    "/tmp/limitlessled/limitlessled/group/white.py": [
        "limitlessled.group.Group",
        "limitlessled.util",
        "limitlessled.group.rate",
        "limitlessled.util.steps",
        "time"
    ],
    "/tmp/limitlessled/limitlessled/pipeline.py": [
        "logging",
        "limitlessled.Color",
        "threading",
        "time"
    ],
    "/tmp/limitlessled/limitlessled/presets.py": [
        "limitlessled.Color",
        "limitlessled.pipeline.Pipeline"
    ],
    "/tmp/limitlessled/limitlessled/util.py": [
        "colorsys.rgb_to_hls",
        "math"
    ]
}
{
    "/tmp/lnetatmo/lnetatmo.py": [
        "urllib.urlencode",
        "os.path.exists",
        "sys.stdout",
        "warnings",
        "urllib.request",
        "json",
        "sys.exit",
        "os.path.expanduser",
        "sys.stderr",
        "sys.version_info",
        "urllib2",
        "os.getenv",
        "imghdr",
        "time"
    ]
}
{
    "/tmp/matplotlib/matplotlib/__init__.py": [
        "getpass",
        "tempfile",
        "matplotlib.cbook.mkdirs",
        "matplotlib.afm",
        "pprint",
        "re",
        "matplotlib.ft2font",
        "faulthandler",
        ".testing.noseclasses.KnownFailure",
        "nose.plugins.attrib",
        "nose.plugins.multiprocess",
        "nose.plugins.builtin",
        "nose.plugins.manager.PluginManager",
        "IPython.utils.signatures",
        "warnings",
        "itertools.chain",
        "functools",
        "__future__.absolute_import",
        "matplotlib.compat.subprocess",
        "pyparsing",
        "matplotlib.rcsetup.defaultParams",
        "distutils.sysconfig",
        "tempfile",
        "__future__.division",
        "six.moves.reload_module",
        "matplotlib.rcsetup.cycler",
        "locale",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.is_string_like",
        "re",
        "six.moves.urllib.request.urlopen",
        "inspect",
        "__future__.print_function",
        "matplotlib.rcsetup.validate_backend",
        "os",
        "numpy",
        "matplotlib.cbook.get_label",
        "__future__.unicode_literals",
        "contextlib",
        "io",
        "six",
        "matplotlib.cbook.dedent",
        "warnings",
        "sys"
    ],
    "/tmp/matplotlib/matplotlib/_cm.py": [
        "__future__.absolute_import",
        "__future__.division",
        "__future__.print_function",
        "matplotlib.cbook.warn_deprecated",
        "__future__.unicode_literals",
        "numpy"
    ],
    "/tmp/matplotlib/matplotlib/_cm_listed.py": [
        ".colors.ListedColormap"
    ],
    "/tmp/matplotlib/matplotlib/_color_data.py": [
        "__future__.division",
        "collections.OrderedDict",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/_mathtext_data.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/_pylab_helpers.py": [
        "gc",
        "__future__.division",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "sys",
        "atexit",
        "gc",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/_version.py": [
        "json"
    ],
    "/tmp/matplotlib/matplotlib/afm.py": [
        "six",
        "._mathtext_data.uni2type1",
        "six.moves.map",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "re",
        "__future__.division",
        "sys",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/animation.py": [
        "six.moves.winreg",
        "matplotlib.verbose",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.compat.subprocess",
        "contextlib",
        "matplotlib.cbook.is_string_like",
        "matplotlib.cbook.iterable",
        "six.moves.zip",
        "tempfile",
        "six",
        "platform",
        "__future__.division",
        "warnings",
        "base64.encodestring",
        "sys",
        "__future__.print_function",
        "matplotlib.cbook.deprecated",
        "itertools",
        "matplotlib.rcParams",
        "matplotlib.rc_context",
        "os",
        "matplotlib.rcParamsDefault"
    ],
    "/tmp/matplotlib/matplotlib/artist.py": [
        "traceback",
        "matplotlib.patches.Patch",
        "matplotlib.patches.Rectangle",
        "collections.OrderedDict",
        "collections.namedtuple",
        ".transforms.TransformedBbox",
        "__future__.unicode_literals",
        ".transforms.Transform",
        "__future__.absolute_import",
        "matplotlib.cbook.mplDeprecation",
        ".transforms.TransformedPath",
        ".transforms.IdentityTransform",
        "six",
        "re",
        ".transforms.Bbox",
        "numpy",
        ".path.Path",
        "__future__.division",
        "warnings",
        "inspect",
        "matplotlib.docstring",
        "matplotlib",
        "__future__.print_function",
        "matplotlib.cbook",
        "matplotlib.rcParams"
    ],
    "/tmp/matplotlib/matplotlib/axes/__init__.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/axes/_axes.py": [
        "matplotlib.lines",
        "matplotlib.container.BarContainer",
        "matplotlib.legend",
        "matplotlib.collections",
        "matplotlib.patches",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "six.moves.reduce",
        "__future__.absolute_import",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.streamplot",
        "matplotlib.cbook.is_string_like",
        "matplotlib.cbook.iterable",
        "matplotlib.transforms",
        "matplotlib.transforms",
        "matplotlib.colors",
        "six.moves.zip",
        "six",
        "matplotlib.image",
        "matplotlib.axes._base._AxesBase",
        "matplotlib.container.ErrorbarContainer",
        "matplotlib.container.StemContainer",
        "matplotlib.cbook.STEP_LOOKUP_MAP",
        "__future__.print_function",
        "numpy",
        "math",
        "matplotlib.table",
        "matplotlib.markers",
        "__future__.division",
        "matplotlib.path",
        "matplotlib.mlab",
        "warnings",
        "matplotlib.docstring",
        "matplotlib",
        "matplotlib.cbook.safe_first_element",
        "matplotlib.stackplot",
        "matplotlib.unpack_labeled_data",
        "matplotlib.cbook",
        "matplotlib.axes._base._process_plot_format",
        "numpy.ma",
        "matplotlib.tri",
        "six.moves.zip_longest",
        "matplotlib.quiver",
        "matplotlib.ticker",
        "itertools",
        "matplotlib.contour",
        "matplotlib.text"
    ],
    "/tmp/matplotlib/matplotlib/axes/_base.py": [
        "matplotlib.lines",
        "matplotlib.patches",
        "matplotlib.rcsetup.validate_axisbelow",
        "collections.OrderedDict",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.axis",
        "matplotlib.font_manager",
        "matplotlib.cbook.iterable",
        "matplotlib.transforms",
        "matplotlib.colors",
        "matplotlib.offsetbox.OffsetBox",
        "six",
        "matplotlib.image",
        "matplotlib.spines",
        "matplotlib.artist",
        "numpy",
        "math",
        "__future__.division",
        "matplotlib.cbook.get_label",
        "warnings",
        "matplotlib.artist.allow_rasterization",
        "matplotlib.docstring",
        "matplotlib.scale",
        "matplotlib.cbook.index_of",
        "matplotlib",
        "matplotlib.cbook._check_1d",
        "matplotlib.cbook._string_to_bool",
        "__future__.print_function",
        "matplotlib.cbook",
        "numpy.ma",
        "matplotlib.ticker",
        "itertools",
        "matplotlib.rcsetup.cycler",
        "operator.itemgetter",
        "matplotlib.text"
    ],
    "/tmp/matplotlib/matplotlib/axes/_subplots.py": [
        "matplotlib.projections.process_projection_requirements",
        "__future__.division",
        "matplotlib.axes._axes.Axes",
        "six.moves.map",
        "__future__.unicode_literals",
        "matplotlib.gridspec.SubplotSpec",
        "matplotlib.docstring",
        "__future__.absolute_import",
        "matplotlib.gridspec.GridSpec",
        "matplotlib.artist",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/axis.py": [
        "pytz",
        "datetime",
        "matplotlib.lines",
        "matplotlib.patches",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.font_manager",
        "matplotlib.transforms",
        "six",
        "numpy",
        "__future__.division",
        "warnings",
        "matplotlib.artist.allow_rasterization",
        "matplotlib.scale",
        "matplotlib.units",
        "matplotlib.text",
        "__future__.print_function",
        "matplotlib.cbook",
        "matplotlib.artist",
        "matplotlib.ticker",
        "matplotlib.rcParams"
    ],
    "/tmp/matplotlib/matplotlib/backend_bases.py": [
        "matplotlib.pyplot",
        "matplotlib.collections.QuadMesh",
        "matplotlib.texmanager.TexManager",
        "matplotlib.transforms.TransformedBbox",
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.colors",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.transforms",
        "io",
        "matplotlib.backend_tools",
        "six",
        "contextlib.contextmanager",
        "matplotlib.transforms.Bbox",
        "matplotlib.widgets",
        "matplotlib.path.Path",
        "__future__.division",
        "warnings",
        "matplotlib.get_backend",
        "time",
        "sys",
        "numpy",
        "matplotlib.is_interactive",
        "__future__.print_function",
        "matplotlib.tight_bbox",
        "matplotlib.cbook",
        "matplotlib.cbook.warn_deprecated",
        "matplotlib.textpath",
        "matplotlib.transforms.Affine2D",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/backend_managers.py": [
        "__future__.division",
        "warnings",
        "__future__.unicode_literals",
        "six",
        "matplotlib.rcsetup.validate_stringlist",
        "__future__.absolute_import",
        "matplotlib.cbook",
        "matplotlib.widgets",
        "matplotlib.backend_tools",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/backend_tools.py": [
        "matplotlib._pylab_helpers.Gcf",
        "weakref.WeakKeyDictionary",
        "six",
        "warnings",
        "matplotlib.cbook",
        "matplotlib.rcParams"
    ],
    "/tmp/matplotlib/matplotlib/backends/__init__.py": [
        "__future__.division",
        "inspect",
        "warnings",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_agg.py": [
        "matplotlib.verbose",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.cbook.is_string_like",
        "matplotlib.ft2font.LOAD_NO_HINTING",
        "matplotlib.colors",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        "matplotlib.mathtext.MathTextParser",
        "matplotlib.backends._backend_agg.RendererAgg",
        "matplotlib.backend_bases.RendererBase",
        "matplotlib.transforms.Bbox",
        "numpy",
        "matplotlib.path.Path",
        "math.sin",
        "__future__.division",
        "matplotlib.ft2font.LOAD_DEFAULT",
        "matplotlib.ft2font.LOAD_NO_AUTOHINT",
        "matplotlib.transforms.BboxBase",
        "matplotlib.cbook.restrict_dict",
        "matplotlib.ft2font.LOAD_FORCE_AUTOHINT",
        "matplotlib.font_manager.get_font",
        "matplotlib._png",
        "__future__.print_function",
        "math.cos",
        "matplotlib.figure.Figure",
        "PIL.Image",
        "math.radians",
        "threading",
        "matplotlib.rcParams",
        "matplotlib.font_manager.findfont"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_cairo.py": [
        "__future__.unicode_literals",
        "cairo",
        "__future__.absolute_import",
        "matplotlib.cbook.is_string_like",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        "matplotlib.mathtext.MathTextParser",
        "six",
        "matplotlib.backend_bases.RendererBase",
        "matplotlib.font_manager.ttfFontProperty",
        "numpy",
        "matplotlib.path.Path",
        "__future__.division",
        "warnings",
        "sys",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        "matplotlib.backend_bases.GraphicsContextBase",
        "matplotlib.transforms.Affine2D",
        "gzip"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_gdk.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        "matplotlib.backend_bases.GraphicsContextBase",
        "gtk",
        "matplotlib.backend_bases.RendererBase",
        "numpy",
        "__future__.division",
        "warnings",
        "matplotlib",
        "sys",
        "matplotlib.cbook.restrict_dict",
        "matplotlib.backends._backend_gdk.pixbuf_get_pixels_array",
        "pango",
        "__future__.print_function",
        "matplotlib.cbook.warn_deprecated",
        "matplotlib.figure.Figure",
        "matplotlib.mathtext.MathTextParser",
        "matplotlib.transforms.Affine2D",
        "matplotlib.rcParams"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_gtk.py": [
        "gtk.glade",
        "six",
        "matplotlib.verbose",
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.backend_bases.ShowBase",
        "matplotlib.backend_bases.cursors",
        "matplotlib.cbook.is_string_like",
        "matplotlib.colors",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        "gtk",
        "matplotlib.markers",
        "__future__.division",
        "matplotlib.widgets.SubplotTool",
        "warnings",
        "matplotlib.backends.backend_gdk.RendererGDK",
        "matplotlib",
        "sys",
        "__future__.print_function",
        "matplotlib.cbook",
        "matplotlib.cbook.warn_deprecated",
        "matplotlib.figure.Figure",
        "matplotlib.backend_bases.NavigationToolbar2",
        "matplotlib.cbook.is_writable_file_like",
        "matplotlib.lines",
        "matplotlib.backend_bases.TimerBase",
        "matplotlib.rcParams",
        "gobject",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_gtk3.py": [
        "gi.repository.GLib",
        "matplotlib.verbose",
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "gi.repository.Gtk",
        "__future__.absolute_import",
        "matplotlib.backend_bases.ShowBase",
        "matplotlib.backend_bases.cursors",
        "matplotlib.cbook.is_string_like",
        "gi",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        "six",
        "gi.repository.GObject",
        "__future__.division",
        "matplotlib.widgets.SubplotTool",
        "matplotlib.backend_tools",
        "matplotlib",
        "sys",
        "matplotlib.backend_bases.StatusbarBase",
        "matplotlib.backend_bases.ToolContainerBase",
        "__future__.print_function",
        "matplotlib.backend_managers.ToolManager",
        "matplotlib.figure.Figure",
        "matplotlib.backend_bases.NavigationToolbar2",
        "matplotlib.backend_bases.TimerBase",
        "matplotlib.rcParams",
        "gi.repository.Gdk",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_gtk3agg.py": [
        "__future__.division",
        "matplotlib.figure.Figure",
        "warnings",
        "__future__.unicode_literals",
        ".backend_cairo.cairo",
        "six",
        ".backend_agg",
        "__future__.absolute_import",
        ".backend_gtk3",
        ".backend_cairo.HAS_CAIRO_CFFI",
        "matplotlib.transforms",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_gtk3cairo.py": [
        "__future__.division",
        ".backend_cairo",
        "matplotlib.figure.Figure",
        "__future__.unicode_literals",
        ".backend_cairo.cairo",
        "__future__.absolute_import",
        ".backend_gtk3",
        ".backend_cairo.HAS_CAIRO_CFFI",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_gtkagg.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.backends._gtkagg.agg_to_gtk_drawable",
        "matplotlib.backends.backend_gtk.gtk",
        "matplotlib.backends.backend_gtk.FigureManagerGTK",
        "matplotlib.backends.backend_agg.FigureCanvasAgg",
        "matplotlib.backends.backend_gtk.FigureCanvasGTK",
        "__future__.division",
        "matplotlib",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        "matplotlib.backends.backend_gtk.NavigationToolbar2GTK"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_gtkcairo.py": [
        "__future__.division",
        "gtk",
        "matplotlib.backends.backend_cairo",
        "__future__.unicode_literals",
        "cairo.gtk",
        "__future__.absolute_import",
        "matplotlib.backends.backend_gtk",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_macosx.py": [
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.backend_bases.ShowBase",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        ".backend_agg.FigureCanvasAgg",
        "__future__.division",
        "matplotlib.widgets.SubplotTool",
        "matplotlib",
        ".backend_agg.RendererAgg",
        "matplotlib.backends._macosx",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        "matplotlib.backend_bases.NavigationToolbar2",
        "matplotlib.backend_bases.TimerBase",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_mixed.py": [
        "__future__.division",
        "matplotlib.backends.backend_agg.RendererAgg",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "numpy",
        "__future__.print_function",
        "matplotlib.tight_bbox.process_figure_for_rasterizing"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_nbagg.py": [
        "matplotlib._pylab_helpers.Gcf",
        "matplotlib._pylab_helpers",
        "matplotlib._pylab_helpers.Gcf",
        ".._pylab_helpers.Gcf",
        "six",
        "matplotlib.backends.backend_webagg_core.FigureCanvasWebAggCore",
        "matplotlib.backends.backend_webagg_core.NavigationToolbar2WebAgg",
        "base64.b64encode",
        "matplotlib.backend_bases.ShowBase",
        "io",
        "matplotlib.backend_bases.FigureCanvasBase",
        "uuid.uuid4",
        "IPython.display.Javascript",
        "json",
        "IPython.display.HTML",
        "IPython.kernel.comm.Comm",
        "matplotlib.backends.backend_webagg_core.FigureManagerWebAgg",
        "matplotlib.backends.backend_webagg_core.TimerTornado",
        "matplotlib.is_interactive",
        "matplotlib.figure.Figure",
        "matplotlib.backend_bases.NavigationToolbar2",
        "matplotlib.rcParams",
        "os",
        "IPython.display.display"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_pdf.py": [
        "encodings.cp1252",
        "matplotlib.cbook.is_writable_file_like",
        "matplotlib.ft2font.LOAD_NO_HINTING",
        "matplotlib.ft2font.KERNING_UNFITTED",
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "matplotlib.cbook.get_realpath_and_stat",
        "__future__.absolute_import",
        "datetime.datetime",
        "matplotlib.cbook.maxdict",
        "matplotlib._path",
        "six.unichr",
        "matplotlib.backends.backend_mixed.MixedModeRenderer",
        "matplotlib.backend_bases.FigureCanvasBase",
        "struct",
        "math.floor",
        "matplotlib.backend_bases.GraphicsContextBase",
        "matplotlib.cbook.is_string_like",
        "six",
        "re",
        "matplotlib.backend_bases.RendererBase",
        "numpy",
        "matplotlib.path.Path",
        "matplotlib.afm.AFM",
        "math.pi",
        "math.sin",
        "io.BytesIO",
        "matplotlib.ft2font.FIXED_WIDTH",
        "__future__.division",
        "warnings",
        "matplotlib.rcParams",
        "matplotlib.ttconv",
        "matplotlib.transforms.BboxBase",
        "matplotlib",
        "math.ceil",
        "sys",
        "matplotlib.type1font",
        "matplotlib.font_manager.get_font",
        "codecs",
        "matplotlib._png",
        "__future__.print_function",
        "math.cos",
        "matplotlib.__version__",
        "matplotlib.ft2font.LOAD_NO_SCALE",
        "matplotlib.figure.Figure",
        "zlib",
        "matplotlib.dviread",
        "matplotlib.mathtext.MathTextParser",
        "matplotlib.transforms.Affine2D",
        "matplotlib.backend_bases.FigureManagerBase",
        "matplotlib.ft2font.ITALIC",
        "time",
        "matplotlib.font_manager.is_opentype_cff_font",
        "os",
        "matplotlib.font_manager.findfont",
        "matplotlib.cbook.Bunch"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_pgf.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.compat.subprocess",
        "matplotlib.font_manager",
        "atexit",
        "shutil",
        "matplotlib.backends.backend_mixed.MixedModeRenderer",
        "matplotlib.compat.subprocess.check_output",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        "tempfile",
        "errno",
        "re",
        "matplotlib.backend_bases.RendererBase",
        "matplotlib.path.Path",
        "math",
        "__future__.division",
        "warnings",
        "matplotlib",
        "sys",
        "codecs",
        "matplotlib._png",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        "matplotlib.cbook.is_writable_file_like",
        "weakref",
        "matplotlib.backend_bases.GraphicsContextBase",
        "matplotlib.cbook.is_string_like",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_ps.py": [
        "matplotlib.compat.subprocess.Popen",
        "matplotlib.compat.subprocess.PIPE",
        "matplotlib.ft2font.KERNING_DEFAULT",
        "sets.Set",
        "matplotlib._mathtext_data.uni2type1",
        "matplotlib.verbose",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.cbook.maxdict",
        "io",
        "shutil",
        "matplotlib.cbook.is_string_like",
        "matplotlib.ft2font.LOAD_NO_HINTING",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        "matplotlib.backend_bases.GraphicsContextBase",
        "matplotlib.backends.backend_mixed.MixedModeRenderer",
        "six",
        "binascii",
        "matplotlib.cbook.get_realpath_and_stat",
        "matplotlib.backend_bases.RendererBase",
        "numpy",
        "matplotlib.path.Path",
        "matplotlib.afm.AFM",
        "matplotlib.__version__",
        "__future__.division",
        "matplotlib.cbook.file_requires_unicode",
        "glob",
        "time",
        "sys",
        "matplotlib.font_manager.get_font",
        "re",
        "tempfile.mkstemp",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        "matplotlib.checkdep_ghostscript",
        "six.moves.StringIO",
        "matplotlib.cbook.is_writable_file_like",
        "matplotlib.ttconv.convert_ttf_to_ps",
        "matplotlib.mathtext.MathTextParser",
        "matplotlib.transforms.Affine2D",
        "matplotlib.rcParams",
        "matplotlib._path",
        "os",
        "matplotlib.font_manager.findfont",
        "matplotlib.font_manager.is_opentype_cff_font"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_qt4.py": [
        ".backend_qt5._create_qApp",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".qt_compat.QtWidgets",
        ".backend_qt5.FigureCanvasQT",
        "matplotlib.backend_bases.FigureCanvasBase",
        "__future__.division",
        ".backend_qt5.FigureManagerQT",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        ".qt_compat.QtCore"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_qt4agg.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".backend_qt4.FigureCanvasQT",
        ".backend_agg.FigureCanvasAgg",
        "__future__.division",
        ".backend_qt4.FigureManagerQT",
        "ctypes",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        ".backend_qt5agg.FigureCanvasQTAggBase",
        ".backend_qt4.QtCore"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_qt5.py": [
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".qt_compat.QtWidgets",
        "matplotlib.backend_bases.ShowBase",
        "matplotlib.backend_bases.cursors",
        "six.unichr",
        "matplotlib.cbook.is_string_like",
        "matplotlib.backend_bases.FigureCanvasBase",
        ".qt_compat.QtGui",
        "matplotlib.backend_bases.FigureManagerBase",
        "six",
        "re",
        ".qt_compat.__version__",
        "__future__.division",
        "matplotlib.widgets.SubplotTool",
        "matplotlib",
        "sys",
        "matplotlib.backends.qt_editor.formsubplottool.UiSubplotTool",
        ".qt_compat.QtCore",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        "matplotlib.backend_bases.NavigationToolbar2",
        "signal",
        "matplotlib.backend_bases.TimerBase",
        "matplotlib.backends.qt_editor.figureoptions",
        ".qt_compat.is_pyqt5",
        "os",
        ".qt_compat._getSaveFileName"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_qt5agg.py": [
        ".backend_agg.FigureCanvasAgg",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".backend_qt5.QtGui",
        "six",
        ".backend_qt5.FigureCanvasQT",
        ".qt_compat.QT_API",
        "__future__.division",
        "sys",
        ".backend_qt5.FigureManagerQT",
        "ctypes",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        "traceback",
        ".backend_qt5.QtCore"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_svg.py": [
        "six",
        "collections.OrderedDict",
        "matplotlib.verbose",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.cbook.maxdict",
        "io",
        "six.unichr",
        "matplotlib.backends.backend_mixed.MixedModeRenderer",
        "matplotlib.ft2font.LOAD_NO_HINTING",
        "matplotlib.backend_bases.FigureCanvasBase",
        "uuid",
        "matplotlib.backend_bases.FigureManagerBase",
        "matplotlib.cbook.is_string_like",
        "base64",
        "re",
        "matplotlib.backend_bases.RendererBase",
        "matplotlib.transforms.Affine2D",
        "numpy",
        "matplotlib.path.Path",
        "matplotlib.__version__",
        "__future__.division",
        "matplotlib.transforms.Affine2DBase",
        "matplotlib.font_manager.get_font",
        "codecs",
        "matplotlib._png",
        "matplotlib.mathtext.MathTextParser",
        "__future__.print_function",
        "hashlib.md5",
        "matplotlib.figure.Figure",
        "matplotlib.cbook.is_writable_file_like",
        "matplotlib.colors.rgb2hex",
        "matplotlib.rcParams",
        "gzip",
        "matplotlib.font_manager.findfont",
        "matplotlib._path"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_template.py": [
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.RendererBase",
        "__future__.division",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        "matplotlib.backend_bases.FigureManagerBase",
        "matplotlib.backend_bases.GraphicsContextBase"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_tkagg.py": [
        "six.moves.tkinter_messagebox",
        "six.moves.tkinter_messagebox",
        "six.moves.tkinter_tkfiledialog",
        "six.moves.tkinter_messagebox",
        "six.moves.tkinter_tkfiledialog",
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.backend_bases.ShowBase",
        "six.moves.tkinter",
        "matplotlib.backend_bases.cursors",
        "matplotlib.cbook.is_string_like",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        "six",
        "matplotlib.backends.backend_agg.FigureCanvasAgg",
        "__future__.division",
        "matplotlib.widgets.SubplotTool",
        "matplotlib.backend_tools",
        "matplotlib",
        "sys",
        "matplotlib.backend_bases.StatusbarBase",
        "matplotlib.backend_bases.ToolContainerBase",
        "__future__.print_function",
        "matplotlib.backend_managers.ToolManager",
        "matplotlib.backends.tkagg",
        "matplotlib.figure.Figure",
        "matplotlib.backend_bases.NavigationToolbar2",
        "matplotlib.backend_bases.TimerBase",
        "os.path",
        "matplotlib.backends.windowing"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_webagg.py": [
        "webbrowser",
        "tornado.template",
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "random",
        "__future__.absolute_import",
        "matplotlib.backend_bases",
        "errno",
        "six",
        "json",
        "__future__.division",
        "tornado.websocket",
        ".backend_webagg_core.TimerTornado",
        "sys",
        "matplotlib",
        ".backend_webagg_core",
        "__future__.print_function",
        "socket",
        "matplotlib.figure.Figure",
        "threading",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_webagg_core.py": [
        "matplotlib.pyplot.show",
        "warnings",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "datetime",
        "io",
        "matplotlib.backend_bases",
        "json",
        "numpy",
        "__future__.division",
        "tornado",
        "matplotlib.backends.backend_agg",
        "matplotlib._png",
        "__future__.print_function",
        "matplotlib.figure.Figure",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_wx.py": [
        "traceback",
        "matplotlib._pylab_helpers.Gcf",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.backend_bases.ShowBase",
        "matplotlib.backend_bases.cursors",
        "matplotlib.cbook.is_string_like",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.backend_bases.FigureManagerBase",
        "matplotlib.backend_bases.GraphicsContextBase",
        "matplotlib.cbook.warn_deprecated",
        "matplotlib.backend_bases.RendererBase",
        "matplotlib.backend_bases._has_pil",
        ".wx_compat",
        "matplotlib.path.Path",
        "math",
        "__future__.division",
        "matplotlib.widgets.SubplotTool",
        "warnings",
        "matplotlib",
        "sys",
        "__future__.print_function",
        "wx",
        "matplotlib.figure.Figure",
        "matplotlib.backend_bases.NavigationToolbar2",
        "matplotlib.cbook.is_writable_file_like",
        "matplotlib.backend_bases.TimerBase",
        "weakref",
        "matplotlib.transforms.Affine2D",
        "matplotlib.rcParams",
        "os.path",
        "pdb"
    ],
    "/tmp/matplotlib/matplotlib/backends/backend_wxagg.py": [
        ".backend_wx.FigureCanvasWx",
        "__future__.unicode_literals",
        ".backend_wx.DEBUG_MSG",
        "__future__.absolute_import",
        ".backend_wx.FigureManagerWx",
        ".backend_wx.FigureFrameWx",
        ".backend_wx",
        ".backend_agg.FigureCanvasAgg",
        "__future__.print_function",
        ".wx_compat",
        "__future__.division",
        "matplotlib",
        ".backend_wx.NavigationToolbar2Wx",
        "wx",
        "matplotlib.figure.Figure"
    ],
    "/tmp/matplotlib/matplotlib/backends/qt4_compat.py": [
        "matplotlib.cbook.mplDeprecation",
        "warnings"
    ],
    "/tmp/matplotlib/matplotlib/backends/qt_compat.py": [
        "matplotlib.verbose",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "PySide.QtGui",
        "__future__.division",
        "sys",
        "sip",
        "__future__.print_function",
        "PySide.QtCore",
        "PySide.__version_info__",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/backends/qt_editor/__init__.py": [
        "__future__.unicode_literals",
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/matplotlib/matplotlib/backends/qt_editor/figureoptions.py": [
        "__future__.division",
        "matplotlib.colors",
        "matplotlib.backends.qt_compat.QtGui",
        "matplotlib.cm",
        "__future__.unicode_literals",
        "os.path",
        "matplotlib.backends.qt_editor.formlayout",
        "__future__.absolute_import",
        "re",
        "matplotlib",
        "__future__.print_function",
        "matplotlib.markers"
    ],
    "/tmp/matplotlib/matplotlib/backends/qt_editor/formlayout.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.backends.qt_compat.QtWidgets",
        "matplotlib.colors",
        "matplotlib.backends.qt_compat.QtGui",
        "datetime",
        "six",
        "__future__.division",
        "warnings",
        "copy",
        "__future__.print_function",
        "matplotlib.backends.qt_compat.QtCore"
    ],
    "/tmp/matplotlib/matplotlib/backends/qt_editor/formsubplottool.py": [
        "matplotlib.backends.qt_compat.QtCore",
        "matplotlib.backends.qt_compat.QtWidgets"
    ],
    "/tmp/matplotlib/matplotlib/backends/tkagg.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "six.moves.tkinter",
        "numpy",
        "matplotlib.backends._tkagg",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/backends/windowing.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.rcParams",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/backends/wx_compat.py": [
        "__future__.unicode_literals",
        "distutils.version.LooseVersion",
        "wx",
        "__future__.division",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/bezier.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "operator.xor",
        "numpy",
        "matplotlib.path.Path",
        "__future__.division",
        "warnings",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/blocking_input.py": [
        "matplotlib.lines",
        "__future__.division",
        "matplotlib.verbose",
        "warnings",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.cbook.is_sequence_of_strings",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/cbook.py": [
        "matplotlib",
        "bz2",
        "matplotlib",
        "fnmatch",
        "os.path",
        "matplotlib.compat.subprocess.Popen",
        "matplotlib.compat.subprocess.PIPE",
        ".pylab.figure",
        "gc",
        "types.FrameType",
        "functools",
        "textwrap",
        "__future__.absolute_import",
        "datetime",
        "collections",
        "__future__.division",
        "functools.reduce",
        "weakref.WeakKeyDictionary",
        "re",
        "weakref.ref",
        "__future__.print_function",
        "traceback",
        "os",
        "six.moves.zip",
        "errno",
        "locale",
        "numpy.ma",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "io",
        "six",
        "numpy",
        "itertools.repeat",
        "warnings",
        "glob",
        "sys",
        "types",
        "time",
        "gzip"
    ],
    "/tmp/matplotlib/matplotlib/cm.py": [
        "six",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.colors",
        "matplotlib._cm_listed.cmaps",
        "numpy",
        "warnings",
        "__future__.division",
        "matplotlib",
        "matplotlib._cm._deprecation_datad",
        "__future__.print_function",
        "matplotlib.cbook",
        "numpy.ma",
        "matplotlib._cm.datad"
    ],
    "/tmp/matplotlib/matplotlib/collections.py": [
        "matplotlib.patheffects.PathEffectRenderer",
        "matplotlib.lines",
        "matplotlib.cm",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.transforms",
        "matplotlib.colors",
        "fractions.gcd",
        "six.moves.zip",
        "six",
        "numpy",
        "__future__.division",
        "matplotlib.path",
        "matplotlib.mlab",
        "warnings",
        "matplotlib.artist.allow_rasterization",
        "matplotlib",
        "matplotlib.docstring",
        "__future__.print_function",
        "matplotlib.cbook",
        "numpy.ma",
        "matplotlib.artist",
        "matplotlib._path"
    ],
    "/tmp/matplotlib/matplotlib/colorbar.py": [
        "matplotlib.patches",
        "matplotlib.cm",
        "matplotlib.gridspec",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.colors",
        "matplotlib.contour",
        "matplotlib.transforms",
        "six.moves.zip",
        "six",
        "matplotlib.collections",
        "matplotlib.artist",
        "numpy",
        "__future__.division",
        "matplotlib.path",
        "warnings",
        "matplotlib",
        "matplotlib.docstring",
        "matplotlib.ticker",
        "__future__.print_function",
        "matplotlib.cbook"
    ],
    "/tmp/matplotlib/matplotlib/colors.py": [
        "matplotlib.rcParams",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "._color_data.CSS4_COLORS",
        "six.moves.zip",
        "six",
        "re",
        "numpy",
        "__future__.division",
        "warnings",
        "._color_data.BASE_COLORS",
        "__future__.print_function",
        "._color_data.TABLEAU_COLORS",
        "matplotlib.cbook",
        "numpy.ma",
        "._color_data.XKCD_COLORS"
    ],
    "/tmp/matplotlib/matplotlib/compat/__init__.py": [],
    "/tmp/matplotlib/matplotlib/compat/subprocess.py": [
        "__future__.absolute_import",
        "subprocess",
        "sys",
        "os",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/container.py": [
        "__future__.division",
        "matplotlib.cbook",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "matplotlib.artist",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/contour.py": [
        "matplotlib.patches",
        "matplotlib.cm",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.colors",
        "matplotlib.font_manager",
        "matplotlib.transforms",
        "matplotlib.collections",
        "six",
        "matplotlib.blocking_input.BlockingContourLabeler",
        "matplotlib.text",
        "numpy",
        "__future__.division",
        "matplotlib.path",
        "matplotlib.mlab",
        "warnings",
        "matplotlib",
        "matplotlib.mathtext",
        "matplotlib.ticker",
        "__future__.print_function",
        "matplotlib.cbook",
        "numpy.ma",
        "matplotlib._contour",
        "matplotlib.texmanager",
        "matplotlib._cntr"
    ],
    "/tmp/matplotlib/matplotlib/dates.py": [
        "pytz",
        "dateutil.rrule.WE",
        "dateutil.rrule.TU",
        "dateutil.rrule.MONTHLY",
        "__future__.absolute_import",
        "datetime",
        "dateutil.rrule.SECONDLY",
        "matplotlib.units",
        "matplotlib.ticker",
        "matplotlib.cbook",
        "dateutil.relativedelta.relativedelta",
        "dateutil.rrule.rrule",
        "dateutil.rrule.MINUTELY",
        "dateutil.parser",
        "re",
        "math",
        "matplotlib",
        "__future__.print_function",
        "dateutil.rrule.WEEKLY",
        "dateutil.rrule.MO",
        "dateutil.rrule.FR",
        "dateutil.rrule.HOURLY",
        "six.moves.zip",
        "dateutil.rrule.YEARLY",
        "dateutil.rrule.SU",
        "dateutil.rrule.SA",
        "__future__.division",
        "__future__.unicode_literals",
        "dateutil.rrule.DAILY",
        "six",
        "dateutil.rrule.TH",
        "numpy",
        "warnings",
        "time",
        "matplotlib.rcParams"
    ],
    "/tmp/matplotlib/matplotlib/delaunay/__init__.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/delaunay/interpolate.py": [
        "matplotlib._delaunay.nn_interpolate_unstructured",
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib._delaunay.linear_interpolate_grid",
        "numpy",
        "matplotlib._delaunay.compute_planes",
        "matplotlib._delaunay.nn_interpolate_grid",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/delaunay/testfuncs.py": [
        "matplotlib",
        "matplotlib.pylab",
        "matplotlib.pylab",
        "matplotlib",
        "matplotlib.pylab",
        "matplotlib",
        "matplotlib.pylab",
        "matplotlib",
        "matplotlib.pylab",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "six",
        ".triangulate.Triangulation",
        "numpy",
        "__future__.division",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/delaunay/triangulate.py": [
        "numpy.dual.lstsq",
        "__future__.division",
        ".interpolate.LinearInterpolator",
        "matplotlib.cbook.warn_deprecated",
        "six.moves.zip",
        "warnings",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".interpolate.NNInterpolator",
        "numpy",
        "matplotlib._delaunay.delaunay",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/docstring.py": [
        "__future__.division",
        "matplotlib.cbook",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "types",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/dviread.py": [
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.compat.subprocess",
        "struct",
        "six",
        "numpy",
        "matplotlib.cbook",
        "__future__.division",
        "matplotlib",
        "sys",
        "__future__.print_function",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/figure.py": [
        "matplotlib.backends.backend_webagg",
        "warnings",
        "matplotlib._pylab_helpers",
        "matplotlib.pyplot",
        "warnings",
        "matplotlib._pylab_helpers",
        ".tight_layout.get_renderer",
        ".tight_layout.get_subplotspec_list",
        ".tight_layout.get_tight_layout_figure",
        "matplotlib.image.FigureImage",
        "matplotlib.transforms.TransformedBbox",
        "__future__.unicode_literals",
        "matplotlib.axes.Axes",
        "__future__.absolute_import",
        "matplotlib.axes.SubplotBase",
        "matplotlib.cbook.iterable",
        "matplotlib.transforms.BboxTransformTo",
        "six",
        "matplotlib.patches.Rectangle",
        "matplotlib.artist",
        "numpy",
        "matplotlib.cbook.Stack",
        "matplotlib.transforms.Bbox",
        "matplotlib.axes.subplot_class_factory",
        "__future__.division",
        "matplotlib.colorbar",
        "warnings",
        "matplotlib.artist.allow_rasterization",
        "matplotlib.docstring",
        "matplotlib.projections.get_projection_names",
        "__future__.print_function",
        "matplotlib.cbook",
        "matplotlib.projections.process_projection_requirements",
        "matplotlib.__version__",
        "matplotlib.text.Text",
        "matplotlib.text._process_text_args",
        "matplotlib.legend.Legend",
        "matplotlib.image",
        "matplotlib.transforms.Affine2D",
        "matplotlib.blocking_input.BlockingKeyMouseInput",
        "matplotlib.artist.Artist",
        "matplotlib.rcParams",
        "matplotlib.blocking_input.BlockingMouseInput",
        "matplotlib.backend_bases.NonGuiException",
        "operator.itemgetter"
    ],
    "/tmp/matplotlib/matplotlib/finance.py": [
        "matplotlib.verbose",
        "matplotlib.cbook.warn_deprecated",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "matplotlib.collections.PolyCollection",
        "__future__.absolute_import",
        "datetime",
        "contextlib",
        "matplotlib.cbook.iterable",
        "matplotlib.colors",
        "matplotlib.lines.TICKRIGHT",
        "six.moves.zip",
        "six",
        "matplotlib.lines.TICKLEFT",
        "matplotlib.get_cachedir",
        "matplotlib.patches.Rectangle",
        "numpy",
        "__future__.division",
        "matplotlib.dates.date2num",
        "warnings",
        "six.moves.urllib.request.urlopen",
        "matplotlib.cbook.mkdirs",
        "matplotlib.collections.LineCollection",
        "matplotlib.lines.Line2D",
        "__future__.print_function",
        "hashlib.md5",
        "hashlib",
        "matplotlib.transforms.Affine2D",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/font_manager.py": [
        "six.moves.winreg",
        "six.moves.winreg",
        "matplotlib.fontconfig_pattern.generate_fontconfig_pattern",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.compat.subprocess",
        "matplotlib.cbook.is_string_like",
        "matplotlib.afm",
        "six",
        "matplotlib.get_cachedir",
        "__future__.division",
        "matplotlib.fontconfig_pattern.parse_fontconfig_pattern",
        "warnings",
        "threading.Timer",
        "sys",
        "matplotlib",
        "__future__.print_function",
        "matplotlib.cbook",
        "six.moves.cPickle",
        "matplotlib.rcParams",
        "matplotlib.ft2font",
        "os",
        "functools32.lru_cache",
        "collections.Iterable"
    ],
    "/tmp/matplotlib/matplotlib/fontconfig_pattern.py": [
        "pyparsing.Regex",
        "pyparsing.ZeroOrMore",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "pyparsing.Literal",
        "pyparsing.StringEnd",
        "pyparsing.Suppress",
        "re",
        "pyparsing.Optional",
        "__future__.division",
        "pyparsing.ParseException",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/gridspec.py": [
        "matplotlib._pylab_helpers",
        "matplotlib.axes.SubplotBase",
        "copy",
        "matplotlib.figure.SubplotParams",
        ".tight_layout.get_subplotspec_list",
        ".tight_layout.get_renderer",
        ".tight_layout.get_tight_layout_figure",
        "matplotlib.figure.SubplotParams",
        "__future__.division",
        "six.moves.zip",
        "matplotlib.transforms",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "matplotlib",
        "warnings",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/hatch.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "numpy",
        "matplotlib.path.Path",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/image.py": [
        "matplotlib.figure.Figure",
        "matplotlib.backends.backend_agg.FigureCanvasAgg",
        "matplotlib.backends.backend_svg.FigureCanvasSVG",
        "matplotlib.pyplot",
        "matplotlib.figure.Figure",
        "PIL.Image",
        "matplotlib.cm",
        "matplotlib.transforms.TransformedBbox",
        "__future__.unicode_literals",
        "matplotlib.transforms.BboxTransform",
        "__future__.absolute_import",
        "matplotlib.transforms.IdentityTransform",
        "matplotlib.colors",
        "six",
        "matplotlib._image",
        "six.moves.urllib.request.urlopen",
        "matplotlib.transforms.Bbox",
        "matplotlib.artist",
        "numpy",
        "io.BytesIO",
        "__future__.division",
        "matplotlib.artist.allow_rasterization",
        "math.ceil",
        "matplotlib._png",
        "__future__.print_function",
        "matplotlib.cbook",
        "matplotlib.transforms.BboxBase",
        "six.moves.urllib.parse.urlparse",
        "matplotlib.transforms.Affine2D",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/legend.py": [
        "matplotlib.axes.Axes",
        "matplotlib.figure.Figure",
        "matplotlib.container.BarContainer",
        "matplotlib.transforms.TransformedBbox",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "matplotlib.patches.FancyBboxPatch",
        "matplotlib.collections.PolyCollection",
        "__future__.absolute_import",
        "matplotlib.cbook.silent_list",
        "matplotlib.cbook.is_string_like",
        "matplotlib.patches.Rectangle",
        "matplotlib.collections.PathCollection",
        "matplotlib.offsetbox.TextArea",
        "six",
        "matplotlib.container.ErrorbarContainer",
        "matplotlib.container.StemContainer",
        "matplotlib.font_manager.FontProperties",
        "matplotlib.cbook.iterable",
        "matplotlib.offsetbox.DraggableOffsetBox",
        "numpy",
        "matplotlib.patches.Shadow",
        "matplotlib.transforms.Bbox",
        "__future__.division",
        "matplotlib.offsetbox.DrawingArea",
        "warnings",
        "matplotlib.artist.allow_rasterization",
        "matplotlib.patches.Patch",
        "matplotlib.collections.LineCollection",
        "matplotlib.transforms.BboxTransformTo",
        "matplotlib.transforms.BboxTransformFrom",
        "matplotlib.lines.Line2D",
        "__future__.print_function",
        "matplotlib.transforms.BboxBase",
        "matplotlib.collections.CircleCollection",
        "matplotlib.collections.RegularPolyCollection",
        "matplotlib.offsetbox.HPacker",
        "matplotlib.cbook.safezip",
        "matplotlib.artist.Artist",
        "matplotlib.rcParams",
        ".legend_handler",
        "matplotlib.offsetbox.VPacker"
    ],
    "/tmp/matplotlib/matplotlib/legend_handler.py": [
        "matplotlib.collections",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.patches.Rectangle",
        "matplotlib.colors",
        "six.moves.zip",
        "numpy",
        "__future__.division",
        "matplotlib.lines.Line2D",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/lines.py": [
        "matplotlib.patheffects.PathEffectRenderer",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".transforms.TransformedPath",
        ".cbook.is_string_like",
        ".cbook.iterable",
        ".transforms.IdentityTransform",
        ".colors",
        "matplotlib.markers.MarkerStyle",
        "six",
        ".transforms.Bbox",
        "numpy",
        ".path.Path",
        "__future__.division",
        "warnings",
        ".artist.allow_rasterization",
        ".cbook.pts_to_midstep",
        "matplotlib.docstring",
        ".cbook.is_numlike",
        ".cbook.pts_to_prestep",
        "__future__.print_function",
        ".cbook.is_hashable",
        "numpy.ma",
        ".artist",
        ".cbook.ls_mapper_r",
        ".cbook.ls_mapper",
        ".cbook.pts_to_poststep",
        ".artist.Artist",
        "matplotlib.rcParams",
        "matplotlib._path"
    ],
    "/tmp/matplotlib/matplotlib/markers.py": [
        "matplotlib.text.TextPath",
        "matplotlib.font_manager.FontProperties",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        ".cbook.is_string_like",
        ".cbook.iterable",
        ".transforms.IdentityTransform",
        "six",
        "numpy",
        ".path.Path",
        "__future__.division",
        ".cbook.is_math_text",
        ".cbook.is_numlike",
        "__future__.print_function",
        ".transforms.Affine2D",
        "matplotlib.rcParams"
    ],
    "/tmp/matplotlib/matplotlib/mathtext.py": [
        "matplotlib.backends.backend_agg",
        "matplotlib.figure",
        "matplotlib.backends.backend_agg",
        "pyparsing.ZeroOrMore",
        "__future__.absolute_import",
        "pyparsing.Forward",
        "pyparsing",
        "pyparsing.ParseBaseException",
        "matplotlib.ft2font.KERNING_DEFAULT",
        "pyparsing.Optional",
        "__future__.division",
        "math.ceil",
        "matplotlib.font_manager.get_font",
        "pyparsing.oneOf",
        "pyparsing.ParserElement",
        "matplotlib._mathtext_data.stix_virtual_fonts",
        "sets.Set",
        "matplotlib.ft2font.LOAD_NO_HINTING",
        "matplotlib.cbook.get_realpath_and_stat",
        "pyparsing.ParseFatalException",
        "matplotlib.cbook.is_string_like",
        "pyparsing.Suppress",
        "matplotlib.afm.AFM",
        "matplotlib._mathtext_data.tex2uni",
        "__future__.print_function",
        "pyparsing.FollowedBy",
        "matplotlib._mathtext_data.latex_to_standard",
        "os",
        "matplotlib.cbook.Bunch",
        "pyparsing.Regex",
        "pyparsing.Group",
        "matplotlib._mathtext_data.latex_to_cmex",
        "pyparsing.Literal",
        "pyparsing.StringEnd",
        "pyparsing.Combine",
        "pyparsing.Empty",
        "matplotlib.colors",
        "matplotlib._mathtext_data.latex_to_bakoma",
        "matplotlib.font_manager.FontProperties",
        "warnings.warn",
        "matplotlib._png",
        "unicodedata",
        "pyparsing.OneOrMore",
        "__future__.unicode_literals",
        "matplotlib.cbook.maxdict",
        "six.unichr",
        "numpy.inf",
        "six",
        "matplotlib.get_data_path",
        "numpy",
        "matplotlib.ft2font.FT2Image",
        "pyparsing.QuotedString",
        "numpy.isinf",
        "matplotlib.rcParams",
        "matplotlib.font_manager.findfont"
    ],
    "/tmp/matplotlib/matplotlib/mlab.py": [
        "numpy.ma.mrecords",
        "datetime",
        "dateutil.parser",
        "dateutil.parser",
        "dateutil.parser",
        ".tri.LinearTriInterpolator",
        ".tri.Triangulation",
        "mpl_toolkits.natgrid._natgrid",
        "__future__.absolute_import",
        "matplotlib.path.Path",
        "__future__.division",
        "matplotlib.cbook",
        "math",
        "__future__.print_function",
        "os",
        "operator",
        "six.moves.zip",
        "copy",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "six",
        "numpy",
        "csv",
        "six.moves.map",
        "warnings",
        "matplotlib.docstring"
    ],
    "/tmp/matplotlib/matplotlib/offsetbox.py": [
        ".cbook._InstanceMethodPickler",
        "inspect",
        ".cbook._InstanceMethodPickler",
        "matplotlib.transforms.TransformedBbox",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "matplotlib.patches.FancyBboxPatch",
        "__future__.absolute_import",
        "matplotlib.image.BboxImage",
        "matplotlib.transforms",
        "six.moves.zip",
        "matplotlib.text._AnnotationBase",
        "six",
        "matplotlib.patches.FancyArrowPatch",
        "matplotlib.font_manager.FontProperties",
        "matplotlib.transforms.Bbox",
        "matplotlib.artist",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.path",
        "warnings",
        "matplotlib.docstring",
        "matplotlib.text",
        "__future__.print_function",
        "matplotlib.transforms.BboxBase",
        "matplotlib.rcParams",
        "matplotlib.patches.bbox_artist"
    ],
    "/tmp/matplotlib/matplotlib/patches.py": [
        "warnings",
        "matplotlib.patheffects.PathEffectRenderer",
        "inspect",
        "matplotlib.cbook",
        "matplotlib.cbook",
        "matplotlib.cbook",
        "matplotlib.bezier.get_normal_points",
        ".bezier.NonIntersectingPathException",
        ".bezier.NonIntersectingPathException",
        "matplotlib.patheffects.PathEffectRenderer",
        "matplotlib.lines",
        "six.moves.map",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.colors",
        "matplotlib.transforms",
        "matplotlib.bezier.make_wedged_bezier2",
        "six.moves.zip",
        "matplotlib.bezier.get_cos_sin",
        "six",
        "numpy",
        "matplotlib.path.Path",
        "matplotlib.bezier.inside_circle",
        "math",
        "__future__.division",
        "matplotlib.bezier.split_bezier_intersecting_with_closedpath",
        "matplotlib.artist.allow_rasterization",
        "matplotlib.bezier.make_path_regular",
        "matplotlib",
        "matplotlib.docstring",
        "matplotlib.bezier.get_intersection",
        "__future__.print_function",
        "matplotlib.cbook",
        "matplotlib.artist",
        "matplotlib.bezier.get_parallels",
        "matplotlib.bezier.concatenate_paths",
        "matplotlib.bezier.split_path_inout"
    ],
    "/tmp/matplotlib/matplotlib/path.py": [
        "copy",
        ".transforms.Bbox",
        ".transforms.BboxTransformTo",
        "matplotlib.hatch.get_path",
        ".transforms.Bbox",
        ".transforms.Affine2D",
        ".transforms.Bbox",
        ".cbook.deprecated",
        "__future__.division",
        "numpy.ma",
        "matplotlib.rcParams",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "weakref.WeakValueDictionary",
        "matplotlib.cbook.maxdict",
        "matplotlib.cbook.simple_linear_interpolation",
        "numpy",
        "__future__.print_function",
        "matplotlib._path"
    ],
    "/tmp/matplotlib/matplotlib/patheffects.py": [
        "__future__.division",
        "matplotlib.colors",
        "matplotlib.patches",
        "__future__.unicode_literals",
        "six",
        "matplotlib.transforms",
        "__future__.absolute_import",
        "matplotlib.backend_bases.RendererBase",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/projections/__init__.py": [
        "__future__.division",
        ".geo.LambertAxes",
        "__future__.unicode_literals",
        ".geo.MollweideAxes",
        "six",
        "__future__.absolute_import",
        ".polar.PolarAxes",
        "matplotlib.axes",
        ".geo.HammerAxes",
        ".geo.AitoffAxes",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/projections/geo.py": [
        "__future__.unicode_literals",
        "matplotlib.axes.Axes",
        "matplotlib.ticker.NullLocator",
        "matplotlib.transforms.Transform",
        "__future__.absolute_import",
        "matplotlib.axis",
        "matplotlib.patches.Circle",
        "matplotlib.ticker.Formatter",
        "matplotlib.ticker.NullFormatter",
        "matplotlib.transforms.BboxTransformTo",
        "matplotlib.spines",
        "numpy",
        "matplotlib.path.Path",
        "__future__.division",
        "matplotlib",
        "__future__.print_function",
        "numpy.ma",
        "matplotlib.transforms.Affine2D",
        "matplotlib.ticker.FixedLocator"
    ],
    "/tmp/matplotlib/matplotlib/projections/polar.py": [
        "__future__.unicode_literals",
        "matplotlib.axes.Axes",
        "matplotlib.transforms.Transform",
        "__future__.absolute_import",
        "matplotlib.axis",
        "matplotlib.patches.Circle",
        "matplotlib.ticker.Formatter",
        "matplotlib.transforms.IdentityTransform",
        "matplotlib.transforms.BboxTransformTo",
        "matplotlib.spines",
        "matplotlib.transforms.Bbox",
        "numpy",
        "matplotlib.path.Path",
        "math",
        "__future__.division",
        "warnings",
        "matplotlib.docstring",
        "matplotlib",
        "matplotlib.transforms.TransformWrapper",
        "__future__.print_function",
        "matplotlib.cbook",
        "matplotlib.ticker.FormatStrFormatter",
        "matplotlib.ticker.Locator",
        "matplotlib.transforms.Affine2D",
        "matplotlib.transforms.Affine2DBase",
        "matplotlib.transforms.ScaledTranslation"
    ],
    "/tmp/matplotlib/matplotlib/pylab.py": [
        "six",
        "__future__.absolute_import",
        "__future__.print_function",
        "__future__.division",
        "__future__.unicode_literals",
        "warnings"
    ],
    "/tmp/matplotlib/matplotlib/pyplot.py": [
        "PyQt5.QtWidgets",
        "PyQt4.QtGui",
        "gobject",
        "gi.repository.GObject",
        "wx",
        "IPython.core.pylabtools.backend2gui",
        "IPython.get_ipython",
        "IPython.get_ipython",
        "matplotlib.backends.pylab_setup",
        "time",
        "matplotlib.patheffects",
        "inspect",
        "re",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.cbook.warn_deprecated",
        "matplotlib.gridspec.GridSpec",
        "__future__.absolute_import",
        "matplotlib.backend_bases.FigureCanvasBase",
        "matplotlib.projections.PolarAxes",
        "matplotlib.mlab",
        "matplotlib.get_backend",
        "numpy",
        "matplotlib.cbook.is_numlike",
        "matplotlib.cbook.is_string_like",
        "matplotlib.artist.Artist",
        "matplotlib._pylab_helpers",
        "matplotlib.colorbar",
        "matplotlib.cbook._string_to_bool",
        "matplotlib.artist.setp",
        "matplotlib.cbook.deprecated",
        "matplotlib.image.imsave",
        "matplotlib.cm",
        "matplotlib.axes.Axes",
        "matplotlib.cbook.silent_list",
        "matplotlib.figure.figaspect",
        "__future__.print_function",
        "matplotlib.rcsetup.interactive_bk",
        "__future__.division",
        "__future__.unicode_literals",
        "six",
        "matplotlib.widgets.SubplotTool",
        "warnings",
        "matplotlib.docstring",
        "sys",
        "matplotlib.figure.Figure",
        "matplotlib.backends.pylab_setup",
        "matplotlib.rcParams",
        "matplotlib.image.imread"
    ],
    "/tmp/matplotlib/matplotlib/quiver.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.cbook.delete_masked_points",
        "matplotlib.transforms",
        "matplotlib.font_manager",
        "six",
        "matplotlib.artist",
        "numpy",
        "math",
        "__future__.division",
        "matplotlib.patches.CirclePolygon",
        "matplotlib.artist.allow_rasterization",
        "matplotlib.docstring",
        "matplotlib.text",
        "__future__.print_function",
        "matplotlib.cbook",
        "numpy.ma",
        "matplotlib.collections",
        "weakref"
    ],
    "/tmp/matplotlib/matplotlib/rcsetup.py": [
        "sys.modules",
        "__future__.absolute_import",
        "__future__.division",
        "matplotlib.colors.is_color_like",
        "functools.reduce",
        "collections",
        "re",
        "cycler.Cycler",
        "__future__.print_function",
        "os",
        "operator",
        "matplotlib.fontconfig_pattern.parse_fontconfig_pattern",
        "__future__.unicode_literals",
        "six",
        "warnings",
        "cycler.cycler"
    ],
    "/tmp/matplotlib/matplotlib/sankey.py": [
        "matplotlib.pyplot",
        "matplotlib.verbose",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.cbook.iterable",
        "six.moves.zip",
        "six",
        "numpy",
        "matplotlib.path.Path",
        "__future__.division",
        "matplotlib.docstring",
        "matplotlib.patches.PathPatch",
        "__future__.print_function",
        "matplotlib.transforms.Affine2D",
        "matplotlib.rcParams",
        "matplotlib.cbook.Bunch"
    ],
    "/tmp/matplotlib/matplotlib/scale.py": [
        "matplotlib.ticker.ScalarFormatter",
        "matplotlib.ticker.LogitLocator",
        "__future__.unicode_literals",
        "matplotlib.ticker.LogFormatterSciNotation",
        "matplotlib.ticker.NullLocator",
        "matplotlib.transforms.Transform",
        "__future__.absolute_import",
        "matplotlib.transforms.IdentityTransform",
        "matplotlib.ticker.NullFormatter",
        "six",
        "numpy",
        "matplotlib.ticker.LogitFormatter",
        "matplotlib.cbook.dedent",
        "__future__.division",
        "matplotlib.docstring",
        "matplotlib.ticker.LogLocator",
        "matplotlib.ticker.SymmetricalLogLocator",
        "matplotlib.ticker.AutoLocator",
        "__future__.print_function",
        "numpy.ma"
    ],
    "/tmp/matplotlib/matplotlib/sphinxext/__init__.py": [
        "__future__.unicode_literals",
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/matplotlib/matplotlib/sphinxext/mathmpl.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.mathtext.MathTextParser",
        "docutils.parsers.rst.directives",
        "__future__.print_function",
        "docutils.nodes",
        "__future__.division",
        "warnings",
        "hashlib.md5",
        "sys",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/sphinxext/only_directives.py": [
        "docutils.nodes.Body",
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "docutils.nodes.Element",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/sphinxext/plot_directive.py": [
        "cStringIO",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib._pylab_helpers",
        "io",
        "shutil",
        "jinja",
        "six",
        "re",
        "docutils.parsers.rst.directives",
        "os.path.relpath",
        "__future__.division",
        "matplotlib.pyplot",
        "warnings",
        "textwrap",
        "matplotlib",
        "sys",
        "jinja2",
        "__future__.print_function",
        "matplotlib.cbook",
        "sphinx",
        "docutils.parsers.rst.directives.images.Image",
        "traceback",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/sphinxext/tests/__init__.py": [],
    "/tmp/matplotlib/matplotlib/sphinxext/tests/test_tinypages.py": [
        "os.path.isdir",
        "nose.tools.assert_true",
        "os.path.dirname",
        "tempfile",
        "nose.SkipTest",
        "subprocess.Popen",
        "subprocess.PIPE",
        "subprocess.call",
        "os.path.join",
        "shutil"
    ],
    "/tmp/matplotlib/matplotlib/sphinxext/tests/tinypages/conf.py": [
        "distutils.version.LooseVersion",
        "os.path.abspath",
        "sys",
        "os.path.join",
        "sphinx"
    ],
    "/tmp/matplotlib/matplotlib/spines.py": [
        "__future__.division",
        "matplotlib.cbook",
        "matplotlib.path",
        "matplotlib.transforms",
        "__future__.unicode_literals",
        "matplotlib.docstring",
        "__future__.absolute_import",
        "matplotlib.artist.allow_rasterization",
        "matplotlib.patches",
        "matplotlib",
        "warnings",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/stackplot.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "six",
        "__future__.absolute_import",
        "numpy",
        "cycler.cycler",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/streamplot.py": [
        "matplotlib.lines",
        "matplotlib.cm",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.colors",
        "matplotlib.patches",
        "numpy",
        "__future__.division",
        "matplotlib",
        "__future__.print_function",
        "matplotlib.collections"
    ],
    "/tmp/matplotlib/matplotlib/style/__init__.py": [
        "__future__.absolute_import"
    ],
    "/tmp/matplotlib/matplotlib/style/core.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "contextlib",
        "matplotlib.rc_params_from_file",
        "six",
        "re",
        "__future__.division",
        "warnings",
        "matplotlib",
        "__future__.print_function",
        "matplotlib.cbook",
        "os",
        "matplotlib.rcParamsDefault"
    ],
    "/tmp/matplotlib/matplotlib/table.py": [
        "__future__.division",
        "warnings",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "six",
        "matplotlib.docstring",
        "__future__.absolute_import",
        ".artist.allow_rasterization",
        ".patches.Rectangle",
        ".artist.Artist",
        ".text.Text",
        "matplotlib.path.Path",
        ".artist",
        ".cbook.is_string_like",
        "__future__.print_function",
        ".transforms.Bbox"
    ],
    "/tmp/matplotlib/matplotlib/testing/__init__.py": [
        "locale",
        "warnings",
        "__future__.division",
        "matplotlib.use",
        "warnings",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "contextlib.contextmanager",
        "matplotlib.cbook.iterable",
        "matplotlib.rcParams",
        "matplotlib.rcdefaults",
        "matplotlib.cbook.is_string_like",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/testing/compare.py": [
        "matplotlib.checkdep_ghostscript",
        "matplotlib.checkdep_inkscape",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.compat.subprocess",
        "matplotlib.testing.exceptions.ImageComparisonFailure",
        "shutil",
        "six",
        "distutils.version",
        "matplotlib._get_cachedir",
        "numpy",
        "__future__.division",
        "matplotlib",
        "matplotlib._png",
        "__future__.print_function",
        "matplotlib.cbook",
        "hashlib",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/testing/decorators.py": [
        "matplotlib.units",
        "distutils.version",
        "imp",
        "nose",
        "nose",
        "matplotlib.testing.compare.compare_images",
        "__future__.unicode_literals",
        "functools",
        "__future__.absolute_import",
        "gc",
        "shutil",
        "matplotlib.testing.compare.comparable_formats",
        "matplotlib.testing.noseclasses.KnownFailureTest",
        "six",
        "matplotlib.testing.compare.make_test_filename",
        "unittest",
        "__future__.division",
        "matplotlib.pyplot",
        "warnings",
        "matplotlib",
        "inspect",
        "matplotlib.testing",
        "sys",
        "matplotlib.testing.noseclasses.KnownFailureDidNotFailTest",
        "matplotlib.ticker",
        "__future__.print_function",
        "matplotlib.cbook",
        "matplotlib.ft2font",
        "matplotlib.testing.noseclasses.ImageComparisonFailure",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/testing/disable_internet.py": [
        "__future__.division",
        "socket",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "contextlib",
        "six.moves.urllib",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/testing/exceptions.py": [],
    "/tmp/matplotlib/matplotlib/testing/jpl_units/Duration.py": [
        "matplotlib.testing.jpl_units",
        "__future__.division",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/testing/jpl_units/Epoch.py": [
        "matplotlib.testing.jpl_units",
        "__future__.division",
        "matplotlib.dates.date2num",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "math",
        "datetime",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/testing/jpl_units/EpochConverter.py": [
        "matplotlib.testing.jpl_units",
        "matplotlib.testing.jpl_units",
        "__future__.division",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "matplotlib.cbook.iterable",
        "matplotlib.dates",
        "matplotlib.units",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/testing/jpl_units/StrConverter.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.cbook.iterable",
        "matplotlib.units",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/testing/jpl_units/UnitDbl.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/testing/jpl_units/UnitDblConverter.py": [
        "matplotlib.testing.jpl_units",
        "matplotlib.testing.jpl_units",
        "__future__.division",
        "matplotlib.projections.polar",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "matplotlib.units",
        "matplotlib.cbook.iterable",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/testing/jpl_units/UnitDblFormatter.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.ticker",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/testing/jpl_units/__init__.py": [
        "matplotlib.units",
        ".UnitDblConverter.UnitDblConverter",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".Epoch.Epoch",
        ".StrConverter.StrConverter",
        ".EpochConverter.EpochConverter",
        ".UnitDblFormatter.UnitDblFormatter",
        ".UnitDbl.UnitDbl",
        "__future__.division",
        "__future__.print_function",
        ".Duration.Duration"
    ],
    "/tmp/matplotlib/matplotlib/testing/noseclasses.py": [
        "__future__.division",
        "nose.plugins.errorclass.ErrorClassPlugin",
        "__future__.unicode_literals",
        "matplotlib.testing.exceptions.KnownFailureTest",
        "__future__.absolute_import",
        "nose.plugins.errorclass.ErrorClass",
        "os",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/__init__.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "difflib",
        "__future__.absolute_import",
        "os",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_agg.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "numpy.testing.assert_array_almost_equal",
        "io",
        "matplotlib.image.imread",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.transforms",
        "matplotlib.backends.backend_agg.FigureCanvasAgg",
        "matplotlib.testing.decorators.cleanup",
        "matplotlib.collections",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "distutils.version.LooseVersion",
        "matplotlib.path",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "matplotlib.figure.Figure",
        "nose",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_animation.py": [
        "nose.tools.assert_true",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.noseclasses.KnownFailureTest",
        "six",
        "matplotlib.testing.decorators.cleanup",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib",
        "sys",
        "numpy",
        "matplotlib.animation",
        "__future__.print_function",
        "tempfile",
        "nose",
        "os",
        "nose.tools.assert_false"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_arrow_patches.py": [
        "matplotlib.patches.FancyArrowPatch",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.patches",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "nose",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_artist.py": [
        "matplotlib.lines",
        "matplotlib.patches",
        "nose.tools.assert_true",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "io",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.transforms",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.path",
        "warnings",
        "__future__.print_function",
        "matplotlib.collections",
        "nose",
        "nose.tools.assert_false"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_axes.py": [
        "matplotlib.testing.jpl_units",
        "matplotlib.patches.Ellipse",
        "datetime.datetime",
        "matplotlib.testing.jpl_units",
        "nose.tools.assert_true",
        "matplotlib.testing.jpl_units",
        "datetime.datetime",
        "matplotlib.testing.jpl_units",
        "datetime.datetime",
        "matplotlib.testing.jpl_units",
        "matplotlib.transforms.TransformedPath",
        "matplotlib.collections",
        "matplotlib.patches",
        "matplotlib.axes",
        "matplotlib.projections.polar.PolarAxes",
        "dateutil.parser",
        "matplotlib.patches",
        "matplotlib.collections",
        "pandas",
        "pandas",
        "pandas",
        "matplotlib.patches",
        "nose.tools.assert_true",
        "itertools.chain",
        "__future__.absolute_import",
        "datetime",
        "__future__.division",
        "distutils.version.LooseVersion",
        "nose.tools.assert_raises",
        "numpy.arange",
        "cycler.cycler",
        "matplotlib.testing.decorators.image_comparison",
        "numpy.testing.assert_allclose",
        "matplotlib.cbook.IgnoredKeywordWarning",
        "matplotlib.pyplot",
        "matplotlib",
        "matplotlib.markers",
        "nose.tools.assert_equal",
        "matplotlib.colors",
        "matplotlib.testing.noseclasses.KnownFailureTest",
        "__future__.print_function",
        "nose.plugins.skip.SkipTest",
        "pytz",
        "numpy.ma",
        "nose.tools.assert_false",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "io",
        "six",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "numpy.testing.assert_array_equal",
        "warnings",
        "sys",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_backend_bases.py": [
        "matplotlib.backend_bases.FigureCanvasBase",
        "nose.tools.assert_equal",
        "tempfile",
        "matplotlib.backend_bases.RendererBase",
        "matplotlib.testing.decorators.cleanup",
        "matplotlib.transforms",
        "matplotlib.pyplot",
        "numpy",
        "matplotlib.path",
        "shutil",
        "os",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_backend_pdf.py": [
        "matplotlib.backends.backend_pdf.PdfPages",
        "tempfile.NamedTemporaryFile",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "io",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.backends.backend_pdf.PdfPages",
        "__future__.print_function",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_backend_pgf.py": [
        "matplotlib.testing.compare.compare_images",
        "__future__.unicode_literals",
        "nose.plugins.skip.SkipTest",
        "__future__.absolute_import",
        "matplotlib.compat.subprocess",
        "matplotlib.testing.compare.ImageComparisonFailure",
        "shutil",
        "matplotlib.testing.decorators._image_directories",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib",
        "__future__.print_function",
        "matplotlib.testing.decorators.switch_backend",
        "nose",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_backend_ps.py": [
        "tempfile",
        "shutil",
        "os.path",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "io",
        "matplotlib.testing.decorators.knownfailureif",
        "re",
        "six",
        "numpy",
        "matplotlib.patheffects",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib",
        "__future__.print_function",
        "nose",
        "matplotlib.testing.decorators.cleanup"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_backend_qt4.py": [
        "matplotlib.backends.backend_qt4.CTRL",
        "__future__.unicode_literals",
        "matplotlib.backends.backend_qt4.SHIFT",
        "__future__.absolute_import",
        "six.unichr",
        "matplotlib.testing.decorators.knownfailureif",
        "matplotlib._pylab_helpers.Gcf",
        "matplotlib.testing.decorators.cleanup",
        "__future__.print_function",
        "mock",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.backends.backend_qt4.MODIFIER_KEYS",
        "matplotlib",
        "copy",
        "matplotlib.testing.decorators.switch_backend",
        "matplotlib.backends.qt_compat.QtCore",
        "matplotlib.backends.backend_qt4.ALT",
        "matplotlib.backends.backend_qt4.SUPER"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_backend_qt5.py": [
        "six",
        "matplotlib.backends.backend_qt5.CTRL",
        "__future__.unicode_literals",
        "matplotlib.backends.backend_qt5.SHIFT",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.knownfailureif",
        "matplotlib._pylab_helpers.Gcf",
        "matplotlib.testing.decorators.cleanup",
        "__future__.print_function",
        "matplotlib.backends.qt_compat.__version__",
        "mock",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.backends.backend_qt5.MODIFIER_KEYS",
        "matplotlib",
        "copy",
        "matplotlib.testing.decorators.switch_backend",
        "matplotlib.backends.qt_compat.QtCore",
        "matplotlib.backends.backend_qt5.ALT",
        "matplotlib.backends.backend_qt5.SUPER"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_backend_svg.py": [
        "matplotlib.figure.Figure",
        "matplotlib.backends.backend_svg.FigureCanvasSVG",
        "matplotlib.rc",
        "nose.tools.assert_equal",
        "sys",
        "subprocess.check_call",
        "os",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.knownfailureif",
        "matplotlib.testing.decorators.image_comparison",
        "xml.parsers.expat",
        "six",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "io.BytesIO",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib",
        "__future__.print_function",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_basic.py": [
        "__future__.division",
        "nose.tools.assert_equal",
        "matplotlib.cbook.MatplotlibDeprecationWarning",
        "warnings",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "pylab",
        "nose",
        "matplotlib.testing.decorators.knownfailureif",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_bbox_tight.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.path",
        "matplotlib.patches",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "nose",
        "__future__.absolute_import",
        "matplotlib.ticker.FuncFormatter",
        "numpy",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_cbook.py": [
        "nose.tools.assert_true",
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "datetime.datetime",
        "numpy.testing.utils.assert_array_almost_equal",
        "matplotlib.colors",
        "numpy",
        "numpy.testing.utils.assert_array_equal",
        "weakref.ref",
        "__future__.division",
        "nose.tools.assert_not_equal",
        "warnings",
        "numpy.testing.utils.assert_approx_equal",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "matplotlib.cbook",
        "matplotlib.cbook.delete_masked_points",
        "itertools",
        "nose.tools.raises"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_coding_standards.py": [
        "__future__.division",
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "nose.plugins.skip.SkipTest",
        "__future__.absolute_import",
        "pep8",
        "matplotlib",
        "matplotlib.testing.noseclasses.KnownFailureTest",
        "fnmatch.fnmatch",
        "os",
        "__future__.print_function",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_collections.py": [
        "mpl_toolkits.mplot3d.Axes3D",
        "pandas",
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "nose.plugins.skip.SkipTest",
        "__future__.absolute_import",
        "numpy.testing.assert_array_almost_equal",
        "io",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.transforms",
        "matplotlib.collections.Collection",
        "nose",
        "matplotlib.collections.EventCollection",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "matplotlib.pyplot",
        "__future__.print_function",
        "matplotlib.collections",
        "matplotlib.testing.decorators.cleanup"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_colorbar.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.colorbar.ColorbarBase",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.cm.get_cmap",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.colors.BoundaryNorm",
        "__future__.print_function",
        "matplotlib.colors.LogNorm",
        "nose",
        "matplotlib.rc_context"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_colors.py": [
        "pandas",
        "nose.tools.assert_true",
        "nose.tools.assert_equal",
        "matplotlib.cm",
        "__future__.unicode_literals",
        "nose.plugins.skip.SkipTest",
        "__future__.absolute_import",
        "numpy.testing.utils.assert_array_almost_equal",
        "matplotlib.testing.decorators.knownfailureif",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.colors",
        "six",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "numpy.testing.utils.assert_array_equal",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.colorbar",
        "matplotlib",
        "distutils.version.LooseVersion",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "matplotlib.cbook",
        "itertools",
        "nose",
        "matplotlib.cycler"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_compare_images.py": [
        "matplotlib.testing.compare.compare_images",
        "__future__.division",
        "nose.tools.assert_equal",
        "nose.tools.assert_not_equal",
        "nose.tools.assert_almost_equal",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "nose",
        "matplotlib.testing.decorators._image_directories",
        "shutil",
        "os",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_container.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.cleanup",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_contour.py": [
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "datetime",
        "numpy.testing.assert_array_almost_equal",
        "matplotlib.testing.decorators.image_comparison",
        "re",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "nose.tools.assert_raises",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.mlab",
        "warnings",
        "__future__.print_function",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_cycles.py": [
        "matplotlib.pyplot",
        "matplotlib.cbook.MatplotlibDeprecationWarning",
        "warnings",
        "matplotlib.testing.decorators.cleanup",
        "nose",
        "numpy",
        "cycler.cycler",
        "matplotlib.testing.decorators.image_comparison",
        "nose.tools.assert_raises"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_dates.py": [
        "matplotlib.testing.jpl_units",
        "matplotlib.testing.jpl_units",
        "matplotlib.dates",
        "pandas",
        "locale",
        "nose.tools.assert_equal",
        "matplotlib.dates",
        "six.moves.map",
        "__future__.unicode_literals",
        "nose.plugins.skip.SkipTest",
        "__future__.absolute_import",
        "datetime",
        "matplotlib.testing.decorators.image_comparison",
        "dateutil",
        "tempfile",
        "matplotlib.testing.decorators.cleanup",
        "mock",
        "nose",
        "__future__.division",
        "matplotlib.pyplot",
        "warnings",
        "pytz",
        "__future__.print_function",
        "nose.tools.assert_raises"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_delaunay.py": [
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.delaunay.triangulate.Triangulation",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.cbook.MatplotlibDeprecationWarning",
        "warnings",
        "matplotlib",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_dviread.py": [
        "__future__.division",
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "os.path",
        "__future__.absolute_import",
        "matplotlib.dviread",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_figure.py": [
        "matplotlib.font_manager.FontProperties",
        "matplotlib.patches",
        "warnings",
        "nose.tools.assert_true",
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "matplotlib.axes.Axes",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.testing.decorators.cleanup",
        "__future__.division",
        "matplotlib.pyplot",
        "numpy",
        "__future__.print_function",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_font_manager.py": [
        "__future__.division",
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.font_manager.FontProperties",
        "matplotlib.font_manager.get_font",
        "matplotlib.font_manager.findfont",
        "matplotlib.rc_context",
        "os.path",
        "matplotlib.font_manager.fontManager",
        "__future__.print_function",
        "matplotlib.font_manager.is_opentype_cff_font"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_gridspec.py": [
        "matplotlib.gridspec",
        "nose.tools.assert_equal",
        "nose.tools.assert_raises"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_image.py": [
        "numpy.random",
        "numpy.random",
        "matplotlib.backend_bases.MouseEvent",
        "matplotlib.patches",
        "numpy",
        "matplotlib.pyplot",
        "matplotlib.colors.LogNorm",
        "matplotlib.pyplot",
        "numpy",
        "xml.etree.ElementTree",
        "matplotlib.image.FigureImage",
        "matplotlib.transforms.TransformedBbox",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.image.BboxImage",
        "matplotlib.colors",
        "io",
        "matplotlib.testing.decorators.knownfailureif",
        "matplotlib.image.PcolorImage",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.patches",
        "six",
        "matplotlib.image.AxesImage",
        "matplotlib.testing.decorators.cleanup",
        "matplotlib.transforms.Bbox",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.mlab",
        "warnings",
        "copy.copy",
        "__future__.print_function",
        "numpy.ma",
        "nose.plugins.attrib.attr",
        "matplotlib.image.NonUniformImage",
        "PIL.Image",
        "matplotlib.transforms.Affine2D",
        "nose",
        "matplotlib.rcParams",
        "matplotlib.rc_context",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_labeled_data_unpacking.py": [
        "pandas",
        "matplotlib.axes._axes._plot_args_replacer",
        "__future__.print_function",
        "nose.tools.assert_equal",
        "nose.plugins.skip.SkipTest",
        "__future__.absolute_import",
        "..testing.assert_produces_warning",
        "__future__.division",
        "nose.tools.assert_regexp_matches",
        "..unpack_labeled_data",
        "nose.tools.assert_raises",
        "nose.tools.assert_not_regexp_matches"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_legend.py": [
        "matplotlib.pyplot",
        "matplotlib.pyplot",
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "matplotlib.transforms",
        "mock",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib",
        "__future__.print_function",
        "matplotlib.collections",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_lines.py": [
        "matplotlib.lines",
        "nose.tools.assert_true",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.pyplot",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "__future__.division",
        "timeit.repeat",
        "matplotlib",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "itertools",
        "nose",
        "cycler.cycler"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_mathtext.py": [
        "matplotlib.ft2font",
        "matplotlib.font_manager",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "io",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.testing.decorators.cleanup",
        "__future__.division",
        "matplotlib.pyplot",
        "numpy",
        "matplotlib",
        "matplotlib.mathtext",
        "__future__.print_function",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_mlab.py": [
        "nose.tools.assert_true",
        "__future__.absolute_import",
        "datetime",
        "matplotlib.testing.decorators.knownfailureif",
        "tempfile",
        "numpy.ma.testutils",
        "nose.tools.assert_almost_equal",
        "matplotlib.mlab",
        "matplotlib.cbook",
        "nose.tools.assert_raises",
        "nose",
        "numpy.testing.assert_allclose",
        "nose.tools.assert_not_equal",
        "__future__.print_function",
        "nose.tools.assert_equal",
        "matplotlib.testing.decorators.CleanupTestCase",
        "__future__.division",
        "__future__.unicode_literals",
        "six",
        "numpy",
        "numpy.testing.assert_array_equal",
        "sys"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_offsetbox.py": [
        "matplotlib.lines",
        "__future__.division",
        "nose.tools.assert_true",
        "matplotlib.pyplot",
        "nose.tools.assert_false",
        "matplotlib.patches",
        "__future__.unicode_literals",
        "matplotlib.offsetbox.DrawingArea",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.cleanup",
        "nose",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function",
        "matplotlib.offsetbox.AnchoredOffsetbox"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_patches.py": [
        "matplotlib.patches",
        "numpy.testing.assert_equal",
        "matplotlib.patches.Polygon",
        "numpy.testing.assert_almost_equal",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.patches.Rectangle",
        "matplotlib.transforms",
        "six",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.path",
        "__future__.print_function",
        "matplotlib.collections",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_path.py": [
        "nose.tools.assert_equal",
        "matplotlib.patches.Polygon",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.transforms",
        "matplotlib.testing.decorators.image_comparison",
        "numpy",
        "matplotlib.path.Path",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "matplotlib.pyplot",
        "copy",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_patheffects.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.patheffects",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "nose",
        "matplotlib.testing.decorators.cleanup",
        "nose.tools.assert_equal",
        "numpy",
        "matplotlib.testing.decorators.knownfailureif",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_pickle.py": [
        "matplotlib.backends.backend_pdf.FigureCanvasPdf",
        "matplotlib.figure.Figure",
        "matplotlib.backends.backend_agg.RendererAgg",
        "matplotlib.backends.backend_agg.new_figure_manager",
        "matplotlib.backends.backend_agg.new_figure_manager",
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.transforms",
        "six",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "io.BytesIO",
        "__future__.division",
        "matplotlib.pyplot",
        "nose.tools.assert_not_equal",
        "__future__.print_function",
        "nose",
        "six.moves.cPickle"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_png.py": [
        "matplotlib._png",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.cm",
        "__future__.unicode_literals",
        "glob",
        "__future__.absolute_import",
        "sys",
        "numpy",
        "os",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_quiver.py": [
        "matplotlib.pyplot",
        "warnings",
        "sys",
        "matplotlib.testing.decorators.cleanup",
        "nose.tools.raises",
        "numpy",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_rcparams.py": [
        "copy.deepcopy",
        "nose.tools.assert_true",
        "nose.tools.assert_equal",
        "collections.OrderedDict",
        "itertools.chain",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.colors",
        "matplotlib.rcsetup.validate_bool",
        "six",
        "matplotlib.rcsetup.validate_hist_bins",
        "matplotlib.testing.decorators.cleanup",
        "matplotlib.rcsetup.validate_nseq_float",
        "numpy",
        "mock",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.rcsetup.validate_bool_maybe_none",
        "warnings",
        "matplotlib",
        "matplotlib.rcsetup.validate_stringlist",
        "matplotlib.rcsetup.validate_cycler",
        "matplotlib.rcsetup.validate_nseq_int",
        "matplotlib.rcsetup.validate_colorlist",
        "cycler.Cycler",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "matplotlib.rcsetup.validate_hatch",
        "matplotlib.tests.assert_str_equal",
        "nose",
        "cycler.cycler",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_sankey.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.cleanup",
        "matplotlib.sankey.Sankey",
        "__future__.print_function",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_scale.py": [
        "matplotlib.pyplot",
        "matplotlib.testing.decorators.cleanup",
        "nose",
        "io",
        "numpy",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_simplification.py": [
        "base64",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "nose.tools.raises",
        "io",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.patches",
        "nose",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.path",
        "__future__.print_function",
        "matplotlib.transforms"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_skew.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "nose",
        "__future__.unicode_literals",
        "matplotlib.axes.Axes",
        "__future__.absolute_import",
        "matplotlib.spines",
        "itertools",
        "matplotlib.axis",
        "matplotlib.transforms",
        "matplotlib.projections.register_projection",
        "matplotlib.patches",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_spines.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.cleanup",
        "nose.tools.assert_less",
        "numpy",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_streamplot.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.transforms",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.cleanup",
        "numpy.testing.assert_array_almost_equal",
        "numpy",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function",
        "nose"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_style.py": [
        "matplotlib.style.core.STYLE_EXTENSION",
        "collections.OrderedDict",
        "__future__.unicode_literals",
        "numpy.testing",
        "shutil",
        "matplotlib.style",
        "matplotlib.style.core.USER_LIBRARY_PATHS",
        "tempfile",
        "six",
        "contextlib.contextmanager",
        "__future__.division",
        "matplotlib",
        "__future__.absolute_import",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "nose.plugins.attrib.attr",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_subplots.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "warnings",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "nose",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function",
        "nose.tools.assert_raises"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_table.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.table.CustomCell",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.cleanup",
        "nose.tools.assert_equal",
        "numpy",
        "matplotlib.path.Path",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_texmanager.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.texmanager.TexManager",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_text.py": [
        "matplotlib._get_data_path",
        "matplotlib.font_manager.FontProperties",
        "matplotlib.font_manager.findfont",
        "matplotlib.afm.AFM",
        "matplotlib.font_manager.findfont",
        "matplotlib.backend_bases",
        "matplotlib.text",
        "matplotlib.text",
        "matplotlib.text",
        "matplotlib.text",
        "matplotlib.text",
        "matplotlib.text",
        "matplotlib.font_manager.FontProperties",
        "numpy.testing.assert_almost_equal",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "warnings",
        "matplotlib",
        "__future__.print_function",
        "nose.tools.assert_raises"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_ticker.py": [
        "nose.tools.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "numpy",
        "__future__.division",
        "matplotlib.pyplot",
        "warnings",
        "matplotlib",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "matplotlib.ticker",
        "nose",
        "matplotlib.testing.decorators.cleanup"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_tightlayout.py": [
        "matplotlib.gridspec",
        "__future__.print_function",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.patches.Rectangle",
        "matplotlib.offsetbox.AnchoredOffsetbox",
        "numpy",
        "__future__.division",
        "matplotlib.offsetbox.DrawingArea",
        "matplotlib.pyplot",
        "warnings"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_transforms.py": [
        "matplotlib.patches",
        "nose.tools.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "unittest",
        "__future__.absolute_import",
        "matplotlib.transforms.BlendedGenericTransform",
        "numpy.testing.assert_array_almost_equal",
        "matplotlib.testing.decorators.image_comparison",
        "matplotlib.transforms",
        "six.moves.zip",
        "matplotlib.testing.decorators.cleanup",
        "matplotlib.transforms.Bbox",
        "numpy",
        "matplotlib.path.Path",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "matplotlib.pyplot",
        "matplotlib.path",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "matplotlib.scale.LogScale",
        "matplotlib.transforms.Affine2D",
        "nose",
        "numpy.testing"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_triangulation.py": [
        "matplotlib.figure.Figure",
        "nose.tools.assert_true",
        "nose.tools.assert_equal",
        "matplotlib.cm",
        "__future__.unicode_literals",
        "numpy.testing.assert_array_less",
        "__future__.absolute_import",
        "numpy.testing.assert_array_almost_equal",
        "matplotlib.testing.decorators.image_comparison",
        "nose",
        "numpy.ma.testutils",
        "matplotlib.testing.decorators.cleanup",
        "numpy",
        "matplotlib.path.Path",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "matplotlib.pyplot",
        "__future__.print_function",
        "nose.tools.assert_raises",
        "matplotlib.tri",
        "nose.tools.assert_false"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_ttconv.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.font_manager.FontProperties",
        "matplotlib",
        "os.path",
        "matplotlib.testing.decorators.image_comparison",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_type1font.py": [
        "__future__.division",
        "matplotlib.type1font",
        "nose.tools.assert_equal",
        "__future__.unicode_literals",
        "difflib",
        "__future__.absolute_import",
        "os.path",
        "nose.tools.assert_in",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_units.py": [
        "matplotlib.pyplot",
        "mock.MagicMock",
        "matplotlib.units",
        "matplotlib.testing.decorators.cleanup",
        "numpy"
    ],
    "/tmp/matplotlib/matplotlib/tests/test_widgets.py": [
        "__future__.division",
        "matplotlib.pyplot",
        "numpy.testing.assert_allclose",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.testing.decorators.cleanup",
        "mock",
        "matplotlib.widgets",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/texmanager.py": [
        "distutils.version",
        "matplotlib.compat.subprocess.STDOUT",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "shutil",
        "matplotlib._png.read_png",
        "six",
        "matplotlib.compat.subprocess.PIPE",
        "re",
        "numpy",
        "matplotlib",
        "__future__.division",
        "matplotlib.cbook.Locked",
        "warnings",
        "glob",
        "matplotlib.compat.subprocess.Popen",
        "matplotlib.cbook.mkdirs",
        "sys",
        "copy",
        "__future__.print_function",
        "hashlib.md5",
        "matplotlib.dviread",
        "matplotlib.rcParams",
        "os"
    ],
    "/tmp/matplotlib/matplotlib/text.py": [
        "matplotlib.patheffects.PathEffectRenderer",
        "matplotlib.transforms.blended_transform_factory",
        "matplotlib.projections.PolarAxes",
        "matplotlib.transforms.Affine2D",
        "matplotlib.offsetbox.DraggableAnnotation",
        "__future__.unicode_literals",
        "matplotlib.patches.FancyBboxPatch",
        "matplotlib.transforms.Transform",
        "__future__.absolute_import",
        "matplotlib.cbook.maxdict",
        "contextlib",
        "matplotlib.cbook.is_string_like",
        "matplotlib.patches.Rectangle",
        "matplotlib.transforms",
        "matplotlib.transforms.BboxTransformTo",
        "six.moves.zip",
        "six",
        "matplotlib.patches.FancyArrowPatch",
        "matplotlib.font_manager.FontProperties",
        "matplotlib.transforms.Bbox",
        "numpy",
        "math",
        "__future__.division",
        "warnings",
        "matplotlib.artist.allow_rasterization",
        "matplotlib.docstring",
        "matplotlib.lines.Line2D",
        "__future__.print_function",
        "matplotlib.cbook",
        "matplotlib.transforms.BboxBase",
        "matplotlib.artist",
        "matplotlib.transforms.Affine2D",
        "matplotlib.artist.Artist",
        "matplotlib.rcParams"
    ],
    "/tmp/matplotlib/matplotlib/textpath.py": [
        "matplotlib.cbook.maxdict",
        "matplotlib.texmanager.TexManager",
        "six.moves.urllib.parse.quote",
        "collections.OrderedDict",
        "matplotlib.ft2font.LOAD_NO_HINTING",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.font_manager",
        "six.moves.zip",
        "matplotlib.mathtext.MathTextParser",
        "matplotlib.ft2font.LOAD_TARGET_LIGHT",
        "matplotlib.ft2font.KERNING_DEFAULT",
        "matplotlib.font_manager.FontProperties",
        "numpy",
        "matplotlib.path.Path",
        "__future__.division",
        "warnings",
        "matplotlib.font_manager.get_font",
        "__future__.print_function",
        "matplotlib.dviread",
        "matplotlib.transforms.Affine2D",
        "matplotlib.rcParams"
    ],
    "/tmp/matplotlib/matplotlib/ticker.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.cbook.mplDeprecation",
        "matplotlib.transforms",
        "six",
        "locale",
        "numpy",
        "math",
        "__future__.division",
        "warnings",
        "__future__.print_function",
        "matplotlib.cbook",
        "decimal",
        "itertools",
        "matplotlib.rcParams"
    ],
    "/tmp/matplotlib/matplotlib/tight_bbox.py": [
        "__future__.division",
        "matplotlib.transforms.TransformedBbox",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.transforms.Affine2D",
        "matplotlib.transforms.Bbox",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tight_layout.py": [
        "matplotlib.backends.backend_agg.FigureCanvasAgg",
        "matplotlib.transforms.TransformedBbox",
        "warnings",
        "matplotlib",
        "matplotlib.font_manager.FontProperties",
        "matplotlib.transforms.Bbox"
    ],
    "/tmp/matplotlib/matplotlib/transforms.py": [
        "sets.Set",
        "__future__.unicode_literals",
        "numpy.linalg.inv",
        "matplotlib._path.affine_transform",
        "__future__.absolute_import",
        "matplotlib._path.update_path_extents",
        "six",
        "numpy",
        ".path.Path",
        "__future__.division",
        "warnings",
        "matplotlib._path.count_bboxes_overlapping_bbox",
        "__future__.print_function",
        ".cbook",
        "numpy.ma",
        "weakref.WeakValueDictionary"
    ],
    "/tmp/matplotlib/matplotlib/tri/__init__.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tri/triangulation.py": [
        "matplotlib.tri.trifinder.TrapezoidMapTriFinder",
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib._tri",
        "matplotlib._qhull",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tri/tricontour.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.tri.triangulation.Triangulation",
        "matplotlib.contour.ContourSet",
        "matplotlib._tri",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tri/trifinder.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.tri.Triangulation",
        "matplotlib._tri",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tri/triinterpolate.py": [
        "__future__.print_function",
        "__future__.unicode_literals",
        "six.moves.xrange",
        "__future__.absolute_import",
        "matplotlib.tri.trifinder.TriFinder",
        "matplotlib.tri.Triangulation",
        "numpy",
        "__future__.division",
        "warnings",
        "matplotlib.tri.tritools.TriAnalyzer"
    ],
    "/tmp/matplotlib/matplotlib/tri/tripcolor.py": [
        "matplotlib.colors.Normalize",
        "__future__.division",
        "__future__.unicode_literals",
        "matplotlib.collections.PolyCollection",
        "__future__.absolute_import",
        "matplotlib.tri.triangulation.Triangulation",
        "matplotlib.collections.TriMesh",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tri/triplot.py": [
        "matplotlib.axes",
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.tri.triangulation.Triangulation",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tri/trirefine.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.tri.triangulation.Triangulation",
        "matplotlib.tri.triinterpolate",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/tri/tritools.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.tri.Triangulation",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/type1font.py": [
        "__future__.division",
        "struct",
        "__future__.unicode_literals",
        "six",
        "binascii",
        "__future__.absolute_import",
        "re",
        "itertools",
        "io",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/matplotlib/matplotlib/units.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "matplotlib.cbook.safe_first_element",
        "__future__.print_function",
        "numpy",
        "matplotlib.cbook.is_numlike",
        "matplotlib.cbook.iterable"
    ],
    "/tmp/matplotlib/matplotlib/widgets.py": [
        ".mlab.dist",
        "__future__.unicode_literals",
        ".transforms.blended_transform_factory",
        "__future__.absolute_import",
        ".patches.Circle",
        ".patches.Rectangle",
        "six.moves.zip",
        "six",
        "numpy",
        "__future__.division",
        ".lines.Line2D",
        "copy",
        "__future__.print_function",
        ".patches.Ellipse"
    ]
}
{
    "/tmp/matrix_client/matrix_client/__init__.py": [],
    "/tmp/matrix_client/matrix_client/api.py": [
        "urllib.parse.quote",
        "re",
        "json",
        "time.time",
        "requests"
    ],
    "/tmp/matrix_client/matrix_client/client.py": [
        "logging",
        "threading.Thread",
        "sys",
        "time.sleep",
        ".api.MatrixUnexpectedResponse",
        ".api.MatrixRequestError",
        ".api.MatrixHttpApi"
    ]
}
{
    "/tmp/messagebird/messagebird/__init__.py": [],
    "/tmp/messagebird/messagebird/balance.py": [
        "messagebird.base.Base"
    ],
    "/tmp/messagebird/messagebird/base.py": [
        "datetime.datetime"
    ],
    "/tmp/messagebird/messagebird/client.py": [
        "urlparse.urljoin",
        "messagebird.voicemessage.VoiceMessage",
        "messagebird.verify.Verify",
        "messagebird.hlr.HLR",
        "sys",
        "json",
        "messagebird.lookup.Lookup",
        "messagebird.error.Error",
        "requests",
        "messagebird.balance.Balance",
        "messagebird.message.Message"
    ],
    "/tmp/messagebird/messagebird/error.py": [
        "messagebird.base.Base"
    ],
    "/tmp/messagebird/messagebird/formats.py": [
        "messagebird.base.Base"
    ],
    "/tmp/messagebird/messagebird/hlr.py": [
        "messagebird.base.Base"
    ],
    "/tmp/messagebird/messagebird/lookup.py": [
        "messagebird.base.Base",
        "messagebird.hlr.HLR",
        "messagebird.formats.Formats"
    ],
    "/tmp/messagebird/messagebird/message.py": [
        "messagebird.base.Base",
        "messagebird.recipient.Recipient"
    ],
    "/tmp/messagebird/messagebird/recipient.py": [
        "messagebird.base.Base"
    ],
    "/tmp/messagebird/messagebird/verify.py": [
        "messagebird.base.Base"
    ],
    "/tmp/messagebird/messagebird/voicemessage.py": [
        "messagebird.base.Base",
        "messagebird.recipient.Recipient"
    ]
}
{
    "/tmp/mficlient/mficlient/__init__.py": [
        "mficlient.client"
    ],
    "/tmp/mficlient/mficlient/client.py": [
        "functools",
        "json",
        "urllib.parse",
        "time",
        "requests",
        "os"
    ],
    "/tmp/mficlient/mficlient/fake.py": [
        "json",
        "mficlient.client",
        "mficlient.fake_data"
    ],
    "/tmp/mficlient/mficlient/fake_data.py": [],
    "/tmp/mficlient/mficlient/main.py": [
        "argparse",
        "pprint",
        "json",
        "mficlient.client",
        "requests",
        "os"
    ]
}
{
    "/tmp/mock/mock/__init__.py": [
        "mock.mock",
        "__future__.absolute_import"
    ],
    "/tmp/mock/mock/mock.py": [
        "_io",
        "functools.partial",
        "__future__.absolute_import",
        "six.wraps",
        "__builtin__",
        "pprint",
        "types.ModuleType",
        "funcsigs",
        "re",
        "inspect",
        "java",
        "keyword",
        "pbr.version.VersionInfo",
        "six",
        "mock",
        "sys"
    ],
    "/tmp/mock/mock/tests/__init__.py": [],
    "/tmp/mock/mock/tests/__main__.py": [
        "unittest",
        "os"
    ],
    "/tmp/mock/mock/tests/support.py": [
        "sys"
    ],
    "/tmp/mock/mock/tests/testcallable.py": [
        "mock.create_autospec",
        "mock.CallableMixin",
        "mock.MagicMock",
        "mock.NonCallableMagicMock",
        "mock.tests.support.SomeClass",
        "unittest2",
        "mock.NonCallableMock",
        "mock.tests.support.is_instance",
        "mock.patch",
        "mock.tests.support.X",
        "mock.Mock"
    ],
    "/tmp/mock/mock/tests/testhelpers.py": [
        "mock.create_autospec",
        "mock.mock._CallList",
        "mock.MagicMock",
        "mock.PropertyMock",
        "unittest2",
        "six",
        "mock.patch",
        "mock.call",
        "mock.mock._Call",
        "datetime.datetime",
        "mock.ANY",
        "mock.Mock"
    ],
    "/tmp/mock/mock/tests/testmagicmethods.py": [
        "mock.mock._magics",
        "__future__.division",
        "six",
        "mock.MagicMock",
        "unittest2",
        "textwrap",
        "sys",
        "mock.Mock"
    ],
    "/tmp/mock/mock/tests/testmock.py": [
        "java",
        "mock.create_autospec",
        "mock.mock._CallList",
        "mock.DEFAULT",
        "unittest2",
        "mock.NonCallableMock",
        "mock.sentinel",
        "mock.Mock",
        "tempfile",
        "six",
        "mock.tests.support.next",
        "mock.call",
        "mock",
        "mock.tests.support.is_instance",
        "mock.tests.support.callable",
        "copy",
        "sys",
        "mock.MagicMock",
        "mock.patch",
        "mock.NonCallableMagicMock",
        "pickle"
    ],
    "/tmp/mock/mock/tests/testpatch.py": [
        "mock.DEFAULT",
        "unittest2",
        "mock.NonCallableMock",
        "mock.sentinel",
        "mock.Mock",
        "mock.CallableMixin",
        "mock.NonCallableMagicMock",
        "mock.tests.support",
        "six",
        "mock.call",
        "mock.mock._get_target",
        "mock.tests.support.SomeClass",
        "mock.tests.support.is_instance",
        "mock.tests.support.callable",
        "sys",
        "mock.MagicMock",
        "mock.patch",
        "os",
        "mock.mock._patch"
    ],
    "/tmp/mock/mock/tests/testsentinel.py": [
        "mock.sentinel",
        "mock.DEFAULT",
        "unittest2"
    ],
    "/tmp/mock/mock/tests/testwith.py": [
        "mock.MagicMock",
        "warnings.catch_warnings",
        "unittest2",
        "mock.tests.support.is_instance",
        "mock.patch",
        "mock.call",
        "mock.sentinel",
        "mock.mock_open",
        "mock.Mock"
    ]
}
{
    "/tmp/monotonic/monotonic.py": [
        "sys",
        "threading",
        "ctypes.util",
        "time",
        "os"
    ]
}
{
    "/tmp/myusps/myusps/__init__.py": [
        "requests.auth.AuthBase",
        "dateutil.parser.parse",
        "lxml.html",
        "pickle",
        "requests",
        "os.path"
    ]
}
{
    "/tmp/netaddr/netaddr/__init__.py": [
        "sys"
    ],
    "/tmp/netaddr/netaddr/compat.py": [
        "sys"
    ],
    "/tmp/netaddr/netaddr/contrib/__init__.py": [],
    "/tmp/netaddr/netaddr/contrib/subnet_splitter.py": [
        "netaddr.ip.IPNetwork",
        "netaddr.ip.cidr_exclude",
        "netaddr.ip.cidr_merge"
    ],
    "/tmp/netaddr/netaddr/core.py": [
        "netaddr.compat._callable",
        "pprint",
        "sys",
        "netaddr.compat._iter_dict_keys"
    ],
    "/tmp/netaddr/netaddr/eui/__init__.py": [
        "netaddr.eui.ieee",
        "netaddr.eui.ieee",
        "netaddr.core.NotRegisteredError",
        "netaddr.compat._is_str",
        "netaddr.core.DictDotLookup",
        "netaddr.core.AddrFormatError",
        "netaddr.compat._is_int",
        "netaddr.strategy.eui48.mac_eui48",
        "netaddr.strategy.eui48",
        "netaddr.strategy.eui64.eui64_base",
        "netaddr.strategy.eui64",
        "netaddr.ip.IPAddress"
    ],
    "/tmp/netaddr/netaddr/eui/ieee.py": [
        "netaddr.compat._bytes_type",
        "netaddr.core.Publisher",
        "csv",
        "netaddr.core.Subscriber",
        "os.path"
    ],
    "/tmp/netaddr/netaddr/fbsocket.py": [
        "netaddr.compat._is_str",
        "netaddr.compat._bytes_join",
        "struct.pack",
        "struct.unpack"
    ],
    "/tmp/netaddr/netaddr/ip/__init__.py": [
        "netaddr.ip.iana.query",
        "netaddr.core.AddrFormatError",
        "netaddr.compat._is_str",
        "netaddr.core.INET_PTON",
        "netaddr.strategy.ipv6",
        "netaddr.strategy.ipv4",
        "netaddr.core.DictDotLookup",
        "netaddr.compat._str_type",
        "netaddr.core.NOHOST",
        "netaddr.compat._sys_maxint",
        "netaddr.core.num_bits",
        "netaddr.compat._int_type",
        "netaddr.core.AddrConversionError"
    ],
    "/tmp/netaddr/netaddr/ip/glob.py": [
        "netaddr.core.AddrFormatError",
        "netaddr.compat._is_str",
        "netaddr.ip.IPNetwork",
        "netaddr.core.AddrConversionError",
        "netaddr.ip.IPAddress",
        "netaddr.ip.IPRange",
        "netaddr.ip.iprange_to_cidrs"
    ],
    "/tmp/netaddr/netaddr/ip/iana.py": [
        "netaddr.compat._callable",
        "netaddr.core.Subscriber",
        "netaddr.compat._dict_items",
        "xml.sax.handler",
        "netaddr.ip.IPAddress",
        "netaddr.ip.cidr_abbrev_to_verbose",
        "netaddr.core.Publisher",
        "xml.sax.make_parser",
        "sys",
        "netaddr.ip.IPNetwork",
        "netaddr.ip.IPRange",
        "os.path"
    ],
    "/tmp/netaddr/netaddr/ip/nmap.py": [
        "netaddr.core.AddrFormatError",
        "netaddr.compat._is_str",
        "netaddr.compat._iter_range",
        "netaddr.compat._iter_next",
        "netaddr.ip.IPNetwork",
        "netaddr.ip.IPAddress"
    ],
    "/tmp/netaddr/netaddr/ip/rfc1924.py": [
        "netaddr.compat._zip",
        "netaddr.core.AddrFormatError",
        "netaddr.ip.IPAddress"
    ],
    "/tmp/netaddr/netaddr/ip/sets.py": [
        "itertools",
        "netaddr.compat._sys_maxint",
        "netaddr.ip.cidr_merge",
        "netaddr.ip.IPRange",
        "netaddr.compat._int_type",
        "netaddr.ip.IPNetwork",
        "netaddr.compat._dict_keys",
        "netaddr.ip.IPAddress",
        "netaddr.ip.cidr_exclude",
        "netaddr.ip.iprange_to_cidrs"
    ],
    "/tmp/netaddr/netaddr/strategy/__init__.py": [
        "netaddr.compat._is_str",
        "netaddr.compat._range",
        "re"
    ],
    "/tmp/netaddr/netaddr/strategy/eui48.py": [
        "netaddr.core.AddrFormatError",
        "netaddr.compat._is_str",
        "netaddr.strategy.bin_to_int",
        "netaddr.strategy.int_to_bits",
        "re",
        "netaddr.strategy.words_to_int",
        "netaddr.strategy.int_to_words",
        "struct",
        "netaddr.strategy.int_to_bin",
        "netaddr.strategy.valid_bits",
        "netaddr.strategy.bits_to_int",
        "netaddr.strategy.valid_words",
        "netaddr.strategy.valid_bin"
    ],
    "/tmp/netaddr/netaddr/strategy/eui64.py": [
        "netaddr.core.AddrFormatError",
        "netaddr.strategy.bin_to_int",
        "re",
        "netaddr.strategy.words_to_int",
        "netaddr.strategy.int_to_words",
        "struct",
        "netaddr.strategy.int_to_bin",
        "netaddr.strategy.valid_bits",
        "netaddr.strategy.bits_to_int",
        "netaddr.strategy.valid_words",
        "netaddr.strategy.int_to_bits",
        "netaddr.strategy.valid_bin"
    ],
    "/tmp/netaddr/netaddr/strategy/ipv4.py": [
        "netaddr.core.AddrFormatError",
        "netaddr.core.ZEROFILL",
        "netaddr.core.INET_PTON",
        "socket.inet_aton",
        "netaddr.strategy.bin_to_int",
        "netaddr.strategy.int_to_bits",
        "socket.inet_pton",
        "netaddr.compat._str_type",
        "struct",
        "netaddr.strategy.int_to_bin",
        "socket.AF_INET",
        "sys",
        "netaddr.strategy.valid_bits",
        "netaddr.strategy.bits_to_int",
        "netaddr.strategy.valid_words",
        "netaddr.strategy.valid_bin"
    ],
    "/tmp/netaddr/netaddr/strategy/ipv6.py": [
        "netaddr.fbsocket.AF_INET6",
        "netaddr.core.AddrFormatError",
        "netaddr.strategy.bin_to_int",
        "netaddr.strategy.int_to_bits",
        "socket",
        "netaddr.strategy.words_to_int",
        "netaddr.strategy.int_to_words",
        "netaddr.fbsocket.inet_ntop",
        "netaddr.fbsocket.inet_pton",
        "struct",
        "netaddr.strategy.int_to_bin",
        "netaddr.strategy.valid_bits",
        "netaddr.strategy.bits_to_int",
        "netaddr.strategy.valid_words",
        "netaddr.strategy.valid_bin"
    ]
}
{
    "/tmp/netdisco/netdisco/__init__.py": [],
    "/tmp/netdisco/netdisco/__main__.py": [
        "sys",
        "netdisco.discovery.NetworkDiscovery",
        "__future__.print_function"
    ],
    "/tmp/netdisco/netdisco/const.py": [],
    "/tmp/netdisco/netdisco/daikin.py": [
        "pprint.pprint",
        "urllib.parse.unquote",
        "socket",
        "datetime.timedelta",
        "threading"
    ],
    "/tmp/netdisco/netdisco/discoverables/DLNA.py": [
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/__init__.py": [],
    "/tmp/netdisco/netdisco/discoverables/belkin_wemo.py": [
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/bose_soundtouch.py": [
        ".MDNSDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/daikin.py": [
        ".BaseDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/denonavr.py": [
        "urlparse.urlparse",
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/directv.py": [
        "netdisco.util.urlparse",
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/google_cast.py": [
        ".MDNSDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/hass_ios.py": [
        ".MDNSDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/home_assistant.py": [
        ".MDNSDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/homekit.py": [
        ".MDNSDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/kodi.py": [
        ".MDNSDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/logitech_mediaserver.py": [
        ".BaseDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/mystrom.py": [
        ".MDNSDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/netgear_router.py": [
        "netdisco.util.urlparse",
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/panasonic_viera.py": [
        "netdisco.util.urlparse",
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/philips_hue.py": [
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/plex_mediaserver.py": [
        ".GDMDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/roku.py": [
        "netdisco.util.urlparse",
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/sabnzbd.py": [
        ".MDNSDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/samsung_tv.py": [
        "urlparse.urlparse",
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/samsungac.py": [
        ".BaseDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/sonos.py": [
        "netdisco.util.urlparse",
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/tellstick.py": [
        ".BaseDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/webos_tv.py": [
        "netdisco.util.urlparse",
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discoverables/yamaha.py": [
        ".SSDPDiscoverable"
    ],
    "/tmp/netdisco/netdisco/discovery.py": [
        "pprint.pprint",
        ".mdns.MDNS",
        "logging",
        "importlib",
        ".lms.LMS",
        "threading",
        ".tellstick.Tellstick",
        ".daikin.Daikin",
        ".ssdp.SSDP",
        "os",
        ".gdm.GDM",
        "__future__.print_function"
    ],
    "/tmp/netdisco/netdisco/gdm.py": [
        "pprint.pprint",
        "threading",
        "socket"
    ],
    "/tmp/netdisco/netdisco/lms.py": [
        "pprint.pprint",
        "socket",
        "threading"
    ],
    "/tmp/netdisco/netdisco/mdns.py": [
        "zeroconf"
    ],
    "/tmp/netdisco/netdisco/samsungac.py": [
        "pprint.pprint",
        "socket",
        "binascii",
        "threading"
    ],
    "/tmp/netdisco/netdisco/service.py": [
        "collections.defaultdict",
        "logging",
        ".discovery.NetworkDiscovery",
        "threading",
        "time"
    ],
    "/tmp/netdisco/netdisco/ssdp.py": [
        "pprint.pprint",
        "xml.etree.ElementTree",
        "select",
        "re",
        "datetime.timedelta",
        "datetime.datetime",
        "netdisco.util.etree_to_dict",
        "logging",
        "socket",
        "threading",
        "netdisco.util.interface_addresses",
        "requests"
    ],
    "/tmp/netdisco/netdisco/tellstick.py": [
        "pprint.pprint",
        "socket",
        "datetime.timedelta",
        "threading"
    ],
    "/tmp/netdisco/netdisco/util.py": [
        "collections.defaultdict",
        "netifaces"
    ]
}
{
    "/tmp/neurio/neurio/__init__.py": [
        "urllib.parse.urlencode",
        "urllib.parse.parse_qsl",
        "urllib.parse.urlparse",
        "re",
        "base64.b64encode",
        "urllib.parse.urlunparse",
        "requests"
    ]
}
{
    "/tmp/nmap/nmap/__init__.py": [],
    "/tmp/nmap/nmap/nmap.py": []
}
{
    "/tmp/numpy/numpy/__config__.py": [],
    "/tmp/numpy/numpy/__init__.py": [
        "._globals.VisibleDeprecationWarning",
        "__future__.absolute_import",
        "._import_tools.PackageLoader",
        "__future__.division",
        "__builtin__.str",
        "._globals.ModuleDeprecationWarning",
        "warnings",
        "sys",
        ".core",
        "__future__.print_function",
        ".matrixlib",
        ".lib",
        ".add_newdocs"
    ],
    "/tmp/numpy/numpy/_distributor_init.py": [],
    "/tmp/numpy/numpy/_globals.py": [
        "__future__.division",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/_import_tools.py": [
        "glob.glob",
        "numpy.compat.npy_load_module",
        "sys",
        "__future__.division",
        "warnings",
        "__future__.absolute_import",
        "sys",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/add_newdocs.py": [
        "numpy.lib.add_newdoc",
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/compat/__init__.py": [
        "__future__.division",
        "__future__.absolute_import",
        ".py3k",
        "._inspect",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/compat/_inspect.py": [
        "__future__.division",
        "__future__.absolute_import",
        "__future__.print_function",
        "types"
    ],
    "/tmp/numpy/numpy/compat/py3k.py": [
        "importlib.machinery",
        "imp",
        "os",
        "io",
        "__future__.absolute_import",
        "__future__.division",
        "sys",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/compat/setup.py": [
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "numpy.distutils.core.setup",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/__init__.py": [
        "pickle.whichmodule",
        ".einsumfunc",
        ".machar",
        ".memmap",
        ".fromnumeric",
        ".einsumfunc",
        ".numeric",
        ".defchararray",
        ".numeric",
        ".records",
        ".fromnumeric",
        ".records",
        ".shape_base",
        "__future__.division",
        ".getlimits",
        ".getlimits",
        ".multiarray",
        ".function_base",
        ".defchararray.chararray",
        "__future__.absolute_import",
        "__future__.print_function",
        ".machar",
        "numpy.testing.nosetester._numpy_tester",
        ".shape_base",
        ".function_base"
    ],
    "/tmp/numpy/numpy/core/_internal.py": [
        "__future__.print_function",
        ".multiarray.dtype",
        "__future__.absolute_import",
        ".multiarray.array",
        "re",
        "numpy.compat.asbytes",
        "__future__.division",
        "ctypes",
        ".multiarray.ndarray",
        "sys"
    ],
    "/tmp/numpy/numpy/core/_methods.py": [
        "__future__.absolute_import",
        "numpy.core.multiarray",
        "numpy.core.numerictypes",
        "__future__.division",
        "warnings",
        "numpy.core.numeric.asanyarray",
        "__future__.print_function",
        "numpy.core.umath"
    ],
    "/tmp/numpy/numpy/core/arrayprint.py": [
        ".numeric",
        ".numeric",
        ".numeric",
        ".multiarray.dtype",
        "functools.reduce",
        ".umath.minimum",
        ".multiarray.array",
        ".umath.absolute",
        ".multiarray.format_longfloat",
        ".umath.isnan",
        ".numeric.asarray",
        ".numerictypes",
        ".multiarray.datetime_as_string",
        ".fromnumeric.ravel",
        "__future__.division",
        "sys",
        ".umath.isinf",
        "__future__.absolute_import",
        "__future__.print_function",
        ".umath.not_equal",
        ".multiarray.datetime_data",
        ".umath.maximum"
    ],
    "/tmp/numpy/numpy/core/cversions.py": [
        "__future__.division",
        "code_generators.numpy_api.full_api",
        "__future__.absolute_import",
        "code_generators.genapi.fullapi_hash",
        "os.path.dirname",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/defchararray.py": [
        "__future__.absolute_import",
        ".numeric.array",
        ".numerictypes.unicode_",
        ".numerictypes.character",
        "numpy.compat.long",
        "__future__.print_function",
        "numpy",
        "numpy.compat.asbytes",
        ".numeric.compare_chararrays",
        "__future__.division",
        ".numerictypes.bool_",
        "sys",
        ".numerictypes.string_",
        ".numerictypes.integer",
        ".numeric.ndarray",
        "numpy.core.multiarray._vec_string",
        ".numerictypes.object_"
    ],
    "/tmp/numpy/numpy/core/einsumfunc.py": [
        "__future__.division",
        "numpy.core.multiarray.c_einsum",
        "__future__.absolute_import",
        "numpy.core.numeric.asanyarray",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/fromnumeric.py": [
        "..VisibleDeprecationWarning",
        "__future__.absolute_import",
        "types",
        ".numeric.array",
        ".multiarray",
        ".numeric.asarray",
        "numpy",
        ".numerictypes",
        ".numeric.concatenate",
        "__future__.division",
        "warnings",
        ".numeric.asanyarray",
        "__future__.print_function",
        ".umath",
        "._methods"
    ],
    "/tmp/numpy/numpy/core/function_base.py": [
        "__future__.division",
        ".numeric",
        "warnings",
        ".numeric.NaN",
        "__future__.absolute_import",
        ".numeric.asanyarray",
        "operator",
        ".numeric.result_type",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/generate_numpy_api.py": [
        "genapi.GlobalVarApi",
        "__future__.division",
        "genapi.BoolValuesApi",
        "genapi",
        "genapi.TypeApi",
        "genapi.FunctionApi",
        "numpy_api",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/getlimits.py": [
        "__future__.division",
        ".machar.MachAr",
        ".numeric",
        "__future__.absolute_import",
        ".numeric.array",
        "__future__.print_function",
        ".numerictypes"
    ],
    "/tmp/numpy/numpy/core/info.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/core/machar.py": [
        "math",
        "__future__.division",
        "numpy.core.numeric.errstate",
        "__future__.absolute_import",
        "numpy.core.fromnumeric.any",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/memmap.py": [
        "mmap",
        "os.path",
        "__future__.division",
        "numpy.compat.basestring",
        "numpy.compat.long",
        "numpy.compat.is_pathlib_path",
        ".numeric.dtype",
        ".numeric.uint8",
        "__future__.absolute_import",
        "__future__.print_function",
        "numpy",
        ".numeric.ndarray"
    ],
    "/tmp/numpy/numpy/core/numeric.py": [
        "numpy.eye",
        ".multiarray.putmask",
        ".umath.UFUNC_BUFSIZE_DEFAULT",
        ".umath.NAN",
        "__future__.absolute_import",
        ".multiarray.can_cast",
        ".fromnumeric",
        "__builtin__",
        ".numerictypes.intc",
        "collections",
        ".multiarray.empty_like",
        ".multiarray.lexsort",
        ".numerictypes.complex_",
        ".umath.ERR_RAISE",
        ".multiarray.fromfile",
        ".multiarray.arange",
        ".multiarray.where",
        ".multiarray.set_numeric_ops",
        ".numerictypes.longlong",
        ".multiarray.MAY_SHARE_BOUNDS",
        ".arrayprint.get_printoptions",
        ".umath",
        ".umath.ERR_WARN",
        ".multiarray.promote_types",
        ".multiarray.min_scalar_type",
        ".multiarray.concatenate",
        ".multiarray.vdot",
        ".arrayprint.array2string",
        ".arrayprint.set_printoptions",
        "__future__.print_function",
        ".umath.ERR_PRINT",
        ".fromnumeric",
        ".multiarray.matmul",
        ".numerictypes.float_",
        ".multiarray.BUFSIZE",
        ".multiarray.fromiter",
        ".multiarray.RAISE",
        ".multiarray.CLIP",
        ".multiarray.dtype",
        ".multiarray._fastCopyAndTranspose",
        "operator",
        ".multiarray.array",
        ".multiarray.nditer",
        ".umath.invert",
        ".multiarray.zeros",
        ".multiarray.inner",
        ".numerictypes",
        ".numerictypes.int_",
        ".multiarray.MAXDIMS",
        ".multiarray.empty",
        ".multiarray",
        "itertools",
        ".numerictypes.bool_",
        ".multiarray.int_asbuffer",
        ".multiarray.broadcast",
        ".multiarray.copyto",
        ".multiarray.frombuffer",
        ".multiarray.nested_iters",
        ".umath",
        "cPickle",
        "__future__.division",
        ".multiarray.WRAP",
        ".multiarray.flatiter",
        ".multiarray.MAY_SHARE_EXACT",
        ".umath.ERR_IGNORE",
        "._internal.TooHardError",
        ".umath.ERR_LOG",
        ".umath.ERR_DEFAULT",
        "numpy",
        ".umath.sin",
        ".multiarray.compare_chararrays",
        "warnings",
        ".multiarray.ALLOW_THREADS",
        ".multiarray.may_share_memory",
        "sys",
        ".numerictypes",
        ".multiarray.ndarray",
        ".umath.ERR_CALL",
        ".multiarray.fromstring",
        ".umath.PINF",
        ".multiarray.shares_memory",
        ".multiarray.result_type",
        ".multiarray.dot"
    ],
    "/tmp/numpy/numpy/core/numerictypes.py": [
        "numpy.core.multiarray.typeinfo",
        "__future__.absolute_import",
        "__builtin__.unicode",
        "numpy.core.multiarray.busday_count",
        "__future__.division",
        "numpy.core.multiarray.busdaycalendar",
        "numpy.compat.bytes",
        "numpy.core.multiarray.datetime_as_string",
        "__future__.print_function",
        "numpy.core.multiarray.is_busday",
        "numpy.core.multiarray.dtype",
        "__builtin__.float",
        "numpy.core.multiarray.array",
        "numpy.core.multiarray.busday_offset",
        "numpy.core.multiarray.empty",
        "types",
        "__builtin__.str",
        "__builtin__.int",
        "numbers",
        "__builtin__.complex",
        "__builtin__.bool",
        "__builtin__.object",
        "sys",
        "numpy.core.multiarray.ndarray",
        "numpy.core.multiarray.datetime_data"
    ],
    "/tmp/numpy/numpy/core/records.py": [
        "__future__.absolute_import",
        "numpy.compat.long",
        "__future__.print_function",
        "__future__.division",
        "sys",
        "numpy.compat.isfileobj",
        ".numerictypes",
        "numpy.compat.bytes",
        ".numeric",
        "os"
    ],
    "/tmp/numpy/numpy/core/setup.py": [
        "numpy.distutils.misc_util.get_build_architecture",
        "numpy.distutils.system_info.get_info",
        "numpy.distutils.misc_util.Configuration",
        "numpy.distutils.misc_util.dot_join",
        "numpy.distutils.misc_util.get_cmd",
        "numpy.distutils.misc_util.get_cmd",
        "numpy._build_utils.apple_accelerate.uses_accelerate_framework",
        "distutils.sysconfig.get_config_var",
        "numpy._build_utils.apple_accelerate.get_sgemv_fix",
        "numpy.compat.npy_load_module",
        "setup_common",
        "numpy.distutils.log",
        "__future__.division",
        "warnings",
        "sys",
        "distutils.dep_util.newer",
        "copy",
        "__future__.print_function",
        "os.path.join",
        "os",
        "numpy.distutils.core.setup",
        "pickle"
    ],
    "/tmp/numpy/numpy/core/setup_common.py": [
        "distutils.version.LooseVersion",
        "__future__.absolute_import",
        "numpy.distutils.misc_util.mingw32",
        "binascii",
        "__future__.division",
        "warnings",
        "sys",
        "copy",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/shape_base.py": [
        "__future__.division",
        ".numeric",
        "__future__.absolute_import",
        ".numeric.asanyarray",
        ".numeric.newaxis",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/tests/test_abc.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numbers",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.core.numerictypes.sctypes",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/tests/test_api.py": [
        "numpy.testing.assert_equal",
        "numpy.compat.sixu",
        "numpy.testing.assert_raises",
        "__future__.absolute_import",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "sys",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.HAS_REFCOUNT"
    ],
    "/tmp/numpy/numpy/core/tests/test_arrayprint.py": [
        "sys",
        "__future__.division",
        "numpy.testing.assert_equal",
        "numpy.compat.sixu",
        "__future__.absolute_import",
        "sys",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/tests/test_datetime.py": [
        "__future__.division",
        "numpy.testing.dec",
        "numpy.testing.assert_equal",
        "pytz.timezone",
        "numpy.testing.assert_warns",
        "numpy",
        "__future__.absolute_import",
        "datetime",
        "numpy.testing.TestCase",
        "numpy.compat.asbytes",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "pickle",
        "numpy.testing.suppress_warnings",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/core/tests/test_defchararray.py": [
        "numpy.testing.assert_equal",
        "numpy.compat.sixu",
        "__future__.absolute_import",
        "numpy.testing.assert_",
        "numpy.compat.asbytes_nested",
        "numpy.core.multiarray._vec_string",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_array_equal",
        "numpy.compat.asbytes",
        "__future__.division",
        "sys",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/tests/test_deprecations.py": [
        "operator",
        "numpy.testing.assert_warns",
        "__future__.absolute_import",
        "datetime",
        "operator",
        "numpy",
        "__future__.division",
        "warnings",
        "pytz",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "sys",
        "numpy.testing.dec"
    ],
    "/tmp/numpy/numpy/core/tests/test_dtype.py": [
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy.core.test_rational.rational",
        "__future__.division",
        "sys",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.testing.dec"
    ],
    "/tmp/numpy/numpy/core/tests/test_einsum.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "numpy.testing.suppress_warnings",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_array_equal",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/core/tests/test_errstate.py": [
        "__future__.division",
        "numpy.testing.dec",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "platform",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/tests/test_extint128.py": [
        "traceback",
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "contextlib",
        "operator",
        "itertools",
        "numpy",
        "__future__.division",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.core.multiarray_tests"
    ],
    "/tmp/numpy/numpy/core/tests/test_function_base.py": [
        "numpy.testing.assert_equal",
        "numpy.dtype",
        "__future__.absolute_import",
        "numpy.array",
        "numpy.isnan",
        "numpy.testing.assert_allclose",
        "numpy.sqrt",
        "numpy.testing.TestCase",
        "__future__.print_function",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "numpy.logspace",
        "numpy.linspace",
        "numpy.typecodes",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.ndarray",
        "numpy.testing.assert_raises",
        "numpy.geomspace",
        "numpy.arange",
        "numpy.testing.suppress_warnings",
        "numpy.finfo"
    ],
    "/tmp/numpy/numpy/core/tests/test_getlimits.py": [
        "numpy.longdouble",
        "__future__.absolute_import",
        "numpy.single",
        "numpy.testing.assert_equal",
        "numpy.core.iinfo",
        "numpy.testing.TestCase",
        "numpy",
        "__future__.division",
        "numpy.half",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.double",
        "numpy.core.finfo"
    ],
    "/tmp/numpy/numpy/core/tests/test_half.py": [
        "numpy.float16",
        "__future__.division",
        "numpy.testing.assert_equal",
        "numpy.float64",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "platform",
        "numpy.uint16",
        "numpy.float32",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.testing.dec",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/tests/test_indexerrors.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/core/tests/test_indexing.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_warns",
        "functools",
        "__future__.absolute_import",
        "operator",
        "numpy.core.multiarray_tests.array_indexing",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "itertools.product",
        "warnings",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.HAS_REFCOUNT",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/core/tests/test_item_selection.py": [
        "__future__.division",
        "numpy.testing.assert_array_equal",
        "numpy.testing.HAS_REFCOUNT",
        "__future__.absolute_import",
        "sys",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/core/tests/test_longdouble.py": [
        "numpy.testing.assert_equal",
        "numpy.compat.sixu",
        "numpy.testing.assert_raises",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "__future__.division",
        "test_print.in_foreign_locale",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_array_equal",
        "numpy.testing.temppath",
        "numpy.testing.dec"
    ],
    "/tmp/numpy/numpy/core/tests/test_machar.py": [
        "__future__.division",
        "numpy.core.machar.MachAr",
        "numpy.errstate",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy.array",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.core.numerictypes"
    ],
    "/tmp/numpy/numpy/core/tests/test_mem_overlap.py": [
        "numpy.testing.assert_equal",
        "numpy.core.multiarray_tests.solve_diophantine",
        "__future__.absolute_import",
        "numpy.core.multiarray_tests.internal_overlap",
        "numpy.compat.long",
        "numpy",
        "__future__.division",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "itertools",
        "numpy.lib.stride_tricks.as_strided"
    ],
    "/tmp/numpy/numpy/core/tests/test_memmap.py": [
        "__future__.print_function",
        "numpy.testing.assert_equal",
        "tempfile.mkdtemp",
        "__future__.absolute_import",
        "numpy.allclose",
        "tempfile.mktemp",
        "shutil",
        "numpy.isscalar",
        "numpy.asarray",
        "numpy.sum",
        "numpy.testing.TestCase",
        "numpy.add",
        "tempfile.TemporaryFile",
        "numpy.compat.Path",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "numpy.product",
        "sys",
        "numpy.memmap",
        "numpy.multiply",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.subtract",
        "numpy.ndarray",
        "os",
        "numpy.average",
        "numpy.arange",
        "numpy.testing.suppress_warnings",
        "numpy.testing.dec",
        "tempfile.NamedTemporaryFile"
    ],
    "/tmp/numpy/numpy/core/tests/test_multiarray.py": [
        "numpy.core.multiarray_tests.test_int_subclass",
        "numpy.core.multiarray_tests.incref_elide",
        "numpy.core.multiarray_tests.incref_elide_l",
        "numpy.core.multiarray_tests.IsPythonScalar",
        "pickle",
        "numpy.core.multiarray.dot",
        "numpy.core.multiarray.dot",
        "numpy.core.multiarray.dot",
        "operator",
        "numpy.core._internal._dtype_from_pep3118",
        "__future__.absolute_import",
        "gc",
        "numpy.testing.assert_array_almost_equal",
        "numpy.compat.unicode",
        "numpy.core.multiarray.memorysimpleview",
        "numpy.core.multiarray_tests.test_as_c_array",
        "__builtin__",
        "tempfile",
        "numpy.testing.runstring",
        "collections",
        "numpy.testing.assert_almost_equal",
        "test_print.in_foreign_locale",
        "numpy.compat.getexception",
        "numpy.core.multiarray_tests.test_neighborhood_iterator",
        "numpy.core.multiarray_tests.test_pydatamem_seteventhook_end",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_raises",
        "numpy.testing.temppath",
        "numpy.compat.sixu",
        "numpy.testing.assert_allclose",
        "warnings",
        "numpy.core.multiarray_tests.get_buffer_info",
        "ctypes",
        "__future__.print_function",
        "numpy.testing.HAS_REFCOUNT",
        "itertools",
        "os",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_array_less",
        "operator",
        "numpy.core.multiarray_tests.test_inplace_increment",
        "numpy.core.multiarray_tests.test_pydatamem_seteventhook_start",
        "numpy.compat.strchar",
        "numpy.compat.asbytes",
        "datetime.timedelta",
        "decimal.Decimal",
        "numpy.testing.suppress_warnings",
        "numpy.testing.dec",
        "__future__.division",
        "numpy.testing.assert_warns",
        "numpy.testing.SkipTest",
        "io",
        "shutil",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_array_equal",
        "numpy.core.multiarray_tests.test_neighborhood_iterator_oob",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.IS_PYPY"
    ],
    "/tmp/numpy/numpy/core/tests/test_nditer.py": [
        "numpy.all",
        "__future__.absolute_import",
        "numpy.core.multiarray_tests.test_nditer_too_large",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_raises",
        "numpy.arange",
        "numpy.compat.sixu",
        "__future__.print_function",
        "numpy.testing.assert_equal",
        "numpy.array",
        "numpy.testing.assert_",
        "numpy.nditer",
        "numpy.testing.HAS_REFCOUNT",
        "numpy.compat.asbytes",
        "numpy.testing.suppress_warnings",
        "numpy.testing.dec",
        "__future__.division",
        "numpy.testing.assert_warns",
        "numpy",
        "numpy.testing.assert_array_equal",
        "sys"
    ],
    "/tmp/numpy/numpy/core/tests/test_numeric.py": [
        "itertools.permutations",
        "itertools.combinations",
        "numpy.random.rand",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.testing.assert_array_almost_equal",
        "numpy.core.umath",
        "numpy.random.randn",
        "numpy.random.randint",
        "numpy.testing.TestCase",
        "platform",
        "numpy",
        "numpy.testing.assert_array_equal",
        "numpy.testing.assert_raises_regex",
        "__future__.division",
        "warnings",
        "decimal.Decimal",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "itertools",
        "numpy.testing.dec",
        "numpy.testing.HAS_REFCOUNT"
    ],
    "/tmp/numpy/numpy/core/tests/test_numerictypes.py": [
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.compat.asunicode",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.compat.asbytes",
        "__future__.division",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/tests/test_print.py": [
        "numpy.testing.assert_equal",
        "locale",
        "numpy.testing.SkipTest",
        "__future__.absolute_import",
        "numpy",
        "__future__.division",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "StringIO.StringIO",
        "nose"
    ],
    "/tmp/numpy/numpy/core/tests/test_records.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_warns",
        "numpy.testing.assert_raises",
        "__future__.absolute_import",
        "sys",
        "numpy.testing.TestCase",
        "collections",
        "numpy.compat.asbytes",
        "numpy",
        "os.path",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "pickle",
        "numpy.testing.assert_array_equal",
        "__future__.print_function",
        "numpy.testing.assert_array_almost_equal"
    ],
    "/tmp/numpy/numpy/core/tests/test_regression.py": [
        "math.radians",
        "numpy",
        "md5.new",
        "numpy",
        "re",
        "numpy",
        "operator",
        "pickle",
        "numpy.testing.assert_equal",
        "itertools.chain",
        "__future__.division",
        "numpy.testing.assert_warns",
        "numpy.compat.sixu",
        "__future__.absolute_import",
        "gc",
        "numpy.testing.assert_array_almost_equal",
        "copy",
        "tempfile",
        "numpy.compat.long",
        "numpy.testing.TestCase",
        "platform",
        "numpy",
        "numpy.testing.assert_array_equal",
        "io.BytesIO",
        "numpy.testing.assert_almost_equal",
        "numpy.testing.utils._assert_valid_refcount",
        "sys",
        "os.path",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.testing.IS_PYPY",
        "numpy.compat.asbytes_nested",
        "numpy.compat.asunicode",
        "numpy.compat.asbytes",
        "numpy.testing.suppress_warnings",
        "numpy.testing.dec",
        "pickle",
        "numpy.testing.utils.HAS_REFCOUNT"
    ],
    "/tmp/numpy/numpy/core/tests/test_scalarinherit.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/tests/test_scalarmath.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "operator",
        "numpy.testing.TestCase",
        "__future__.print_function",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_raises",
        "numpy.testing.IS_PYPY",
        "itertools",
        "numpy.testing.suppress_warnings",
        "numpy.testing.utils._gen_alignment_data"
    ],
    "/tmp/numpy/numpy/core/tests/test_scalarprint.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/core/tests/test_shape_base.py": [
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.core.atleast_2d",
        "numpy.core.array",
        "numpy.compat.long",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_array_equal",
        "numpy.testing.assert_raises_regex",
        "numpy.core.concatenate",
        "__future__.division",
        "numpy.core.hstack",
        "numpy.core.atleast_1d",
        "numpy.core.atleast_3d",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.core.stack",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.core.vstack",
        "numpy.core.arange",
        "numpy.core.newaxis"
    ],
    "/tmp/numpy/numpy/core/tests/test_ufunc.py": [
        "pickle",
        "pickle",
        "numpy.core.struct_ufunc_test",
        "numpy.core.test_rational.test_add",
        "__future__.division",
        "numpy.core.test_rational.test_add_rationals",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "numpy.core.umath_tests",
        "numpy.testing.assert_no_warnings",
        "numpy.testing.assert_array_equal",
        "numpy.testing.assert_array_almost_equal",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy.compat.asbytes",
        "numpy.core.test_rational.rational",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.core.operand_flag_tests",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/core/tests/test_umath.py": [
        "cmath",
        "__future__.absolute_import",
        "numpy.testing.assert_array_almost_equal",
        "numpy.testing.TestCase",
        "platform",
        "numpy.testing.assert_raises",
        "numpy.testing.assert_almost_equal",
        "numpy.testing.run_module_suite",
        "numpy.testing.utils._gen_alignment_data",
        "numpy.testing.assert_allclose",
        "__future__.print_function",
        "numpy.testing.assert_equal",
        "numpy.testing.suppress_warnings",
        "numpy.testing.dec",
        "__future__.division",
        "itertools",
        "numpy",
        "numpy.testing.assert_array_equal",
        "warnings",
        "numpy.core.umath",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.assert_no_warnings"
    ],
    "/tmp/numpy/numpy/core/tests/test_umath_complex.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "platform",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "numpy.core.umath",
        "sys",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.dec"
    ],
    "/tmp/numpy/numpy/core/tests/test_unicode.py": [
        "numpy.testing.assert_equal",
        "numpy.compat.sixu",
        "__future__.absolute_import",
        "numpy.compat.unicode",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_array_equal",
        "array",
        "numpy.compat.asbytes",
        "__future__.division",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/ctypeslib.py": [
        "warnings",
        "numpy.distutils.misc_util.get_shared_lib_extension",
        "__future__.print_function",
        "__future__.absolute_import",
        "numpy.array",
        "numpy.core.multiarray.flagsobj",
        "numpy.ndarray",
        "__future__.division",
        "numpy.core._internal",
        "numpy.integer",
        "numpy.deprecate",
        "numpy.core.multiarray._flagdict",
        "numpy.dtype",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/__config__.py": [],
    "/tmp/numpy/numpy/distutils/__init__.py": [
        "__future__.division",
        "numpy.testing.nosetester._numpy_tester",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/__version__.py": [
        "__future__.division",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/ccompiler.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "numpy.distutils.fcompiler.has_f90_header",
        "multiprocessing.pool",
        "numpy.distutils.fcompiler.is_f_file",
        "distutils.ccompiler",
        "distutils.errors.DistutilsPlatformError",
        "__future__.absolute_import",
        "distutils.errors.DistutilsModuleError",
        "string",
        "distutils.sysconfig.customize_compiler",
        "numpy.distutils.log",
        "numpy.distutils.misc_util.mingw32",
        "numpy.distutils.misc_util.get_num_build_jobs",
        "re",
        "numpy.distutils.compat.get_exception",
        "__future__.print_function",
        "__future__.division",
        "distutils.errors.DistutilsExecError",
        "numpy.distutils.misc_util.cyg2win32",
        "sys",
        "numpy.distutils.misc_util.is_sequence",
        "distutils.version.LooseVersion",
        "numpy.distutils.misc_util.quote_args",
        "copy.copy",
        "numpy.distutils.exec_command.exec_command",
        "types",
        "distutils.ccompiler",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/command/__init__.py": [
        "__future__.division",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/command/autodist.py": [
        "__future__.division",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/command/bdist_rpm.py": [
        "__future__.division",
        "__future__.absolute_import",
        "sys",
        "distutils.command.bdist_rpm.bdist_rpm",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/command/build.py": [
        "__future__.division",
        "numpy.distutils.command.config_compiler.show_fortran_compilers",
        "__future__.absolute_import",
        "sys",
        "distutils.util.get_platform",
        "distutils.command.build.build",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/command/build_clib.py": [
        "numpy.distutils.fcompiler.new_fcompiler",
        "distutils.ccompiler.new_compiler",
        "numpy.distutils.fcompiler.new_fcompiler",
        "distutils.errors.DistutilsFileError",
        "__future__.absolute_import",
        "shutil",
        "numpy.distutils.misc_util.get_numpy_include_dirs",
        "numpy.distutils.log",
        "distutils.errors.DistutilsSetupError",
        "distutils.dep_util.newer_group",
        "numpy.distutils.misc_util.filter_sources",
        "__future__.division",
        "glob.glob",
        "numpy.distutils.misc_util.is_sequence",
        "distutils.errors.DistutilsError",
        "__future__.print_function",
        "numpy.distutils.misc_util.has_f_sources",
        "distutils.command.build_clib.build_clib",
        "numpy.distutils.misc_util.get_lib_source_files",
        "numpy.distutils.misc_util.has_cxx_sources",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/command/build_ext.py": [
        "distutils.ccompiler.new_compiler",
        "numpy.distutils.fcompiler.new_fcompiler",
        "distutils.errors.DistutilsFileError",
        "numpy.distutils.misc_util.get_ext_source_files",
        "__future__.absolute_import",
        "sets.Set",
        "numpy.distutils.misc_util.get_numpy_include_dirs",
        "numpy.distutils.system_info.combine_paths",
        "numpy.distutils.log",
        "distutils.errors.DistutilsSetupError",
        "distutils.errors.DistutilsError",
        "distutils.dep_util.newer_group",
        "numpy.distutils.misc_util.filter_sources",
        "__future__.division",
        "distutils.file_util.copy_file",
        "glob.glob",
        "numpy.distutils.misc_util.is_sequence",
        "numpy.distutils.exec_command.exec_command",
        "__future__.print_function",
        "distutils.command.build_ext.build_ext",
        "numpy.distutils.misc_util.has_f_sources",
        "numpy.distutils.command.config_compiler.show_fortran_compilers",
        "numpy.distutils.misc_util.has_cxx_sources",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/command/build_py.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.distutils.misc_util.is_string",
        "distutils.command.build_py.build_py",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/command/build_scripts.py": [
        "numpy.distutils.misc_util.get_script_files",
        "__future__.division",
        "numpy.distutils.log",
        "__future__.absolute_import",
        "numpy.distutils.misc_util.is_string",
        "distutils.command.build_scripts.build_scripts",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/command/build_src.py": [
        "numpy.distutils.misc_util.get_data_files",
        "numpy.f2py",
        "distutils.dep_util.newer",
        "__future__.absolute_import",
        "distutils.command.build_ext",
        "numpy.distutils.log",
        "re",
        "distutils.errors.DistutilsSetupError",
        "numpy.distutils.misc_util.is_string",
        "numpy.distutils.from_template.process_file",
        "distutils.dep_util.newer_group",
        "__future__.division",
        "numpy.distutils.misc_util.get_cmd",
        "sys",
        "numpy.distutils.misc_util.is_sequence",
        "distutils.util.get_platform",
        "copy",
        "numpy.distutils.conv_template.process_file",
        "distutils.errors.DistutilsError",
        "__future__.print_function",
        "numpy.distutils.misc_util.appendpath",
        "shlex",
        "numpy.distutils.misc_util.fortran_ext_match",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/command/config.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "numpy.distutils.fcompiler.new_fcompiler",
        "distutils.msvc9compiler",
        "distutils.errors.DistutilsExecError",
        "distutils.ccompiler.CompileError",
        "distutils.ccompiler.LinkError",
        "distutils.ccompiler.CompileError",
        "distutils",
        "__future__.absolute_import",
        "distutils.command.config.config",
        "numpy.distutils.command.autodist.check_gcc_function_attribute",
        "distutils.log",
        "numpy.distutils.command.autodist.check_gcc_variable_attribute",
        "numpy.distutils.command.autodist.check_inline",
        "numpy.distutils.compat.get_exception",
        "distutils.ccompiler.CompileError",
        "__future__.division",
        "warnings",
        "distutils.file_util.copy_file",
        "sys",
        "numpy.distutils.mingw32ccompiler.generate_manifest",
        "numpy.distutils.exec_command.exec_command",
        "__future__.print_function",
        "signal",
        "numpy.distutils.command.autodist.check_compiler_gcc4",
        "distutils.command.config.LANG_EXT",
        "numpy.distutils.command.autodist.check_restrict",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/command/config_compiler.py": [
        "numpy.distutils.fcompiler.show_fcompilers",
        "distutils.core",
        "__future__.division",
        "__future__.absolute_import",
        "distutils.core.Command",
        "__future__.print_function",
        "numpy.distutils.log"
    ],
    "/tmp/numpy/numpy/distutils/command/develop.py": [
        "__future__.division",
        "setuptools.command.develop.develop",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/distutils/command/egg_info.py": [
        "warnings",
        "__future__.division",
        "setuptools.command.egg_info.egg_info",
        "__future__.absolute_import",
        "sys",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/command/install.py": [
        "distutils.command.install.install",
        "__future__.division",
        "distutils.command.install",
        "__future__.absolute_import",
        "sys",
        "distutils.file_util.write_file",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/command/install_clib.py": [
        "__future__.division",
        "numpy.distutils.misc_util.get_cmd",
        "__future__.absolute_import",
        "distutils.core.Command",
        "__future__.print_function",
        "os",
        "distutils.ccompiler.new_compiler"
    ],
    "/tmp/numpy/numpy/distutils/command/install_data.py": [
        "__future__.division",
        "__future__.absolute_import",
        "sys",
        "distutils.command.install_data.install_data",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/command/install_headers.py": [
        "__future__.division",
        "__future__.absolute_import",
        "os",
        "__future__.print_function",
        "distutils.command.install_headers.install_headers"
    ],
    "/tmp/numpy/numpy/distutils/command/sdist.py": [
        "__future__.division",
        "distutils.command.sdist.sdist",
        "__future__.absolute_import",
        "sys",
        "numpy.distutils.misc_util.get_data_files",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/compat.py": [
        "sys",
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/distutils/conv_template.py": [
        "__future__.absolute_import",
        "re",
        "numpy.distutils.compat.get_exception",
        "__future__.division",
        "sys",
        "__future__.print_function",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/core.py": [
        "numpy.distutils.command.bdist_rpm",
        "distutils.dist",
        "numpy.distutils.command.sdist",
        "__future__.absolute_import",
        "numpy.distutils.command.build_ext",
        "numpy.distutils.command.develop",
        "numpy.distutils.command.build_py",
        "numpy.distutils.command.install_headers",
        "numpy.distutils.command.config_compiler",
        "distutils.core.setup",
        "numpy.distutils.misc_util.is_string",
        "numpy.distutils.command.build",
        "numpy.distutils.command.config",
        "__future__.division",
        "numpy.distutils.command.install",
        "warnings",
        "sys",
        "numpy.distutils.command.build_src",
        "numpy.distutils.misc_util.is_sequence",
        "numpy.distutils.command.build_clib",
        "numpy.distutils.command.build_scripts",
        "__future__.print_function",
        "numpy.distutils.command.install_data",
        "numpy.distutils.command.egg_info",
        "distutils.core",
        "numpy.distutils.command.install_clib",
        "setuptools.command.easy_install",
        "setuptools.command.bdist_egg",
        "numpy.distutils.numpy_distribution.NumpyDistribution"
    ],
    "/tmp/numpy/numpy/distutils/cpuinfo.py": [
        "_winreg",
        "__future__.absolute_import",
        "commands.getstatusoutput",
        "re",
        "platform",
        "numpy.distutils.compat.get_exception",
        "__future__.print_function",
        "__future__.division",
        "warnings",
        "types",
        "sys",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/environment.py": [
        "__future__.division",
        "__future__.absolute_import",
        "distutils.dist.Distribution",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/exec_command.py": [
        "numpy.compat.open_latin1",
        "__future__.absolute_import",
        "numpy.distutils.misc_util.make_temp_file",
        "numpy.distutils.log",
        "numpy.distutils.compat.get_exception",
        "__future__.division",
        "sys",
        "numpy.distutils.misc_util.is_sequence",
        "__future__.print_function",
        "shlex",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/extension.py": [
        "warnings",
        "distutils.extension.Extension",
        "__future__.division",
        "__future__.absolute_import",
        "sys",
        "re",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/__init__.py": [
        "glob.glob",
        "numpy.distutils.core.get_distribution",
        "numpy.distutils.command.config_compiler.config_fc",
        "distutils.dist.Distribution",
        "sets.Set",
        "numpy.distutils.ccompiler.CCompiler",
        "numpy.compat.open_latin1",
        "numpy.distutils.misc_util.all_strings",
        "__future__.absolute_import",
        "distutils.errors.DistutilsModuleError",
        "numpy.distutils.misc_util.make_temp_file",
        "distutils.fancy_getopt.FancyGetopt",
        "numpy.distutils.exec_command.find_executable",
        "distutils.util.split_quoted",
        "numpy.distutils.misc_util.get_shared_lib_extension",
        "numpy.distutils.log",
        "numpy.distutils.misc_util.is_string",
        "re",
        "numpy.distutils.compat.get_exception",
        "__future__.print_function",
        "distutils.errors.CompileError",
        "__future__.division",
        "distutils.errors.LinkError",
        "distutils.errors.DistutilsExecError",
        "numpy.distutils.ccompiler.gen_lib_options",
        "sys",
        "numpy.distutils.misc_util.is_sequence",
        "distutils.util.strtobool",
        "numpy.distutils.environment.EnvironmentConfig",
        "os",
        "distutils.sysconfig.get_python_lib"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/absoft.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "numpy.distutils.misc_util.cyg2win32",
        "distutils.log",
        "__future__.absolute_import",
        "numpy.distutils.fcompiler.dummy_fortran_file",
        "numpy.distutils.fcompiler.new_fcompiler",
        "os",
        "numpy.distutils.cpuinfo.cpu",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/compaq.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "distutils.errors.DistutilsPlatformError",
        "numpy.distutils.fcompiler.new_fcompiler",
        "distutils.log",
        "__future__.absolute_import",
        "sys",
        "numpy.distutils.compat.get_exception",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/g95.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "distutils.log",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/gnu.py": [
        "distutils.sysconfig",
        "distutils.sysconfig",
        "numpy.distutils.fcompiler.FCompiler",
        "numpy.distutils.misc_util.msvc_runtime_library",
        "__future__.absolute_import",
        "distutils.log",
        "platform",
        "tempfile",
        "subprocess.STDOUT",
        "subprocess.PIPE",
        "re",
        "numpy.distutils.compat.get_exception",
        "__future__.division",
        "warnings",
        "subprocess.Popen",
        "sys",
        "numpy.distutils.exec_command.exec_command",
        "__future__.print_function",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/hpux.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "distutils.log",
        "__future__.absolute_import",
        "numpy.distutils.fcompiler.new_fcompiler",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/ibm.py": [
        "distutils.version.LooseVersion",
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "numpy.distutils.exec_command.find_executable",
        "distutils.log",
        "__future__.absolute_import",
        "sys",
        "re",
        "numpy.distutils.misc_util.make_temp_file",
        "os",
        "numpy.distutils.exec_command.exec_command",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/intel.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "distutils.log",
        "__future__.absolute_import",
        "sys",
        "numpy.distutils.fcompiler.dummy_fortran_file",
        "numpy.distutils.fcompiler.new_fcompiler",
        "numpy.distutils.ccompiler.simple_version_match",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/lahey.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "distutils.log",
        "__future__.absolute_import",
        "numpy.distutils.fcompiler.new_fcompiler",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/mips.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "numpy.distutils.fcompiler.new_fcompiler",
        "__future__.absolute_import",
        "numpy.distutils.cpuinfo.cpu",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/nag.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "distutils.log",
        "__future__.absolute_import",
        "sys",
        "numpy.distutils.fcompiler.new_fcompiler",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/none.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "distutils.log",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/pathf95.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "numpy.distutils.fcompiler.new_fcompiler",
        "distutils.log",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/pg.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "distutils.log",
        "__future__.absolute_import",
        "sys.platform",
        "numpy.distutils.fcompiler.new_fcompiler",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/sun.py": [
        "numpy.distutils.fcompiler.FCompiler",
        "__future__.division",
        "distutils.log",
        "__future__.absolute_import",
        "numpy.distutils.fcompiler.new_fcompiler",
        "numpy.distutils.ccompiler.simple_version_match",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/fcompiler/vast.py": [
        "__future__.division",
        "distutils.log",
        "numpy.distutils.fcompiler.gnu.GnuFCompiler",
        "__future__.absolute_import",
        "numpy.distutils.fcompiler.new_fcompiler",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/from_template.py": [
        "__future__.absolute_import",
        "re",
        "__future__.division",
        "sys",
        "__future__.print_function",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/info.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/distutils/intelccompiler.py": [
        "__future__.division",
        "numpy.distutils.exec_command.find_executable",
        "__future__.absolute_import",
        "distutils.unixccompiler.UnixCCompiler",
        "platform",
        "numpy.distutils.msvc9compiler.MSVCCompiler",
        "numpy.distutils.ccompiler.simple_version_match",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/lib2def.py": [
        "subprocess",
        "re",
        "__future__.division",
        "sys",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/line_endings.py": [
        "__future__.division",
        "__future__.absolute_import",
        "sys",
        "re",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/log.py": [
        "__future__.division",
        "numpy.distutils.misc_util.default_text",
        "distutils.log.Log",
        "numpy.distutils.misc_util.cyan_text",
        "numpy.distutils.misc_util.red_text",
        "__future__.absolute_import",
        "sys",
        "numpy.distutils.misc_util.is_string",
        "distutils.log._global_log",
        "numpy.distutils.misc_util.is_sequence",
        "distutils.log",
        "__future__.print_function",
        "numpy.distutils.misc_util.green_text"
    ],
    "/tmp/numpy/numpy/distutils/mingw32ccompiler.py": [
        "re",
        "numpy.distutils.lib2def",
        "distutils.cygwinccompiler",
        "numpy.distutils.misc_util.msvc_runtime_library",
        "__future__.absolute_import",
        "subprocess",
        "msvcrt",
        "numpy.distutils.log",
        "distutils.unixccompiler.UnixCCompiler",
        "re",
        "__future__.print_function",
        "__future__.division",
        "numpy.distutils.misc_util.get_build_architecture",
        "distutils.version.StrictVersion",
        "distutils.errors.UnknownFileError",
        "sys",
        "distutils.msvccompiler.get_build_version",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/misc_util.py": [
        "numpy.distutils.core.get_distribution",
        "curses",
        "numpy.distutils.core.get_distribution",
        "numpy.distutils.core.Extension",
        "pprint.pformat",
        "numpy.distutils.core.Extension",
        ".system_info.dict_append",
        ".system_info.get_info",
        "distutils.core",
        "distutils.errors.DistutilsInternalError",
        "numpy",
        "numpy",
        "numpy.distutils.npy_pkg_config.read_config",
        "numpy.distutils.npy_pkg_config.parse_flags",
        "__builtin__",
        "warnings",
        "distutils.dir_util.mkpath",
        "numpy.distutils.system_info.system_info",
        "distutils.msvccompiler.get_build_architecture",
        "atexit",
        "atexit",
        "distutils",
        "__future__.absolute_import",
        "subprocess",
        "tempfile",
        "__future__.division",
        "dummy_threading.local",
        "distutils.errors.DistutilsError",
        "sets.Set",
        "atexit",
        "re",
        "numpy.distutils.compat.get_exception",
        "glob",
        "__future__.print_function",
        "os",
        "numpy.compat.npy_load_module",
        "numpy.compat.basestring",
        "copy",
        "shutil",
        "sys"
    ],
    "/tmp/numpy/numpy/distutils/msvc9compiler.py": [
        "__future__.division",
        "distutils.msvc9compiler.MSVCCompiler",
        "__future__.absolute_import",
        ".system_info.platform_bits",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/msvccompiler.py": [
        "__future__.division",
        "distutils.msvccompiler.MSVCCompiler",
        "__future__.absolute_import",
        ".system_info.platform_bits",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/npy_pkg_config.py": [
        "__future__.absolute_import",
        "configparser.RawConfigParser",
        "re",
        "optparse.OptionParser",
        "__future__.division",
        "glob",
        "sys",
        "__future__.print_function",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/numpy_distribution.py": [
        "__future__.division",
        "distutils.core.Distribution",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/distutils/pathccompiler.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import",
        "distutils.unixccompiler.UnixCCompiler"
    ],
    "/tmp/numpy/numpy/distutils/setup.py": [
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "numpy.distutils.core.setup",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/system_info.py": [
        ".cpuinfo.cpu",
        "numpy.f2py",
        "optparse",
        "inspect",
        "distutils.ccompiler",
        "__future__.absolute_import",
        "copy",
        "tempfile",
        "platform",
        "__future__.division",
        "distutils.errors.DistutilsError",
        "configparser.RawConfigParser",
        "functools.reduce",
        "numpy.distutils.exec_command.find_executable",
        "re",
        "numpy.distutils.compat.get_exception",
        "distutils.dist.Distribution",
        "__future__.print_function",
        "os",
        "numpy.distutils.misc_util.get_shared_lib_extension",
        "distutils.log",
        "numpy.distutils.misc_util.is_string",
        "configparser.NoOptionError",
        "distutils.util.get_platform",
        "numpy.distutils.command.config.config",
        "shutil",
        "warnings",
        "glob.glob",
        "sys",
        "numpy.distutils.misc_util.is_sequence",
        "numpy.distutils.exec_command.exec_command",
        "subprocess"
    ],
    "/tmp/numpy/numpy/distutils/tests/test_exec_command.py": [
        "__future__.division",
        "StringIO.StringIO",
        "__future__.absolute_import",
        "sys",
        "__future__.print_function",
        "os",
        "numpy.distutils.exec_command",
        "tempfile.TemporaryFile"
    ],
    "/tmp/numpy/numpy/distutils/tests/test_fcompiler_gnu.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.distutils.fcompiler",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/tests/test_fcompiler_intel.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.distutils.fcompiler",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/tests/test_misc_util.py": [
        "sys",
        "__future__.division",
        "numpy.distutils.misc_util.gpaths",
        "os.path.join",
        "numpy.distutils.misc_util.minrelpath",
        "os.path.sep",
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.distutils.misc_util.appendpath",
        "numpy.testing.TestCase",
        "numpy.testing.run_module_suite",
        "numpy.distutils.misc_util.get_info",
        "numpy.distutils.misc_util.get_shared_lib_extension",
        "os.path.dirname",
        "numpy.testing.assert_",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/tests/test_npy_pkg_config.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy.testing.temppath",
        "numpy.distutils.npy_pkg_config.read_config",
        "numpy.testing.run_module_suite",
        "os",
        "numpy.distutils.npy_pkg_config.parse_flags",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/distutils/tests/test_system_info.py": [
        "numpy.distutils.ccompiler",
        "numpy.testing.assert_equal",
        "tempfile.mkdtemp",
        "numpy.distutils.system_info.system_info",
        "shutil",
        "numpy.testing.TestCase",
        "numpy.distutils.system_info.default_include_dirs",
        "subprocess.PIPE",
        "tempfile.mkstemp",
        "__future__.division",
        "numpy.distutils.system_info.default_lib_dirs",
        "numpy.testing.decorators.skipif",
        "subprocess.Popen",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "distutils.errors.DistutilsError",
        "__future__.print_function",
        "numpy.distutils.system_info.ConfigParser",
        "os"
    ],
    "/tmp/numpy/numpy/distutils/unixccompiler.py": [
        "distutils.sysconfig.get_config_vars",
        "__future__.division",
        "distutils.errors.DistutilsExecError",
        "numpy.distutils.log",
        "numpy.distutils.ccompiler.replace_method",
        "__future__.absolute_import",
        "numpy.distutils.compat.get_exception",
        "distutils.unixccompiler",
        "distutils.errors.CompileError",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/doc/__init__.py": [
        "__future__.division",
        "__future__.absolute_import",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/doc/basics.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/broadcasting.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/byteswapping.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/constants.py": [
        "__future__.division",
        "textwrap",
        "__future__.absolute_import",
        "re",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/doc/creation.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/glossary.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/indexing.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/internals.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/misc.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/structured_arrays.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/subclassing.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/doc/ufuncs.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/dual.py": [
        "__future__.absolute_import",
        "numpy.linalg",
        "__future__.division",
        "numpy.lib.i0",
        "sys",
        "numpy.fft",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/__init__.py": [
        "tempfile",
        "numpy.distutils.exec_command.exec_command",
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.nosetester._numpy_tester",
        "sys",
        ".f2py2e",
        ".f2py_testing",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/__main__.py": [
        "__future__.division",
        "sys",
        "numpy.f2py.main",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/__version__.py": [
        "__future__.division",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/auxfuncs.py": [
        ".capi_maps.getctype",
        ".cfuncs",
        "__future__.absolute_import",
        "pprint",
        "__future__.division",
        "functools.reduce",
        "__future__.print_function",
        ".__version__",
        "sys",
        "types"
    ],
    "/tmp/numpy/numpy/f2py/capi_maps.py": [
        "__future__.absolute_import",
        ".cb_rules",
        ".auxfuncs",
        "re",
        ".crackfortran.markoutercomma",
        ".__version__",
        "__future__.division",
        "sys",
        "copy",
        "__future__.print_function",
        "os"
    ],
    "/tmp/numpy/numpy/f2py/cb_rules.py": [
        ".capi_maps",
        ".auxfuncs.dictappend",
        ".auxfuncs.isintent_out",
        ".auxfuncs.stripcomma",
        ".cfuncs",
        ".auxfuncs.l_not",
        ".auxfuncs.l_or",
        "__future__.absolute_import",
        ".auxfuncs.replace",
        ".auxfuncs.isstring",
        ".auxfuncs.debugcapi",
        ".auxfuncs.iscomplexarray",
        ".auxfuncs.l_and",
        ".auxfuncs.isscalar",
        ".auxfuncs.iscomplexfunction",
        ".auxfuncs.hasnote",
        ".auxfuncs.isfunction",
        ".__version__",
        ".auxfuncs.outmess",
        "__future__.division",
        ".auxfuncs.isintent_inout",
        ".auxfuncs.throw_error",
        ".auxfuncs.applyrules",
        ".auxfuncs.isintent_in",
        ".auxfuncs.getargs",
        ".auxfuncs.errmess",
        "__future__.print_function",
        ".auxfuncs.isarray",
        ".auxfuncs.iscomplex",
        ".auxfuncs.isoptional",
        ".auxfuncs.isintent_nothide",
        ".auxfuncs.isintent_c",
        ".auxfuncs.isrequired",
        ".auxfuncs.isstringfunction",
        ".auxfuncs.isintent_hide",
        ".auxfuncs.issubroutine"
    ],
    "/tmp/numpy/numpy/f2py/cfuncs.py": [
        ".capi_maps.c2capi_map",
        "__future__.absolute_import",
        ".__version__",
        "__future__.division",
        "sys",
        "copy",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/common_rules.py": [
        ".capi_maps",
        "__future__.division",
        ".__version__",
        ".auxfuncs.isintent_hide",
        ".auxfuncs.hasnote",
        "__future__.absolute_import",
        ".crackfortran.rmbadname",
        ".auxfuncs.hascommon",
        ".func2subr",
        ".auxfuncs.hasbody",
        "__future__.print_function",
        ".auxfuncs.outmess"
    ],
    "/tmp/numpy/numpy/f2py/crackfortran.py": [
        "__future__.absolute_import",
        "platform",
        "__future__.division",
        "string",
        ".auxfuncs",
        "re",
        "__future__.print_function",
        "os",
        "fileinput",
        "copy",
        ".__version__",
        "sys"
    ],
    "/tmp/numpy/numpy/f2py/diagnose.py": [
        "numpy_distutils.fcompiler",
        "numpy_distutils.cpuinfo.cpuinfo",
        "numpy_distutils.command.build_flib",
        "numpy_distutils",
        "numpy.f2py.f2py2e",
        "numpy.distutils",
        "__future__.division",
        "tempfile",
        "__future__.absolute_import",
        "sys",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/f2py2e.py": [
        "numpy.distutils.system_info.get_info",
        "shutil",
        "tempfile",
        "numpy.distutils.command.build_src.get_f2py_modulename",
        "numpy.distutils.fcompiler",
        "numpy.distutils.core.Extension",
        "numpy.distutils.core.setup",
        "numpy.distutils.misc_util.dict_append",
        "numpy.distutils.system_info.show_all",
        ".cfuncs",
        "__future__.absolute_import",
        ".cb_rules",
        "pprint",
        "re",
        ".__version__",
        ".crackfortran",
        "__future__.division",
        ".f90mod_rules",
        ".rules",
        "sys",
        "__future__.print_function",
        ".auxfuncs",
        "os"
    ],
    "/tmp/numpy/numpy/f2py/f2py_testing.py": [
        "__future__.division",
        "numpy.testing.utils.memusage",
        "__future__.absolute_import",
        "numpy.testing.utils.jiffies",
        "sys",
        "re",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/f90mod_rules.py": [
        ".rules",
        ".capi_maps",
        "__future__.division",
        ".crackfortran.undo_rmbadname",
        "__future__.absolute_import",
        ".crackfortran.undo_rmbadname1",
        ".func2subr",
        "numpy",
        "__future__.print_function",
        ".auxfuncs"
    ],
    "/tmp/numpy/numpy/f2py/func2subr.py": [
        ".auxfuncs.isfunction_wrap",
        ".auxfuncs.show",
        "__future__.absolute_import",
        ".auxfuncs.ismoduleroutine",
        "copy",
        ".auxfuncs.isscalar",
        ".auxfuncs.isintent_out",
        ".auxfuncs.issubroutine_wrap",
        ".auxfuncs.isfunction",
        ".auxfuncs.outmess",
        ".auxfuncs.islogicalfunction",
        "__future__.division",
        ".auxfuncs.getfortranname",
        ".auxfuncs.isintent_in",
        "__future__.print_function",
        ".auxfuncs.issubroutine",
        ".auxfuncs.isexternal"
    ],
    "/tmp/numpy/numpy/f2py/info.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/f2py/rules.py": [
        ".auxfuncs.isstring",
        ".auxfuncs.stripcomma",
        ".cfuncs",
        "__future__.absolute_import",
        ".auxfuncs.debugcapi",
        ".auxfuncs.gentitle",
        ".auxfuncs.isdummyroutine",
        ".auxfuncs.isunsigned_long_longarray",
        ".auxfuncs.isscalar",
        ".auxfuncs.hasexternals",
        ".auxfuncs.issubroutine_wrap",
        "__future__.division",
        ".f90mod_rules",
        ".auxfuncs.l_and",
        ".auxfuncs.isarray",
        ".auxfuncs.issubroutine",
        ".auxfuncs.isrequired",
        ".auxfuncs.isstringarray",
        ".auxfuncs.isintent_hide",
        ".auxfuncs.hasinitvalue",
        ".func2subr",
        ".capi_maps",
        ".auxfuncs.dictappend",
        ".auxfuncs.isunsigned_chararray",
        ".auxfuncs.isintent_overwrite",
        ".auxfuncs.iscomplexfunction_warn",
        ".auxfuncs.iscomplexarray",
        ".auxfuncs.issigned_long_longarray",
        ".auxfuncs.isarrayofstrings",
        ".auxfuncs.iscomplexfunction",
        ".auxfuncs.hasnote",
        ".auxfuncs.errmess",
        ".auxfuncs.isunsigned_shortarray",
        ".auxfuncs.isstringfunction",
        ".auxfuncs.islong_long",
        ".auxfuncs.hasresultnote",
        ".auxfuncs.islong_complex",
        "__future__.print_function",
        ".auxfuncs.islong_double",
        ".auxfuncs.isunsigned_char",
        ".auxfuncs.iscomplex",
        ".auxfuncs.islogical",
        ".auxfuncs.getargs2",
        ".common_rules",
        ".auxfuncs.isunsigned_short",
        ".auxfuncs.isunsigned",
        ".auxfuncs.isexternal",
        ".auxfuncs.isintent_nothide",
        ".auxfuncs.l_not",
        ".auxfuncs.replace",
        ".auxfuncs.ismoduleroutine",
        ".auxfuncs.isfunction",
        ".auxfuncs.isintent_inout",
        ".auxfuncs.hascallstatement",
        ".auxfuncs.isintent_aux",
        ".auxfuncs.applyrules",
        "copy",
        ".auxfuncs.isoptional",
        ".auxfuncs.isintent_c",
        ".auxfuncs.isunsigned_long_long",
        ".auxfuncs.isfunction_wrap",
        ".auxfuncs.l_or",
        ".auxfuncs.isintent_copy",
        ".auxfuncs.isintent_out",
        ".use_rules",
        ".auxfuncs.isintent_callback",
        ".__version__",
        ".auxfuncs.outmess",
        ".auxfuncs.isthreadsafe",
        ".auxfuncs.isint1array",
        "os",
        ".auxfuncs.islong_doublefunction",
        ".auxfuncs.islong_longfunction",
        "time"
    ],
    "/tmp/numpy/numpy/f2py/setup.py": [
        "__future__.division",
        "numpy.distutils.misc_util.Configuration",
        "numpy.distutils.log",
        "numpy.distutils.core.setup",
        "sys",
        "__version__.version",
        "distutils.dep_util.newer",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_array_from_pyobj.py": [
        "numpy.testing.assert_equal",
        "numpy.core.multiarray.typeinfo",
        "numpy.testing.SkipTest",
        "unittest",
        "__future__.absolute_import",
        "numpy.intp",
        "numpy.array",
        "copy",
        "numpy.alltrue",
        "numpy.zeros",
        "__future__.print_function",
        "numpy.dtype",
        "__future__.division",
        "util",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.ndarray",
        "sys",
        "numpy.clongdouble",
        "os"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_assumed_shape.py": [
        "__future__.division",
        "numpy.testing.dec",
        "__future__.absolute_import",
        "util",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_callback.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "textwrap",
        "__future__.absolute_import",
        "util",
        "math",
        "numpy.testing.run_module_suite",
        "numpy.testing.dec",
        "numpy.testing.assert_",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_kind.py": [
        "__future__.division",
        "numpy.testing.dec",
        "numpy.f2py.crackfortran._selected_int_kind_func",
        "__future__.absolute_import",
        "util",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "os",
        "numpy.f2py.crackfortran._selected_real_kind_func",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_mixed.py": [
        "__future__.division",
        "numpy.testing.dec",
        "numpy.testing.assert_equal",
        "textwrap",
        "__future__.absolute_import",
        "util",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_parameter.py": [
        "__future__.division",
        "numpy.testing.dec",
        "__future__.absolute_import",
        "util",
        "numpy.testing.assert_equal",
        "numpy",
        "numpy.testing.run_module_suite",
        "os",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_regression.py": [
        "__future__.division",
        "numpy.testing.dec",
        "__future__.absolute_import",
        "util",
        "numpy.testing.assert_equal",
        "numpy",
        "numpy.testing.run_module_suite",
        "os",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_return_character.py": [
        "__future__.division",
        "numpy.testing.dec",
        "__future__.absolute_import",
        "util",
        "__future__.print_function",
        "numpy.array",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_",
        "numpy.compat.asbytes"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_return_complex.py": [
        "__future__.division",
        "numpy.testing.dec",
        "numpy.compat.long",
        "util",
        "__future__.absolute_import",
        "numpy.array",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_return_integer.py": [
        "__future__.division",
        "numpy.testing.dec",
        "numpy.compat.long",
        "util",
        "__future__.absolute_import",
        "numpy.array",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_return_logical.py": [
        "__future__.division",
        "numpy.testing.dec",
        "numpy.compat.long",
        "util",
        "__future__.absolute_import",
        "numpy.array",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_return_real.py": [
        "__future__.division",
        "numpy.testing.dec",
        "numpy.compat.long",
        "util",
        "__future__.absolute_import",
        "numpy.array",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/f2py/tests/test_size.py": [
        "__future__.division",
        "numpy.testing.dec",
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "util",
        "numpy.testing.run_module_suite",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/f2py/tests/util.py": [
        "numpy.testing.SkipTest",
        "__future__.absolute_import",
        "subprocess",
        "atexit",
        "shutil",
        "re",
        "tempfile",
        "numpy.compat.asbytes",
        "numpy.compat.asstr",
        "__future__.division",
        "textwrap",
        "sys",
        "__future__.print_function",
        "numpy.testing.temppath",
        "os"
    ],
    "/tmp/numpy/numpy/f2py/use_rules.py": [
        "__future__.division",
        ".auxfuncs.dictappend",
        ".auxfuncs.gentitle",
        ".auxfuncs.hasnote",
        "__future__.absolute_import",
        ".auxfuncs.applyrules",
        "__future__.print_function",
        ".auxfuncs.outmess"
    ],
    "/tmp/numpy/numpy/fft/__init__.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.nosetester._numpy_tester",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/fft/fftpack.py": [
        "__future__.absolute_import",
        ".fftpack_lite",
        "numpy.core.conjugate",
        "numpy.core.array",
        "numpy.core.asarray",
        "numpy.core.sqrt",
        "numpy.core.zeros",
        "numpy.core.take",
        "numpy.core.swapaxes",
        "__future__.division",
        ".helper._FFTCache",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/fft/helper.py": [
        "numpy.core.concatenate",
        "__future__.division",
        "numpy.core.asarray",
        "__future__.absolute_import",
        "threading",
        "numpy.core.empty",
        "collections",
        "numpy.core.arange",
        "numpy.core.integer",
        "__future__.print_function",
        "numpy.core.take"
    ],
    "/tmp/numpy/numpy/fft/info.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/fft/setup.py": [
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "numpy.distutils.core.setup",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/fft/tests/test_fftpack.py": [
        "__future__.division",
        "numpy.testing.assert_array_equal",
        "numpy.random.random",
        "Queue",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "threading",
        "sys",
        "numpy.testing.assert_array_almost_equal",
        "numpy",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/fft/tests/test_helper.py": [
        "__future__.division",
        "numpy.pi",
        "numpy.fft.helper._FFTCache",
        "numpy.fft",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy.testing.assert_array_almost_equal",
        "numpy",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/__init__.py": [
        ".utils",
        ".stride_tricks",
        "__future__.absolute_import",
        ".financial",
        "numpy.testing.nosetester._numpy_tester",
        "._version",
        ".scimath",
        ".twodim_base",
        ".nanfunctions",
        ".type_check",
        ".function_base",
        ".shape_base",
        ".ufunclike",
        "__future__.division",
        ".polynomial",
        ".index_tricks",
        ".arraypad",
        "__future__.print_function",
        ".npyio",
        ".arraysetops",
        "math"
    ],
    "/tmp/numpy/numpy/lib/_datasource.py": [
        "gzip",
        "bz2",
        "tempfile",
        "urlparse.urlparse",
        "urllib2.urlopen",
        "urllib2.URLError",
        "urlparse.urlparse",
        "urllib2.urlopen",
        "urllib2.URLError",
        "__future__.division",
        "__future__.absolute_import",
        "sys",
        "shutil",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/_iotools.py": [
        "bz2",
        "gzip",
        "__builtin__.int",
        "numpy.compat.bytes",
        "__builtin__.float",
        "__builtin__.unicode",
        "numpy.compat.basestring",
        "numpy.core.numeric",
        "__builtin__.complex",
        "__builtin__.bool",
        "numpy",
        "numpy.compat.asbytes",
        "__future__.division",
        "__builtin__.object",
        "sys",
        "__future__.absolute_import",
        "numpy.compat.asbytes_nested",
        "__future__.print_function",
        "__builtin__.str"
    ],
    "/tmp/numpy/numpy/lib/_version.py": [
        "__future__.division",
        "numpy.compat.basestring",
        "__future__.absolute_import",
        "re",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/arraypad.py": [
        "__future__.absolute_import",
        "numpy",
        "__future__.division",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/arraysetops.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/arrayterator.py": [
        "__future__.division",
        "functools.reduce",
        "numpy.compat.long",
        "__future__.absolute_import",
        "operator.mul",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/financial.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/format.py": [
        "struct",
        "StringIO.StringIO",
        "tokenize",
        "struct",
        "__future__.absolute_import",
        "io",
        "numpy.compat.basestring",
        "numpy.compat.long",
        "numpy",
        "numpy.compat.asbytes",
        "numpy.compat.asstr",
        "__future__.division",
        "warnings",
        "sys",
        "__future__.print_function",
        "numpy.compat.isfileobj",
        "numpy.lib.utils.safe_eval",
        "cPickle"
    ],
    "/tmp/numpy/numpy/lib/function_base.py": [
        "numpy.dual.i0",
        "__future__.absolute_import",
        "numpy.core.atleast_2d",
        "builtins",
        "numpy.core.umath.add",
        "collections",
        "numpy.core.fromnumeric.ravel",
        "numpy.core.numeric.empty_like",
        "numpy.core.numeric.around",
        "numpy.core.multiarray.digitize",
        "numpy.core.numeric.ceil",
        "numpy.core.numeric.ones",
        "numpy.core.umath._add_newdoc_ufunc",
        "numpy.core.numeric.integer",
        "numpy.core.umath.mod",
        ".utils.deprecate",
        "numpy.core.numeric.arange",
        "numpy.core.numeric.where",
        "numpy.core.fromnumeric.mean",
        "numpy.core.fromnumeric.nonzero",
        "numpy.core.numeric.asarray",
        "numpy.lib.twodim_base.diag",
        "numpy.core.fromnumeric.sum",
        "re",
        "numpy.core.numeric.concatenate",
        "numpy.core.multiarray.bincount",
        "numpy.core.multiarray._insert",
        "numpy.core.transpose",
        "numpy.compat.py3k.basestring",
        "numpy.core.atleast_1d",
        "numpy.core.numeric.isscalar",
        "__future__.print_function",
        "numpy.core.umath.cos",
        "numpy.core.multiarray.add_docstring",
        "numpy.core.multiarray.interp_complex",
        "numpy.core.umath.less_equal",
        "numpy.core.numerictypes.number",
        "numpy.core.umath.arctan2",
        "numpy.core.numeric.intp",
        "operator",
        "numpy.core.numeric.array",
        "numpy.core.numeric",
        "numpy.compat.long",
        "numpy.core.numeric.zeros",
        "numpy.core.umath.pi",
        "numpy.core.umath.log10",
        "numpy.core.numeric.empty",
        "numpy.core.fromnumeric.sort",
        "numpy.core.linspace",
        "numpy.core.numerictypes.typecodes",
        "__future__.division",
        "numpy.core.umath.frompyfunc",
        "numpy.core.fromnumeric.any",
        "numpy.core.numeric.absolute",
        "numpy.core.numeric.floor",
        "numpy.core.umath.sqrt",
        "numpy.core.numeric.take",
        "numpy",
        "numpy.core.umath.sin",
        "warnings",
        "sys",
        "numpy.core.multiarray.interp",
        "numpy.core.numeric.asanyarray",
        "numpy.core.numeric.ndarray",
        "numpy.core.fromnumeric.partition",
        "numpy.core.umath.exp",
        "numpy.core.numeric.dot"
    ],
    "/tmp/numpy/numpy/lib/index_tricks.py": [
        "__future__.absolute_import",
        "numpy.core.numeric.ScalarType",
        ".function_base.diff",
        "numpy.core.numeric.array",
        "numpy.core.numeric",
        "numpy.matrixlib",
        "numpy.core.numeric.asarray",
        "numpy.core.numeric.alltrue",
        "math",
        "__future__.division",
        "numpy.core.numerictypes.find_common_type",
        "numpy.core.multiarray.ravel_multi_index",
        "sys",
        "numpy.core.numerictypes.issubdtype",
        ".function_base",
        "__future__.print_function",
        "numpy.core.multiarray.unravel_index",
        "numpy.core.numeric.arange",
        "numpy.core.numeric.cumprod",
        "numpy.lib.stride_tricks.as_strided"
    ],
    "/tmp/numpy/numpy/lib/info.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/lib/nanfunctions.py": [
        "__future__.absolute_import",
        "numpy.lib.function_base._ureduce",
        "numpy",
        "__future__.division",
        "warnings",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/npyio.py": [
        "zipfile",
        "tempfile",
        "zipfile",
        "bz2",
        "gzip",
        "gzip",
        "numpy.ma.MaskedArray",
        "numpy.ma.make_mask_descr",
        "numpy.ma.mrecords.MaskedRecords",
        "numpy.ma.mrecords.MaskedRecords",
        "._iotools.NameValidator",
        "future_builtins.map",
        "numpy.compat.bytes",
        "._iotools.flatten_dtype",
        "._iotools.ConversionWarning",
        "__future__.absolute_import",
        "numpy.compat.unicode",
        "numpy.core.multiarray.unpackbits",
        "numpy.compat.basestring",
        "._iotools.ConverterLockError",
        "numpy.compat.is_pathlib_path",
        ".format",
        "re",
        "._iotools.LineSplitter",
        "._iotools.StringConverter",
        "._iotools.ConverterError",
        "numpy.compat.asbytes",
        "numpy.compat.asstr",
        "__future__.division",
        "warnings",
        "sys",
        "numpy",
        "._iotools.has_nested_fields",
        "operator.index",
        "numpy.compat.asbytes_nested",
        "__future__.print_function",
        "._iotools._is_string_like",
        "cPickle",
        "._iotools._bytes_to_name",
        "._iotools.easy_dtype",
        "weakref",
        "itertools",
        "._datasource.DataSource",
        "numpy.core.multiarray.packbits",
        "os",
        "operator.itemgetter"
    ],
    "/tmp/numpy/numpy/lib/polynomial.py": [
        "numpy.linalg.inv",
        "__future__.absolute_import",
        "numpy.linalg.eigvals",
        "numpy.core.array",
        "numpy.core.numeric",
        "numpy.core.isscalar",
        "numpy.lib.twodim_base.diag",
        "numpy.lib.type_check.mintypecode",
        "re",
        "numpy.core.abs",
        "numpy.lib.function_base.trim_zeros",
        "numpy.lib.type_check.real",
        "__future__.division",
        "numpy.core.hstack",
        "warnings",
        "numpy.lib.type_check.imag",
        "numpy.core.atleast_1d",
        "numpy.core.ones",
        "__future__.print_function",
        "numpy.lib.type_check.iscomplex",
        "numpy.linalg.lstsq",
        "numpy.lib.twodim_base.vander",
        "numpy.core.finfo",
        "numpy.core.dot"
    ],
    "/tmp/numpy/numpy/lib/recfunctions.py": [
        "numpy.ma.MaskedArray",
        "__future__.absolute_import",
        "numpy.compat.basestring",
        "future_builtins.zip",
        "__future__.print_function",
        "numpy",
        "__future__.division",
        "sys",
        "numpy.ma.mrecords.MaskedRecords",
        "numpy.ndarray",
        "numpy.ma",
        "numpy.lib._iotools._is_string_like",
        "itertools",
        "numpy.recarray"
    ],
    "/tmp/numpy/numpy/lib/scimath.py": [
        "__future__.absolute_import",
        "numpy.core.numeric.any",
        "numpy.core.numeric.asarray",
        "numpy.core.numeric",
        "__future__.division",
        "__future__.print_function",
        "numpy.core.numerictypes",
        "numpy.lib.type_check.isreal"
    ],
    "/tmp/numpy/numpy/lib/setup.py": [
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "numpy.distutils.core.setup",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/shape_base.py": [
        "__future__.absolute_import",
        "numpy.core.numeric.array",
        "numpy.core.numeric",
        "numpy.core.numeric.outer",
        "numpy.core.numeric.asarray",
        "numpy.core.fromnumeric.reshape",
        "numpy.core.numeric.zeros",
        "numpy.core.numeric.concatenate",
        "__future__.division",
        "numpy.core.fromnumeric.product",
        "numpy.core.vstack",
        "numpy.core.numeric.asanyarray",
        "numpy.core.atleast_3d",
        "numpy.core.numeric.isscalar",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/stride_tricks.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/tests/test__datasource.py": [
        "gzip",
        "bz2",
        "tempfile.mkdtemp",
        "numpy.testing.SkipTest",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "tempfile.mkstemp",
        "numpy.compat.asbytes",
        "urllib2.URLError",
        "__future__.division",
        "sys",
        "shutil.rmtree",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "urllib2",
        "os",
        "urlparse.urlparse",
        "numpy.lib._datasource",
        "tempfile.NamedTemporaryFile"
    ],
    "/tmp/numpy/numpy/lib/tests/test__iotools.py": [
        "numpy.core.numeric",
        "numpy.lib._iotools.NameValidator",
        "numpy.testing.assert_equal",
        "numpy.lib._iotools.flatten_dtype",
        "__future__.absolute_import",
        "numpy.compat.asbytes_nested",
        "numpy.testing.assert_allclose",
        "numpy.testing.TestCase",
        "numpy.lib._iotools.LineSplitter",
        "numpy.lib._iotools.StringConverter",
        "numpy",
        "numpy.compat.asbytes",
        "__future__.division",
        "sys",
        "numpy.lib._iotools.has_nested_fields",
        "datetime.date",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.lib._iotools.easy_dtype",
        "time"
    ],
    "/tmp/numpy/numpy/lib/tests/test__version.py": [
        "__future__.division",
        "numpy.lib.NumpyVersion",
        "__future__.absolute_import",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/lib/tests/test_arraypad.py": [
        "numpy.testing.assert_raises",
        "__future__.absolute_import",
        "numpy.testing.assert_allclose",
        "numpy.testing.TestCase",
        "numpy.lib.pad",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/tests/test_arraysetops.py": [
        "numpy.lib.arraysetops.setxor1d",
        "__future__.division",
        "numpy.lib.arraysetops.unique",
        "numpy.testing.assert_array_equal",
        "numpy.lib.arraysetops.union1d",
        "numpy.lib.arraysetops.in1d",
        "numpy.lib.arraysetops.intersect1d",
        "numpy.lib.arraysetops.ediff1d",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy.testing.assert_equal",
        "numpy",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.lib.arraysetops.setdiff1d"
    ],
    "/tmp/numpy/numpy/lib/tests/test_arrayterator.py": [
        "__future__.division",
        "numpy.random.randint",
        "numpy.lib.Arrayterator",
        "functools.reduce",
        "__future__.absolute_import",
        "numpy",
        "operator.mul",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/tests/test_financial.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_allclose",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/tests/test_format.py": [
        "random",
        "__builtin__",
        "subprocess",
        "numpy.compat.sixu",
        "__future__.absolute_import",
        "numpy.testing.raises",
        "shutil",
        "numpy.testing.run_module_suite",
        "tempfile",
        "numpy.lib.format",
        "numpy.testing.SkipTest",
        "numpy.testing.assert_array_equal",
        "numpy.compat.asbytes",
        "__future__.division",
        "warnings",
        "sys",
        "numpy",
        "numpy.testing.assert_",
        "numpy.compat.asbytes_nested",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "io.BytesIO",
        "numpy.testing.dec",
        "os"
    ],
    "/tmp/numpy/numpy/lib/tests/test_function_base.py": [
        "math",
        "random",
        "decimal.Decimal",
        "__future__.absolute_import",
        "numpy.testing.assert_array_max_ulp",
        "numpy.testing.assert_array_almost_equal",
        "numpy.lib.unique",
        "numpy.lib.vectorize",
        "numpy.lib.blackman",
        "numpy.testing.assert_almost_equal",
        "numpy.lib.digitize",
        "numpy.lib.add_newdoc_ufunc",
        "numpy.lib.insert",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_raises",
        "numpy.lib.function_base",
        "numpy.lib.interp",
        "numpy.lib.hanning",
        "numpy.lib.extract",
        "numpy.lib.kaiser",
        "numpy.testing.assert_allclose",
        "numpy.lib.gradient",
        "numpy.lib.corrcoef",
        "numpy.lib.meshgrid",
        "numpy.lib.sinc",
        "numpy.lib.trim_zeros",
        "numpy.testing.utils.HAS_REFCOUNT",
        "numpy.lib.cov",
        "numpy.lib.place",
        "numpy.random.rand",
        "numpy.testing.assert_equal",
        "operator",
        "numpy.lib.diff",
        "numpy.lib.select",
        "numpy.lib.piecewise",
        "numpy.compat.long",
        "numpy.lib.msort",
        "__future__.print_function",
        "numpy.testing.assert_raises_regex",
        "numpy.lib.unwrap",
        "numpy.lib.histogramdd",
        "numpy.lib.histogram",
        "numpy.lib.rot90",
        "numpy.lib.setxor1d",
        "numpy.testing.suppress_warnings",
        "numpy.testing.dec",
        "numpy.lib.delete",
        "__future__.division",
        "numpy.testing.assert_warns",
        "numpy.lib.angle",
        "numpy.testing.TestCase",
        "numpy.lib.split",
        "numpy",
        "numpy.testing.assert_array_equal",
        "warnings",
        "numpy.lib.flipud",
        "numpy.lib.i0",
        "sys",
        "numpy.lib.bartlett",
        "numpy.testing.assert_",
        "numpy.lib.average",
        "numpy.lib.trapz",
        "numpy.lib.hamming"
    ],
    "/tmp/numpy/numpy/lib/tests/test_index_tricks.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "numpy.lib.index_tricks.r_",
        "__future__.absolute_import",
        "numpy.lib.index_tricks.diag_indices_from",
        "numpy.lib.index_tricks.ndenumerate",
        "numpy.lib.index_tricks.ix_",
        "numpy.lib.index_tricks.index_exp",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.lib.index_tricks.fill_diagonal",
        "numpy.lib.index_tricks.diag_indices",
        "__future__.division",
        "numpy.lib.index_tricks.s_",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.lib.index_tricks.ndindex",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.testing.assert_array_equal",
        "numpy.lib.index_tricks.mgrid",
        "numpy.testing.assert_array_almost_equal"
    ],
    "/tmp/numpy/numpy/lib/tests/test_io.py": [
        "numpy.ma.testutils.assert_equal",
        "numpy.testing.assert_warns",
        "numpy.lib._iotools.ConversionWarning",
        "__future__.absolute_import",
        "datetime.datetime",
        "gc",
        "numpy.compat.unicode",
        "numpy.testing.assert_allclose",
        "numpy.testing.TestCase",
        "numpy.lib._iotools.ConverterError",
        "numpy.compat.Path",
        "numpy.testing.assert_array_equal",
        "numpy.testing.assert_raises_regex",
        "io.BytesIO",
        "__future__.division",
        "warnings",
        "numpy.testing.temppath",
        "sys",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.ma",
        "numpy.testing.IS_PYPY",
        "os",
        "numpy.compat.bytes",
        "threading",
        "numpy.compat.asbytes",
        "time",
        "gzip",
        "numpy.testing.suppress_warnings",
        "numpy.testing.dec",
        "tempfile.NamedTemporaryFile"
    ],
    "/tmp/numpy/numpy/lib/tests/test_nanfunctions.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "warnings",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.testing.assert_no_warnings",
        "numpy.testing.suppress_warnings"
    ],
    "/tmp/numpy/numpy/lib/tests/test_packbits.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/lib/tests/test_polynomial.py": [
        "decimal.Decimal",
        "__future__.division",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy.testing.rundocs",
        "numpy.testing.assert_array_almost_equal",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_array_equal",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/lib/tests/test_recfunctions.py": [
        "datetime.date",
        "numpy.ma.testutils.assert_equal",
        "numpy.lib.recfunctions.rename_fields",
        "__future__.absolute_import",
        "numpy.lib.recfunctions.join_by",
        "numpy.lib.recfunctions.stack_arrays",
        "numpy.lib.recfunctions.find_duplicates",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.lib.recfunctions.append_fields",
        "numpy.lib.recfunctions.get_fieldstructure",
        "__future__.division",
        "numpy.ma.mrecords.MaskedRecords",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.ma",
        "numpy.lib.recfunctions.recursive_fill_fields",
        "numpy.lib.recfunctions.drop_fields",
        "numpy.lib.recfunctions.merge_arrays"
    ],
    "/tmp/numpy/numpy/lib/tests/test_regression.py": [
        "sys",
        "os",
        "numpy.lib.recfunctions.append_fields",
        "StringIO.StringIO",
        "__future__.division",
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.testing.utils._assert_valid_refcount",
        "sys",
        "numpy.testing.TestCase",
        "numpy.testing.assert_array_almost_equal",
        "numpy.compat.unicode",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "os",
        "numpy.testing.assert_array_equal",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/lib/tests/test_shape_base.py": [
        "numpy.random.rand",
        "numpy.random.randint",
        "numpy.testing.assert_equal",
        "numpy.lib.shape_base.dsplit",
        "__future__.absolute_import",
        "numpy.lib.shape_base.apply_along_axis",
        "numpy.lib.shape_base.vsplit",
        "numpy.lib.shape_base.array_split",
        "numpy.lib.shape_base.apply_over_axes",
        "numpy.testing.TestCase",
        "numpy.lib.shape_base.kron",
        "numpy.lib.shape_base.split",
        "numpy.lib.shape_base.tile",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "numpy",
        "numpy.lib.shape_base.column_stack",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.lib.shape_base.dstack",
        "numpy.lib.shape_base.hsplit"
    ],
    "/tmp/numpy/numpy/lib/tests/test_stride_tricks.py": [
        "numpy.testing.assert_equal",
        "numpy.lib.stride_tricks._broadcast_shape",
        "numpy.testing.assert_",
        "numpy.lib.stride_tricks.broadcast_arrays",
        "numpy",
        "numpy.lib.stride_tricks.broadcast_to",
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.testing.assert_array_equal",
        "numpy.lib.stride_tricks.as_strided"
    ],
    "/tmp/numpy/numpy/lib/tests/test_twodim_base.py": [
        "numpy.testing.assert_equal",
        "numpy.triu_indices",
        "__future__.absolute_import",
        "numpy.testing.assert_array_max_ulp",
        "numpy.triu_indices_from",
        "numpy.testing.assert_array_almost_equal",
        "numpy.array",
        "numpy.compat.asbytes_nested",
        "numpy.eye",
        "numpy.diag",
        "numpy.testing.TestCase",
        "numpy.add",
        "numpy.zeros",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "numpy.tril_indices",
        "numpy.flipud",
        "numpy.histogram2d",
        "numpy.ones",
        "numpy.mask_indices",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.tri",
        "numpy.tril_indices_from",
        "numpy.arange",
        "numpy.fliplr",
        "numpy.vander"
    ],
    "/tmp/numpy/numpy/lib/tests/test_type_check.py": [
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.lib.type_check.common_type",
        "numpy.testing.TestCase",
        "numpy.compat.long",
        "numpy.lib.type_check.mintypecode",
        "numpy",
        "numpy.testing.assert_array_equal",
        "numpy.lib.type_check.nan_to_num",
        "__future__.division",
        "numpy.lib.type_check.real_if_close",
        "numpy.lib.type_check.isposinf",
        "numpy.lib.type_check.iscomplexobj",
        "numpy.lib.type_check.isneginf",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.lib.type_check.isrealobj",
        "__future__.print_function",
        "numpy.lib.type_check.iscomplex",
        "numpy.lib.type_check.asfarray",
        "numpy.lib.type_check.isreal"
    ],
    "/tmp/numpy/numpy/lib/tests/test_ufunclike.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "numpy.lib.ufunclike",
        "__future__.absolute_import",
        "numpy.core",
        "numpy.testing.TestCase",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_array_equal",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/tests/test_utils.py": [
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.lib.utils",
        "__future__.division",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.lib.deprecate",
        "StringIO.StringIO",
        "numpy.core.arange",
        "numpy.testing.assert_raises_regex",
        "numpy.testing.dec"
    ],
    "/tmp/numpy/numpy/lib/twodim_base.py": [
        "numpy.histogramdd",
        "numpy.core.numeric.int32",
        "__future__.absolute_import",
        "numpy.core.iinfo",
        "numpy.core.numeric.asarray",
        "numpy.core.numeric.zeros",
        "numpy.core.numeric.promote_types",
        "numpy.core.numeric.empty",
        "__future__.division",
        "numpy.core.numeric.int16",
        "numpy.core.numeric.diagonal",
        "numpy.core.numeric.ones",
        "numpy.core.numeric.multiply",
        "numpy.core.numeric.int8",
        "__future__.print_function",
        "numpy.core.numeric.greater_equal",
        "numpy.core.numeric.arange",
        "numpy.core.numeric.asanyarray",
        "numpy.core.numeric.int64",
        "numpy.core.numeric.where"
    ],
    "/tmp/numpy/numpy/lib/type_check.py": [
        "numpy.core.getlimits",
        "numpy.core.getlimits",
        "__future__.absolute_import",
        "numpy.core.numeric",
        "numpy.core.numeric.asarray",
        "numpy.core.numeric.zeros",
        "__future__.division",
        ".ufunclike.isposinf",
        "numpy.core.numeric.isnan",
        "numpy.core.numeric.asanyarray",
        ".ufunclike.isneginf",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/ufunclike.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.core.numeric",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/lib/user_array.py": [
        "numpy.core.divide",
        "numpy.core.less",
        "__future__.absolute_import",
        "numpy.core.bitwise_or",
        "numpy.core.shape",
        "numpy.core.bitwise_and",
        "numpy.compat.long",
        "numpy.core.array",
        "numpy.core.absolute",
        "numpy.core.bitwise_xor",
        "numpy.core.asarray",
        "numpy.core.subtract",
        "numpy.core.invert",
        "numpy.core.sqrt",
        "numpy.core.add",
        "numpy.core.right_shift",
        "numpy.core.sin",
        "__future__.division",
        "numpy.core.greater",
        "numpy.core.power",
        "numpy.core.transpose",
        "numpy.core.multiply",
        "numpy.core.remainder",
        "__future__.print_function",
        "numpy.core.not_equal",
        "numpy.core.greater_equal",
        "numpy.core.left_shift",
        "numpy.core.equal",
        "numpy.core.arange",
        "numpy.core.reshape",
        "numpy.core.less_equal"
    ],
    "/tmp/numpy/numpy/lib/utils.py": [
        "numpy.core",
        "numpy",
        "warnings",
        "inspect",
        "pydoc",
        "inspect",
        "pydoc",
        "inspect",
        "StringIO.StringIO",
        "inspect",
        "ast",
        "ast",
        "__future__.print_function",
        "numpy.core.numerictypes.issubsctype",
        "__future__.absolute_import",
        "numpy.compat.formatargspec",
        "numpy.core.asarray",
        "re",
        "types",
        "numpy",
        "numpy.core.ufunc",
        "numpy.compat.getargspec",
        "__future__.division",
        "warnings",
        "sys",
        "numpy.core.numerictypes.issubdtype",
        "numpy.core.numerictypes.issubclass_",
        "numpy.core.ndarray",
        "os"
    ],
    "/tmp/numpy/numpy/linalg/__init__.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.nosetester._numpy_tester",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/linalg/info.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/linalg/linalg.py": [
        "math",
        "numpy.core.all",
        "numpy.core.errstate",
        "__future__.absolute_import",
        "numpy.core.atleast_2d",
        "numpy.core.isscalar",
        "numpy.core.add",
        "numpy.core.ravel",
        "numpy.core.empty_like",
        "numpy.linalg._umath_linalg",
        "numpy.matrixlib.defmatrix.matrix_power",
        "numpy.core.complexfloating",
        "numpy.linalg.lapack_lite",
        "numpy.lib.asfarray",
        "numpy.core.isfinite",
        "numpy.core.asarray",
        "numpy.core.sum",
        "numpy.core.abs",
        "numpy.core.transpose",
        "__future__.print_function",
        "numpy.core.newaxis",
        "numpy.core.geterrobj",
        "numpy.core.object_",
        "numpy.core.intc",
        "numpy.core.csingle",
        "numpy.core.fastCopyAndTranspose",
        "numpy.core.intp",
        "numpy.core.array",
        "numpy.core.cdouble",
        "numpy.core.zeros",
        "numpy.core.empty",
        "numpy.core.inexact",
        "numpy.core.broadcast",
        "numpy.core.amin",
        "numpy.core.double",
        "numpy.core.maximum",
        "numpy.compat.asbytes",
        "numpy.core.Inf",
        "numpy.core.finfo",
        "__future__.division",
        "numpy.core.longdouble",
        "numpy.core.single",
        "numpy.lib.triu",
        "numpy.core.sqrt",
        "numpy.core.product",
        "warnings",
        "numpy.core.asanyarray",
        "numpy.core.multiply",
        "numpy.core.amax",
        "numpy.core.rollaxis",
        "numpy.core.dot"
    ],
    "/tmp/numpy/numpy/linalg/setup.py": [
        "numpy.distutils.system_info.get_info",
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "numpy.distutils.core.setup",
        "sys",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/linalg/tests/test_build.py": [
        "__future__.division",
        "numpy.linalg.lapack_lite",
        "numpy.testing.run_module_suite",
        "numpy.compat.asbytes_nested",
        "subprocess.Popen",
        "__future__.absolute_import",
        "subprocess.PIPE",
        "re",
        "numpy.testing.TestCase",
        "sys",
        "numpy.testing.dec",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/linalg/tests/test_deprecations.py": [
        "__future__.division",
        "numpy.testing.assert_warns",
        "__future__.absolute_import",
        "numpy",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/linalg/tests/test_linalg.py": [
        "numpy.linalg",
        "resource",
        "__future__.absolute_import",
        "numpy.atleast_2d",
        "numpy.linalg.norm",
        "numpy.linalg.matrix_power",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_raises",
        "numpy.matrix",
        "numpy.asarray",
        "__future__.print_function",
        "__future__.division",
        "traceback",
        "itertools",
        "os",
        "numpy.testing.assert_equal",
        "numpy.csingle",
        "numpy.array",
        "numpy.testing.assert_",
        "numpy.cdouble",
        "numpy.linalg.matrix_rank",
        "numpy.linalg",
        "numpy.linalg.multi_dot",
        "numpy.double",
        "numpy.testing.suppress_warnings",
        "numpy.testing.dec",
        "numpy.testing.SkipTest",
        "numpy.single",
        "numpy.inf",
        "numpy",
        "numpy.testing.assert_array_equal",
        "sys",
        "numpy.multiply",
        "numpy.identity",
        "numpy.testing.assert_allclose",
        "numpy.linalg.linalg._multi_dot_matrix_chain_order",
        "numpy.dot"
    ],
    "/tmp/numpy/numpy/linalg/tests/test_regression.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "numpy.linalg",
        "numpy.dot",
        "warnings",
        "numpy.transpose",
        "numpy.testing.assert_array_almost_equal",
        "__future__.absolute_import",
        "numpy.testing.assert_array_less",
        "numpy.testing.TestCase",
        "numpy.arange",
        "numpy",
        "numpy.array",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_array_equal",
        "__future__.print_function",
        "numpy.float64"
    ],
    "/tmp/numpy/numpy/ma/__init__.py": [
        "__future__.division",
        ".core",
        "__future__.absolute_import",
        "numpy.testing.nosetester._numpy_tester",
        ".extras",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/ma/bench.py": [
        "timeit",
        "numpy",
        "__future__.division",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/ma/core.py": [
        "copy.deepcopy",
        "__future__.absolute_import",
        "numpy.compat.unicode",
        "__builtin__",
        "numpy.compat.getargspec",
        "__future__.division",
        "numpy._NoValue",
        "numpy.compat.bytes",
        "numpy.compat.sixu",
        "functools.reduce",
        "numpy.core.umath",
        "numpy.array",
        "__future__.print_function",
        "numpy.compat.basestring",
        "numpy.compat.long",
        "numpy.bool_",
        "numpy.expand_dims",
        "cPickle",
        "numpy.compat.formatargspec",
        "numpy.core.numerictypes",
        "numpy",
        "warnings",
        "numpy.iscomplexobj",
        "sys",
        "numpy.amax",
        "numpy.ndarray",
        "numpy.amin"
    ],
    "/tmp/numpy/numpy/ma/extras.py": [
        "__future__.absolute_import",
        ".core.masked_array",
        "__future__.division",
        ".core.MAError",
        "numpy.array",
        ".core.mask_rowcols",
        ".core.MaskedArray",
        ".core.make_mask_descr",
        ".core.array",
        ".core.asarray",
        ".core.concatenate",
        "__future__.print_function",
        ".core.count",
        "itertools",
        "numpy.lib.function_base._ureduce",
        ".core.zeros",
        ".core.nomask",
        ".core.sort",
        ".core.getdata",
        ".core",
        "numpy.lib.index_tricks.AxisConcatenator",
        ".core.getmask",
        "numpy",
        ".core.mask_or",
        "warnings",
        "numpy.ndarray",
        ".core.getmaskarray",
        ".core.dot"
    ],
    "/tmp/numpy/numpy/ma/mrecords.py": [
        "__future__.print_function",
        "numpy.dtype",
        "numpy.ma.MaskedArray",
        "__future__.absolute_import",
        "numpy.ma.masked_array",
        "numpy.array",
        "numpy.compat.basestring",
        "numpy.ma.masked",
        "numpy",
        "numpy.core.numerictypes",
        "numpy.ma.filled",
        "__future__.division",
        "warnings",
        "numpy.bool_",
        "sys",
        "numpy.core.records.fromrecords",
        "numpy.ma.getdata",
        "numpy.ndarray",
        "numpy.ma",
        "numpy.core.records.fromarrays",
        "numpy.ma.MAError",
        "numpy.recarray",
        "numpy.ma.getmaskarray",
        "numpy.ma.nomask"
    ],
    "/tmp/numpy/numpy/ma/setup.py": [
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "numpy.distutils.core.setup",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/ma/tests/test_core.py": [
        "datetime",
        "copy.deepcopy",
        "numpy.ma.core.make_mask",
        "numpy.ma.core.all",
        "numpy.ma.core.less",
        "numpy.ma.core.putmask",
        "__future__.absolute_import",
        "numpy.ma.core.masked_inside",
        "numpy.ma.core.shape",
        "numpy.ma.core.masked_array",
        "numpy.core.fromnumeric",
        "numpy.ma.core.outer",
        "numpy.ma.core.add",
        "numpy.ma.core.choose",
        "numpy.ma.core.mod",
        "numpy.ma.core.ravel",
        "numpy.ma.testutils.assert_almost_equal",
        "numpy.ma.core.greater",
        "numpy.ma.core.ones",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_raises",
        "numpy.ma.core.identity",
        "numpy.ma.core.mask_or",
        "numpy.ma.testutils.assert_mask_equal",
        "numpy.ma.core.MAError",
        "numpy.ma.core.fromflex",
        "numpy.ma.core.arange",
        "numpy.ma.core.mvoid",
        "numpy.ma.core.log10",
        "numpy.ma.core.where",
        "functools.reduce",
        "numpy.ma.core.MaskedArray",
        "numpy.ma.core.cosh",
        "numpy.ma.core.make_mask_descr",
        "numpy.ma.core.repeat",
        "numpy.ma.core.allclose",
        "numpy.core.umath",
        "numpy.ma.core.asarray",
        "numpy.ma.core.diag",
        "numpy.ma.core.sum",
        "numpy.ma.core.abs",
        "numpy.ma.core.multiply",
        "numpy.ma.core.masked",
        "numpy.ma.core.filled",
        "numpy.ma.core.concatenate",
        "numpy.ma.testutils.assert_not_equal",
        "numpy.ma.core.power",
        "numpy.ma.core.masked_greater_equal",
        "numpy.ma.core.transpose",
        "numpy.ma.core.flatten_structured_array",
        "numpy.ma.core.masked_equal",
        "numpy.ma.core.sinh",
        "numpy.ma.core.put",
        "numpy.compat.asbytes_nested",
        "numpy.ma.core.subtract",
        "__future__.print_function",
        "numpy.ma.core.cos",
        "numpy.ma.core.default_fill_value",
        "__future__.division",
        "pickle",
        "numpy.ma.core.equal",
        "numpy.ma.core.masked_greater",
        "numpy.ma.core.argsort",
        "numpy.ma.core.anom",
        "itertools",
        "numpy.ma.core.arccos",
        "numpy.ma.core.less_equal",
        "numpy.ma.testutils.fail_if_equal",
        "numpy.ma.core.masked_print_option",
        "numpy.ma.testutils.assert_equal",
        "numpy.ma.core.divide",
        "numpy.ma.core.arctan2",
        "numpy.ma.core.minimum_fill_value",
        "operator",
        "numpy.ma.core.array",
        "numpy.ma.core.log",
        "numpy.ma.core.sometrue",
        "numpy.ma.core.masked_less",
        "numpy.ma.core.alltrue",
        "numpy.ma.core.zeros",
        "numpy.ma.core.inner",
        "numpy.ma.core",
        "numpy.compat.asbytes",
        "numpy.ma.core.nomask",
        "numpy.ma.core.sort",
        "numpy.ma.core.arcsin",
        "numpy.ma.testutils.assert_equal_records",
        "numpy.ma.core.resize",
        "numpy.ma.core.count",
        "numpy.ma.core.not_equal",
        "numpy.ma.core.tanh",
        "numpy.ma.core.flatten_mask",
        "numpy.ma.core.maximum",
        "numpy.ma.core.minimum",
        "numpy.ma.core.empty",
        "numpy.testing.suppress_warnings",
        "numpy.ma.core.arccosh",
        "numpy.ma.core.empty_like",
        "numpy.testing.assert_warns",
        "numpy.ma.core.masked_outside",
        "numpy.ma.core.masked_less_equal",
        "numpy.ma.core.MaskError",
        "numpy.ma.core.conjugate",
        "numpy.ma.core.tan",
        "numpy.ma.core.absolute",
        "numpy.ma.core.angle",
        "numpy.ma.core.min",
        "numpy.ma.core.masked_not_equal",
        "numpy.ma.core.reshape",
        "numpy.ma.core.sqrt",
        "numpy.ma.core.arctan",
        "numpy.testing.TestCase",
        "numpy.ma.core.getmask",
        "numpy.ma.core.take",
        "numpy.ma.core.maximum_fill_value",
        "numpy",
        "numpy.ma.testutils.assert_array_equal",
        "numpy.ma.core.sin",
        "numpy.ma.core.product",
        "numpy.ma.core.isMaskedArray",
        "warnings",
        "numpy.ma.core.max",
        "numpy.ma.core.masked_where",
        "numpy.ma.core.MaskType",
        "numpy.ma.testutils.assert_",
        "numpy.ma.core.allequal",
        "numpy.ndarray",
        "numpy.ma.core.greater_equal",
        "numpy.ma.core.fix_invalid",
        "numpy.ma.core.masked_values",
        "numpy.ma.core.exp",
        "numpy.ma.core.getmaskarray"
    ],
    "/tmp/numpy/numpy/ma/tests/test_extras.py": [
        "numpy.ma.extras.setxor1d",
        "numpy.ma.testutils.assert_equal",
        "numpy.ma.extras.mask_rowcols",
        "numpy.ma.testutils.assert_almost_equal",
        "numpy.testing.assert_warns",
        "numpy.ma.extras.in1d",
        "numpy.ma.extras.intersect1d",
        "numpy.ma.extras.ediff1d",
        "numpy.ma.core.MaskedArray",
        "__future__.absolute_import",
        "numpy.ma.core.shape",
        "numpy.ma.extras.clump_masked",
        "numpy.ma.extras.atleast_2d",
        "numpy.ma.extras.diagflat",
        "numpy.ma.extras.flatnotmasked_contiguous",
        "numpy.ma.core.array",
        "numpy.ma.extras.masked_all_like",
        "numpy.ma.core.masked_array",
        "numpy.ma.extras.setdiff1d",
        "numpy.ma.extras.polyfit",
        "numpy.ma.extras.unique",
        "numpy.ma.extras.apply_over_axes",
        "numpy.testing.TestCase",
        "numpy.ma.core.zeros",
        "numpy.ma.core.masked",
        "numpy",
        "numpy.ma.testutils.assert_array_equal",
        "numpy.ma.extras.apply_along_axis",
        "numpy.ma.core.nomask",
        "__future__.division",
        "numpy.ma.extras.mr_",
        "warnings",
        "numpy.ma.extras.notmasked_contiguous",
        "numpy.ma.extras.atleast_1d",
        "numpy.ma.extras.corrcoef",
        "numpy.ma.core.ones",
        "numpy.ma.extras.atleast_3d",
        "numpy.ma.testutils.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.ma.core.count",
        "numpy.ma.extras.clump_unmasked",
        "numpy.ma.extras.union1d",
        "numpy.ma.extras.cov",
        "numpy.ma.extras.average",
        "numpy.ma.extras.median",
        "numpy.ma.core.arange",
        "itertools",
        "numpy.ma.extras.notmasked_edges",
        "numpy.ma.core.getmaskarray",
        "numpy.ma.extras.masked_all",
        "numpy.testing.suppress_warnings",
        "numpy.ma.extras.compress_rowcols",
        "numpy.ma.extras.compress_nd",
        "numpy.ma.extras.dot"
    ],
    "/tmp/numpy/numpy/ma/tests/test_mrecords.py": [
        "numpy.ma.testutils.assert_equal",
        "numpy.ma.mrecords.fromarrays",
        "__future__.absolute_import",
        "numpy.recarray",
        "numpy.compat.asbytes_nested",
        "numpy.ma.mrecords.addfield",
        "numpy.testing.TestCase",
        "numpy.ma.masked",
        "numpy",
        "numpy.compat.asbytes",
        "numpy.ma.nomask",
        "__future__.division",
        "numpy.core.records.fromrecords",
        "numpy.ma.testutils.assert_equal_records",
        "numpy.ma.mrecords.MaskedRecords",
        "numpy.ma.testutils.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.ma",
        "numpy.core.records.fromarrays",
        "numpy.ma.mrecords.mrecarray",
        "numpy.testing.temppath",
        "pickle",
        "numpy.ma.mrecords.fromrecords",
        "numpy.ma.mrecords.fromtextfile"
    ],
    "/tmp/numpy/numpy/ma/tests/test_old_ma.py": [
        "pickle",
        "numpy.ma.make_mask",
        "numpy.ma.all",
        "numpy.ma.less",
        "__future__.absolute_import",
        "numpy.ma.masked_inside",
        "numpy.ma.shape",
        "numpy.ma.masked_array",
        "numpy.core.fromnumeric",
        "numpy.ma.outer",
        "numpy.ma.add",
        "numpy.ma.choose",
        "numpy.ma.ravel",
        "__future__.division",
        "numpy.ma.greater",
        "numpy.ma.ones",
        "numpy.testing.run_module_suite",
        "numpy.ma.arange",
        "numpy.ma.where",
        "functools.reduce",
        "numpy.ma.MaskedArray",
        "numpy.ma.cosh",
        "numpy.ma.isMaskedArray",
        "numpy.ma.allclose",
        "numpy.core.umath",
        "numpy.ma.nonzero",
        "numpy.ma.sum",
        "numpy.ma.masked",
        "numpy.ma.filled",
        "numpy.ma.concatenate",
        "numpy.ma.masked_greater_equal",
        "numpy.ma.transpose",
        "numpy.ma.masked_equal",
        "numpy.ma.sinh",
        "numpy.ma.put",
        "numpy.ma.subtract",
        "__future__.print_function",
        "numpy.ma.cos",
        "numpy.ma.equal",
        "numpy.ma.masked_greater",
        "numpy.ma.arccos",
        "numpy.ma.less_equal",
        "numpy.ma.masked_print_option",
        "numpy.ma.divide",
        "numpy.ma.arctan2",
        "numpy.ma.MaskType",
        "numpy.ma.array",
        "numpy.ma.log",
        "numpy.ma.sometrue",
        "numpy.ma.masked_less",
        "numpy.ma.alltrue",
        "numpy.ma.zeros",
        "numpy.ma.inner",
        "numpy.ma.log10",
        "numpy.ma.nomask",
        "numpy.ma.sort",
        "numpy.ma.arcsin",
        "numpy.ma.resize",
        "numpy.ma.count",
        "numpy.ma.not_equal",
        "numpy.ma.tanh",
        "numpy.ma.maximum",
        "numpy.testing.suppress_warnings",
        "numpy.ma.masked_outside",
        "numpy.ma.masked_less_equal",
        "numpy.ma.minimum",
        "numpy.ma.conjugate",
        "numpy.ma.tan",
        "numpy.ma.absolute",
        "numpy.ma.masked_not_equal",
        "numpy.ma.sqrt",
        "numpy.ma.arctan",
        "numpy.testing.TestCase",
        "numpy.ma.getmask",
        "numpy.ma.take",
        "numpy",
        "numpy.ma.sin",
        "numpy.ma.product",
        "numpy.ma.repeat",
        "numpy.ma.masked_where",
        "numpy.ma.multiply",
        "numpy.testing.assert_",
        "numpy.ma.allequal",
        "numpy.ma.greater_equal",
        "numpy.ma.average",
        "numpy.ma.masked_values",
        "numpy.ma.exp"
    ],
    "/tmp/numpy/numpy/ma/tests/test_regression.py": [
        "numpy.ma.masked_where",
        "numpy.ma.MaskType",
        "__future__.division",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_allclose",
        "numpy.compat.sixu",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.assert_array_equal",
        "numpy.testing.suppress_warnings",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/ma/tests/test_subclassing.py": [
        "numpy.ma.testutils.assert_equal",
        "numpy.ma.core.divide",
        "numpy.ma.core.MaskedArray",
        "__future__.absolute_import",
        "numpy.ma.core.hypot",
        "numpy.ma.core.array",
        "numpy.ma.core.masked_array",
        "numpy.ma.core.log",
        "numpy.ma.core.asarray",
        "numpy.testing.TestCase",
        "numpy.ma.core.add",
        "numpy.ma.core.masked",
        "numpy",
        "numpy.ma.core.nomask",
        "__future__.division",
        "numpy.ma.core.asanyarray",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.ma.core.arange"
    ],
    "/tmp/numpy/numpy/ma/testutils.py": [
        "numpy.ndarray",
        "numpy.testing.utils",
        "__future__.absolute_import",
        "operator",
        ".core.masked_array",
        "numpy.core.umath",
        "numpy.testing.build_err_msg",
        ".core.getmask",
        ".core.masked",
        "numpy",
        ".core.mask_or",
        ".core.filled",
        ".core.nomask",
        "__future__.division",
        "numpy.testing.assert_",
        "__future__.print_function",
        "numpy.float_",
        "numpy.testing.suppress_warnings"
    ],
    "/tmp/numpy/numpy/ma/timer_comparison.py": [
        "__future__.division",
        "timeit",
        "functools.reduce",
        "numpy.core.fromnumeric",
        "__future__.absolute_import",
        "numpy.float_",
        "numpy",
        "__future__.print_function",
        "numpy.testing.utils.build_err_msg"
    ],
    "/tmp/numpy/numpy/ma/version.py": [
        "__future__.division",
        ".core",
        "__future__.absolute_import",
        "__future__.print_function",
        ".extras"
    ],
    "/tmp/numpy/numpy/matlib.py": [
        "__future__.division",
        "numpy",
        "numpy.matrixlib.defmatrix.matrix",
        "__future__.absolute_import",
        "numpy",
        "numpy.matrixlib.defmatrix.asmatrix",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/matrixlib/__init__.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.nosetester._numpy_tester",
        ".defmatrix",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/matrixlib/defmatrix.py": [
        "numpy.linalg.inv",
        "numpy.dual.pinv",
        "__future__.absolute_import",
        "numpy.core.numeric.binary_repr",
        "numpy.core.numeric.isscalar",
        "__future__.print_function",
        "numpy.core.numeric.concatenate",
        "__future__.division",
        "numpy.core.numeric",
        "sys",
        "numpy.core.numeric.asanyarray",
        "numpy.core.numerictypes.issubdtype",
        "numpy.core.numeric.identity"
    ],
    "/tmp/numpy/numpy/matrixlib/setup.py": [
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "numpy.distutils.core.setup",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/matrixlib/tests/test_defmatrix.py": [
        "numpy.linalg",
        "numpy.linalg",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "numpy.testing.assert_array_almost_equal",
        "numpy.asmatrix",
        "numpy.testing.TestCase",
        "numpy.matrix",
        "numpy.bmat",
        "collections",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "numpy.matrixlib.mat",
        "numpy.matrixlib.defmatrix.matrix_power",
        "__future__.absolute_import",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/matrixlib/tests/test_multiarray.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_array_equal",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/matrixlib/tests/test_numeric.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/matrixlib/tests/test_regression.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/polynomial/__init__.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.nosetester._numpy_tester",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/polynomial/_polybase.py": [
        "__future__.division",
        "abc.abstractmethod",
        ".polyutils",
        "numbers.Number",
        "__future__.absolute_import",
        "abc.ABCMeta",
        "abc.abstractproperty",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/polynomial/chebyshev.py": [
        ".polynomial.polyadd",
        ".polynomial.polymulx",
        ".polynomial.polysub",
        "._polybase.ABCPolyBase",
        "__future__.absolute_import",
        ".polyutils",
        "__future__.print_function",
        "numpy",
        "__future__.division",
        "warnings",
        "numpy.linalg"
    ],
    "/tmp/numpy/numpy/polynomial/hermite.py": [
        ".polynomial.polyadd",
        ".polynomial.polymulx",
        ".polynomial.polysub",
        "._polybase.ABCPolyBase",
        "__future__.absolute_import",
        ".polyutils",
        "numpy",
        "__future__.division",
        "warnings",
        "__future__.print_function",
        "numpy.linalg"
    ],
    "/tmp/numpy/numpy/polynomial/hermite_e.py": [
        ".polynomial.polyadd",
        ".polynomial.polymulx",
        ".polynomial.polysub",
        "._polybase.ABCPolyBase",
        "__future__.absolute_import",
        ".polyutils",
        "numpy",
        "__future__.division",
        "warnings",
        "__future__.print_function",
        "numpy.linalg"
    ],
    "/tmp/numpy/numpy/polynomial/laguerre.py": [
        ".polynomial.polyadd",
        ".polynomial.polymulx",
        ".polynomial.polysub",
        "._polybase.ABCPolyBase",
        "__future__.absolute_import",
        ".polyutils",
        "numpy",
        "__future__.division",
        "warnings",
        "__future__.print_function",
        "numpy.linalg"
    ],
    "/tmp/numpy/numpy/polynomial/legendre.py": [
        ".polynomial.polyadd",
        ".polynomial.polymulx",
        ".polynomial.polysub",
        "._polybase.ABCPolyBase",
        "__future__.absolute_import",
        ".polyutils",
        "__future__.division",
        "warnings",
        "numpy",
        "__future__.print_function",
        "numpy.linalg"
    ],
    "/tmp/numpy/numpy/polynomial/polynomial.py": [
        "._polybase.ABCPolyBase",
        "__future__.absolute_import",
        ".polyutils",
        "numpy",
        "__future__.division",
        "warnings",
        "__future__.print_function",
        "numpy.linalg"
    ],
    "/tmp/numpy/numpy/polynomial/polyutils.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/polynomial/setup.py": [
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "numpy.distutils.core.setup",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/polynomial/tests/test_chebyshev.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.polynomial.chebyshev",
        "numpy.polynomial.polynomial.polyval",
        "numpy.testing.TestCase",
        "numpy",
        "__future__.division",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/polynomial/tests/test_classes.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.polynomial.Legendre",
        "numpy.polynomial.HermiteE",
        "numpy.compat.long",
        "numpy",
        "__future__.division",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.polynomial.Chebyshev",
        "numpy.polynomial.Laguerre",
        "numpy.polynomial.Hermite",
        "numbers.Number",
        "numpy.polynomial.Polynomial",
        "operator"
    ],
    "/tmp/numpy/numpy/polynomial/tests/test_hermite.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.polynomial.polynomial.polyval",
        "numpy.testing.TestCase",
        "numpy",
        "__future__.division",
        "numpy.polynomial.hermite",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/polynomial/tests/test_hermite_e.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.polynomial.polynomial.polyval",
        "numpy.polynomial.hermite_e",
        "numpy.testing.TestCase",
        "numpy",
        "__future__.division",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/polynomial/tests/test_laguerre.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.polynomial.polynomial.polyval",
        "numpy.testing.TestCase",
        "numpy",
        "__future__.division",
        "numpy.polynomial.laguerre",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/polynomial/tests/test_legendre.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "__future__.absolute_import",
        "numpy.polynomial.polynomial.polyval",
        "numpy.testing.TestCase",
        "__future__.print_function",
        "numpy",
        "numpy.testing.assert_raises",
        "__future__.division",
        "numpy.polynomial.legendre",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite"
    ],
    "/tmp/numpy/numpy/polynomial/tests/test_polynomial.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "numpy.polynomial.polynomial",
        "numpy.testing.TestCase",
        "numpy",
        "__future__.division",
        "__future__.absolute_import",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/polynomial/tests/test_polyutils.py": [
        "__future__.division",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "numpy.polynomial.polyutils",
        "__future__.absolute_import",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/polynomial/tests/test_printing.py": [
        "__future__.division",
        "numpy.polynomial",
        "numpy.testing.TestCase",
        "__future__.absolute_import",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/random/__init__.py": [
        "__future__.division",
        ".info.__all__",
        "warnings",
        "__future__.absolute_import",
        ".mtrand",
        "numpy.testing.nosetester._numpy_tester",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/random/info.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/numpy/numpy/random/setup.py": [
        "numpy.distutils.misc_util.get_mathlibs",
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "os.path.join",
        "numpy.distutils.core.setup",
        "sys",
        "distutils.msvccompiler.get_build_version",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/random/tests/test_random.py": [
        "hashlib",
        "threading.Thread",
        "numpy.testing.assert_equal",
        "numpy.testing.assert_warns",
        "numpy.random",
        "__future__.absolute_import",
        "numpy.testing.assert_array_almost_equal",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.testing.assert_array_equal",
        "numpy.compat.asbytes",
        "__future__.division",
        "warnings",
        "sys",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.testing.suppress_warnings"
    ],
    "/tmp/numpy/numpy/random/tests/test_regression.py": [
        "gc",
        "gc",
        "__future__.division",
        "numpy.testing.assert_array_equal",
        "numpy.random",
        "__future__.absolute_import",
        "sys",
        "numpy.testing.TestCase",
        "numpy.compat.long",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/setup.py": [
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/testing/__init__.py": [
        "__future__.division",
        ".utils",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/testing/decorators.py": [
        "nose",
        ".noseclasses.KnownFailureException",
        "nose",
        "nose",
        "__future__.division",
        ".utils.assert_warns",
        ".utils.SkipTest",
        "__future__.absolute_import",
        "collections",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/testing/noseclasses.py": [
        "inspect.ismethod",
        "inspect.isclass",
        "inspect.ismodule",
        "inspect.isroutine",
        "inspect.isfunction",
        "__future__.absolute_import",
        "nose.plugins.errorclass.ErrorClass",
        "nose.plugins.errorclass.ErrorClassPlugin",
        "nose",
        "numpy",
        "doctest",
        "__future__.division",
        "nose.plugins.base.Plugin",
        "nose.plugins.doctests",
        "inspect",
        ".nosetester.get_package_name",
        "__future__.print_function",
        "nose.util.src",
        "os",
        ".utils.KnownFailureException"
    ],
    "/tmp/numpy/numpy/testing/nosetester.py": [
        ".noseclasses.KnownFailurePlugin",
        "scipy",
        "numpy",
        ".noseclasses.NumpyDoctest",
        ".noseclasses.Unplugger",
        ".noseclasses.KnownFailurePlugin",
        "nose.plugins.builtin",
        "..distutils.cpuinfo",
        ".noseclasses.NumpyTestProgram",
        "threading",
        ".utils",
        "doctest",
        ".noseclasses.Unplugger",
        "__future__.division",
        "numpy.compat.basestring",
        "warnings",
        ".utils.import_nose",
        "__future__.absolute_import",
        "sys",
        "numpy",
        ".utils.suppress_warnings",
        "os",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/testing/print_coercion_tables.py": [
        "__future__.division",
        "__future__.absolute_import",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/testing/setup.py": [
        "numpy.distutils.misc_util.Configuration",
        "__future__.division",
        "numpy.distutils.core.setup",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/testing/tests/test_decorators.py": [
        "warnings",
        "warnings",
        "warnings",
        "__future__.division",
        "numpy.testing.run_module_suite",
        "warnings",
        "numpy.testing.SkipTest",
        "__future__.absolute_import",
        "numpy.testing.assert_",
        "numpy.testing.dec",
        "numpy.testing.KnownFailureException",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/testing/tests/test_doctesting.py": [
        "__future__.division",
        "numpy.testing.noseclasses.NumpyDoctest",
        "__future__.absolute_import",
        "__future__.print_function",
        "nose"
    ],
    "/tmp/numpy/numpy/testing/tests/test_utils.py": [
        "numpy.testing.assert_equal",
        "numpy.testing.assert_almost_equal",
        "numpy.testing.assert_warns",
        "unittest",
        "numpy.testing.assert_array_less",
        "__future__.absolute_import",
        "numpy.testing.assert_array_max_ulp",
        "numpy.testing.raises",
        "numpy.testing.assert_string_equal",
        "numpy.testing.build_err_msg",
        "numpy.testing.run_module_suite",
        "numpy.testing.assert_allclose",
        "numpy",
        "numpy.testing.assert_array_equal",
        "__future__.division",
        "warnings",
        "numpy.testing.clear_and_catch_warnings",
        "sys",
        "numpy.testing.tempdir",
        "numpy.testing.assert_array_almost_equal_nulp",
        "numpy.testing.assert_",
        "numpy.testing.assert_approx_equal",
        "__future__.print_function",
        "numpy.testing.assert_raises",
        "numpy.testing.assert_no_warnings",
        "numpy.testing.temppath",
        "numpy.testing.suppress_warnings",
        "os",
        "numpy.testing.assert_array_almost_equal"
    ],
    "/tmp/numpy/numpy/testing/utils.py": [
        "nose",
        "numpy.core.isnan",
        "numpy.core.errstate",
        "numpy.core.isfinite",
        "numpy.core.errstate",
        "numpy.core.isinf",
        "random",
        "numpy.core.zeros",
        "numpy.core.float64",
        "win32pdh",
        "win32pdh",
        "time",
        "time",
        "numpy.core.signbit",
        "numpy.core.isscalar",
        "numpy.lib.real",
        "numpy.lib.imag",
        "numpy.lib.iscomplexobj",
        "numpy.core.ndarray",
        "pprint",
        "numpy.lib.real",
        "numpy.lib.iscomplexobj",
        "numpy.lib.imag",
        "numpy.core.ndarray",
        "numpy",
        "numpy.core.all",
        "numpy.core.inf",
        "numpy.core.array",
        "numpy.core.isnan",
        "numpy.core.any",
        "traceback",
        "numpy.core.isinf",
        "numpy.core.number",
        "numpy.core.float_",
        "numpy.core.numerictypes.issubdtype",
        "numpy.core.fromnumeric.any",
        "numpy.core.array",
        "numpy.core.result_type",
        "difflib",
        "doctest",
        "numpy.compat.npy_load_module",
        "inspect.isfunction",
        "numpy",
        "numpy",
        "numpy",
        "numpy",
        "numpy",
        "numpy",
        "functools.partial",
        "tempfile.mkdtemp",
        "unittest.case.SkipTest",
        "__future__.absolute_import",
        "contextlib",
        "operator",
        "shutil",
        "functools.wraps",
        "numpy.core.array_repr",
        "re",
        "__future__.print_function",
        "tempfile.mkstemp",
        "numpy.core.empty",
        "__future__.division",
        "warnings",
        "sys",
        "numpy.core.ndarray",
        "numpy.lib.utils.deprecate",
        "StringIO.StringIO",
        "dummy_threading.Lock",
        "numpy.core.arange",
        "numpy.core.float32",
        "os"
    ],
    "/tmp/numpy/numpy/tests/test_ctypeslib.py": [
        "numpy.ctypeslib.ndpointer",
        "__future__.division",
        "numpy.testing.dec",
        "numpy.ctypeslib.load_library",
        "__future__.absolute_import",
        "sys",
        "numpy.testing.TestCase",
        "numpy",
        "numpy.distutils.misc_util.get_shared_lib_extension",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/tests/test_matlib.py": [
        "__future__.division",
        "numpy.testing.run_module_suite",
        "__future__.absolute_import",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.assert_array_equal",
        "numpy.matlib",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/tests/test_numpy_version.py": [
        "__future__.division",
        "__future__.absolute_import",
        "re",
        "numpy",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/tests/test_reloading.py": [
        "numpy",
        "numpy._globals",
        "__future__.division",
        "__future__.absolute_import",
        "sys",
        "imp.reload",
        "numpy.testing.assert_",
        "numpy.testing.run_module_suite",
        "__future__.print_function",
        "numpy.testing.assert_raises"
    ],
    "/tmp/numpy/numpy/tests/test_scripts.py": [
        "__future__.division",
        "numpy.compat.py3k.basestring",
        "nose.tools.assert_equal",
        "os.path.join",
        "os",
        "subprocess.Popen",
        "__future__.absolute_import",
        "sys",
        "numpy.compat.py3k.asbytes",
        "numpy",
        "numpy.testing.assert_",
        "os.path.dirname",
        "os.path.isfile",
        "numpy.testing.decorators.skipif",
        "__future__.print_function",
        "subprocess.PIPE"
    ],
    "/tmp/numpy/numpy/tests/test_warnings.py": [
        "__future__.division",
        "numpy.testing.decorators.slow",
        "ast",
        "__future__.absolute_import",
        "sys",
        "tokenize",
        "pathlib.Path",
        "numpy.testing.run_module_suite",
        "numpy",
        "__future__.print_function"
    ],
    "/tmp/numpy/numpy/version.py": []
}
{
    "/tmp/oauth2client/oauth2client/__init__.py": [],
    "/tmp/oauth2client/oauth2client/_helpers.py": [
        "six",
        "functools",
        "base64",
        "six.moves.urllib",
        "json",
        "warnings",
        "inspect",
        "logging",
        "os"
    ],
    "/tmp/oauth2client/oauth2client/_openssl_crypt.py": [
        "OpenSSL.crypto",
        "oauth2client._helpers"
    ],
    "/tmp/oauth2client/oauth2client/_pkce.py": [
        "hashlib",
        "base64",
        "os"
    ],
    "/tmp/oauth2client/oauth2client/_pure_python_crypt.py": [
        "pyasn1_modules.rfc2459.Certificate",
        "six",
        "rsa",
        "oauth2client._helpers",
        "pyasn1_modules.rfc5208.PrivateKeyInfo",
        "pyasn1_modules.pem",
        "pyasn1.codec.der.decoder"
    ],
    "/tmp/oauth2client/oauth2client/_pycrypto_crypt.py": [
        "Crypto.Util.asn1.DerSequence",
        "Crypto.Signature.PKCS1_v1_5",
        "Crypto.PublicKey.RSA",
        "oauth2client._helpers",
        "Crypto.Hash.SHA256"
    ],
    "/tmp/oauth2client/oauth2client/client.py": [
        "oauth2client.service_account",
        "oauth2client.service_account",
        "oauth2client.contrib.appengine.AppAssertionCredentials",
        "oauth2client.contrib.gce.AppAssertionCredentials",
        "datetime",
        "tempfile",
        "collections",
        "oauth2client._helpers",
        "oauth2client._pkce",
        "oauth2client.transport",
        "six.moves.urllib",
        "logging",
        "socket",
        "six.moves.http_client",
        "os",
        "json",
        "copy",
        "shutil",
        "oauth2client",
        "oauth2client.crypt",
        "six",
        "sys",
        "oauth2client.clientsecrets"
    ],
    "/tmp/oauth2client/oauth2client/clientsecrets.py": [
        "six",
        "json"
    ],
    "/tmp/oauth2client/oauth2client/contrib/__init__.py": [],
    "/tmp/oauth2client/oauth2client/contrib/_appengine_ndb.py": [
        "logging",
        "google.appengine.ext.ndb",
        "oauth2client.client"
    ],
    "/tmp/oauth2client/oauth2client/contrib/_metadata.py": [
        "oauth2client._helpers",
        "datetime",
        "six.moves.urllib.parse",
        "json",
        "oauth2client.client",
        "six.moves.http_client",
        "oauth2client.transport"
    ],
    "/tmp/oauth2client/oauth2client/contrib/appengine.py": [
        "google.appengine.api.app_identity",
        "oauth2client",
        "oauth2client.transport",
        "google.appengine.ext.webapp.util.login_required",
        "json",
        "oauth2client.contrib.xsrfutil",
        "cgi",
        "google.appengine.api.users",
        "google.appengine.ext.db",
        "google.appengine.api.memcache",
        "oauth2client._helpers",
        "webapp2",
        "logging",
        "os",
        "threading",
        "oauth2client.client",
        "oauth2client.clientsecrets",
        "pickle"
    ],
    "/tmp/oauth2client/oauth2client/contrib/devshell.py": [
        "socket",
        "oauth2client._helpers",
        "datetime",
        "json",
        "oauth2client.client",
        "os"
    ],
    "/tmp/oauth2client/oauth2client/contrib/dictionary_storage.py": [
        "oauth2client.client"
    ],
    "/tmp/oauth2client/oauth2client/contrib/django_util/__init__.py": [
        "importlib",
        "oauth2client.contrib.django_util.storage",
        "django.conf",
        "six.moves.urllib.parse",
        "django.core.urlresolvers",
        "django.core.exceptions",
        "oauth2client.clientsecrets",
        "oauth2client.contrib.dictionary_storage",
        "oauth2client.transport"
    ],
    "/tmp/oauth2client/oauth2client/contrib/django_util/apps.py": [
        "sys",
        "django.apps.AppConfig"
    ],
    "/tmp/oauth2client/oauth2client/contrib/django_util/decorators.py": [
        "six.wraps",
        "django.shortcuts",
        "django.conf",
        "six.moves.urllib.parse",
        "oauth2client.contrib.django_util"
    ],
    "/tmp/oauth2client/oauth2client/contrib/django_util/models.py": [
        "django.utils.encoding",
        "django.db.models",
        "pickle",
        "base64",
        "oauth2client"
    ],
    "/tmp/oauth2client/oauth2client/contrib/django_util/signals.py": [
        "django.dispatch"
    ],
    "/tmp/oauth2client/oauth2client/contrib/django_util/site.py": [
        "oauth2client.contrib.django_util.views"
    ],
    "/tmp/oauth2client/oauth2client/contrib/django_util/storage.py": [
        "oauth2client.client"
    ],
    "/tmp/oauth2client/oauth2client/contrib/django_util/views.py": [
        "django.shortcuts.redirect",
        "oauth2client.contrib.django_util.signals",
        "hashlib",
        "django.http",
        "django.conf.settings",
        "django.shortcuts",
        "jsonpickle",
        "oauth2client.contrib.django_util.get_storage",
        "six.moves.urllib.parse",
        "json",
        "oauth2client.client",
        "django.core.urlresolvers",
        "oauth2client.contrib.django_util",
        "os"
    ],
    "/tmp/oauth2client/oauth2client/contrib/flask_util.py": [
        "flask.session",
        "six.moves.http_client",
        "oauth2client.transport",
        "flask.Blueprint",
        "functools.wraps",
        "flask.current_app",
        "json",
        "flask._app_ctx_stack",
        "oauth2client.contrib.dictionary_storage",
        "flask.redirect",
        "hashlib",
        "flask.url_for",
        "pickle",
        "flask.request",
        "oauth2client.client",
        "oauth2client.clientsecrets",
        "os"
    ],
    "/tmp/oauth2client/oauth2client/contrib/gce.py": [
        "logging",
        "warnings",
        "oauth2client.contrib._metadata",
        "oauth2client.client",
        "six.moves.http_client"
    ],
    "/tmp/oauth2client/oauth2client/contrib/keyring_storage.py": [
        "threading",
        "oauth2client.client",
        "keyring"
    ],
    "/tmp/oauth2client/oauth2client/contrib/multiprocess_file_storage.py": [
        "logging",
        "base64",
        "oauth2client._helpers",
        "threading",
        "json",
        "oauth2client.client",
        "fasteners",
        "six.iteritems",
        "os"
    ],
    "/tmp/oauth2client/oauth2client/contrib/sqlalchemy.py": [
        "sqlalchemy.types",
        "__future__.absolute_import",
        "oauth2client.client"
    ],
    "/tmp/oauth2client/oauth2client/contrib/xsrfutil.py": [
        "base64",
        "binascii",
        "oauth2client._helpers",
        "time",
        "hmac"
    ],
    "/tmp/oauth2client/oauth2client/crypt.py": [
        "oauth2client._helpers",
        "oauth2client._pure_python_crypt",
        "json",
        "oauth2client._pycrypto_crypt",
        "logging",
        "oauth2client._openssl_crypt",
        "time"
    ],
    "/tmp/oauth2client/oauth2client/file.py": [
        "threading",
        "oauth2client.client",
        "os",
        "oauth2client._helpers"
    ],
    "/tmp/oauth2client/oauth2client/service_account.py": [
        "oauth2client.crypt",
        "base64",
        "oauth2client._helpers",
        "datetime",
        "json",
        "oauth2client.client",
        "time",
        "copy",
        "oauth2client",
        "oauth2client.transport"
    ],
    "/tmp/oauth2client/oauth2client/tools.py": [
        "argparse",
        "webbrowser",
        "logging",
        "socket",
        "six.moves.urllib",
        "sys",
        "oauth2client.client",
        "oauth2client._helpers",
        "six.moves.input",
        "six.moves.BaseHTTPServer",
        "six.moves.http_client",
        "__future__.print_function"
    ],
    "/tmp/oauth2client/oauth2client/transport.py": [
        "oauth2client.client.NonAsciiHeaderError",
        "logging",
        "six",
        "oauth2client._helpers",
        "httplib2",
        "six.moves.http_client"
    ]
}
{
    "/tmp/oauthlib/oauthlib/__init__.py": [
        "logging"
    ],
    "/tmp/oauthlib/oauthlib/common.py": [
        "jwt",
        "jwt",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "datetime",
        "re",
        "collections",
        "random",
        "sys",
        "urllib.parse.urlencode",
        "urllib.parse.quote",
        "logging",
        "urllib.parse",
        "urllib.parse.unquote",
        "time"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/__init__.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/__init__.py": [
        "oauthlib.common.urlencode",
        "base64",
        "oauthlib.common.to_unicode",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".parameters",
        "oauthlib.common.generate_nonce",
        "oauthlib.common.generate_timestamp",
        "oauthlib.common.Request",
        "sys",
        "hashlib",
        "logging",
        "urllib.parse",
        ".signature"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/endpoints/__init__.py": [
        "__future__.absolute_import"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/endpoints/access_token.py": [
        "oauthlib.common.urlencode",
        "..errors",
        "logging",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".base.BaseEndpoint"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/endpoints/authorization.py": [
        "urllib.parse.urlencode",
        "..errors",
        "oauthlib.common.add_params_to_uri",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".base.BaseEndpoint"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/endpoints/base.py": [
        "..SIGNATURE_RSA",
        "..errors",
        "..SIGNATURE_TYPE_AUTH_HEADER",
        "__future__.unicode_literals",
        "..CONTENT_TYPE_FORM_URLENCODED",
        "..utils",
        "time",
        "oauthlib.common.Request",
        "__future__.absolute_import",
        "..SIGNATURE_TYPE_QUERY",
        "..SIGNATURE_HMAC",
        "..signature",
        "oauthlib.common.generate_token",
        "..SIGNATURE_TYPE_BODY"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/endpoints/pre_configured.py": [
        ".ResourceEndpoint",
        "__future__.unicode_literals",
        ".AccessTokenEndpoint",
        "__future__.absolute_import",
        ".RequestTokenEndpoint",
        ".AuthorizationEndpoint"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/endpoints/request_token.py": [
        "oauthlib.common.urlencode",
        "..errors",
        "logging",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".base.BaseEndpoint"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/endpoints/resource.py": [
        "..errors",
        "logging",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".base.BaseEndpoint"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/endpoints/signature_only.py": [
        "..errors",
        "logging",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".base.BaseEndpoint"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/errors.py": [
        "oauthlib.common.urlencode",
        "oauthlib.common.add_params_to_uri",
        "__future__.unicode_literals"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/parameters.py": [
        "oauthlib.common.urlencode",
        "__future__.unicode_literals",
        ".utils",
        "__future__.absolute_import",
        "urllib.parse.urlparse",
        "oauthlib.common.extract_params",
        "urllib.parse.urlunparse"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/request_validator.py": [
        "__future__.unicode_literals",
        ".utils",
        ".SIGNATURE_METHODS",
        "__future__.absolute_import"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/signature.py": [
        "jwt.algorithms",
        "__future__.unicode_literals",
        ".utils",
        "__future__.absolute_import",
        "oauthlib.common.extract_params",
        "oauthlib.common.safe_string_equals",
        "oauthlib.common.urldecode",
        "binascii",
        "oauthlib.common.bytes_type",
        "oauthlib.common.unicode_type",
        "hashlib",
        "urllib.parse",
        "hmac"
    ],
    "/tmp/oauthlib/oauthlib/oauth1/rfc5849/utils.py": [
        "oauthlib.common.unquote",
        "__future__.unicode_literals",
        "oauthlib.common.quote",
        "urllib.request",
        "__future__.absolute_import",
        "oauthlib.common.unicode_type"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/__init__.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/__init__.py": [
        "logging",
        "__future__.unicode_literals",
        "functools",
        "__future__.absolute_import",
        ".errors.TemporarilyUnavailableError",
        ".errors.ServerError",
        ".errors.OAuth2Error",
        ".errors.FatalClientError"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/clients/__init__.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/clients/backend_application.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "..parameters.prepare_token_request",
        ".base.Client"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/clients/base.py": [
        "__future__.unicode_literals",
        "oauthlib.oauth2.rfc6749.utils.is_secure_transport",
        "__future__.absolute_import",
        "oauthlib.oauth2.rfc6749.parameters.parse_token_response",
        "oauthlib.oauth2.rfc6749.tokens",
        "oauthlib.oauth2.rfc6749.parameters.prepare_token_request",
        "oauthlib.oauth2.rfc6749.parameters.prepare_token_revocation_request",
        "time",
        "oauthlib.common.generate_token",
        "oauthlib.oauth2.rfc6749.errors.TokenExpiredError",
        "oauthlib.oauth2.rfc6749.errors.InsecureTransportError"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/clients/legacy_application.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "..parameters.prepare_token_request",
        ".base.Client"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/clients/mobile_application.py": [
        "..parameters.parse_implicit_response",
        "__future__.unicode_literals",
        "..parameters.prepare_grant_uri",
        "__future__.absolute_import",
        ".base.Client"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/clients/service_application.py": [
        "jwt",
        "oauthlib.common.to_unicode",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "..parameters.prepare_token_request",
        ".base.Client",
        "time"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/clients/web_application.py": [
        "__future__.unicode_literals",
        "..parameters.prepare_grant_uri",
        "__future__.absolute_import",
        "..parameters.prepare_token_request",
        ".base.Client",
        "..parameters.parse_authorization_code_response"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/endpoints/__init__.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/endpoints/authorization.py": [
        "logging",
        ".base.catch_errors_and_unavailability",
        "__future__.unicode_literals",
        "oauthlib.oauth2.rfc6749.utils",
        "oauthlib.common.Request",
        "__future__.absolute_import",
        ".base.BaseEndpoint"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/endpoints/base.py": [
        "logging",
        "__future__.unicode_literals",
        "functools",
        "__future__.absolute_import",
        "..errors.TemporarilyUnavailableError",
        "..errors.ServerError",
        "..errors.OAuth2Error",
        "..errors.FatalClientError"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/endpoints/pre_configured.py": [
        "..tokens.BearerToken",
        "..grant_types.ResourceOwnerPasswordCredentialsGrant",
        "..grant_types.AuthorizationCodeGrant",
        ".revocation.RevocationEndpoint",
        ".resource.ResourceEndpoint",
        "__future__.unicode_literals",
        "..grant_types.AuthCodeGrantDispatcher",
        "..grant_types.OpenIDConnectAuthCode",
        "__future__.absolute_import",
        "..grant_types.ImplicitGrant",
        "..grant_types.OpenIDConnectImplicit",
        ".authorization.AuthorizationEndpoint",
        ".token.TokenEndpoint",
        "..grant_types.ClientCredentialsGrant",
        "..grant_types.RefreshTokenGrant"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/endpoints/resource.py": [
        "logging",
        ".base.catch_errors_and_unavailability",
        "__future__.unicode_literals",
        "oauthlib.common.Request",
        "__future__.absolute_import",
        ".base.BaseEndpoint"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/endpoints/revocation.py": [
        "logging",
        ".base.catch_errors_and_unavailability",
        "__future__.unicode_literals",
        "oauthlib.common.Request",
        "__future__.absolute_import",
        ".base.BaseEndpoint",
        "..errors.InvalidRequestError",
        "..errors.UnsupportedTokenTypeError",
        "..errors.InvalidClientError",
        "..errors.OAuth2Error"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/endpoints/token.py": [
        "logging",
        ".base.catch_errors_and_unavailability",
        "__future__.unicode_literals",
        "oauthlib.oauth2.rfc6749.utils",
        "oauthlib.common.Request",
        "__future__.absolute_import",
        ".base.BaseEndpoint"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/errors.py": [
        "inspect",
        "sys",
        "oauthlib.common.urlencode",
        "__future__.unicode_literals",
        "oauthlib.common.add_params_to_uri",
        "json"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/grant_types/__init__.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/grant_types/authorization_code.py": [
        "..errors",
        "logging",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "..request_validator.RequestValidator",
        "json",
        "oauthlib.uri_validate.is_absolute_uri",
        "oauthlib.common",
        ".base.GrantTypeBase"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/grant_types/base.py": [
        "oauthlib.oauth2.rfc6749.errors",
        "oauthlib.common.add_params_to_uri",
        "__future__.unicode_literals",
        "oauthlib.oauth2.rfc6749.utils",
        "__future__.absolute_import",
        "logging"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/grant_types/client_credentials.py": [
        "..errors",
        ".base.GrantTypeBase",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "..request_validator.RequestValidator",
        "json",
        "logging"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/grant_types/implicit.py": [
        "..errors",
        ".base.GrantTypeBase",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "..request_validator.RequestValidator",
        "oauthlib.uri_validate.is_absolute_uri",
        "oauthlib.common",
        "logging"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/grant_types/openid_connect.py": [
        ".base.GrantTypeBase",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "datetime",
        ".implicit.ImplicitGrant",
        ".authorization_code.AuthorizationCodeGrant",
        "..errors.InvalidRequestError",
        "logging",
        "json.loads",
        "..request_validator.RequestValidator",
        "..errors.ConsentRequired",
        "..errors.LoginRequired"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/grant_types/refresh_token.py": [
        "..errors",
        ".base.GrantTypeBase",
        "__future__.unicode_literals",
        "..utils",
        "__future__.absolute_import",
        "..request_validator.RequestValidator",
        "json",
        "logging"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py": [
        "..errors",
        ".base.GrantTypeBase",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "..request_validator.RequestValidator",
        "json",
        "logging"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/parameters.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "oauthlib.signals.scope_changed",
        ".utils.is_secure_transport",
        ".utils.scope_to_list",
        ".errors.MismatchingStateError",
        "oauthlib.common.add_params_to_uri",
        "json",
        ".errors.MissingCodeError",
        ".errors.InsecureTransportError",
        ".tokens.OAuth2Token",
        "oauthlib.common.unicode_type",
        ".errors.MissingTokenError",
        ".errors.raise_from_error",
        ".utils.list_to_scope",
        ".errors.MissingTokenTypeError",
        "urllib.parse",
        "oauthlib.common.add_params_to_qs",
        "time",
        "os"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/request_validator.py": [
        "__future__.unicode_literals",
        "logging",
        "__future__.absolute_import"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/tokens.py": [
        "hashlib",
        "oauthlib.common.add_params_to_uri",
        "__future__.unicode_literals",
        ".utils",
        "oauthlib.common.unicode_type",
        "__future__.absolute_import",
        "urllib.parse.urlparse",
        "oauthlib.common.add_params_to_qs",
        "oauthlib.common",
        "hmac",
        "binascii.b2a_base64"
    ],
    "/tmp/oauthlib/oauthlib/oauth2/rfc6749/utils.py": [
        "__future__.unicode_literals",
        "urllib.parse.quote",
        "__future__.absolute_import",
        "datetime",
        "urllib.parse.urlparse",
        "oauthlib.common.unicode_type",
        "oauthlib.common.urldecode",
        "os"
    ],
    "/tmp/oauthlib/oauthlib/signals.py": [],
    "/tmp/oauthlib/oauthlib/uri_validate.py": [
        "__future__.unicode_literals",
        "re"
    ]
}
{
    "/tmp/orvibo/orvibo/__init__.py": [],
    "/tmp/orvibo/orvibo/s20.py": [
        "socket",
        "time",
        "binascii",
        "logging",
        "struct",
        "threading"
    ]
}
{
    "/tmp/ouimeaux/ouimeaux/__init__.py": [],
    "/tmp/ouimeaux/ouimeaux/cli.py": [
        "socketio.server.SocketIOServer",
        "ouimeaux.server.app",
        "ouimeaux.server.initialize",
        "ouimeaux.utils",
        ".environment.Environment",
        "logging",
        "argparse",
        ".utils.matcher",
        "sys",
        ".discovery.UPnPLoopbackException",
        ".config.WemoConfiguration"
    ],
    "/tmp/ouimeaux/ouimeaux/config.py": [
        "win32com.shell.shellcon",
        "win32com.shell.shell",
        "yaml",
        "os"
    ],
    "/tmp/ouimeaux/ouimeaux/device/__init__.py": [
        ".api.xsd.device",
        "logging",
        "six.moves.urllib.parse.urlsplit",
        ".api.service.Service",
        "..utils.requests_get"
    ],
    "/tmp/ouimeaux/ouimeaux/device/api/__init__.py": [],
    "/tmp/ouimeaux/ouimeaux/device/api/service.py": [
        "logging",
        ".xsd.service",
        "...utils.requests_get",
        "...utils.requests_post",
        "xml.etree.cElementTree"
    ],
    "/tmp/ouimeaux/ouimeaux/device/api/xsd/__init__.py": [],
    "/tmp/ouimeaux/ouimeaux/device/api/xsd/device.py": [
        "io.BytesIO",
        "re",
        "datetime.datetime",
        "base64",
        "datetime.tzinfo",
        "datetime.timedelta",
        "sys",
        "elementtree.ElementTree"
    ],
    "/tmp/ouimeaux/ouimeaux/device/api/xsd/service.py": [
        "io.BytesIO",
        "re",
        "datetime.datetime",
        "base64",
        "datetime.tzinfo",
        "datetime.timedelta",
        "sys",
        "elementtree.ElementTree"
    ],
    "/tmp/ouimeaux/ouimeaux/device/bridge.py": [
        "ouimeaux.device.Device",
        "xml.etree.cElementTree"
    ],
    "/tmp/ouimeaux/ouimeaux/device/insight.py": [
        ".switch.Switch",
        "datetime.datetime"
    ],
    "/tmp/ouimeaux/ouimeaux/device/lightswitch.py": [
        ".switch.Switch"
    ],
    "/tmp/ouimeaux/ouimeaux/device/maker.py": [
        "ouimeaux.device.Device",
        "xml.etree.cElementTree"
    ],
    "/tmp/ouimeaux/ouimeaux/device/motion.py": [
        "ouimeaux.device.Device"
    ],
    "/tmp/ouimeaux/ouimeaux/device/switch.py": [
        "ouimeaux.device.Device",
        "gevent"
    ],
    "/tmp/ouimeaux/ouimeaux/discovery.py": [
        "logging",
        "gevent.server.DatagramServer",
        "ouimeaux.utils.get_ip_address",
        "ouimeaux.signals.discovered",
        "gevent",
        "ouimeaux.pysignals.receiver"
    ],
    "/tmp/ouimeaux/ouimeaux/environment.py": [
        "ouimeaux.device.insight.Insight",
        "ouimeaux.signals.discovered",
        "gevent",
        "ouimeaux.signals.devicefound",
        "ouimeaux.discovery.UPnP",
        "ouimeaux.config.WemoConfiguration",
        "ouimeaux.utils.matcher",
        "ouimeaux.subscribe.SubscriptionRegistry",
        "ouimeaux.device.switch.Switch",
        "ouimeaux.device.motion.Motion",
        "ouimeaux.device.maker.Maker",
        "ouimeaux.device.bridge.Bridge",
        "logging",
        "ouimeaux.device.lightswitch.LightSwitch",
        "ouimeaux.device.DeviceUnreachable"
    ],
    "/tmp/ouimeaux/ouimeaux/examples/Randomize.py": [
        "random",
        "ouimeaux.environment.Environment"
    ],
    "/tmp/ouimeaux/ouimeaux/examples/__init__.py": [],
    "/tmp/ouimeaux/ouimeaux/examples/watch.py": [
        "argparse",
        "ouimeaux.signals.statechange",
        "ouimeaux.utils.matcher",
        "ouimeaux.signals.devicefound",
        "sys",
        "ouimeaux.signals.receiver",
        "ouimeaux.environment.Environment"
    ],
    "/tmp/ouimeaux/ouimeaux/pysignals/__init__.py": [],
    "/tmp/ouimeaux/ouimeaux/pysignals/dispatcher.py": [
        "weakref",
        "logging",
        ".inspect.func_accepts_kwargs",
        "six",
        "__future__.absolute_import",
        "sys",
        "threading",
        "future.builtins.range",
        "weakref.WeakMethod"
    ],
    "/tmp/ouimeaux/ouimeaux/pysignals/inspect.py": [
        "inspect",
        "__future__.absolute_import",
        "six"
    ],
    "/tmp/ouimeaux/ouimeaux/pysignals/weakref_backports.py": [
        "weakref.ref"
    ],
    "/tmp/ouimeaux/ouimeaux/server/__init__.py": [
        "flask.Flask",
        "ouimeaux.environment.Environment",
        "flask.send_from_directory",
        "flask.ext.restful.abort",
        "flask.render_template",
        "ouimeaux.environment.UnknownDevice",
        "socketio.namespace.BaseNamespace",
        "flask.ext.restful.Api",
        "flask.ext.restful.Resource",
        "socketio.socketio_manage",
        "ouimeaux.device.switch.Switch",
        "ouimeaux.device.maker.Maker",
        "ouimeaux.signals.statechange",
        "flask.make_response",
        "ouimeaux.device.insight.Insight",
        "flask.request",
        "gevent",
        "os"
    ],
    "/tmp/ouimeaux/ouimeaux/server/settings.py": [],
    "/tmp/ouimeaux/ouimeaux/signals.py": [
        "ouimeaux.pysignals.StateChange",
        "ouimeaux.pysignals.Signal",
        "sys",
        "ouimeaux.pysignals.receiver"
    ],
    "/tmp/ouimeaux/ouimeaux/subscribe.py": [
        "collections.defaultdict",
        "logging",
        "ouimeaux.utils.get_ip_address",
        "ouimeaux.device.insight.Insight",
        "ouimeaux.utils.requests_request",
        "gevent.wsgi.WSGIServer",
        "xml.etree.cElementTree",
        "gevent",
        "random.randint",
        "functools.partial",
        "ouimeaux.signals.subscription"
    ],
    "/tmp/ouimeaux/ouimeaux/utils.py": [
        "functools.wraps",
        "socket",
        "re",
        "gevent",
        "time",
        "requests"
    ]
}
{
    "/tmp/passlib/passlib/__init__.py": [],
    "/tmp/passlib/passlib/_setup/__init__.py": [],
    "/tmp/passlib/passlib/_setup/docdist.py": [
        "distutils.spawn.spawn",
        "distutils.errors",
        "distutils.dir_util",
        "distutils.cmd.Command",
        "os"
    ],
    "/tmp/passlib/passlib/_setup/stamp.py": [
        "__future__.with_statement",
        "re",
        "distutils.dist.Distribution",
        "os"
    ],
    "/tmp/passlib/passlib/apache.py": [
        "passlib.utils.compat.PY3",
        "passlib.exc.ExpectedStringError",
        "passlib.utils.compat.unicode",
        "passlib.utils.render_bytes",
        "passlib.hash.htdigest",
        "passlib.context.CryptContext",
        "passlib.utils.to_bytes",
        "passlib.utils.decor.deprecated_method",
        "passlib.utils.compat.BytesIO",
        "__future__.with_statement",
        "warnings.warn",
        "passlib.registry",
        "passlib.utils.compat.join_bytes",
        "logging",
        "passlib.exc",
        "passlib.utils.is_ascii_codec",
        "os"
    ],
    "/tmp/passlib/passlib/apps.py": [
        "passlib.registry.list_crypt_handlers",
        "passlib.utils.unix_crypt_schemes",
        "itertools.chain",
        "passlib.context.LazyCryptContext",
        "passlib.hash",
        "passlib.utils.sys_bits",
        "logging"
    ],
    "/tmp/passlib/passlib/context.py": [
        "passlib.utils.splitcomma",
        "passlib.registry._validate_handler_name",
        "passlib.utils.to_unicode",
        "passlib.registry.get_crypt_handler",
        "passlib.utils.compat.PY2",
        "passlib.exc.ExpectedTypeError",
        "passlib.exc.ExpectedStringError",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.SafeConfigParser",
        "passlib.utils.to_bytes",
        "passlib.utils.getrandstr",
        "re",
        "passlib.utils.decor.deprecated_method",
        "passlib.utils.compat.BytesIO",
        "passlib.utils.compat.PY3",
        "__future__.with_statement",
        "passlib.utils.rng",
        "warnings.warn",
        "passlib.utils.decor.memoized_property",
        "passlib.exc.PasslibConfigWarning",
        "passlib.utils.compat.NativeStringIO",
        "passlib.utils.compat.irange",
        "passlib.utils.compat.iteritems",
        "passlib.utils.compat.native_string_types",
        "passlib.utils.compat.num_types",
        "logging",
        "passlib.utils.binary.BASE64_CHARS",
        "passlib.utils.timer",
        "passlib.utils.as_bool",
        "threading",
        "passlib.utils.handlers",
        "time",
        "passlib.utils.compat.unicode_or_bytes_types"
    ],
    "/tmp/passlib/passlib/crypto/__init__.py": [],
    "/tmp/passlib/passlib/crypto/_blowfish/__init__.py": [
        "struct",
        "passlib.utils.compat.native_string_types",
        "passlib.utils.binary.bcrypt64",
        "passlib.utils.compat.u",
        "passlib.crypto._blowfish.unrolled.BlowfishEngine"
    ],
    "/tmp/passlib/passlib/crypto/_blowfish/_gen_files.py": [
        "textwrap",
        "passlib.utils.compat.irange",
        "os"
    ],
    "/tmp/passlib/passlib/crypto/_blowfish/base.py": [
        "struct",
        "passlib.utils.repeat_string"
    ],
    "/tmp/passlib/passlib/crypto/_blowfish/unrolled.py": [
        "passlib.crypto._blowfish.base.BlowfishEngine"
    ],
    "/tmp/passlib/passlib/crypto/_md4.py": [
        "struct",
        "passlib.utils.compat.PY3",
        "passlib.utils.compat.bascii_to_str",
        "passlib.utils.compat.irange",
        "binascii.hexlify"
    ],
    "/tmp/passlib/passlib/crypto/des.py": [
        "passlib.utils.compat.join_byte_values",
        "struct",
        "passlib.utils.compat.int_types",
        "passlib.utils.compat.irange",
        "passlib.exc"
    ],
    "/tmp/passlib/passlib/crypto/digest.py": [
        "passlib.crypto._md4.md4",
        "functools.partial",
        "struct.Struct",
        "passlib.utils.join_byte_values",
        "passlib.utils.compat.PY3",
        "passlib.utils.to_bytes",
        "re",
        "passlib.utils.int_to_bytes",
        "passlib.utils.join_bytes",
        "passlib.utils.compat.int_types",
        "__future__.division",
        "passlib.utils.SequenceMixin",
        "passlib.utils.sys_bits",
        "passlib.utils.to_native_str",
        "warnings.warn",
        "passlib.utils.decor.memoized_property",
        "passlib.utils.compat.irange",
        "binascii.hexlify",
        "hashlib",
        "logging",
        "passlib.exc",
        "os",
        "passlib.utils.compat.unicode_or_bytes_types"
    ],
    "/tmp/passlib/passlib/crypto/scrypt/__init__.py": [
        "._builtin.ScryptEngine",
        "scrypt.hash",
        "passlib.utils.to_bytes",
        "logging",
        "__future__.absolute_import",
        "warnings.warn",
        "passlib.utils.compat.PYPY",
        "passlib.exc"
    ],
    "/tmp/passlib/passlib/crypto/scrypt/_builtin.py": [
        "passlib.crypto.digest.pbkdf2_hmac",
        "struct",
        "passlib.utils.compat.izip",
        "operator",
        "passlib.crypto.scrypt._salsa.salsa20"
    ],
    "/tmp/passlib/passlib/crypto/scrypt/_gen_files.py": [
        "os"
    ],
    "/tmp/passlib/passlib/crypto/scrypt/_salsa.py": [],
    "/tmp/passlib/passlib/exc.py": [],
    "/tmp/passlib/passlib/ext/__init__.py": [],
    "/tmp/passlib/passlib/ext/django/__init__.py": [],
    "/tmp/passlib/passlib/ext/django/models.py": [
        "passlib.ext.django.utils.DjangoContextAdapter"
    ],
    "/tmp/passlib/passlib/ext/django/utils.py": [
        "passlib.apps",
        "django.contrib.auth.hashers.get_hasher",
        "django.utils.module_loading.import_string",
        "django.contrib.auth.hashers.is_password_usable",
        "django.utils.lru_cache.lru_cache",
        "django.contrib.auth.hashers.reset_hashers",
        "django.conf.settings",
        "django.contrib.auth.hashers.mask_hash",
        "django.utils.translation.ugettext_noop",
        "passlib.utils.compat.OrderedDict",
        "passlib.utils.compat.unicode",
        "passlib.context.CryptContext",
        "functools.wraps",
        "sys",
        "passlib.utils.decor.memoized_property",
        "passlib.registry",
        "passlib.utils.compat.iteritems",
        "warnings.warn",
        "logging",
        "passlib.exc",
        "functools.update_wrapper",
        "passlib.utils.compat.get_method_function",
        "weakref",
        "passlib.exc.PasslibRuntimeWarning"
    ],
    "/tmp/passlib/passlib/handlers/__init__.py": [],
    "/tmp/passlib/passlib/handlers/argon2.py": [
        "argon2pure",
        "argon2pure.ARGON2_DEFAULT_VERSION",
        "passlib.utils.binary.b64s_decode",
        "__future__.with_statement",
        "__future__.absolute_import",
        "passlib.utils.compat.unicode",
        "passlib.utils.to_bytes",
        "re",
        "passlib.utils.binary.b64s_encode",
        "warnings.warn",
        "logging",
        "passlib.exc",
        "passlib.utils.compat.bascii_to_str",
        "passlib.crypto.digest.MAX_UINT32",
        "passlib.utils.compat.u",
        "passlib.utils.handlers"
    ],
    "/tmp/passlib/passlib/handlers/bcrypt.py": [
        "bcrypt",
        "bcryptor",
        "bcrypt",
        "threading",
        "passlib.utils.as_bool",
        "passlib.crypto._blowfish.raw_bcrypt",
        "passlib.utils.to_unicode",
        "__future__.with_statement",
        "__future__.absolute_import",
        "base64.b64encode",
        "passlib.utils.compat.unicode",
        "passlib.utils.safe_crypt",
        "re",
        "passlib.utils.compat.uascii_to_str",
        "passlib.utils.compat.u",
        "hashlib.sha256",
        "passlib.utils.repeat_string",
        "passlib.exc.PasslibSecurityError",
        "passlib.exc.PasslibHashWarning",
        "warnings.warn",
        "passlib.utils.parse_version",
        "logging",
        "passlib.utils.test_crypt",
        "passlib.utils.compat.str_to_uascii",
        "passlib.utils.binary.bcrypt64",
        "passlib.utils.handlers",
        "os"
    ],
    "/tmp/passlib/passlib/handlers/cisco.py": [
        "passlib.utils.compat.iter_byte_values",
        "logging",
        "binascii.unhexlify",
        "passlib.utils.right_pad_string",
        "passlib.utils.compat.unicode",
        "warnings.warn",
        "passlib.utils.to_unicode",
        "passlib.utils.compat.join_byte_values",
        "passlib.utils.compat.uascii_to_str",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "binascii.hexlify",
        "passlib.utils.compat.join_byte_elems",
        "passlib.utils.binary.h64",
        "hashlib.md5"
    ],
    "/tmp/passlib/passlib/handlers/des_crypt.py": [
        "passlib.utils.test_crypt",
        "passlib.utils.to_unicode",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.byte_elem_value",
        "passlib.utils.safe_crypt",
        "passlib.utils.compat.suppress_cause",
        "passlib.utils.binary.h64",
        "re",
        "passlib.utils.compat.uascii_to_str",
        "warnings.warn",
        "passlib.crypto.des.des_encrypt_int_block",
        "passlib.utils.binary.h64big",
        "logging",
        "passlib.utils.compat.u",
        "passlib.utils.handlers"
    ],
    "/tmp/passlib/passlib/handlers/digests.py": [
        "hashlib",
        "passlib.utils.to_bytes",
        "logging",
        "passlib.utils.compat.str_to_uascii",
        "passlib.utils.to_native_str",
        "passlib.crypto.digest.lookup_hash",
        "passlib.utils.handlers",
        "passlib.utils.compat.unicode",
        "passlib.utils.render_bytes",
        "passlib.utils.consteq"
    ],
    "/tmp/passlib/passlib/handlers/django.py": [
        "passlib.hash.des_crypt",
        "passlib.utils.to_unicode",
        "base64.b64encode",
        "passlib.utils.compat.unicode",
        "passlib.utils.getrandstr",
        "passlib.utils.compat.uascii_to_str",
        "hashlib.sha256",
        "passlib.hash.bcrypt",
        "passlib.handlers.bcrypt._wrapped_bcrypt",
        "passlib.hash.pbkdf2_sha1",
        "passlib.utils.rng",
        "binascii.hexlify",
        "logging",
        "hashlib.md5",
        "hashlib.sha1",
        "passlib.crypto.digest.pbkdf2_hmac",
        "passlib.hash.pbkdf2_sha256",
        "passlib.utils.binary.BASE64_CHARS",
        "passlib.utils.compat.str_to_uascii",
        "passlib.hash.argon2",
        "passlib.utils.compat.u",
        "passlib.utils.handlers"
    ],
    "/tmp/passlib/passlib/handlers/fshp.py": [
        "logging",
        "passlib.crypto.digest.pbkdf1",
        "passlib.utils.compat.bascii_to_str",
        "re",
        "base64.b64encode",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.iteritems",
        "base64.b64decode",
        "passlib.utils.to_unicode"
    ],
    "/tmp/passlib/passlib/handlers/ldap_digests.py": [
        "passlib.utils.to_unicode",
        "passlib.handlers.misc.plaintext",
        "base64.b64encode",
        "passlib.utils.compat.unicode",
        "passlib.utils.decor.classproperty",
        "re",
        "passlib.utils.compat.uascii_to_str",
        "base64.b64decode",
        "hashlib.md5",
        "hashlib.sha1",
        "logging",
        "passlib.utils.unix_crypt_schemes",
        "passlib.utils.compat.u",
        "passlib.utils.handlers"
    ],
    "/tmp/passlib/passlib/handlers/md5_crypt.py": [
        "passlib.utils.safe_crypt",
        "passlib.utils.test_crypt",
        "logging",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.compat.unicode",
        "passlib.utils.binary.h64",
        "passlib.utils.repeat_string",
        "hashlib.md5"
    ],
    "/tmp/passlib/passlib/handlers/misc.py": [
        "warnings.warn",
        "logging",
        "passlib.utils.str_consteq",
        "passlib.utils.to_native_str",
        "sys",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.unicode_or_bytes_types"
    ],
    "/tmp/passlib/passlib/handlers/mssql.py": [
        "hashlib.sha1",
        "logging",
        "binascii.unhexlify",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.bascii_to_str",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "binascii.hexlify",
        "passlib.utils.consteq"
    ],
    "/tmp/passlib/passlib/handlers/mysql.py": [
        "hashlib.sha1",
        "logging",
        "passlib.utils.compat.str_to_uascii",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.byte_elem_value"
    ],
    "/tmp/passlib/passlib/handlers/oracle.py": [
        "hashlib.sha1",
        "logging",
        "binascii.unhexlify",
        "passlib.crypto.des.des_encrypt_block",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.irange",
        "passlib.utils.compat.str_to_uascii",
        "passlib.utils.xor_bytes",
        "re",
        "passlib.utils.compat.uascii_to_str",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "binascii.hexlify",
        "passlib.utils.to_unicode"
    ],
    "/tmp/passlib/passlib/handlers/pbkdf2.py": [
        "passlib.utils.to_unicode",
        "base64.b64encode",
        "passlib.utils.compat.uascii_to_str",
        "binascii.unhexlify",
        "binascii.hexlify",
        "passlib.crypto.digest.pbkdf2_hmac",
        "base64.b64decode",
        "passlib.utils.binary.ab64_decode",
        "logging",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.binary.ab64_encode"
    ],
    "/tmp/passlib/passlib/handlers/phpass.py": [
        "logging",
        "passlib.utils.compat.uascii_to_str",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.compat.unicode",
        "passlib.utils.binary.h64",
        "hashlib.md5"
    ],
    "/tmp/passlib/passlib/handlers/postgres.py": [
        "passlib.utils.to_bytes",
        "logging",
        "passlib.utils.compat.str_to_uascii",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.compat.unicode",
        "hashlib.md5"
    ],
    "/tmp/passlib/passlib/handlers/roundup.py": [
        "logging",
        "passlib.utils.compat.u",
        "passlib.utils.handlers"
    ],
    "/tmp/passlib/passlib/handlers/scram.py": [
        "passlib.crypto.digest.norm_hash_name",
        "passlib.utils.consteq",
        "passlib.utils.saslprep",
        "passlib.crypto.digest.pbkdf2_hmac",
        "passlib.utils.splitcomma",
        "passlib.utils.compat.bascii_to_str",
        "passlib.utils.to_native_str",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.compat.native_string_types",
        "passlib.utils.compat.iteritems",
        "logging",
        "passlib.utils.binary.ab64_encode",
        "passlib.utils.binary.ab64_decode"
    ],
    "/tmp/passlib/passlib/handlers/scrypt.py": [
        "passlib.utils.to_bytes",
        "logging",
        "passlib.utils.decor.classproperty",
        "passlib.utils.binary.b64s_encode",
        "passlib.utils.compat.bascii_to_str",
        "passlib.utils.binary.b64s_decode",
        "__future__.with_statement",
        "__future__.absolute_import",
        "passlib.crypto.scrypt",
        "passlib.utils.compat.suppress_cause",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.binary.h64"
    ],
    "/tmp/passlib/passlib/handlers/sha1_crypt.py": [
        "passlib.utils.safe_crypt",
        "passlib.utils.test_crypt",
        "logging",
        "passlib.utils.compat.irange",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.compat.unicode",
        "passlib.crypto.digest.compile_hmac",
        "passlib.utils.binary.h64"
    ],
    "/tmp/passlib/passlib/handlers/sha2_crypt.py": [
        "passlib.utils.test_crypt",
        "passlib.utils.to_unicode",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.byte_elem_value",
        "passlib.utils.safe_crypt",
        "passlib.utils.binary.h64",
        "passlib.utils.compat.uascii_to_str",
        "passlib.utils.repeat_string",
        "hashlib",
        "logging",
        "passlib.utils.compat.u",
        "passlib.utils.handlers"
    ],
    "/tmp/passlib/passlib/handlers/sun_md5_crypt.py": [
        "logging",
        "passlib.utils.to_unicode",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.byte_elem_value",
        "passlib.utils.compat.uascii_to_str",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "passlib.utils.compat.irange",
        "passlib.utils.compat.str_to_bascii",
        "hashlib.md5",
        "passlib.utils.binary.h64"
    ],
    "/tmp/passlib/passlib/handlers/windows.py": [
        "passlib.crypto.des.des_encrypt_block",
        "passlib.crypto.digest.pbkdf2_hmac",
        "logging",
        "passlib.utils.right_pad_string",
        "passlib.utils.compat.unicode",
        "warnings.warn",
        "passlib.crypto.digest.lookup_hash",
        "passlib.utils.handlers",
        "binascii.hexlify",
        "passlib.utils.to_unicode"
    ],
    "/tmp/passlib/passlib/hash.py": [
        "passlib.registry._proxy",
        "sys"
    ],
    "/tmp/passlib/passlib/hosts.py": [
        "passlib.registry",
        "passlib.context.LazyCryptContext"
    ],
    "/tmp/passlib/passlib/ifc.py": [
        "abc.ABCMeta",
        "logging",
        "abc.abstractmethod",
        "passlib.utils.decor.deprecated_method"
    ],
    "/tmp/passlib/passlib/pwd.py": [
        "passlib.utils.compat.int_types",
        "passlib.utils.to_unicode",
        "__future__.unicode_literals",
        "collections.MutableMapping",
        "__future__.absolute_import",
        "math.log",
        "passlib.utils.getrandstr",
        "passlib.utils.compat.itervalues",
        "passlib.utils.compat.PY2",
        "collections.defaultdict",
        "__future__.division",
        "passlib.utils.rng",
        "math.ceil",
        "passlib.utils.decor.memoized_property",
        "passlib.utils.compat.irange",
        "codecs",
        "__future__.print_function",
        "logging",
        "passlib.exc",
        "pkg_resources",
        "os"
    ],
    "/tmp/passlib/passlib/registry.py": [
        "passlib.exc.ExpectedTypeError",
        "re",
        "passlib.utils.compat.unicode_or_str",
        "passlib.utils.has_crypt",
        "passlib.utils.unix_crypt_schemes",
        "warnings.warn",
        "passlib.utils.is_crypt_handler",
        "logging",
        "passlib.exc",
        "passlib.utils.decor.memoize_single_value",
        "passlib.exc.PasslibWarning"
    ],
    "/tmp/passlib/passlib/tests/__init__.py": [],
    "/tmp/passlib/passlib/tests/__main__.py": [
        "nose.run",
        "os"
    ],
    "/tmp/passlib/passlib/tests/_test_bad_register.py": [
        "passlib.registry.register_crypt_handler",
        "passlib.utils.handlers"
    ],
    "/tmp/passlib/passlib/tests/backports.py": [
        "logging",
        "passlib.utils.compat.PY26",
        "unittest",
        "__future__.with_statement"
    ],
    "/tmp/passlib/passlib/tests/test_apache.py": [
        "passlib.tests.utils.set_file",
        "passlib.utils.to_bytes",
        "passlib.tests.utils.ensure_mtime_changed",
        "__future__.with_statement",
        "passlib.tests.utils.TestCase",
        "logging.getLogger",
        "passlib.utils.compat.u",
        "passlib.utils.compat.irange",
        "passlib.apache",
        "passlib.exc.MissingBackendError",
        "os",
        "passlib.tests.utils.get_file"
    ],
    "/tmp/passlib/passlib/tests/test_apps.py": [
        "logging",
        "passlib.apps",
        "__future__.with_statement",
        "passlib.tests.utils.TestCase",
        "passlib.hash"
    ],
    "/tmp/passlib/passlib/tests/test_context.py": [
        "passlib.tests.test_utils_handlers.UnsaltedHash",
        "passlib.hash.md5_crypt",
        "passlib.hash.postgres_md5",
        "passlib.hash.des_crypt",
        "passlib.hash.md5_crypt",
        "passlib.hash.unix_disabled",
        "hashlib.md5",
        "passlib.tests.utils.set_file",
        "functools.partial",
        "passlib.registry.get_crypt_handler",
        "passlib.utils.compat.PY2",
        "passlib.utils.compat.PY3",
        "__future__.with_statement",
        "datetime",
        "passlib.registry.register_crypt_handler_path",
        "passlib.utils.compat.unicode",
        "passlib.context.LazyCryptContext",
        "passlib.context.CryptContext",
        "passlib.tests.utils.TestCase",
        "passlib.tests.utils.time_call",
        "passlib.hash",
        "passlib.exc.PasslibHashWarning",
        "warnings",
        "passlib.registry._has_crypt_handler",
        "passlib.utils.compat.irange",
        "passlib.registry._unload_handler_name",
        "hashlib",
        "logging",
        "passlib.tests.utils.handler_derived_from",
        "passlib.utils.compat.PY26",
        "passlib.utils.compat.str_to_uascii",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "time",
        "ConfigParser.NoSectionError",
        "os"
    ],
    "/tmp/passlib/passlib/tests/test_context_deprecated.py": [
        "passlib.tests.utils.set_file",
        "passlib.utils.to_unicode",
        "__future__.with_statement",
        "passlib.registry.register_crypt_handler_path",
        "passlib.context.LazyCryptContext",
        "passlib.context.CryptContext",
        "passlib.utils.to_bytes",
        "passlib.context.CryptPolicy",
        "passlib.tests.utils.TestCase",
        "passlib.hash",
        "warnings",
        "passlib.registry._has_crypt_handler",
        "passlib.registry._unload_handler_name",
        "logging.getLogger",
        "passlib.utils.handlers",
        "os"
    ],
    "/tmp/passlib/passlib/tests/test_crypto_builtin_md4.py": [
        "__future__.division",
        "hashlib",
        "passlib.tests.utils.skipUnless",
        "__future__.with_statement",
        "passlib.utils.compat.PY3",
        "passlib.utils.compat.bascii_to_str",
        "passlib.tests.utils.TestCase",
        "passlib.crypto.digest.lookup_hash",
        "passlib.utils.compat.u",
        "binascii.hexlify"
    ],
    "/tmp/passlib/passlib/tests/test_crypto_des.py": [
        "passlib.crypto.des.shrink_des_key",
        "passlib.crypto.des.INT_56_MASK",
        "passlib.crypto.des._KDATA_MASK",
        "passlib.crypto.des.expand_des_key",
        "passlib.crypto.des.shrink_des_key",
        "passlib.crypto.des.INT_64_MASK",
        "passlib.crypto.des.expand_des_key",
        "passlib.crypto.des.INT_64_MASK",
        "passlib.crypto.des._KPARITY_MASK",
        "passlib.crypto.des._KDATA_MASK",
        "passlib.crypto.des.des_encrypt_block",
        "passlib.crypto.des.shrink_des_key",
        "passlib.crypto.des._pack64",
        "passlib.crypto.des._unpack64",
        "passlib.crypto.des.des_encrypt_int_block",
        "__future__.division",
        "passlib.utils.getrandbytes",
        "__future__.with_statement",
        "passlib.tests.utils.TestCase"
    ],
    "/tmp/passlib/passlib/tests/test_crypto_digest.py": [
        "itertools.chain",
        "passlib.crypto.digest.norm_hash_name",
        "passlib.crypto.digest._known_hash_names",
        "passlib.crypto.digest.lookup_hash",
        "passlib.crypto._md4.md4",
        "passlib.crypto.digest.lookup_hash",
        "passlib.crypto.digest.lookup_hash",
        "passlib.crypto.digest.pbkdf1",
        "passlib.crypto.digest.pbkdf1",
        "passlib.utils.compat.PY3",
        "hashlib.pbkdf2_hmac",
        "passlib.crypto.digest.PBKDF2_BACKENDS",
        "__future__.division",
        "hashlib",
        "passlib.crypto.digest.PBKDF2_BACKENDS",
        "warnings",
        "__future__.with_statement",
        "passlib.utils.compat.JYTHON",
        "passlib.tests.utils.TestCase",
        "passlib.utils.compat.u",
        "binascii.hexlify",
        "passlib.tests.utils.hb",
        "passlib.crypto.digest.pbkdf2_hmac"
    ],
    "/tmp/passlib/passlib/tests/test_crypto_scrypt.py": [
        "passlib.crypto.scrypt._builtin.ScryptEngine",
        "passlib.crypto.scrypt._builtin.ScryptEngine",
        "passlib.crypto.scrypt._builtin.salsa20",
        "passlib.utils.getrandbytes",
        "passlib.tests.utils.TestCase",
        "passlib.tests.utils.TEST_MODE",
        "warnings",
        "struct",
        "passlib.crypto.scrypt",
        "binascii.hexlify",
        "passlib.tests.utils.hb",
        "passlib.utils.compat.PYPY",
        "passlib.tests.utils.skipUnless",
        "hashlib",
        "logging",
        "passlib.utils.decor.classproperty",
        "passlib.utils.compat.bascii_to_str",
        "passlib.utils.compat.u",
        "passlib.exc"
    ],
    "/tmp/passlib/passlib/tests/test_ext_django.py": [
        "django.contrib.auth.hashers",
        "django.contrib.auth.models",
        "passlib.ext.django.models.password_context",
        "django.contrib.auth.models.check_password",
        "django.contrib.auth.hashers.make_password",
        "django.contrib.auth.hashers.identify_hasher",
        "django.contrib.auth.hashers.check_password",
        "django.contrib.auth.hashers.is_password_usable",
        "django.contrib.auth.models",
        "passlib.ext.django.models.adapter",
        "django.contrib.auth.hashers",
        "passlib.hash.sha256_crypt",
        "passlib.ext.django.utils.PASSLIB_DEFAULT",
        "passlib.hash.sha256_crypt",
        "passlib.apps.django10_context",
        "passlib.apps.django16_context",
        "__future__.absolute_import",
        "passlib.ext.django.utils.MIN_DJANGO_VERSION",
        "passlib.hash.django_pbkdf2_sha256",
        "passlib.context.CryptContext",
        "django.apps.apps",
        "passlib.tests.utils.TestCase",
        "django.contrib.auth.models.User",
        "__future__.division",
        "passlib.apps",
        "passlib.tests.utils.TEST_MODE",
        "sys",
        "passlib.utils.decor.memoized_property",
        "django.conf.LazySettings",
        "passlib.registry",
        "passlib.utils.compat.iteritems",
        "passlib.tests.test_handlers.get_handler_case",
        "__future__.print_function",
        "passlib.tests.utils.handler_derived_from",
        "logging",
        "passlib.exc",
        "django.conf.settings",
        "passlib.ext.django.utils.DjangoTranslator",
        "passlib.utils.compat.get_method_function",
        "passlib.apps.django14_context",
        "passlib.utils.compat.u",
        "passlib.tests.test_handlers.conditionally_available_hashes",
        "passlib.ext.django.utils.DJANGO_VERSION"
    ],
    "/tmp/passlib/passlib/tests/test_ext_django_source.py": [
        "passlib.hash.django_des_crypt",
        "django.contrib.auth.hashers",
        "passlib.ext.django.models.adapter",
        "__future__.absolute_import",
        "passlib.utils.compat.suppress_cause",
        ".test_ext_django.has_min_django",
        "passlib.tests.utils.TestCase",
        ".test_ext_django.stock_config",
        "__future__.division",
        "passlib.tests.utils.TEST_MODE",
        "auth_tests.test_hashers",
        "passlib.utils.compat.get_unbound_method_function",
        "sys",
        "passlib.ext.django.utils._PasslibHasherWrapper",
        "__future__.print_function",
        "logging",
        ".test_ext_django.settings",
        "passlib.ext.django.utils.DjangoTranslator",
        "django.utils.module_loading.import_string",
        "django.core.signals.setting_changed",
        "django.dispatch.receiver",
        ".test_ext_django._ExtensionSupport",
        "os",
        "passlib.ext.django.utils.DJANGO_VERSION"
    ],
    "/tmp/passlib/passlib/tests/test_handlers.py": [
        "passlib.registry.get_crypt_handler",
        "passlib.utils.to_bytes",
        "passlib.utils.to_unicode",
        "binascii.unhexlify",
        "passlib.utils.compat.str_to_bascii",
        "passlib.tests.utils.EncodingHandlerMixin",
        "passlib.utils.compat.PY3",
        "__future__.with_statement",
        "passlib.tests.utils.HandlerCase",
        "passlib.tests.utils.TestCase",
        "passlib.tests.utils.UserHandlerMixin",
        "passlib.tests.utils.TEST_MODE",
        "passlib.hash",
        "warnings",
        "sys",
        "logging",
        "passlib.utils.compat.u"
    ],
    "/tmp/passlib/passlib/tests/test_handlers_argon2.py": [
        "passlib.tests.utils.TEST_MODE",
        "passlib.hash",
        "warnings",
        "passlib.tests.test_handlers.UPASS_TABLE",
        "passlib.tests.test_handlers.PASS_TABLE_UTF8",
        "logging",
        "passlib.tests.utils.HandlerCase"
    ],
    "/tmp/passlib/passlib/tests/test_handlers_bcrypt.py": [
        "passlib.utils.safe_crypt",
        "passlib.handlers.bcrypt.bcrypt",
        "passlib.utils.to_bytes",
        "passlib.handlers.bcrypt._detect_pybcrypt",
        "passlib.handlers.bcrypt.IDENT_2Y",
        "passlib.handlers.bcrypt.IDENT_2",
        "passlib.handlers.bcrypt.IDENT_2B",
        "passlib.handlers.bcrypt.IDENT_2A",
        "bcrypt",
        "passlib.handlers.bcrypt._pybcrypt",
        "passlib.handlers.bcrypt._PyBcryptBackend",
        "passlib.handlers.bcrypt.IDENT_2Y",
        "passlib.utils.to_native_str",
        "passlib.handlers.bcrypt.IDENT_2B",
        "passlib.handlers.bcrypt.IDENT_2A",
        "bcryptor.engine.Engine",
        "passlib.handlers.bcrypt.IDENT_2Y",
        "passlib.handlers.bcrypt.IDENT_2",
        "passlib.utils.to_native_str",
        "passlib.handlers.bcrypt.IDENT_2A",
        "passlib.handlers.bcrypt.IDENT_2B",
        "__future__.with_statement",
        "passlib.tests.utils.HandlerCase",
        "passlib.utils.to_bytes",
        "passlib.utils.repeat_string",
        "passlib.tests.utils.TEST_MODE",
        "passlib.hash",
        "warnings",
        "passlib.handlers.bcrypt.IDENT_2",
        "passlib.utils.compat.irange",
        "logging",
        "passlib.tests.test_handlers.UPASS_TABLE",
        "passlib.handlers.bcrypt.IDENT_2X",
        "os"
    ],
    "/tmp/passlib/passlib/tests/test_handlers_django.py": [
        "django.contrib.auth.hashers.check_password",
        "django.contrib.auth.hashers.check_password",
        "django.contrib.auth.hashers.make_password",
        "passlib.utils.tick",
        "passlib.tests.utils.SkipTest",
        "__future__.with_statement",
        "passlib.tests.test_ext_django.MIN_DJANGO_VERSION",
        "passlib.tests.test_handlers_argon2._base_argon2_test",
        "passlib.tests.utils.HandlerCase",
        "passlib.tests.utils.TestCase",
        "passlib.utils.repeat_string",
        "passlib.hash",
        "warnings",
        "passlib.tests.test_handlers.UPASS_USD",
        "passlib.tests.utils.skipUnless",
        "logging",
        "passlib.tests.test_handlers.UPASS_TABLE",
        "passlib.utils.compat.u",
        "passlib.tests.test_ext_django.DJANGO_VERSION"
    ],
    "/tmp/passlib/passlib/tests/test_handlers_pbkdf2.py": [
        "passlib.context.CryptContext",
        "passlib.hash",
        "warnings",
        "passlib.tests.utils.TestCase",
        "passlib.utils.compat.u",
        "logging",
        "passlib.tests.utils.HandlerCase",
        "passlib.tests.test_handlers.UPASS_WAV"
    ],
    "/tmp/passlib/passlib/tests/test_handlers_scrypt.py": [
        "passlib.tests.utils.TEST_MODE",
        "passlib.hash",
        "warnings",
        "passlib.tests.test_handlers.UPASS_TABLE",
        "passlib.tests.test_handlers.PASS_TABLE_UTF8",
        "logging",
        "passlib.tests.utils.HandlerCase"
    ],
    "/tmp/passlib/passlib/tests/test_hosts.py": [
        "logging",
        "passlib.utils.unix_crypt_schemes",
        "__future__.with_statement",
        "passlib.tests.utils.TestCase",
        "passlib.hosts",
        "passlib.hash"
    ],
    "/tmp/passlib/passlib/tests/test_pwd.py": [
        "passlib.pwd._self_info_rate",
        "passlib.pwd.genphrase",
        "logging",
        "passlib.pwd.default_charsets",
        "passlib.tests.utils.TestCase",
        "itertools",
        "passlib.pwd.genword"
    ],
    "/tmp/passlib/passlib/tests/test_registry.py": [
        "passlib.tests._test_bad_register",
        "passlib.hash",
        "passlib.registry.list_crypt_handlers",
        "passlib.hash",
        "passlib.tests.test_handlers.get_handler_case",
        "passlib.registry.list_crypt_handlers",
        "passlib.tests.test_handlers.conditionally_available_hashes",
        "passlib.registry.register_crypt_handler_path",
        "passlib.registry._unload_handler_name",
        "passlib.hash",
        "passlib.exc",
        "warnings",
        "passlib.registry.get_crypt_handler",
        "__future__.with_statement",
        "sys",
        "logging.getLogger",
        "passlib.tests.utils.TestCase",
        "passlib.registry",
        "passlib.utils.handlers",
        "passlib.registry.list_crypt_handlers",
        "passlib.registry.register_crypt_handler"
    ],
    "/tmp/passlib/passlib/tests/test_totp.py": [
        "passlib.crypto.digest.lookup_hash",
        "passlib.totp.TOTP",
        "passlib.totp.TotpToken",
        "passlib.totp.TOTP",
        "passlib.totp.TOTP",
        "passlib.totp.TotpMatch",
        "passlib.totp.TOTP",
        "passlib.totp.TOTP",
        "passlib.totp.TOTP",
        "passlib.totp.TOTP",
        "functools.partial",
        "passlib.tests.utils.time_call",
        "datetime",
        "passlib.utils.compat.unicode",
        "binascii.Error",
        "passlib.totp.AppWallet",
        "passlib.tests.utils.TestCase",
        "passlib.totp.TOTP",
        "passlib.totp.AES_SUPPORT",
        "sys",
        "logging",
        "passlib.exc",
        "time",
        "passlib.utils.compat.u",
        "passlib.totp",
        "binascii.Error"
    ],
    "/tmp/passlib/passlib/tests/test_utils.py": [
        "passlib.utils.compat",
        "passlib.utils.decor.classproperty",
        "passlib.utils.decor.deprecated_function",
        "passlib.utils.decor.memoized_property",
        "passlib.utils.getrandbytes",
        "passlib.utils.getrandstr",
        "passlib.utils.generate_password",
        "passlib.utils.is_crypt_context",
        "passlib.context.CryptContext",
        "random",
        "passlib.utils.genseed",
        "passlib.utils.safe_crypt",
        "passlib.utils.test_crypt",
        "passlib.utils.has_crypt",
        "passlib.utils",
        "passlib.utils.consteq",
        "passlib.utils.str_consteq",
        "passlib.utils.saslprep",
        "passlib.utils.splitcomma",
        "__builtin__",
        "passlib.utils.to_bytes",
        "passlib.utils.to_unicode",
        "passlib.utils.to_native_str",
        "passlib.utils.is_ascii_safe",
        "passlib.utils.is_same_codec",
        "passlib.utils.binary.AB64_CHARS",
        "passlib.utils.binary.Base64Engine",
        "passlib.utils.binary.ab64_decode",
        "passlib.utils.binary.ab64_encode",
        "passlib.utils.binary.b64s_decode",
        "passlib.utils.binary.b64s_encode",
        "passlib.utils.getrandbytes",
        "passlib.utils.getrandstr",
        "passlib.utils.getrandstr",
        "passlib.utils.getrandstr",
        "functools.partial",
        "passlib.utils.compat.PY2",
        "passlib.utils.compat.PY3",
        "passlib.utils.compat.unicode",
        "passlib.utils.binary.h64",
        "passlib.tests.utils.run_with_fixed_seeds",
        "passlib.tests.utils.TestCase",
        "passlib.utils.compat.join_bytes",
        "warnings",
        "__future__.with_statement",
        "passlib.utils.compat.irange",
        "passlib.tests.utils.hb",
        "passlib.utils.binary.h64big",
        "passlib.utils.is_ascii_safe",
        "passlib.utils.compat.u"
    ],
    "/tmp/passlib/passlib/tests/test_utils_handlers.py": [
        "passlib.hash",
        "passlib.hash",
        "passlib.registry",
        "passlib.registry",
        "__future__.with_statement",
        "passlib.utils.compat.unicode",
        "passlib.tests.utils.HandlerCase",
        "passlib.tests.utils.TestCase",
        "re",
        "passlib.utils.compat.uascii_to_str",
        "passlib.hash.sha256_crypt",
        "passlib.exc.MissingBackendError",
        "passlib.hash.ldap_md5",
        "warnings",
        "hashlib",
        "passlib.utils.compat.str_to_uascii",
        "logging.getLogger",
        "passlib.utils.compat.u",
        "passlib.utils.handlers"
    ],
    "/tmp/passlib/passlib/tests/test_utils_md4.py": [
        "passlib.utils.md4.md4",
        "passlib.tests.test_crypto_builtin_md4._Common_MD4_Test",
        "warnings"
    ],
    "/tmp/passlib/passlib/tests/test_utils_pbkdf2.py": [
        "itertools.chain",
        "passlib.utils.pbkdf2.norm_hash_name",
        "passlib.crypto.digest._known_hash_names",
        "passlib.utils.pbkdf2.pbkdf1",
        "passlib.utils.pbkdf2.pbkdf1",
        "passlib.utils.pbkdf2.pbkdf2",
        "passlib.utils.pbkdf2.pbkdf2",
        "passlib.utils.pbkdf2.pbkdf2",
        "passlib.utils.pbkdf2.pbkdf2",
        "hashlib",
        "warnings",
        "__future__.with_statement",
        "passlib.utils.compat.JYTHON",
        "passlib.tests.utils.TestCase",
        "passlib.utils.compat.u",
        "passlib.tests.utils.hb"
    ],
    "/tmp/passlib/passlib/tests/test_win32.py": [
        "passlib.win32.raw_lmhash",
        "passlib.win32.raw_nthash",
        "passlib.tests.utils.TestCase",
        "passlib.utils.compat.u",
        "warnings"
    ],
    "/tmp/passlib/passlib/tests/tox_support.py": [
        "passlib.tests.test_handlers",
        "passlib.tests.utils.set_file",
        "passlib.utils.compat.print_",
        "sys",
        "re",
        "logging",
        "os"
    ],
    "/tmp/passlib/passlib/tests/utils.py": [
        "math.log",
        "timeit.Timer",
        "passlib.utils.stringprep",
        "passlib.utils._stringprep_missing_reason",
        "math.log",
        "passlib.utils.binary.bcrypt64",
        "passlib.utils.MAX_PASSWORD_SIZE",
        "passlib.exc.PasswordSizeError",
        "passlib.utils.compat.iter_byte_chars",
        "passlib.utils.tick",
        "threading",
        "passlib.utils",
        "passlib.utils.has_crypt",
        "passlib.utils",
        "passlib.exc.MissingBackendError",
        "crypt.crypt",
        "functools.partial",
        "passlib.tests.backports.skip",
        "passlib.utils.compat.PY2",
        "passlib.utils.compat.PY3",
        "__future__.with_statement",
        "contextlib",
        "passlib.utils.compat.unicode",
        "passlib.utils.is_ascii_safe",
        "functools.wraps",
        "passlib.utils.rounds_cost_values",
        "passlib.utils.decor.classproperty",
        "tempfile",
        "warnings",
        "passlib.utils.getrandstr",
        "re",
        "passlib.tests.backports.SkipTest",
        "passlib.exc.MissingBackendError",
        "passlib.utils.has_salt_info",
        "passlib.utils.repeat_string",
        "random",
        "passlib.exc.PasslibHashWarning",
        "binascii.unhexlify",
        "passlib.utils.to_native_str",
        "warnings.warn",
        "passlib.exc.PasslibConfigWarning",
        "passlib.utils.compat.irange",
        "passlib.utils.compat.iteritems",
        "passlib.tests.backports.TestCase",
        "passlib.utils.tick",
        "sys",
        "hashlib",
        "logging",
        "passlib.utils.batch",
        "threading",
        "passlib.utils.compat.u",
        "passlib.utils.handlers",
        "time",
        "passlib.utils.has_rounds_info",
        "os",
        "passlib.utils.rng"
    ],
    "/tmp/passlib/passlib/totp.py": [
        "urllib.unquote",
        "passlib.utils.binary.BASE64_CHARS",
        "passlib.utils.to_unicode",
        "passlib.utils.compat.native_string_types",
        "passlib.utils.compat.PY3",
        "__future__.absolute_import",
        "passlib.utils.SequenceMixin",
        "calendar",
        "passlib.utils.compat.byte_elem_value",
        "passlib.utils.to_bytes",
        "passlib.utils.consteq",
        "passlib.utils.getrandbytes",
        "passlib.exc.TokenError",
        "base64",
        "passlib.utils.getrandstr",
        "passlib.crypto.digest.lookup_hash",
        "re",
        "json",
        "urlparse.uses_query",
        "passlib.utils.binary.b32encode",
        "passlib.crypto.digest.compile_hmac",
        "passlib.utils.compat.num_types",
        "math",
        "passlib.utils.compat.int_types",
        "__future__.division",
        "passlib.exc.InvalidTokenError",
        "urllib.quote",
        "passlib.utils.rng",
        "warnings.warn",
        "passlib.utils.decor.memoized_property",
        "passlib.utils.binary.b32decode",
        "passlib.utils.compat.suppress_cause",
        "passlib.utils.compat.irange",
        "passlib.crypto.digest.pbkdf2_hmac",
        "__future__.print_function",
        "struct",
        "sys",
        "passlib.utils.decor.hybrid_method",
        "logging",
        "urlparse.parse_qsl",
        "passlib.exc.MalformedTokenError",
        "passlib.utils.compat.bascii_to_str",
        "urlparse.urlparse",
        "time",
        "passlib.exc.UsedTokenError",
        "passlib.utils.compat.u",
        "passlib.exc"
    ],
    "/tmp/passlib/passlib/utils/__init__.py": [
        "hashlib.sha512",
        "passlib.utils.compat.join_byte_values",
        "random",
        "passlib.utils.compat.unicode",
        "passlib.utils.compat.add_doc",
        "passlib.utils.compat.join_unicode",
        "passlib.utils.compat.JYTHON",
        "passlib.utils.compat.PY3",
        "re",
        "math",
        "inspect",
        "logging",
        "time.time",
        "codecs.lookup",
        "itertools",
        "os",
        "passlib.utils.compat.unicode_or_bytes_types",
        "collections",
        "binascii.hexlify",
        "unicodedata",
        "passlib.utils.compat.get_method_function",
        "stringprep",
        "passlib.utils.decor.deprecated_function",
        "passlib.exc.ExpectedStringError",
        "hmac.compare_digest",
        "passlib.utils.compat.join_byte_elems",
        "binascii.unhexlify",
        "sys",
        "passlib.utils.compat.u",
        "time"
    ],
    "/tmp/passlib/passlib/utils/binary.py": [
        "passlib.utils.compat.join_byte_values",
        "passlib.utils.compat.PY3",
        "__future__.absolute_import",
        "passlib.utils.compat.unicode",
        "binascii.b2a_base64",
        "passlib.utils.compat.iter_byte_chars",
        "passlib.utils.compat.suppress_cause",
        "binascii.Error",
        "passlib.utils.compat.join_byte_elems",
        "__future__.division",
        "passlib.utils.compat.nextgetter",
        "passlib.utils.decor.memoized_property",
        "base64.b32decode",
        "passlib.utils.compat.irange",
        "base64.b32encode",
        "passlib.utils.compat.imap",
        "__future__.print_function",
        "logging",
        "passlib.exc",
        "binascii.a2b_base64",
        "passlib.utils.compat.bascii_to_str",
        "passlib.utils.compat.u",
        "passlib.utils.compat.unicode_or_bytes_types"
    ],
    "/tmp/passlib/passlib/utils/compat/__init__.py": [
        "__builtin__",
        "types.ModuleType",
        "sys",
        "itertools.imap",
        "logging"
    ],
    "/tmp/passlib/passlib/utils/compat/_ordered_dict.py": [
        "dummy_thread.get_ident"
    ],
    "/tmp/passlib/passlib/utils/decor.py": [
        "__future__.division",
        "functools.wraps",
        "logging",
        "passlib.utils.compat.PY3",
        "__future__.absolute_import",
        "warnings.warn",
        "functools.update_wrapper",
        "types",
        "__future__.print_function"
    ],
    "/tmp/passlib/passlib/utils/des.py": [
        "struct",
        "warnings.warn",
        "passlib.utils.decor.deprecated_function"
    ],
    "/tmp/passlib/passlib/utils/handlers.py": [
        "math",
        "passlib.utils.binary.ab64_encode",
        "math",
        "passlib.utils.binary.BASE64_CHARS",
        "passlib.utils.to_unicode",
        "passlib.utils.decor.classproperty",
        "passlib.utils.binary.LOWER_HEX_CHARS",
        "passlib.registry.get_crypt_handler",
        "__future__.with_statement",
        "passlib.utils.compat.native_string_types",
        "passlib.utils.decor.deprecated_method",
        "passlib.utils.binary.ALL_BYTE_VALUES",
        "passlib.utils.consteq",
        "passlib.utils.getrandbytes",
        "passlib.utils.getrandstr",
        "passlib.utils.compat.uascii_to_str",
        "passlib.utils.compat.join_unicode",
        "passlib.utils.compat.PY2",
        "math",
        "passlib.utils.compat.int_types",
        "passlib.utils.MAX_PASSWORD_SIZE",
        "passlib.utils.accepts_keyword",
        "passlib.exc.PasslibHashWarning",
        "inspect",
        "passlib.utils.rng",
        "warnings.warn",
        "passlib.exc.PasslibConfigWarning",
        "passlib.utils.update_mixin_classes",
        "passlib.utils.binary.HASH64_CHARS",
        "logging",
        "passlib.exc",
        "passlib.utils.binary.UPPER_HEX_CHARS",
        "passlib.ifc.PasswordHash",
        "passlib.utils.compat.str_to_uascii",
        "passlib.utils.compat.unicode",
        "passlib.utils.as_bool",
        "threading",
        "passlib.utils.compat.u",
        "passlib.utils.binary.PADDED_BASE64_CHARS",
        "passlib.utils.compat.unicode_or_bytes_types"
    ],
    "/tmp/passlib/passlib/utils/md4.py": [
        "warnings.warn"
    ],
    "/tmp/passlib/passlib/utils/pbkdf2.py": [
        "__future__.division",
        "logging",
        "passlib.exc.ExpectedTypeError",
        "passlib.crypto.digest.pbkdf1",
        "warnings.warn",
        "passlib.utils.decor.deprecated_function",
        "passlib.crypto.digest.lookup_hash",
        "passlib.utils.compat.native_string_types",
        "passlib.crypto.digest.pbkdf2_hmac",
        "passlib.crypto.digest.compile_hmac"
    ],
    "/tmp/passlib/passlib/win32.py": [
        "binascii.hexlify",
        "passlib.crypto.des.des_encrypt_block",
        "passlib.hash.nthash",
        "warnings.warn",
        "passlib.utils.compat.unicode"
    ]
}
{
    "/tmp/pdunehd/pdunehd/__init__.py": [
        "re",
        "requests"
    ]
}
{
    "/tmp/pexpect/pexpect/ANSI.py": [
        ".FSM",
        "string",
        ".screen"
    ],
    "/tmp/pexpect/pexpect/FSM.py": [
        "string",
        "sys"
    ],
    "/tmp/pexpect/pexpect/__init__.py": [
        ".pty_spawn.spawn",
        ".run.run",
        ".exceptions.EOF",
        ".utils.split_command_line",
        "sys",
        ".exceptions.TIMEOUT",
        ".utils.which",
        ".run.runu",
        ".pty_spawn.spawnu",
        ".exceptions.ExceptionPexpect"
    ],
    "/tmp/pexpect/pexpect/async.py": [
        "errno",
        "pexpect.EOF",
        "asyncio"
    ],
    "/tmp/pexpect/pexpect/exceptions.py": [
        "sys",
        "traceback"
    ],
    "/tmp/pexpect/pexpect/expect.py": [
        ".EOF",
        ".TIMEOUT",
        ".EOF",
        ".TIMEOUT",
        ".exceptions.EOF",
        ".exceptions.TIMEOUT",
        "time"
    ],
    "/tmp/pexpect/pexpect/fdpexpect.py": [
        ".utils.select_ignore_interrupts",
        ".spawnbase.SpawnBase",
        ".exceptions.TIMEOUT",
        "os",
        ".exceptions.ExceptionPexpect"
    ],
    "/tmp/pexpect/pexpect/popen_spawn.py": [
        "Queue.Queue",
        ".exceptions.EOF",
        "signal",
        ".spawnbase.PY3",
        "subprocess",
        "sys",
        "threading",
        "shlex",
        "time",
        ".spawnbase.SpawnBase",
        "os",
        "Queue.Empty"
    ],
    "/tmp/pexpect/pexpect/pty_spawn.py": [
        "tty",
        ".exceptions.EOF",
        "contextlib.contextmanager",
        "errno",
        "signal",
        "ptyprocess.ptyprocess.use_native_pty_fork",
        ".utils.split_command_line",
        "ptyprocess",
        ".spawnbase.SpawnBase",
        "sys",
        ".utils.which",
        ".exceptions.TIMEOUT",
        "pty",
        "time",
        "os",
        ".utils.select_ignore_interrupts",
        ".exceptions.ExceptionPexpect"
    ],
    "/tmp/pexpect/pexpect/pxssh.py": [
        "pexpect.spawn",
        "pexpect.EOF",
        "pexpect.TIMEOUT",
        "time",
        "os",
        "pexpect.ExceptionPexpect"
    ],
    "/tmp/pexpect/pexpect/replwrap.py": [
        "pexpect",
        "signal",
        "sys",
        "os.path"
    ],
    "/tmp/pexpect/pexpect/run.py": [
        ".pty_spawn.spawn",
        ".exceptions.EOF",
        "sys",
        ".exceptions.TIMEOUT",
        "types"
    ],
    "/tmp/pexpect/pexpect/screen.py": [
        "warnings",
        "sys",
        "codecs",
        "copy"
    ],
    "/tmp/pexpect/pexpect/spawnbase.py": [
        ".async.expect_async",
        ".async.expect_async",
        ".expect.searcher_string",
        ".exceptions.EOF",
        "errno",
        ".expect.Expecter",
        "sys",
        "re",
        ".expect.searcher_re",
        ".exceptions.TIMEOUT",
        "codecs",
        "os"
    ],
    "/tmp/pexpect/pexpect/utils.py": [
        "stat",
        "errno",
        "sys",
        "time",
        "os",
        "select"
    ]
}
{
    "/tmp/phue/phue.py": [
        "platform",
        "json",
        "argparse",
        "sys",
        "httplib",
        "logging",
        "socket",
        "os"
    ]
}
{
    "/tmp/picamera/picamera/__init__.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "__future__.division",
        "__future__.print_function"
    ],
    "/tmp/picamera/picamera/array.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "io",
        ".exc.PiCameraDeprecated",
        "numpy",
        "__future__.division",
        "warnings",
        "__future__.print_function",
        ".exc.PiCameraValueError",
        "numpy.lib.stride_tricks.as_strided"
    ],
    "/tmp/picamera/picamera/bcm_host.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "__future__.print_function",
        "ctypes"
    ],
    "/tmp/picamera/picamera/camera.py": [
        ".renderers.PiPreviewRenderer",
        ".exc.PiCameraRuntimeError",
        ".encoders.PiRawVideoEncoder",
        "__future__.unicode_literals",
        ".exc.PiCameraMMALError",
        ".renderers.PiNullSink",
        "__future__.absolute_import",
        "datetime",
        "fractions.Fraction",
        "ctypes",
        ".exc.PiCameraDeprecated",
        ".encoders.PiCookedVideoEncoder",
        ".encoders.PiCookedOneImageEncoder",
        ".renderers.PiOverlayRenderer",
        ".mmal",
        ".exc.PiCameraAlreadyRecording",
        ".exc.PiCameraFallback",
        ".encoders.PiCookedMultiImageEncoder",
        "__future__.division",
        "mimetypes",
        ".exc.PiCameraError",
        "warnings",
        ".exc.PiCameraNotRecording",
        ".exc.PiCameraClosed",
        ".encoders.PiRawOneImageEncoder",
        "__future__.print_function",
        ".encoders.PiVideoEncoder",
        ".mmalobj",
        "threading",
        ".color.Color",
        ".encoders.PiRawMultiImageEncoder",
        ".exc.PiCameraValueError",
        "operator.itemgetter",
        ".bcm_host"
    ],
    "/tmp/picamera/picamera/color.py": [
        "collections.namedtuple",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "fractions.Fraction",
        "itertools.izip",
        "math.sqrt",
        "math.degrees",
        "math.pi",
        "math.sin",
        "__future__.division",
        "__future__.print_function",
        "math.cos",
        "math.radians",
        "math.atan2",
        "colorsys",
        "math.exp"
    ],
    "/tmp/picamera/picamera/encoders.py": [
        ".frames.PiVideoFrame",
        ".exc.PiCameraRuntimeError",
        "__future__.unicode_literals",
        ".exc.PiCameraMMALError",
        "__future__.absolute_import",
        "datetime",
        "io",
        "ctypes",
        ".mmal",
        "__future__.division",
        ".exc.PiCameraError",
        ".frames.PiVideoFrameType",
        "warnings",
        ".streams.BufferIO",
        "__future__.print_function",
        ".exc.PiCameraResizerEncoding",
        ".mmalobj",
        ".exc.PiCameraResolutionRounded",
        "threading",
        ".exc.PiCameraValueError",
        ".exc.PiCameraAlphaStripping"
    ],
    "/tmp/picamera/picamera/exc.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "picamera.mmal",
        "__future__.print_function"
    ],
    "/tmp/picamera/picamera/frames.py": [
        "__future__.division",
        "collections.namedtuple",
        "warnings",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "__future__.print_function",
        "picamera.exc.PiCameraDeprecated"
    ],
    "/tmp/picamera/picamera/mmal.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.print_function",
        "ctypes",
        "__future__.absolute_import"
    ],
    "/tmp/picamera/picamera/mmalobj.py": [
        ".exc.PiCameraRuntimeError",
        "collections.namedtuple",
        "__future__.unicode_literals",
        ".exc.PiCameraMMALError",
        "__future__.absolute_import",
        "fractions.Fraction",
        ".exc.mmal_check",
        "ctypes",
        ".exc.PiCameraDeprecated",
        ".mmal",
        "__future__.division",
        "warnings",
        "__future__.print_function",
        "itertools.cycle",
        "weakref",
        ".exc.PiCameraValueError"
    ],
    "/tmp/picamera/picamera/renderers.py": [
        "__future__.division",
        "__future__.unicode_literals",
        ".mmalobj",
        "__future__.absolute_import",
        ".mmal",
        ".exc.PiCameraValueError",
        "__future__.print_function"
    ],
    "/tmp/picamera/picamera/streams.py": [
        "__future__.division",
        "collections.deque",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "picamera.frames.PiVideoFrame",
        "threading.RLock",
        "io",
        "picamera.exc.PiCameraValueError",
        "__future__.print_function",
        "picamera.frames.PiVideoFrameType"
    ]
}
{
    "/tmp/plexapi/plexapi/__init__.py": [
        "logging.handlers.RotatingFileHandler",
        "platform.uname",
        "uuid.getnode",
        "plexapi.config.PlexConfig",
        "logging",
        "os",
        "plexapi.config.reset_base_headers"
    ],
    "/tmp/plexapi/plexapi/audio.py": [
        "plexapi.media",
        "plexapi.utils",
        "plexapi.utils.Playable",
        "plexapi.utils.PlexPartialObject"
    ],
    "/tmp/plexapi/plexapi/client.py": [
        "plexapi.exceptions.NotFound",
        "requests.status_codes._codes",
        "plexapi.log",
        "plexapi.utils",
        "plexapi.exceptions.Unsupported",
        "plexapi.BASE_HEADERS",
        "plexapi.TIMEOUT",
        "requests",
        "xml.etree.ElementTree",
        "plexapi.exceptions.BadRequest"
    ],
    "/tmp/plexapi/plexapi/compat.py": [],
    "/tmp/plexapi/plexapi/config.py": [
        "plexapi",
        "collections.defaultdict",
        "configparser.ConfigParser"
    ],
    "/tmp/plexapi/plexapi/exceptions.py": [],
    "/tmp/plexapi/plexapi/library.py": [
        "plexapi.exceptions.NotFound",
        "plexapi.log",
        "plexapi.utils",
        "plexapi.X_PLEX_CONTAINER_SIZE",
        "plexapi.media.MediaTag",
        "plexapi.exceptions.BadRequest"
    ],
    "/tmp/plexapi/plexapi/media.py": [
        "plexapi.utils.cast"
    ],
    "/tmp/plexapi/plexapi/myplex.py": [
        "plexapi.exceptions.NotFound",
        "requests.status_codes._codes",
        "plexapi.log",
        "plexapi.exceptions.Unauthorized",
        "plexapi.utils",
        "plexapi.client.PlexClient",
        "plexapi",
        "plexapi.TIMEOUT",
        "plexapi.server.PlexServer",
        "requests",
        "xml.etree.ElementTree",
        "plexapi.exceptions.BadRequest"
    ],
    "/tmp/plexapi/plexapi/photo.py": [
        "plexapi.utils",
        "plexapi.media",
        "plexapi.utils.PlexPartialObject"
    ],
    "/tmp/plexapi/plexapi/playlist.py": [
        "plexapi.utils",
        "plexapi.utils.cast",
        "plexapi.exceptions.BadRequest",
        "plexapi.utils.toDatetime",
        "plexapi.utils.Playable",
        "plexapi.utils.PlexPartialObject"
    ],
    "/tmp/plexapi/plexapi/playqueue.py": [
        "requests",
        "plexapi.utils"
    ],
    "/tmp/plexapi/plexapi/server.py": [
        "xml.etree.ElementTree",
        "plexapi.exceptions.NotFound",
        "requests.status_codes._codes",
        "plexapi.log",
        "plexapi.utils",
        "plexapi.playlist.Playlist",
        "plexapi.library.Library",
        "plexapi.BASE_HEADERS",
        "plexapi.playqueue.PlayQueue",
        "plexapi.TIMEOUT",
        "plexapi.compat.quote",
        "plexapi.client.PlexClient",
        "requests",
        "plexapi.exceptions.BadRequest"
    ],
    "/tmp/plexapi/plexapi/sync.py": [
        "plexapi.exceptions.NotFound",
        "requests",
        "plexapi.utils"
    ],
    "/tmp/plexapi/plexapi/utils.py": [
        "plexapi.client.PlexClient",
        "plexapi.media",
        "plexapi.compat.urlencode",
        "plexapi.exceptions.UnknownType",
        "datetime.datetime",
        "re",
        "threading.Thread",
        "plexapi.compat.quote",
        "plexapi.exceptions.NotFound",
        "plexapi.exceptions.Unsupported"
    ],
    "/tmp/plexapi/plexapi/video.py": [
        "plexapi.media",
        "plexapi.utils",
        "plexapi.utils.Playable",
        "plexapi.utils.PlexPartialObject"
    ]
}
{
    "/tmp/pmsensor/pmsensor/__init__.py": [],
    "/tmp/pmsensor/pmsensor/co2sensor.py": [
        "logging",
        "time",
        "serial"
    ],
    "/tmp/pmsensor/pmsensor/serial_pm.py": [
        "serial",
        "logging",
        "threading",
        "time"
    ]
}
{
    "/tmp/psutil/psutil/__init__.py": [
        "socket",
        "datetime",
        "functools",
        "subprocess",
        "._common.STATUS_TRACING_STOP",
        "collections",
        "._common.CONN_CLOSE",
        "._psutil_linux",
        "._common.STATUS_WAKING",
        "signal",
        "._common.CONN_TIME_WAIT",
        "._common.CONN_NONE",
        "._common.CONN_SYN_RECV",
        "._common.WINDOWS",
        "._common.CONN_LISTEN",
        "._common.CONN_LAST_ACK",
        "._common",
        "._common.FREEBSD",
        "._common.OSX",
        "._common.STATUS_SLEEPING",
        "._common.NIC_DUPLEX_FULL",
        "._common.NIC_DUPLEX_HALF",
        "._common.CONN_FIN_WAIT2",
        "._common.CONN_FIN_WAIT1",
        "._compat.callable",
        "._common.STATUS_ZOMBIE",
        "._common.OPENBSD",
        "traceback",
        "._compat.PY3",
        "._common.STATUS_STOPPED",
        "sys",
        "._common.NETBSD",
        "._common.CONN_CLOSING",
        "errno",
        "._compat.long",
        "._common.STATUS_WAITING",
        "._common.STATUS_IDLE",
        "._common.BSD",
        "._common.POSIX",
        "._common.SUNOS",
        "._common.CONN_SYN_SENT",
        "._common.STATUS_DEAD",
        "._common.CONN_CLOSE_WAIT",
        "._common.NIC_DUPLEX_UNKNOWN",
        "._common.STATUS_RUNNING",
        "contextlib",
        "._common.CONN_ESTABLISHED",
        "._common.STATUS_DISK_SLEEP",
        "._pssunos",
        "time",
        "os",
        "._common.STATUS_LOCKED",
        "._common.LINUX"
    ],
    "/tmp/psutil/psutil/_common.py": [
        "collections.namedtuple",
        "functools",
        "contextlib",
        "errno",
        "__future__.division",
        "stat",
        "warnings",
        "sys",
        "socket",
        "os"
    ],
    "/tmp/psutil/psutil/_compat.py": [
        "functools",
        "sys",
        "collections",
        "dummy_threading.RLock",
        "os"
    ],
    "/tmp/psutil/psutil/_psbsd.py": [
        "functools",
        "._common",
        "contextlib",
        "._common.FREEBSD",
        "xml.etree.ElementTree",
        "._common.NETBSD",
        "errno",
        "._common.memoize_when_activated",
        "._compat.which",
        "._common.memoize",
        "._psutil_posix",
        "collections.namedtuple",
        "._common.sockfam_to_enum",
        "._psposix",
        "._common.OPENBSD",
        "._common.usage_percent",
        "._common.conn_tmap",
        "._psutil_bsd",
        "._common.socktype_to_enum",
        "os"
    ],
    "/tmp/psutil/psutil/_pslinux.py": [
        "functools",
        "._compat.PY3",
        "struct",
        "base64",
        "collections.namedtuple",
        "._psutil_linux",
        "._common",
        "._common.path_exists_strict",
        "re",
        "._common.NIC_DUPLEX_HALF",
        "._common.memoize_when_activated",
        "collections.defaultdict",
        "._common.usage_percent",
        "socket",
        "traceback",
        "os",
        "._compat.basestring",
        "errno",
        "._compat.long",
        "._common.NIC_DUPLEX_UNKNOWN",
        "._psposix",
        "._compat.b",
        "._common.isfile_strict",
        "__future__.division",
        "._psutil_posix",
        "._common.parse_environ_block",
        "._common.supports_ipv6",
        "._common.NIC_DUPLEX_FULL",
        "._common.memoize",
        "warnings",
        "sys"
    ],
    "/tmp/psutil/psutil/_psosx.py": [
        "functools",
        "._common.parse_environ_block",
        "._common",
        "errno",
        "._common.memoize_when_activated",
        "._psutil_posix",
        "collections.namedtuple",
        "._common.sockfam_to_enum",
        "._psposix",
        "._common.usage_percent",
        "._common.conn_tmap",
        "._psutil_osx",
        "._common.isfile_strict",
        "._common.socktype_to_enum",
        "os"
    ],
    "/tmp/psutil/psutil/_psposix.py": [
        "._common.sdiskusage",
        "errno",
        "glob",
        "._compat.PY3",
        "sys",
        "._compat.unicode",
        "time",
        "._common.memoize",
        "os",
        "._common.usage_percent"
    ],
    "/tmp/psutil/psutil/_pssunos.py": [
        "._psutil_posix",
        "._compat.PY3",
        "subprocess",
        "._common",
        "errno",
        "._common.memoize_when_activated",
        "collections.namedtuple",
        "._common.sockfam_to_enum",
        "._psposix",
        "sys",
        "._common.usage_percent",
        "._compat.b",
        "._psutil_sunos",
        "socket",
        "._common.isfile_strict",
        "._common.socktype_to_enum",
        "os"
    ],
    "/tmp/psutil/psutil/_pswindows.py": [
        "._compat.xrange",
        "functools",
        "._compat.PY3",
        "._common.parse_environ_block",
        "._common",
        "contextlib",
        "._psutil_windows.BELOW_NORMAL_PRIORITY_CLASS",
        "._psutil_windows.HIGH_PRIORITY_CLASS",
        "errno",
        "._compat.long",
        "._psutil_windows.NORMAL_PRIORITY_CLASS",
        "._common.memoize_when_activated",
        "._psutil_windows.ABOVE_NORMAL_PRIORITY_CLASS",
        "collections.namedtuple",
        "._common.sockfam_to_enum",
        "sys",
        "._common.usage_percent",
        "._common.conn_tmap",
        "._psutil_windows",
        "._common.isfile_strict",
        "._psutil_windows.REALTIME_PRIORITY_CLASS",
        "._common.socktype_to_enum",
        "._psutil_windows.IDLE_PRIORITY_CLASS",
        "os",
        "._compat.lru_cache"
    ],
    "/tmp/psutil/psutil/tests/__init__.py": [
        "psutil.WINDOWS",
        "functools",
        "psutil._compat.PY3",
        "socket.SOCK_STREAM",
        "subprocess",
        "atexit",
        "contextlib",
        "psutil._compat.unicode",
        "shutil",
        "imp",
        "socket.SOCK_DGRAM",
        "psutil",
        "tempfile",
        "errno",
        "re",
        "psutil._compat.which",
        "unittest",
        "stat",
        "warnings",
        "psutil.LINUX",
        "textwrap",
        "sys",
        "psutil.POSIX",
        "ipaddress",
        "__future__.print_function",
        "socket",
        "socket.AF_INET",
        "threading",
        "time",
        "os"
    ],
    "/tmp/psutil/psutil/tests/runner.py": [
        "psutil.tests.unittest",
        "sys",
        "os",
        "psutil.tests.VERBOSITY"
    ],
    "/tmp/psutil/psutil/tests/test_bsd.py": [
        "psutil.tests.unittest",
        "psutil._compat.PY3",
        "subprocess",
        "psutil.FREEBSD",
        "psutil.NETBSD",
        "psutil.tests.reap_children",
        "re",
        "psutil.tests.which",
        "psutil.BSD",
        "psutil.tests.MEMORY_TOLERANCE",
        "psutil.tests.get_test_subprocess",
        "datetime",
        "sys",
        "psutil.OPENBSD",
        "psutil.tests.run_test_module_by_name",
        "psutil.tests.retry_before_failing",
        "psutil",
        "psutil.tests.sh",
        "time",
        "os"
    ],
    "/tmp/psutil/psutil/tests/test_linux.py": [
        "fcntl",
        "fcntl",
        "__builtin__",
        "psutil._pslinux.calculate_avail_vmem",
        "psutil._pslinux.open_binary",
        "psutil._pslinux",
        "psutil.tests.get_kernel_version",
        "psutil.tests.unittest",
        "psutil._compat.PY3",
        "psutil.tests.TRAVIS",
        "contextlib",
        "io",
        "psutil.tests.call_until",
        "shutil",
        "psutil.tests.pyrun",
        "psutil.tests.importlib",
        "tempfile",
        "errno",
        "pprint",
        "psutil.tests.skip_on_not_implemented",
        "re",
        "collections",
        "psutil.tests.which",
        "psutil.tests.mock",
        "__future__.division",
        "warnings",
        "psutil.tests.MEMORY_TOLERANCE",
        "time",
        "textwrap",
        "psutil.tests.reap_children",
        "psutil.tests.PYPY",
        "psutil.tests.TESTFN",
        "struct",
        "socket",
        "psutil.tests.run_test_module_by_name",
        "psutil.tests.retry_before_failing",
        "psutil.tests.safe_rmpath",
        "psutil",
        "psutil.tests.sh",
        "psutil._compat.u",
        "psutil.LINUX",
        "os"
    ],
    "/tmp/psutil/psutil/tests/test_memory_leaks.py": [
        "psutil.WINDOWS",
        "psutil._compat.xrange",
        "functools",
        "psutil.tests.TRAVIS",
        "gc",
        "psutil.FREEBSD",
        "psutil.OSX",
        "threading",
        "errno",
        "psutil.tests.reap_children",
        "psutil._common.supports_ipv6",
        "time",
        "psutil.tests.unittest",
        "psutil.tests.safe_rmpath",
        "psutil.tests.RLIMIT_SUPPORT",
        "psutil.POSIX",
        "psutil.tests.get_test_subprocess",
        "psutil.tests.TESTFN",
        "psutil.SUNOS",
        "psutil.OPENBSD",
        "socket",
        "psutil.tests.run_test_module_by_name",
        "psutil._common",
        "psutil.LINUX",
        "os"
    ],
    "/tmp/psutil/psutil/tests/test_misc.py": [
        "psutil._common.parse_environ_block",
        "psutil._common.isfile_strict",
        "psutil.tests.TOX",
        "psutil.WINDOWS",
        "psutil.tests.unittest",
        "psutil.tests.SCRIPTS_DIR",
        "psutil.tests.TRAVIS",
        "psutil.NETBSD",
        "psutil.OSX",
        "psutil.tests.retry",
        "psutil.tests.ROOT_DIR",
        "psutil.tests.importlib",
        "imp",
        "errno",
        "psutil.tests.reap_children",
        "psutil._common.supports_ipv6",
        "json",
        "psutil._common.memoize_when_activated",
        "psutil._common.memoize",
        "psutil.tests.mock",
        "stat",
        "ast",
        "psutil.tests.safe_rmpath",
        "sys",
        "psutil.tests.wait_for_file",
        "psutil.POSIX",
        "psutil.tests.get_test_subprocess",
        "psutil.tests.TESTFN",
        "psutil.tests.wait_for_pid",
        "psutil.tests.chdir",
        "psutil.OPENBSD",
        "socket",
        "psutil.tests.run_test_module_by_name",
        "pickle",
        "psutil.tests.APPVEYOR",
        "psutil",
        "psutil.tests.sh",
        "psutil.LINUX",
        "os"
    ],
    "/tmp/psutil/psutil/tests/test_osx.py": [
        "psutil.OSX",
        "psutil.tests.reap_children",
        "psutil.tests.get_test_subprocess",
        "psutil",
        "psutil.tests.run_test_module_by_name",
        "psutil.tests.MEMORY_TOLERANCE",
        "psutil.tests.unittest",
        "psutil._compat.PY3",
        "psutil.tests.retry_before_failing",
        "subprocess",
        "sys",
        "re",
        "psutil.tests.sh",
        "time",
        "os"
    ],
    "/tmp/psutil/psutil/tests/test_posix.py": [
        "psutil.tests.get_kernel_version",
        "psutil.tests.PYTHON",
        "psutil.tests.unittest",
        "psutil._compat.PY3",
        "subprocess",
        "psutil.tests.TRAVIS",
        "psutil.OSX",
        "errno",
        "psutil.tests.reap_children",
        "psutil.tests.skip_on_access_denied",
        "psutil.BSD",
        "psutil.tests.mock",
        "time",
        "psutil._compat.callable",
        "psutil.POSIX",
        "datetime",
        "psutil.tests.wait_for_pid",
        "sys",
        "psutil.tests.get_test_subprocess",
        "psutil.SUNOS",
        "psutil.tests.run_test_module_by_name",
        "psutil.tests.APPVEYOR",
        "psutil.tests.retry_before_failing",
        "psutil",
        "psutil.tests.sh",
        "psutil.LINUX",
        "os"
    ],
    "/tmp/psutil/psutil/tests/test_process.py": [
        "psutil.IOPRIO_CLASS_BE",
        "psutil.IOPRIO_CLASS_RT",
        "psutil.IOPRIO_CLASS_IDLE",
        "psutil.IOPRIO_CLASS_NONE",
        "resource",
        "pwd",
        "psutil._common.pconn",
        "string.Template",
        "grp",
        "pwd",
        "psutil._pswindows.py2_strencode",
        "psutil.tests.AF_INET6",
        "psutil.tests.TOX",
        "psutil.tests.WIN_VISTA",
        "psutil._compat.unicode",
        "psutil.WINDOWS",
        "psutil.tests.unittest",
        "psutil._compat.PY3",
        "socket.SOCK_STREAM",
        "psutil.tests.ThreadTask",
        "subprocess",
        "psutil.tests.TRAVIS",
        "contextlib",
        "psutil.FREEBSD",
        "psutil.tests.call_until",
        "psutil.NETBSD",
        "select",
        "psutil.tests.wait_for_pid",
        "psutil.OSX",
        "socket.SOCK_DGRAM",
        "psutil.tests.GLOBAL_TIMEOUT",
        "tempfile",
        "errno",
        "psutil.tests.reap_children",
        "psutil._compat.long",
        "psutil.tests.skip_on_not_implemented",
        "psutil._common.supports_ipv6",
        "psutil.tests.skip_on_access_denied",
        "collections",
        "psutil.tests.TESTFN",
        "psutil.tests.TESTFILE_PREFIX",
        "psutil.BSD",
        "psutil.tests.mock",
        "psutil.tests.check_connection_ntuple",
        "stat",
        "psutil.tests.create_exe",
        "psutil.tests.enum",
        "psutil.tests.AF_UNIX",
        "time",
        "textwrap",
        "sys",
        "psutil.tests.RLIMIT_SUPPORT",
        "psutil.POSIX",
        "psutil.tests.get_test_subprocess",
        "psutil.tests.retry_before_failing",
        "psutil.tests.PYPY",
        "psutil.tests.pyrun",
        "types",
        "psutil.SUNOS",
        "psutil._compat.callable",
        "psutil.tests.PYTHON",
        "psutil.tests.chdir",
        "psutil.OPENBSD",
        "socket",
        "psutil.tests.wait_for_file",
        "psutil.tests.run_test_module_by_name",
        "psutil.tests.get_winver",
        "signal",
        "traceback",
        "psutil.tests.APPVEYOR",
        "socket.AF_INET",
        "psutil.tests.safe_rmpath",
        "psutil.tests.warn",
        "psutil",
        "psutil.tests.sh",
        "psutil.LINUX",
        "os",
        "psutil.tests.VALID_PROC_STATUSES"
    ],
    "/tmp/psutil/psutil/tests/test_sunos.py": [
        "psutil.SUNOS",
        "psutil.tests.run_test_module_by_name",
        "psutil.tests.unittest",
        "psutil",
        "psutil.tests.sh",
        "os"
    ],
    "/tmp/psutil/psutil/tests/test_system.py": [
        "resource",
        "psutil._common.conn_tmap",
        "psutil.tests.AF_INET6",
        "psutil.tests.reap_children",
        "psutil.WINDOWS",
        "psutil.tests.unittest",
        "datetime",
        "psutil.tests.TRAVIS",
        "contextlib",
        "psutil.FREEBSD",
        "psutil.NETBSD",
        "shutil",
        "psutil.tests.TESTFN_UNICODE",
        "psutil.OSX",
        "tempfile",
        "errno",
        "pprint",
        "psutil._compat.long",
        "psutil.BSD",
        "psutil.tests.mock",
        "psutil.tests.enum",
        "time",
        "sys",
        "psutil.POSIX",
        "psutil.tests.DEVNULL",
        "psutil.tests.TESTFN",
        "psutil.SUNOS",
        "psutil.tests.check_net_address",
        "psutil.OPENBSD",
        "socket",
        "psutil.tests.run_test_module_by_name",
        "signal",
        "psutil.tests.APPVEYOR",
        "psutil.tests.retry_before_failing",
        "psutil.tests.safe_rmpath",
        "psutil",
        "psutil.tests.skip_on_access_denied",
        "psutil.LINUX",
        "os",
        "psutil.tests.get_test_subprocess"
    ],
    "/tmp/psutil/psutil/tests/test_windows.py": [
        "psutil._pswindows.ACCESS_DENIED_SET",
        "psutil.WINDOWS",
        "psutil.tests.unittest",
        "psutil._compat.PY3",
        "subprocess",
        "psutil._compat.basestring",
        "errno",
        "psutil.tests.reap_children",
        "platform",
        "wmi",
        "psutil.tests.mock",
        "glob",
        "time",
        "psutil._compat.callable",
        "sys",
        "psutil.tests.get_test_subprocess",
        "psutil.tests.run_test_module_by_name",
        "signal",
        "psutil.tests.APPVEYOR",
        "psutil.tests.retry_before_failing",
        "psutil",
        "win32con",
        "os",
        "win32api"
    ]
}
{
    "/tmp/pubnub/pubnub/__init__.py": [
        "os",
        "logging"
    ],
    "/tmp/pubnub/pubnub/builders.py": [
        "abc.abstractmethod",
        ".dtos.SubscribeOperation",
        ".utils",
        "abc.ABCMeta",
        ".dtos.UnsubscribeOperation"
    ],
    "/tmp/pubnub/pubnub/callbacks.py": [
        "abc.ABCMeta",
        "abc.abstractmethod"
    ],
    "/tmp/pubnub/pubnub/crypto.py": [
        "sys",
        "hashlib",
        "base64.decodestring",
        "base64.encodebytes",
        "Cryptodome.Cipher.AES",
        "Cryptodome.Hash.SHA256",
        "base64.decodebytes",
        "json",
        "base64.encodestring"
    ],
    "/tmp/pubnub/pubnub/dtos.py": [
        "six"
    ],
    "/tmp/pubnub/pubnub/endpoints/__init__.py": [],
    "/tmp/pubnub/pubnub/endpoints/access/__init__.py": [],
    "/tmp/pubnub/pubnub/endpoints/access/audit.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.models.consumer.access_manager.PNAccessManagerAuditResult"
    ],
    "/tmp/pubnub/pubnub/endpoints/access/grant.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.models.consumer.access_manager.PNAccessManagerGrantResult",
        "pubnub.utils",
        "pubnub.exceptions.PubNubException",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.errors.PNERR_PAM_NO_FLAGS"
    ],
    "/tmp/pubnub/pubnub/endpoints/access/revoke.py": [
        "pubnub.enums.PNOperationType",
        "pubnub.endpoints.access.grant.Grant"
    ],
    "/tmp/pubnub/pubnub/endpoints/channel_groups/__init__.py": [],
    "/tmp/pubnub/pubnub/endpoints/channel_groups/add_channel_to_channel_group.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.errors.PNERR_CHANNELS_MISSING",
        "pubnub.enums.HttpMethod",
        "pubnub.utils",
        "six",
        "pubnub.exceptions.PubNubException",
        "pubnub.errors.PNERR_GROUP_MISSING",
        "pubnub.enums.PNOperationType",
        "pubnub.models.consumer.channel_group.PNChannelGroupsAddChannelResult"
    ],
    "/tmp/pubnub/pubnub/endpoints/channel_groups/list_channels_in_channel_group.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.enums.HttpMethod",
        "six",
        "pubnub.exceptions.PubNubException",
        "pubnub.errors.PNERR_GROUP_MISSING",
        "pubnub.enums.PNOperationType",
        "pubnub.models.consumer.channel_group.PNChannelGroupsListResult"
    ],
    "/tmp/pubnub/pubnub/endpoints/channel_groups/remove_channel_from_channel_group.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.errors.PNERR_CHANNELS_MISSING",
        "pubnub.enums.HttpMethod",
        "pubnub.utils",
        "six",
        "pubnub.exceptions.PubNubException",
        "pubnub.errors.PNERR_GROUP_MISSING",
        "pubnub.enums.PNOperationType",
        "pubnub.models.consumer.channel_group.PNChannelGroupsRemoveChannelResult"
    ],
    "/tmp/pubnub/pubnub/endpoints/channel_groups/remove_channel_group.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.enums.HttpMethod",
        "six",
        "pubnub.exceptions.PubNubException",
        "pubnub.errors.PNERR_GROUP_MISSING",
        "pubnub.enums.PNOperationType",
        "pubnub.models.consumer.channel_group.PNChannelGroupsRemoveGroupResult"
    ],
    "/tmp/pubnub/pubnub/endpoints/endpoint.py": [
        "..structures.ResponseInfo",
        "abc.abstractmethod",
        "pubnub.utils",
        "pubnub.models.consumer.pn_error_data.PNErrorData",
        "pubnub.exceptions.PubNubException",
        "pubnub.errors.PNERR_PUBLISH_KEY_MISSING",
        "abc.ABCMeta",
        "pubnub.enums.PNOperationType",
        "pubnub.enums.PNStatusCategory",
        "pubnub.errors.PNERR_SECRET_KEY_MISSING",
        "pubnub.errors.PNERR_SUBSCRIBE_KEY_MISSING",
        "pubnub.models.consumer.common.PNStatus",
        "pubnub.errors.PNERR_CHANNEL_OR_GROUP_MISSING",
        "..structures.RequestOptions",
        "pubnub.errors.PNERR_CHANNEL_MISSING"
    ],
    "/tmp/pubnub/pubnub/endpoints/history.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "six",
        "pubnub.models.consumer.history.PNHistoryResult",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType"
    ],
    "/tmp/pubnub/pubnub/endpoints/presence/__init__.py": [],
    "/tmp/pubnub/pubnub/endpoints/presence/get_state.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.models.consumer.presence.PNGetStateResult",
        "pubnub.utils",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType"
    ],
    "/tmp/pubnub/pubnub/endpoints/presence/heartbeat.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "pubnub.exceptions.PubNubException",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.errors.PNERR_CHANNEL_OR_GROUP_MISSING"
    ],
    "/tmp/pubnub/pubnub/endpoints/presence/here_now.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "pubnub.models.consumer.presence.PNHereNowResult",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType"
    ],
    "/tmp/pubnub/pubnub/endpoints/presence/leave.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "pubnub.exceptions.PubNubException",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.errors.PNERR_CHANNEL_OR_GROUP_MISSING"
    ],
    "/tmp/pubnub/pubnub/endpoints/presence/set_state.py": [
        "pubnub.models.consumer.presence.PNSetStateResult",
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "pubnub.exceptions.PubNubException",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.errors.PNERR_STATE_SETTER_FOR_GROUPS_NOT_SUPPORTED_YET",
        "pubnub.errors.PNERR_STATE_MISSING",
        "pubnub.dtos.StateOperation"
    ],
    "/tmp/pubnub/pubnub/endpoints/presence/where_now.py": [
        "pubnub.errors.PNERR_UUID_MISSING",
        "pubnub.endpoints.endpoint.Endpoint",
        "six",
        "pubnub.exceptions.PubNubException",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.models.consumer.presence.PNWhereNowResult"
    ],
    "/tmp/pubnub/pubnub/endpoints/pubsub/__init__.py": [],
    "/tmp/pubnub/pubnub/endpoints/pubsub/publish.py": [
        "pubnub.crypto",
        "pubnub.utils",
        "pubnub.exceptions.PubNubException",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.errors.PNERR_MESSAGE_MISSING",
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.models.consumer.pubsub.PNPublishResult"
    ],
    "/tmp/pubnub/pubnub/endpoints/pubsub/subscribe.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "pubnub.exceptions.PubNubException",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.errors.PNERR_CHANNEL_OR_GROUP_MISSING"
    ],
    "/tmp/pubnub/pubnub/endpoints/push/__init__.py": [],
    "/tmp/pubnub/pubnub/endpoints/push/add_channels_to_push.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "six",
        "pubnub.exceptions.PubNubException",
        "pubnub.models.consumer.push.PNPushAddChannelResult",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.errors.PNERR_PUSH_DEVICE_MISSING",
        "pubnub.errors.PNERROR_PUSH_TYPE_MISSING",
        "pubnub.errors.PNERR_CHANNEL_MISSING"
    ],
    "/tmp/pubnub/pubnub/endpoints/push/list_push_provisions.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "six",
        "pubnub.exceptions.PubNubException",
        "pubnub.models.consumer.push.PNPushListProvisionsResult",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.errors.PNERR_PUSH_DEVICE_MISSING",
        "pubnub.errors.PNERROR_PUSH_TYPE_MISSING"
    ],
    "/tmp/pubnub/pubnub/endpoints/push/remove_channels_from_push.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.models.consumer.push.PNPushRemoveChannelResult",
        "pubnub.utils",
        "six",
        "pubnub.exceptions.PubNubException",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.errors.PNERR_PUSH_DEVICE_MISSING",
        "pubnub.errors.PNERROR_PUSH_TYPE_MISSING",
        "pubnub.errors.PNERR_CHANNEL_MISSING"
    ],
    "/tmp/pubnub/pubnub/endpoints/push/remove_device.py": [
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.utils",
        "six",
        "pubnub.exceptions.PubNubException",
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.models.consumer.push.PNPushRemoveAllChannelsResult",
        "pubnub.errors.PNERR_PUSH_DEVICE_MISSING",
        "pubnub.errors.PNERROR_PUSH_TYPE_MISSING"
    ],
    "/tmp/pubnub/pubnub/endpoints/time.py": [
        "pubnub.enums.HttpMethod",
        "pubnub.enums.PNOperationType",
        "pubnub.endpoints.endpoint.Endpoint",
        "pubnub.models.consumer.time.PNTimeResponse"
    ],
    "/tmp/pubnub/pubnub/enums.py": [],
    "/tmp/pubnub/pubnub/errors.py": [],
    "/tmp/pubnub/pubnub/exceptions.py": [],
    "/tmp/pubnub/pubnub/managers.py": [
        ".callbacks.SubscribeCallback",
        "logging",
        ".models.subscription_item.SubscriptionItem",
        ".callbacks.ReconnectionCallback",
        "abc.abstractmethod",
        ".dtos.SubscribeOperation",
        ".utils",
        "abc.ABCMeta",
        ".enums.PNStatusCategory",
        ".dtos.UnsubscribeOperation",
        ".models.consumer.common.PNStatus",
        ".models.server.subscribe.SubscribeEnvelope",
        "math",
        ".enums.PNReconnectionPolicy"
    ],
    "/tmp/pubnub/pubnub/models/__init__.py": [],
    "/tmp/pubnub/pubnub/models/consumer/__init__.py": [],
    "/tmp/pubnub/pubnub/models/consumer/access_manager.py": [
        "six"
    ],
    "/tmp/pubnub/pubnub/models/consumer/channel_group.py": [],
    "/tmp/pubnub/pubnub/models/consumer/common.py": [],
    "/tmp/pubnub/pubnub/models/consumer/history.py": [
        "pubnub.crypto"
    ],
    "/tmp/pubnub/pubnub/models/consumer/pn_error_data.py": [],
    "/tmp/pubnub/pubnub/models/consumer/presence.py": [
        "six"
    ],
    "/tmp/pubnub/pubnub/models/consumer/pubsub.py": [
        "six"
    ],
    "/tmp/pubnub/pubnub/models/consumer/push.py": [],
    "/tmp/pubnub/pubnub/models/consumer/time.py": [
        "datetime.date"
    ],
    "/tmp/pubnub/pubnub/models/server/__init__.py": [],
    "/tmp/pubnub/pubnub/models/server/subscribe.py": [
        "six"
    ],
    "/tmp/pubnub/pubnub/models/subscription_item.py": [],
    "/tmp/pubnub/pubnub/pnconfiguration.py": [
        ".enums.PNHeartbeatNotificationOptions",
        ".utils",
        ".enums.PNReconnectionPolicy"
    ],
    "/tmp/pubnub/pubnub/pubnub.py": [
        ".workers.SubscribeMessageWorker",
        ".utils",
        ".managers.SubscriptionManager",
        ".callbacks.SubscribeCallback",
        ".enums.PNStatusCategory",
        ".request_handlers.base.BaseRequestHandler",
        "six.moves.queue.Empty",
        ".enums.PNHeartbeatNotificationOptions",
        "threading",
        ".request_handlers.requests_handler.RequestsRequestHandler",
        ".pnconfiguration.PNConfiguration",
        ".models.consumer.common.PNStatus",
        ".enums.PNReconnectionPolicy",
        ".callbacks.ReconnectionCallback",
        ".managers.ReconnectionManager",
        ".structures.PlatformOptions",
        ".endpoints.presence.leave.Leave",
        ".pubnub_core.PubNubCore",
        ".endpoints.presence.heartbeat.Heartbeat",
        "copy",
        "six.moves.queue.Queue",
        "logging",
        ".managers.PublishSequenceManager",
        ".endpoints.pubsub.subscribe.Subscribe",
        ".enums.PNOperationType",
        "threading.Event"
    ],
    "/tmp/pubnub/pubnub/pubnub_asyncio.py": [
        ".errors.PNERR_JSON_DECODING_FAILED",
        "aiohttp",
        ".exceptions.PubNubException",
        ".callbacks.SubscribeCallback",
        ".structures.ResponseInfo",
        "asyncio.Semaphore",
        "asyncio",
        ".managers.PublishSequenceManager",
        ".endpoints.presence.leave.Leave",
        ".structures.RequestOptions",
        "json",
        ".workers.SubscribeMessageWorker",
        ".endpoints.presence.heartbeat.Heartbeat",
        ".managers.ReconnectionManager",
        ".errors.PNERR_CLIENT_ERROR",
        ".pubnub_core.PubNubCore",
        "asyncio.Event",
        ".endpoints.pubsub.subscribe.Subscribe",
        ".errors.PNERR_REQUEST_CANCELLED",
        "math",
        ".enums.PNOperationType",
        ".enums.PNHeartbeatNotificationOptions",
        "logging",
        ".errors.PNERR_SERVER_ERROR",
        ".enums.PNReconnectionPolicy",
        "pubnub.models.consumer.common.PNStatus",
        ".utils",
        ".errors.PNERR_CLIENT_TIMEOUT",
        "asyncio.Queue",
        ".enums.PNStatusCategory",
        ".managers.SubscriptionManager",
        "six",
        ".callbacks.ReconnectionCallback"
    ],
    "/tmp/pubnub/pubnub/pubnub_core.py": [
        ".endpoints.access.grant.Grant",
        ".endpoints.channel_groups.remove_channel_group.RemoveChannelGroup",
        ".endpoints.pubsub.publish.Publish",
        ".endpoints.presence.where_now.WhereNow",
        ".endpoints.push.remove_channels_from_push.RemoveChannelsFromPush",
        ".endpoints.push.add_channels_to_push.AddChannelsToPush",
        "abc.ABCMeta",
        ".endpoints.channel_groups.list_channels_in_channel_group.ListChannelsInChannelGroup",
        ".managers.BasePathManager",
        ".endpoints.presence.set_state.SetState",
        ".endpoints.access.audit.Audit",
        ".builders.SubscribeBuilder",
        "abc.abstractmethod",
        ".endpoints.presence.here_now.HereNow",
        ".endpoints.push.list_push_provisions.ListPushProvisions",
        ".endpoints.channel_groups.remove_channel_from_channel_group.RemoveChannelFromChannelGroup",
        ".endpoints.time.Time",
        ".endpoints.presence.heartbeat.Heartbeat",
        ".endpoints.history.History",
        ".endpoints.presence.get_state.GetState",
        "logging",
        ".builders.UnsubscribeBuilder",
        ".endpoints.push.remove_device.RemoveDeviceFromPush",
        ".endpoints.channel_groups.add_channel_to_channel_group.AddChannelToChannelGroup",
        "time",
        ".endpoints.access.revoke.Revoke"
    ],
    "/tmp/pubnub/pubnub/pubnub_tornado.py": [
        ".errors.PNERR_SERVER_ERROR",
        "tornado.stack_context",
        ".utils",
        ".errors.PNERR_CONNECTION_ERROR",
        "datetime",
        ".callbacks.SubscribeCallback",
        "tornado.simple_httpclient.SimpleAsyncHTTPClient",
        ".enums.PNStatusCategory",
        "tornado.locks.Semaphore",
        "tornado.ioloop",
        ".enums.PNHeartbeatNotificationOptions",
        "six",
        "json",
        ".models.consumer.common.PNStatus",
        ".managers.ReconnectionManager",
        ".workers.SubscribeMessageWorker",
        ".errors.PNERR_CLIENT_ERROR",
        "math",
        ".enums.PNReconnectionPolicy",
        ".managers.SubscriptionManager",
        ".structures.ResponseInfo",
        ".callbacks.ReconnectionCallback",
        ".errors.PNERR_CLIENT_TIMEOUT",
        "tornado.ioloop",
        "tornado.queues.Queue",
        "tornado.concurrent.Future",
        ".pubnub_core.PubNubCore",
        "tornado.gen",
        ".endpoints.presence.leave.Leave",
        "logging",
        "tornado.ioloop.PeriodicCallback",
        "tornado.locks.Lock",
        ".exceptions.PubNubException",
        ".managers.PublishSequenceManager",
        ".endpoints.pubsub.subscribe.Subscribe",
        ".enums.PNOperationType",
        ".errors.PNERR_JSON_DECODING_FAILED",
        "time",
        "tornado.locks.Event"
    ],
    "/tmp/pubnub/pubnub/pubnub_twisted.py": [
        ".errors.PNERR_SERVER_ERROR",
        "urlparse.parse_qs",
        ".workers.SubscribeMessageWorker",
        ".utils",
        ".managers.SubscriptionManager",
        ".enums.PNStatusCategory",
        ".endpoints.presence.heartbeat.Heartbeat",
        "twisted.internet.task.LoopingCall",
        "twisted.internet.reactor",
        ".enums.PNHeartbeatNotificationOptions",
        "twisted.web.client.HTTPConnectionPool",
        "json",
        ".errors.PNERR_CLIENT_ERROR",
        ".errors.PNERR_JSON_DECODING_FAILED",
        ".errors.PNERR_CONNECTION_ERROR",
        ".structures.ResponseInfo",
        "twisted.internet.defer.Deferred",
        ".endpoints.presence.leave.Leave",
        "twisted.web.http_headers.Headers",
        ".pubnub_core.PubNubCore",
        "logging",
        "twisted.internet.error.ConnectingCancelledError",
        "twisted.internet.protocol.Protocol",
        "StringIO.StringIO",
        ".exceptions.PubNubException",
        ".managers.PublishSequenceManager",
        "twisted.web.client.Agent",
        "urlparse.urlparse",
        ".endpoints.pubsub.subscribe.Subscribe",
        ".enums.PNOperationType",
        "twisted.internet.defer.DeferredQueue",
        "twisted.web.client.FileBodyProducer",
        "time"
    ],
    "/tmp/pubnub/pubnub/request_handlers/__init__.py": [],
    "/tmp/pubnub/pubnub/request_handlers/base.py": [
        "abc.ABCMeta",
        "abc.abstractmethod"
    ],
    "/tmp/pubnub/pubnub/request_handlers/requests_handler.py": [
        "pubnub.errors.PNERR_TOO_MANY_REDIRECTS_ERROR",
        "pubnub.errors.PNERR_SERVER_ERROR",
        "pubnub.utils",
        "pubnub.errors.PNERR_CONNECTION_ERROR",
        "pubnub.enums.PNStatusCategory",
        "pubnub.request_handlers.base.BaseRequestHandler",
        "pubnub.structures.RequestOptions",
        "six",
        "pubnub.structures.Envelope",
        "pubnub.errors.PNERR_CLIENT_ERROR",
        "pubnub.structures.ResponseInfo",
        "requests.adapters.HTTPAdapter",
        "pubnub.errors.PNERR_CLIENT_TIMEOUT",
        "pubnub.structures.PlatformOptions",
        "pubnub.errors.PNERR_HTTP_ERROR",
        "logging",
        "pubnub.exceptions.PubNubException",
        "threading",
        "requests.Session",
        "requests",
        "pubnub.errors.PNERR_UNKNOWN_ERROR"
    ],
    "/tmp/pubnub/pubnub/request_handlers/urllib2_handler.py": [
        "pubnub.errors.PNERR_SERVER_ERROR",
        "pubnub.utils",
        "pubnub.errors.PNERR_CONNECTION_ERROR",
        "pubnub.enums.PNStatusCategory",
        "pubnub.request_handlers.base.BaseRequestHandler",
        "pubnub.structures.RequestOptions",
        "six",
        "pubnub.structures.Envelope",
        "six.moves.urllib",
        "json",
        "pubnub.errors.PNERR_CLIENT_ERROR",
        "pubnub.structures.ResponseInfo",
        "pubnub.errors.PNERR_CLIENT_TIMEOUT",
        "pubnub.structures.PlatformOptions",
        "pubnub.errors.PNERR_HTTP_ERROR",
        "logging",
        "socket",
        "pubnub.exceptions.PubNubException",
        "threading",
        "pubnub.errors.PNERR_UNKNOWN_ERROR"
    ],
    "/tmp/pubnub/pubnub/structures.py": [
        "six",
        ".enums.HttpMethod"
    ],
    "/tmp/pubnub/pubnub/utils.py": [
        "base64.urlsafe_b64encode",
        "datetime",
        ".enums.PNStatusCategory",
        "six",
        "Crypto.Hash.SHA256",
        "json",
        ".models.consumer.common.PNStatus",
        "uuid",
        ".errors.PNERR_JSON_NOT_SERIALIZABLE",
        ".exceptions.PubNubException",
        "threading",
        ".enums.PNOperationType",
        ".enums.PNPushType",
        "hmac"
    ],
    "/tmp/pubnub/pubnub/workers.py": [
        ".models.consumer.pubsub.PNPresenceEventResult",
        ".crypto",
        "logging",
        ".models.server.subscribe.SubscribeMessage",
        "abc.abstractmethod",
        ".utils.strip_right",
        ".models.server.subscribe.PresenceEnvelope",
        ".models.consumer.pubsub.PNMessageResult"
    ]
}
{
    "/tmp/pwaqi/pwaqi/__init__.py": [
        "urllib.parse.unquote",
        "datetime.datetime",
        "requests"
    ]
}
{
    "/tmp/py4j/py4j/__init__.py": [
        ".version",
        "__future__.absolute_import"
    ],
    "/tmp/py4j/py4j/backport.py": [
        "sys",
        "_weakref.ref"
    ],
    "/tmp/py4j/py4j/clientserver.py": [
        "__future__.unicode_literals",
        "py4j.java_gateway.DEFAULT_PORT",
        "__future__.absolute_import",
        "py4j.protocol.get_command_part",
        "gc",
        "py4j.protocol.Py4JError",
        "py4j.java_gateway.GatewayConnectionGuard",
        "py4j.protocol.get_return_value",
        "py4j.java_gateway.set_linger",
        "py4j.java_gateway.DEFAULT_ADDRESS",
        "py4j.java_gateway.quiet_shutdown",
        "py4j.java_gateway.quiet_close",
        "threading.local",
        "py4j.protocol.Py4JNetworkError",
        "threading.Thread",
        "py4j.java_gateway.DEFAULT_ACCEPT_TIMEOUT_PLACEHOLDER",
        "py4j.protocol.smart_decode",
        "py4j.java_gateway.GatewayClient",
        "py4j.java_gateway.server_connection_stopped",
        "logging",
        "socket",
        "py4j.java_gateway.CallbackServer",
        "py4j.protocol",
        "py4j.java_gateway.DEFAULT_PYTHON_PROXY_PORT",
        "weakref",
        "py4j.java_gateway.JavaGateway",
        "py4j.java_gateway.GatewayParameters",
        "py4j.java_gateway.CallbackServerParameters"
    ],
    "/tmp/py4j/py4j/compat.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "threading.Thread",
        "inspect",
        "sys",
        "queue"
    ],
    "/tmp/py4j/py4j/finalizer.py": [
        "__future__.unicode_literals",
        "py4j.compat.items",
        "threading.RLock",
        "__future__.absolute_import"
    ],
    "/tmp/py4j/py4j/java_collections.py": [
        "__future__.unicode_literals",
        "collections.MutableMapping",
        "__future__.absolute_import",
        "py4j.protocol.get_command_part",
        "py4j.protocol.register_output_converter",
        "py4j.protocol.get_return_value",
        "py4j.java_gateway.JavaMember",
        "py4j.compat.basestring",
        "py4j.protocol",
        "py4j.compat.next",
        "py4j.java_gateway.JavaClass",
        "py4j.protocol.register_input_converter",
        "py4j.compat.isbytearray",
        "collections.MutableSet",
        "py4j.protocol.Py4JError",
        "collections.MutableSequence",
        "sys",
        "py4j.compat.ispython3bytestr",
        "py4j.compat.iteritems",
        "py4j.java_gateway.get_method",
        "collections.Set",
        "collections.Sequence",
        "py4j.java_gateway.JavaObject",
        "py4j.compat.hasattr2"
    ],
    "/tmp/py4j/py4j/java_gateway.py": [
        "py4j.protocol.smart_decode",
        "__future__.absolute_import",
        "subprocess",
        "py4j.compat.WeakSet",
        "py4j.protocol.Py4JError",
        "struct",
        "py4j.protocol.is_error",
        "threading.Thread",
        "py4j.compat.hasattr2",
        "py4j.protocol.Py4JNetworkError",
        "py4j.protocol.escape_new_line",
        "py4j.compat.CompatThread",
        "subprocess.Popen",
        "py4j.compat.Queue",
        "sys",
        "logging",
        "socket",
        "weakref",
        "py4j.compat.range",
        "select",
        "py4j.compat.basestring",
        "py4j.protocol.get_return_value",
        "subprocess.PIPE",
        "collections.deque",
        "py4j.finalizer.ThreadSafeFinalizer",
        "threading.RLock",
        "__future__.unicode_literals",
        "py4j.protocol.get_command_part",
        "py4j.protocol.register_output_converter",
        "py4j.protocol",
        "py4j.version.__version__",
        "py4j.signals.Signal",
        "pydoc.pager",
        "os"
    ],
    "/tmp/py4j/py4j/protocol.py": [
        "base64.standard_b64decode",
        "py4j.compat.strtobyte",
        "py4j.compat.isbytearray",
        "__future__.absolute_import",
        "py4j.compat.unicode",
        "py4j.compat.bytetostr",
        "py4j.compat.bytearray2",
        "py4j.compat.bytestr",
        "py4j.compat.bytetoint",
        "base64.standard_b64encode",
        "py4j.compat.basestring",
        "py4j.compat.long",
        "decimal.Decimal",
        "__future__.unicode_literals",
        "py4j.compat.isbytestr",
        "py4j.compat.ispython3bytestr"
    ],
    "/tmp/py4j/py4j/signals.py": [
        "py4j.compat.range",
        "threading.Lock",
        "inspect.ismethod"
    ],
    "/tmp/py4j/py4j/tests/__init__.py": [],
    "/tmp/py4j/py4j/tests/benchmark1.py": [
        "functools.partial",
        "sys",
        "py4j.java_gateway.JavaGateway",
        "gc",
        "time",
        "py4j.java_gateway.CallbackServerParameters"
    ],
    "/tmp/py4j/py4j/tests/byte_string_test.py": [
        "py4j.tests.java_gateway_test.start_example_app_process",
        "py4j.tests.java_gateway_test.safe_shutdown",
        "py4j.protocol.smart_decode",
        "unittest",
        "__future__.absolute_import",
        "py4j.java_gateway.JavaGateway",
        "time"
    ],
    "/tmp/py4j/py4j/tests/client_server_test.py": [
        "py4j.clientserver.JavaParameters",
        "contextlib.contextmanager",
        "unittest",
        "py4j.clientserver.PythonParameters",
        "subprocess",
        "gc",
        "py4j.protocol.Py4JError",
        "py4j.java_gateway.GatewayConnectionGuard",
        "py4j.protocol.smart_decode",
        "py4j.tests.py4j_callback_recursive_example.HelloState",
        "py4j.clientserver.ClientServer",
        "py4j.protocol.Py4JJavaError",
        "py4j.java_gateway.DEFAULT_PORT",
        "py4j.tests.java_gateway_test.WaitOperator",
        "py4j.tests.java_callback_test.IHelloImpl",
        "multiprocessing.Process",
        "py4j.tests.java_gateway_test.PY4J_JAVA_PATH",
        "py4j.java_gateway.DEFAULT_PYTHON_PROXY_PORT",
        "py4j.java_gateway.is_instance_of",
        "threading",
        "py4j.tests.java_gateway_test.check_connection",
        "py4j.tests.java_gateway_test.sleep",
        "py4j.java_gateway.GatewayParameters",
        "py4j.tests.py4j_callback_recursive_example.PythonPing"
    ],
    "/tmp/py4j/py4j/tests/finalizer_test.py": [
        "__future__.unicode_literals",
        "unittest",
        "__future__.absolute_import",
        "py4j.finalizer.Finalizer",
        "gc",
        "py4j.finalizer.ThreadSafeFinalizer",
        "py4j.finalizer.clear_finalizers",
        "weakref.ref"
    ],
    "/tmp/py4j/py4j/tests/instrumented.py": [
        "py4j.clientserver.PythonServer",
        "py4j.clientserver.ClientServerConnection",
        "py4j.protocol",
        "py4j.java_gateway.GatewayProperty",
        "py4j.clientserver.ClientServer",
        "collections.deque",
        "py4j.java_gateway.GatewayClient",
        "py4j.java_gateway.PythonProxyPool",
        "py4j.clientserver.JavaClient",
        "py4j.java_gateway.CallbackServer",
        "py4j.java_gateway.CallbackConnection",
        "py4j.java_gateway.GatewayConnection",
        "weakref",
        "py4j.java_gateway.JavaGateway",
        "py4j.tests.py4j_callback_recursive_example.PythonPing"
    ],
    "/tmp/py4j/py4j/tests/java_array_test.py": [
        "py4j.tests.java_gateway_test.start_example_app_process",
        "__future__.unicode_literals",
        "unittest",
        "__future__.absolute_import",
        "py4j.java_gateway.JavaGateway",
        "time"
    ],
    "/tmp/py4j/py4j/tests/java_callback_test.py": [
        "py4j.tests.py4j_callback_recursive_example.HelloState",
        "__future__.unicode_literals",
        "unittest",
        "__future__.absolute_import",
        "subprocess",
        "py4j.tests.java_gateway_test.sleep",
        "py4j.tests.java_gateway_test.safe_shutdown",
        "py4j.java_gateway.set_default_callback_accept_timeout",
        "contextlib.contextmanager",
        "threading.Thread",
        "py4j.java_gateway.PythonProxyPool",
        "traceback.print_exc",
        "multiprocessing.Process",
        "py4j.tests.java_gateway_test.PY4J_JAVA_PATH",
        "py4j.java_gateway.JavaGateway",
        "py4j.compat.range",
        "py4j.tests.java_gateway_test.check_connection",
        "py4j.java_gateway.CallbackServerParameters"
    ],
    "/tmp/py4j/py4j/tests/java_dir_test.py": [
        "py4j.protocol.Py4JError",
        "py4j.java_gateway.UserHelpAutoCompletion",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "py4j.tests.java_gateway_test.example_app_process",
        "py4j.tests.java_gateway_test.gateway",
        "py4j.java_gateway.java_import"
    ],
    "/tmp/py4j/py4j/tests/java_gateway_test.py": [
        "py4j.java_gateway.get_java_class",
        "py4j.protocol.smart_decode",
        "py4j.compat.isbytearray",
        "__future__.absolute_import",
        "subprocess",
        "gc",
        "py4j.protocol.encode_bytearray",
        "py4j.protocol.Py4JError",
        "tempfile",
        "py4j.finalizer.ThreadSafeFinalizer",
        "py4j.java_gateway.get_field",
        "threading.Thread",
        "py4j.java_gateway.DEFAULT_PORT",
        "py4j.java_gateway.get_method",
        "py4j.compat.bytearray2",
        "py4j.protocol.Py4JNetworkError",
        "socket.SOCK_STREAM",
        "py4j.protocol.decode_bytearray",
        "py4j.protocol.escape_new_line",
        "py4j.java_gateway.set_default_callback_accept_timeout",
        "math",
        "py4j.java_gateway.java_import",
        "py4j.compat.Queue",
        "py4j.java_gateway.GatewayClient",
        "socket.socket",
        "traceback.print_exc",
        "py4j.java_gateway.GatewayConnectionGuard",
        "socket.AF_INET",
        "py4j.java_gateway.JavaGateway",
        "py4j.compat.range",
        "py4j.java_gateway.CallbackServerParameters",
        "unittest",
        "py4j.java_gateway.JavaMember",
        "py4j.java_gateway.JavaObject",
        "py4j.compat.long",
        "contextlib.contextmanager",
        "collections.deque",
        "py4j.protocol.Py4JJavaError",
        "decimal.Decimal",
        "multiprocessing.Process",
        "py4j.java_gateway.GatewayParameters",
        "__future__.unicode_literals",
        "py4j.protocol.unescape_new_line",
        "py4j.java_gateway.set_field",
        "py4j.java_gateway.quiet_close",
        "py4j.compat.ispython3bytestr",
        "os",
        "py4j.java_gateway.is_instance_of",
        "time"
    ],
    "/tmp/py4j/py4j/tests/java_help_test.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "py4j.tests.java_gateway_test.example_app_process",
        "py4j.tests.java_gateway_test.gateway"
    ],
    "/tmp/py4j/py4j/tests/java_list_test.py": [
        "py4j.tests.java_gateway_test.start_example_app_process",
        "py4j.protocol.Py4JError",
        "py4j.tests.java_gateway_test.safe_shutdown",
        "py4j.protocol.Py4JJavaError",
        "__future__.unicode_literals",
        "unittest",
        "__future__.absolute_import",
        "py4j.java_gateway.JavaGateway",
        "py4j.tests.java_gateway_test.sleep",
        "py4j.compat.unicode",
        "py4j.java_gateway.GatewayParameters"
    ],
    "/tmp/py4j/py4j/tests/java_map_test.py": [
        "py4j.tests.java_gateway_test.start_example_app_process",
        "py4j.tests.java_gateway_test.safe_shutdown",
        "__future__.unicode_literals",
        "unittest",
        "__future__.absolute_import",
        "py4j.java_gateway.JavaGateway",
        "py4j.tests.java_gateway_test.sleep",
        "py4j.java_gateway.GatewayParameters"
    ],
    "/tmp/py4j/py4j/tests/java_set_test.py": [
        "py4j.tests.java_gateway_test.start_example_app_process",
        "py4j.tests.java_gateway_test.safe_shutdown",
        "__future__.unicode_literals",
        "unittest",
        "__future__.absolute_import",
        "py4j.java_gateway.JavaGateway",
        "py4j.tests.java_gateway_test.sleep",
        "py4j.java_gateway.GatewayParameters"
    ],
    "/tmp/py4j/py4j/tests/java_tls_test.py": [
        "py4j.java_gateway.set_default_callback_accept_timeout",
        "py4j.tests.java_gateway_test.safe_shutdown",
        "ssl",
        "__future__.unicode_literals",
        "py4j.java_gateway.CallbackServerParameters",
        "unittest",
        "py4j.java_gateway.JavaGateway",
        "__future__.absolute_import",
        "subprocess",
        "sys",
        "multiprocessing.Process",
        "py4j.tests.java_gateway_test.sleep",
        "py4j.java_gateway.GatewayParameters",
        "os",
        "py4j.tests.java_gateway_test.PY4J_JAVA_PATH"
    ],
    "/tmp/py4j/py4j/tests/memory_leak_test.py": [
        "py4j.clientserver.JavaParameters",
        "contextlib.contextmanager",
        "unittest",
        "py4j.clientserver.PythonParameters",
        "subprocess",
        "py4j.tests.instrumented.InstrJavaGateway",
        "gc",
        "py4j.tests.instrumented.MEMORY_HOOKS",
        "py4j.tests.instrumented.register_creation",
        "py4j.tests.instrumented.FINALIZED",
        "py4j.tests.instrumented.InstrClientServer",
        "py4j.tests.py4j_callback_recursive_example.HelloState",
        "py4j.tests.instrumented.InstrumentedPythonPing",
        "py4j.clientserver.ClientServer",
        "py4j.tests.instrumented.CREATED",
        "py4j.java_gateway.DEFAULT_PORT",
        "multiprocessing.Process",
        "py4j.tests.java_gateway_test.PY4J_JAVA_PATH",
        "py4j.java_gateway.DEFAULT_PYTHON_PROXY_PORT",
        "py4j.java_gateway.JavaGateway",
        "py4j.tests.java_gateway_test.check_connection",
        "py4j.tests.java_gateway_test.sleep",
        "py4j.java_gateway.GatewayParameters",
        "py4j.java_gateway.CallbackServerParameters"
    ],
    "/tmp/py4j/py4j/tests/multithreadtest.py": [
        "py4j.tests.java_gateway_test.start_example_app_process",
        "threading.Thread",
        "__future__.unicode_literals",
        "unittest",
        "__future__.absolute_import",
        "py4j.java_gateway.JavaGateway",
        "py4j.compat.range",
        "py4j.tests.java_gateway_test.sleep"
    ],
    "/tmp/py4j/py4j/tests/py4j_callback_example.py": [
        "py4j.java_gateway.JavaGateway",
        "py4j.java_gateway.CallbackServerParameters"
    ],
    "/tmp/py4j/py4j/tests/py4j_callback_example2.py": [
        "py4j.java_gateway.JavaGateway"
    ],
    "/tmp/py4j/py4j/tests/py4j_callback_listener_example.py": [
        "py4j.java_gateway.JavaGateway",
        "py4j.java_gateway.CallbackServerParameters"
    ],
    "/tmp/py4j/py4j/tests/py4j_callback_recursive_example.py": [],
    "/tmp/py4j/py4j/tests/py4j_example.py": [
        "py4j.java_gateway.JavaGateway"
    ],
    "/tmp/py4j/py4j/tests/py4j_signals_test.py": [
        "py4j.clientserver.ClientServer",
        "py4j.clientserver.JavaParameters",
        "py4j.java_gateway.CallbackServerParameters",
        "__future__.unicode_literals",
        "unittest",
        "__future__.absolute_import",
        "py4j.java_gateway.pre_server_shutdown",
        "py4j.java_gateway.server_connection_started",
        "py4j.java_gateway.server_stopped",
        "py4j.tests.py4j_callback_recursive_example.HelloState",
        "collections.defaultdict",
        "py4j.tests.client_server_test.clientserver_example_app_process",
        "py4j.java_gateway.server_started",
        "py4j.clientserver.PythonParameters",
        "py4j.java_gateway.server_connection_stopped",
        "py4j.tests.java_callback_test.IHelloImpl",
        "py4j.java_gateway.post_server_shutdown",
        "py4j.java_gateway.JavaGateway",
        "py4j.java_gateway.GatewayParameters",
        "py4j.tests.java_callback_test.gateway_example_app_process"
    ],
    "/tmp/py4j/py4j/tests/signals_test.py": [
        "__future__.unicode_literals",
        "unittest.TestCase",
        "py4j.signals.Signal",
        "__future__.absolute_import"
    ],
    "/tmp/py4j/py4j/version.py": []
}
{
    "/tmp/pyHS100/pyHS100/__init__.py": [
        "__future__.unicode_literals",
        "__future__.absolute_import"
    ],
    "/tmp/pyHS100/pyHS100/protocol.py": [
        "logging",
        "socket",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "json"
    ],
    "/tmp/pyHS100/pyHS100/pyHS100.py": [
        "__future__.absolute_import",
        "pyHS100.protocol.TPLinkSmartHomeProtocol",
        "__future__.unicode_literals",
        "socket",
        "datetime",
        "logging"
    ]
}
{
    "/tmp/pybbox/pybbox/__init__.py": [
        ".bboxConstant.BboxConstant",
        ".bboxApiURL.BboxAPIUrl",
        ".bboxApiCall.BboxApiCall",
        ".bboxAuth.BboxAuth"
    ],
    "/tmp/pybbox/pybbox/bboxApiCall.py": [
        ".bboxConstant.BboxConstant",
        "requests"
    ],
    "/tmp/pybbox/pybbox/bboxApiURL.py": [
        ".bboxConstant.BboxConstant",
        "netaddr"
    ],
    "/tmp/pybbox/pybbox/bboxAuth.py": [
        ".bboxConstant.BboxConstant"
    ],
    "/tmp/pybbox/pybbox/bboxConstant.py": []
}
{
    "/tmp/pychromecast/pychromecast/__init__.py": [
        ".dial.reboot",
        ".dial.DeviceStatus",
        ".dial.CAST_TYPES",
        ".error",
        ".discovery.discover_chromecasts",
        ".dial.CAST_TYPE_CHROMECAST",
        "sys",
        ".config",
        "__future__.print_function",
        "logging",
        ".socket_client",
        ".dial.get_device_status",
        "threading",
        "fnmatch"
    ],
    "/tmp/pychromecast/pychromecast/authority_keys_pb2.py": [
        "google.protobuf.symbol_database",
        "google.protobuf.message",
        "google.protobuf.reflection",
        "sys",
        "google.protobuf.descriptor",
        "google.protobuf.descriptor_pb2"
    ],
    "/tmp/pychromecast/pychromecast/cast_channel_pb2.py": [
        "google.protobuf.message",
        "google.protobuf.descriptor",
        "google.protobuf.symbol_database",
        "google.protobuf.internal.enum_type_wrapper",
        "sys",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.reflection"
    ],
    "/tmp/pychromecast/pychromecast/config.py": [
        "json",
        "requests"
    ],
    "/tmp/pychromecast/pychromecast/controllers/__init__.py": [
        "..error.ControllerNotRegistered",
        "..error.UnsupportedNamespace",
        "logging"
    ],
    "/tmp/pychromecast/pychromecast/controllers/media.py": [
        ".BaseController",
        "collections.namedtuple",
        "..config.APP_MEDIA_RECEIVER"
    ],
    "/tmp/pychromecast/pychromecast/controllers/plex.py": [
        ".BaseController"
    ],
    "/tmp/pychromecast/pychromecast/controllers/youtube.py": [
        ".BaseController"
    ],
    "/tmp/pychromecast/pychromecast/dial.py": [
        "collections.namedtuple",
        "uuid.UUID",
        "six",
        "xml.etree.ElementTree",
        "requests"
    ],
    "/tmp/pychromecast/pychromecast/discovery.py": [
        "uuid.UUID",
        "six",
        "zeroconf.Zeroconf",
        "time",
        "zeroconf.ServiceBrowser"
    ],
    "/tmp/pychromecast/pychromecast/error.py": [],
    "/tmp/pychromecast/pychromecast/logging_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.symbol_database",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.reflection",
        "google.protobuf.message",
        "google.protobuf.internal.enum_type_wrapper",
        "sys"
    ],
    "/tmp/pychromecast/pychromecast/socket_client.py": [
        ".cast_channel_pb2",
        ".dial.CAST_TYPE_GROUP",
        "select",
        ".controllers.BaseController",
        "json",
        ".error.LaunchError",
        ".dial.CAST_TYPE_CHROMECAST",
        "collections.namedtuple",
        ".error.UnsupportedNamespace",
        ".controllers.media.MediaController",
        ".dial.CAST_TYPE_AUDIO",
        "sys",
        "ssl",
        ".error.ChromecastConnectionError",
        ".error.NotConnected",
        "struct.unpack",
        "logging",
        "socket",
        ".error.PyChromecastStopped",
        "threading",
        "time",
        "struct.pack"
    ],
    "/tmp/pychromecast/pychromecast/upnp.py": [
        "logging",
        "socket",
        "urllib.parse",
        "datetime",
        "select"
    ],
    "/tmp/pychromecast/pychromecast/websocket.py": [
        "atexit",
        "ws4py.client.threadedclient.WebSocketClient",
        "json",
        "datetime",
        "logging",
        "socket",
        "weakref",
        "threading",
        ".error",
        "requests"
    ],
    "/tmp/pychromecast/pychromecast/youtube.py": [
        ".get_chromecast",
        ".config.APP_ID",
        ".error.NoChromecastFoundError"
    ]
}
{
    "/tmp/pycmus/pycmus/__init__.py": [],
    "/tmp/pycmus/pycmus/exceptions.py": [],
    "/tmp/pycmus/pycmus/remote.py": [
        "logging",
        "socket",
        "six",
        "time",
        "pycmus.exceptions",
        "os"
    ],
    "/tmp/pycmus/pycmus/tests/__init__.py": []
}
{
    "/tmp/pydispatch/dispatch/__init__.py": [
        "__future__.absolute_import"
    ],
    "/tmp/pydispatch/dispatch/client.py": [
        "socket",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "json",
        "__future__.print_function"
    ],
    "/tmp/pydispatch/dispatch/daemon.py": [
        "__future__.unicode_literals",
        "signal",
        "six",
        "__future__.absolute_import",
        "sys",
        "atexit",
        "time",
        "os",
        "__future__.print_function"
    ],
    "/tmp/pydispatch/dispatch/handler.py": [
        "colorama.Style",
        "traceback",
        "six.moves.socketserver",
        "__future__.unicode_literals",
        "six",
        "__future__.absolute_import",
        "datetime.datetime",
        "sys",
        "json",
        "colorama.Fore",
        "copy.copy",
        "__future__.print_function"
    ],
    "/tmp/pydispatch/dispatch/server.py": [
        "logging.handlers",
        "six.moves.socketserver",
        "warnings",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "sys",
        ".daemon.AbstractDaemon",
        ".handler.Handler",
        "__future__.print_function"
    ]
}
{
    "/tmp/pydub/pydub/__init__.py": [],
    "/tmp/pydub/pydub/audio_segment.py": [
        ".logging_utils.log_conversion",
        ".exceptions.CouldntDecodeError",
        ".utils.audioop",
        ".exceptions.InvalidID3TagVersion",
        "subprocess",
        "array",
        ".utils.get_array_type",
        ".exceptions.TooManyMissingFrames",
        "struct",
        "base64",
        "io.BytesIO",
        "__future__.division",
        ".exceptions.InvalidTag",
        ".exceptions.InvalidDuration",
        "wave",
        "sys",
        "tempfile.TemporaryFile",
        ".utils.ratio_to_db",
        ".exceptions.CouldntEncodeError",
        "os",
        ".exceptions.MissingAudioParameter",
        ".utils.db_to_float",
        ".utils._fd_or_path_or_tempfile",
        ".utils.get_encoder_name",
        "tempfile.NamedTemporaryFile"
    ],
    "/tmp/pydub/pydub/effects.py": [
        ".utils.audioop",
        ".utils.register_pydub_effect",
        "array",
        "math",
        ".exceptions.InvalidDuration",
        "sys",
        ".silence.split_on_silence",
        ".utils.ratio_to_db",
        ".utils.db_to_float",
        ".utils.get_min_max_value",
        ".utils.make_chunks"
    ],
    "/tmp/pydub/pydub/exceptions.py": [],
    "/tmp/pydub/pydub/generators.py": [
        ".utils.get_frame_width",
        "random",
        "itertools",
        ".utils.db_to_float",
        ".audio_segment.AudioSegment",
        "array",
        ".utils.get_array_type",
        "math",
        ".utils.get_min_max_value"
    ],
    "/tmp/pydub/pydub/logging_utils.py": [
        "logging"
    ],
    "/tmp/pydub/pydub/playback.py": [
        "pyaudio",
        ".utils.make_chunks",
        "subprocess",
        ".utils.get_player_name",
        "tempfile.NamedTemporaryFile"
    ],
    "/tmp/pydub/pydub/pyaudioop.py": [
        "__builtin__",
        "ctypes.create_string_buffer",
        "fractions.gcd",
        "math",
        "struct"
    ],
    "/tmp/pydub/pydub/scipy_effects.py": [
        "scipy.signal.butter",
        ".utils.register_pydub_effect",
        "scipy.signal.sosfilt"
    ],
    "/tmp/pydub/pydub/silence.py": [
        ".utils.db_to_float"
    ],
    "/tmp/pydub/pydub/utils.py": [
        ".audio_segment.AudioSegment",
        "math.log",
        "subprocess.PIPE",
        "re",
        "__future__.division",
        "subprocess.Popen",
        "math.ceil",
        "warnings.warn",
        "tempfile.TemporaryFile",
        "sys",
        "os"
    ]
}
{
    "/tmp/pyemby/pyemby/__init__.py": [],
    "/tmp/pyemby/pyemby/constants.py": [],
    "/tmp/pyemby/pyemby/emby.py": [
        "pyemby.constants.DEFAULT_HEADERS",
        "logging",
        "uuid",
        "requests",
        "pyemby.constants.__version__"
    ]
}
{
    "/tmp/pyenvisalink/pyenvisalink/__init__.py": [],
    "/tmp/pyenvisalink/pyenvisalink/alarm_panel.py": [
        "logging",
        "pyenvisalink.DSCClient",
        "pyenvisalink.AlarmState",
        "pyenvisalink.HoneywellClient"
    ],
    "/tmp/pyenvisalink/pyenvisalink/alarm_state.py": [],
    "/tmp/pyenvisalink/pyenvisalink/dsc_client.py": [
        "json",
        "re",
        "pyenvisalink.dsc_envisalinkdefs",
        "logging",
        "asyncio",
        "pyenvisalink.EnvisalinkClient"
    ],
    "/tmp/pyenvisalink/pyenvisalink/dsc_envisalinkdefs.py": [],
    "/tmp/pyenvisalink/pyenvisalink/envisalink_base_client.py": [
        "logging",
        "re",
        "asyncio.async",
        "asyncio"
    ],
    "/tmp/pyenvisalink/pyenvisalink/honeywell_client.py": [
        "json",
        "pyenvisalink.honeywell_envisalinkdefs",
        "re",
        "logging",
        "asyncio",
        "pyenvisalink.EnvisalinkClient"
    ],
    "/tmp/pyenvisalink/pyenvisalink/honeywell_envisalinkdefs.py": [
        "ctypes"
    ],
    "/tmp/pyenvisalink/pyenvisalink/test_harness.py": [
        "signal",
        "pyenvisalink.EnvisalinkAlarmPanel",
        "sys"
    ]
}
{
    "/tmp/pyfttt/pyfttt/__init__.py": [],
    "/tmp/pyfttt/pyfttt/cmd_script.py": [
        "argparse",
        "pyfttt",
        "sys",
        "requests",
        "os"
    ],
    "/tmp/pyfttt/pyfttt/sending.py": [
        "requests"
    ],
    "/tmp/pyfttt/pyfttt/server.py": [
        "pyfttt",
        "urllib.parse.parse_qs",
        "http.server",
        "json"
    ],
    "/tmp/pyfttt/pyfttt/test_server.py": [
        "json",
        "requests"
    ]
}
{
    "/tmp/pygame/pygame/__init__.py": [
        "warnings",
        "warnings",
        "pygame.surface",
        "pygame.version",
        "_winreg",
        "pygame.base",
        "pygame.pixelarray",
        "pygame.overlay",
        "pygame.constants",
        "pygame.rect.Rect"
    ],
    "/tmp/pygame/pygame/_camera_opencv_highgui.py": [
        "opencv.highgui",
        "opencv",
        "pygame.examples.camera",
        "numpy"
    ],
    "/tmp/pygame/pygame/_camera_vidcapture.py": [
        "VideoCapture.vidcap",
        "pygame.examples.camera"
    ],
    "/tmp/pygame/pygame/_dummybackend.py": [],
    "/tmp/pygame/pygame/_numpysndarray.py": [
        "pygame.mixer",
        "numpy"
    ],
    "/tmp/pygame/pygame/_numpysurfarray.py": [
        "pygame.pixelcopy.map_array",
        "pygame.pixelcopy.array_to_surface",
        "numpy.empty",
        "numpy.uint32",
        "numpy",
        "pygame.pixelcopy.make_surface",
        "pygame.pixelcopy.surface_to_array",
        "numpy.array",
        "numpy.ndarray"
    ],
    "/tmp/pygame/pygame/camera.py": [
        "pygame._camera",
        "sys",
        "os",
        "pygame.examples.camera"
    ],
    "/tmp/pygame/pygame/colordict.py": [
        "pygame.compat.unicode_"
    ],
    "/tmp/pygame/pygame/compat.py": [
        "itertools.imap",
        "sys",
        "cStringIO.StringIO"
    ],
    "/tmp/pygame/pygame/cursors.py": [],
    "/tmp/pygame/pygame/docs/__init__.py": [
        "os"
    ],
    "/tmp/pygame/pygame/docs/__main__.py": [
        "urllib.quote",
        "webbrowser",
        "urlparse.urlunparse",
        "os"
    ],
    "/tmp/pygame/pygame/examples/__init__.py": [],
    "/tmp/pygame/pygame/examples/aacircle.py": [
        "pygame.gfxdraw"
    ],
    "/tmp/pygame/pygame/examples/aliens.py": [
        "random",
        "pygame.locals",
        "pygame",
        "os.path"
    ],
    "/tmp/pygame/pygame/examples/arraydemo.py": [
        "numpy.int32",
        "numpy",
        "numpy.uint",
        "pygame.surfarray",
        "pygame",
        "pygame.locals",
        "os"
    ],
    "/tmp/pygame/pygame/examples/blend_fill.py": [
        "pygame",
        "pygame.locals",
        "os"
    ],
    "/tmp/pygame/pygame/examples/blit_blends.py": [
        "os",
        "time",
        "pygame.surfarray",
        "pygame.locals",
        "numpy"
    ],
    "/tmp/pygame/pygame/examples/camera.py": [
        "pygame.locals",
        "pygame.camera"
    ],
    "/tmp/pygame/pygame/examples/chimp.py": [
        "pygame.compat.geterror",
        "pygame",
        "pygame.locals",
        "os"
    ],
    "/tmp/pygame/pygame/examples/cursors.py": [
        "pygame"
    ],
    "/tmp/pygame/pygame/examples/eventlist.py": [
        "pygame"
    ],
    "/tmp/pygame/pygame/examples/fastevents.py": [
        "time",
        "threading.Thread",
        "pygame",
        "pygame"
    ],
    "/tmp/pygame/pygame/examples/fonty.py": [
        "pygame.compat.unicode_",
        "locale",
        "sys",
        "pygame",
        "pygame.locals"
    ],
    "/tmp/pygame/pygame/examples/freetype_misc.py": [
        "pygame.freetype",
        "sys",
        "pygame",
        "pygame.locals",
        "os"
    ],
    "/tmp/pygame/pygame/examples/glcube.py": [
        "OpenGL.GLU",
        "pygame",
        "pygame.locals",
        "OpenGL.GL"
    ],
    "/tmp/pygame/pygame/examples/headless_no_windows_needed.py": [
        "sys",
        "pygame.display",
        "os"
    ],
    "/tmp/pygame/pygame/examples/liquid.py": [
        "pygame",
        "time",
        "pygame.locals",
        "os",
        "math.sin"
    ],
    "/tmp/pygame/pygame/examples/macosx/aliens_app_example/aliens.py": [
        "random",
        "pygame.locals",
        "pygame",
        "os.path"
    ],
    "/tmp/pygame/pygame/examples/macosx/aliens_app_example/setup.py": [
        "distutils.core.setup"
    ],
    "/tmp/pygame/pygame/examples/macosx/macfont.py": [
        "Foundation",
        "pygame.Surface",
        "pygame",
        "pygame.locals",
        "pygame.surfarray.blit_array",
        "AppKit",
        "Numeric",
        "math"
    ],
    "/tmp/pygame/pygame/examples/mask.py": [
        "time",
        "random",
        "sys",
        "pygame.display"
    ],
    "/tmp/pygame/pygame/examples/midi.py": [
        "sets.Set",
        "sys",
        "pygame.midi",
        "pygame.locals",
        "os"
    ],
    "/tmp/pygame/pygame/examples/moveit.py": [
        "pygame",
        "pygame.locals",
        "os"
    ],
    "/tmp/pygame/pygame/examples/oldalien.py": [
        "os.path",
        "random",
        "pygame.locals",
        "pygame"
    ],
    "/tmp/pygame/pygame/examples/overlay.py": [
        "sys",
        "pygame",
        "pygame.compat.xrange_"
    ],
    "/tmp/pygame/pygame/examples/pixelarray.py": [
        "pygame",
        "os",
        "pygame.compat.xrange_"
    ],
    "/tmp/pygame/pygame/examples/playmus.py": [
        "sys",
        "pygame.freetype",
        "pygame.locals",
        "__future__.print_function"
    ],
    "/tmp/pygame/pygame/examples/prevent_display_stretching.py": [
        "os",
        "sys",
        "ctypes",
        "pygame",
        "pygame.compat.raw_input_"
    ],
    "/tmp/pygame/pygame/examples/scaletest.py": [
        "sys",
        "pygame",
        "time"
    ],
    "/tmp/pygame/pygame/examples/scrap_clipboard.py": [
        "pygame.scrap",
        "pygame.compat.as_bytes",
        "pygame",
        "pygame.locals",
        "os"
    ],
    "/tmp/pygame/pygame/examples/scroll.py": [
        "pygame.transform.scale",
        "sys",
        "pygame",
        "pygame.locals",
        "os"
    ],
    "/tmp/pygame/pygame/examples/sound.py": [
        "sys",
        "pygame.time",
        "os.path"
    ],
    "/tmp/pygame/pygame/examples/sound_array_demos.py": [
        "numpy.int32",
        "numpy.int16",
        "pygame.mixer",
        "pygame.sndarray",
        "numpy.zeros",
        "pygame.transform",
        "time",
        "os.path"
    ],
    "/tmp/pygame/pygame/examples/stars.py": [
        "random",
        "pygame",
        "pygame.locals",
        "math"
    ],
    "/tmp/pygame/pygame/examples/testsprite.py": [
        "pygame.compat.xrange_",
        "pygame.locals",
        "psyco",
        "random.randint",
        "pygame.joystick",
        "pygame.sprite",
        "time.time",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/examples/vgrade.py": [
        "numpy",
        "numpy.random",
        "pygame",
        "pygame.locals",
        "os"
    ],
    "/tmp/pygame/pygame/freetype.py": [
        "pygame.compat",
        "pygame.sysfont.SysFont",
        "pygame._freetype.Font",
        "sys"
    ],
    "/tmp/pygame/pygame/ftfont.py": [
        "pygame._freetype.quit",
        "pygame._freetype.get_default_font",
        "pygame.compat.unicode_",
        "pygame.sysfont.SysFont",
        "pygame._freetype.init",
        "pygame.compat.bytes_",
        "pygame._freetype.was_init"
    ],
    "/tmp/pygame/pygame/gp2x/__init__.py": [
        "sys"
    ],
    "/tmp/pygame/pygame/gp2x/constants.py": [],
    "/tmp/pygame/pygame/gp2x/locals.py": [],
    "/tmp/pygame/pygame/locals.py": [
        "pygame.color"
    ],
    "/tmp/pygame/pygame/macosx.py": [
        "pygame.sdlmain_osx",
        "pygame.pkgdata.getResource",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/midi.py": [
        "pygame.pypm",
        "atexit",
        "pygame.locals"
    ],
    "/tmp/pygame/pygame/pkgdata.py": [
        "pygame.compat.get_BytesIO",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/sndarray.py": [
        "pygame._numpysndarray"
    ],
    "/tmp/pygame/pygame/sprite.py": [
        "pygame.mask.from_surface",
        "pygame.time.get_ticks",
        "pygame",
        "pygame.Rect",
        "operator.truth"
    ],
    "/tmp/pygame/pygame/surfarray.py": [
        "pygame._numpysurfarray"
    ],
    "/tmp/pygame/pygame/sysfont.py": [
        "pygame.font",
        "os.path.exists",
        "os.path.splitext",
        "os.path.basename",
        "_winreg",
        "os.path.dirname",
        "pygame.compat.xrange_",
        "sys",
        "subprocess",
        "os.path.join",
        "pygame.compat.PY_MAJOR_VERSION",
        "os"
    ],
    "/tmp/pygame/pygame/tests/__init__.py": [
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/__main__.py": [
        "test.test_utils.test_runner.opt_parser",
        "sys",
        "test.test_utils.run_tests.run_and_exit",
        "os"
    ],
    "/tmp/pygame/pygame/tests/base_test.py": [
        "ctypes",
        "pygame.bufferproxy.BufferProxy",
        "weakref",
        "gc",
        "pygame.bufferproxy.BufferProxy",
        "sys.getrefcount",
        "pygame.bufferproxy.BufferProxy",
        "pygame.bufferproxy.BufferProxy",
        "pygame.bufferproxy.BufferProxy",
        "pygame.bufferproxy.BufferProxy",
        "ctypes",
        "pygame.bufferproxy.BufferProxy",
        "platform",
        "test.test_utils.arrinter",
        "unittest",
        "sys",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/blit_test.py": [
        "unittest",
        "sys",
        "pygame.locals",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/bufferproxy_test.py": [
        "ctypes.string_at",
        "pygame.bufferproxy.get_segcount",
        "pygame.bufferproxy.get_write_buffer",
        "pygame.bufferproxy.get_read_buffer",
        "ctypes.memset",
        "ctypes.addressof",
        "ctypes.string_at",
        "ctypes.sizeof",
        "ctypes.c_byte",
        "weakref",
        "pygame.bufferproxy.BufferProxy",
        "unittest",
        "pygame.compat.as_bytes",
        "sys",
        "re",
        "gc",
        "pygame.BufferError",
        "ctypes",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/camera_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/cdrom_tags.py": [],
    "/tmp/pygame/pygame/tests/cdrom_test.py": [
        "test.test_utils.prompt",
        "unittest",
        "test.test_utils.question",
        "sys",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/color_test.py": [
        "pickle",
        "pygame.tests.test_utils.arrinter",
        "ctypes",
        "ctypes.c_uint8",
        "ctypes.cast",
        "ctypes.POINTER",
        "unittest",
        "operator",
        "pygame.compat.long_",
        "pygame",
        "math",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/compat_test.py": [
        "pygame.compat",
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/cursors_test.py": [
        "pygame",
        "unittest",
        "sys",
        "os",
        "test.test_utils.fixture_path"
    ],
    "/tmp/pygame/pygame/tests/display_test.py": [
        "unittest",
        "sys",
        "os",
        "pygame.transform"
    ],
    "/tmp/pygame/pygame/tests/draw_test.py": [
        "pygame.draw",
        "test.test_utils",
        "unittest",
        "sys",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/event_test.py": [
        "pygame.compat.as_unicode",
        "unittest",
        "sys",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/fastevent_test.py": [
        "pygame.compat.geterror",
        "pygame.fastevent",
        "unittest",
        "pygame.event",
        "sys",
        "os",
        "test.event_test.race_condition_notification",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/font_tags.py": [
        "sys"
    ],
    "/tmp/pygame/pygame/tests/font_test.py": [
        "pygame.compat.as_unicode",
        "pygame.compat.filesystem_errors",
        "unittest",
        "pygame.compat.as_bytes",
        "pygame.compat.xrange_",
        "sys",
        "pygame.font",
        "os",
        "pygame.compat.PY_MAJOR_VERSION",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/freetype_tags.py": [],
    "/tmp/pygame/pygame/tests/freetype_test.py": [
        "sys.getrefcount",
        "unittest",
        "pygame.compat.bytes_",
        "pygame.compat.unicode_",
        "pygame",
        "test.test_utils.arrinter",
        "pygame.compat.unichr_",
        "sys",
        "ctypes",
        "pygame.compat.as_unicode",
        "weakref",
        "gc",
        "os"
    ],
    "/tmp/pygame/pygame/tests/ftfont_tags.py": [],
    "/tmp/pygame/pygame/tests/ftfont_test.py": [
        "test.font_test",
        "unittest",
        "sys",
        "os",
        "pygame.ftfont"
    ],
    "/tmp/pygame/pygame/tests/gfxdraw_test.py": [
        "unittest",
        "sys",
        "pygame.locals",
        "os",
        "pygame.gfxdraw"
    ],
    "/tmp/pygame/pygame/tests/image__save_gl_surface_test.py": [
        "test.test_utils",
        "unittest",
        "sys",
        "pygame.locals",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/image_tags.py": [
        "sys"
    ],
    "/tmp/pygame/pygame/tests/image_test.py": [
        "pygame.Color",
        "pygame.Rect",
        "test.test_utils.example_path",
        "pygame.compat.ord_",
        "test.test_utils.png",
        "tempfile",
        "unittest",
        "pygame.compat.xrange_",
        "sys",
        "array",
        "os",
        "pygame.pkgdata"
    ],
    "/tmp/pygame/pygame/tests/imageext_tags.py": [
        "sys"
    ],
    "/tmp/pygame/pygame/tests/imageext_test.py": [
        "test.test_utils.example_path",
        "pygame.compat.as_unicode",
        "pygame.compat.unicode_",
        "unittest",
        "sys",
        "os.path",
        "pygame.pkgdata"
    ],
    "/tmp/pygame/pygame/tests/joystick_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/key_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/mask_test.py": [
        "unittest",
        "random",
        "sys",
        "pygame.locals",
        "os",
        "pygame.mask"
    ],
    "/tmp/pygame/pygame/tests/math_test.py": [
        "pygame.math",
        "unittest",
        "pygame.math.Vector3",
        "sys",
        "os",
        "pygame.math.Vector2",
        "math"
    ],
    "/tmp/pygame/pygame/tests/midi_tags.py": [],
    "/tmp/pygame/pygame/tests/midi_test.py": [
        "unittest",
        "sys",
        "os",
        "pygame.compat"
    ],
    "/tmp/pygame/pygame/tests/mixer_music_tags.py": [
        "sys"
    ],
    "/tmp/pygame/pygame/tests/mixer_music_test.py": [
        "test.test_utils.example_path",
        "pygame.compat.as_unicode",
        "unittest",
        "sys",
        "pygame.compat.filesystem_encode",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/mixer_tags.py": [
        "sys"
    ],
    "/tmp/pygame/pygame/tests/mixer_test.py": [
        "time",
        "numpy.uint16",
        "numpy.zeros",
        "numpy.uint32",
        "numpy.int32",
        "numpy.int16",
        "numpy.uint8",
        "numpy.int8",
        "numpy.arange",
        "numpy.all",
        "numpy.array",
        "ctypes.py_object",
        "ctypes.c_void_p",
        "ctypes.pythonapi",
        "unittest",
        "pygame.compat.bytes_",
        "pygame.compat.unicode_",
        "pygame.compat.xrange_",
        "pygame",
        "pygame.compat.geterror",
        "sys",
        "test.test_utils.example_path",
        "pygame.compat.as_bytes",
        "pygame.mixer",
        "os"
    ],
    "/tmp/pygame/pygame/tests/mouse_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/overlay_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/pixelarray_test.py": [
        "test.test_utils.arrinter",
        "weakref",
        "unittest",
        "functools.reduce",
        "pygame.compat.xrange_",
        "sys",
        "operator",
        "gc",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/pixelcopy_test.py": [
        "numpy",
        "numpy.dtype",
        "numpy.empty",
        "numpy.dtype",
        "numpy.empty",
        "numpy.int32",
        "numpy.uint8",
        "numpy.alltrue",
        "numpy.zeros",
        "numpy.array",
        "ctypes.cast",
        "ctypes.POINTER",
        "ctypes.c_uint32",
        "ctypes.c_uint8",
        "ctypes.cast",
        "ctypes.POINTER",
        "test.test_utils.arrinter",
        "unittest",
        "pygame.pixelcopy.array_to_surface",
        "sys",
        "pygame.pixelcopy.make_surface",
        "pygame.locals",
        "pygame.pixelcopy.map_array",
        "os",
        "pygame.pixelcopy.surface_to_array",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/rect_test.py": [
        "unittest",
        "pygame.Rect",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/all_ok/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/all_ok/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/all_ok/fake_3_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/all_ok/fake_4_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/all_ok/fake_5_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/all_ok/fake_6_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/all_ok/no_assertions__ret_code_of_1__test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/all_ok/zero_tests_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/everything/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/everything/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/everything/incomplete_todo_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/everything/magic_tag_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/everything/sleep_test.py": [
        "unittest",
        "sys",
        "time",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/exclude/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/exclude/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/exclude/invisible_tag_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/exclude/magic_tag_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/failures1/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/failures1/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/failures1/fake_3_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/failures1/fake_4_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/incomplete/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/incomplete/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/incomplete/fake_3_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/incomplete_todo/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/incomplete_todo/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/incomplete_todo/fake_3_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/infinite_loop/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/infinite_loop/fake_1_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/infinite_loop/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/print_stderr/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/print_stderr/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/print_stderr/fake_3_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/print_stderr/fake_4_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/print_stdout/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/print_stdout/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/print_stdout/fake_3_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/print_stdout/fake_4_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/run_tests__test.py": [
        "subprocess",
        "re",
        "sys",
        "difflib",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/timeout/__init__.py": [],
    "/tmp/pygame/pygame/tests/run_tests__tests/timeout/fake_2_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/run_tests__tests/timeout/sleep_test.py": [
        "unittest",
        "sys",
        "time",
        "os"
    ],
    "/tmp/pygame/pygame/tests/rwobject_test.py": [
        "pygame.compat.bytes_",
        "pygame.encode_file_path",
        "unittest",
        "pygame.compat.as_bytes",
        "pygame.compat.as_unicode",
        "sys",
        "pygame.encode_string",
        "os"
    ],
    "/tmp/pygame/pygame/tests/scrap_tags.py": [
        "sys",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/scrap_test.py": [
        "pygame.event",
        "pygame.locals.K_y",
        "pygame.freetype",
        "pygame.locals.QUIT",
        "pygame.locals.SCRAP_TEXT",
        "pygame.locals.KEYDOWN",
        "pygame.locals.SCRAP_SELECTION",
        "pygame.display",
        "test.test_utils.trunk_relative_path",
        "unittest",
        "pygame.compat.as_bytes",
        "sys",
        "os",
        "pygame.scrap",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/sndarray_tags.py": [],
    "/tmp/pygame/pygame/tests/sndarray_test.py": [
        "numpy.int16",
        "unittest",
        "pygame.compat.as_bytes",
        "numpy.uint8",
        "sys",
        "numpy.alltrue",
        "numpy.uint16",
        "numpy.array",
        "os",
        "numpy.int8",
        "pygame.sndarray"
    ],
    "/tmp/pygame/pygame/tests/sprite_test.py": [
        "weakref",
        "gc",
        "pygame.sprite",
        "pygame",
        "unittest",
        "sys",
        "os",
        "test.test_utils.unordered_equality"
    ],
    "/tmp/pygame/pygame/tests/surface_test.py": [
        "pygame.bufferproxy.get_segcount",
        "pygame.bufferproxy.get_write_buffer",
        "pygame.bufferproxy.get_segcount",
        "pygame.bufferproxy.get_write_buffer",
        "pygame.bufferproxy.BufferProxy",
        "unittest",
        "gc",
        "pygame.locals",
        "pygame.tests.test_utils.arrinter",
        "pygame.compat.xrange_",
        "test.test_utils.arrinter",
        "pygame",
        "sys",
        "test.test_utils.example_path",
        "pygame.compat.as_unicode",
        "test.test_utils",
        "pygame.compat.as_bytes",
        "weakref",
        "os"
    ],
    "/tmp/pygame/pygame/tests/surfarray_tags.py": [],
    "/tmp/pygame/pygame/tests/surfarray_test.py": [
        "numpy.uint64",
        "numpy.float64",
        "numpy.rint",
        "unittest",
        "numpy.uint8",
        "numpy.arange",
        "sys",
        "numpy.alltrue",
        "numpy.uint16",
        "pygame.locals",
        "numpy.zeros",
        "numpy.float32",
        "os",
        "numpy.uint32",
        "pygame.surfarray"
    ],
    "/tmp/pygame/pygame/tests/surflock_test.py": [
        "unittest",
        "sys",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/sysfont_test.py": [
        "unittest",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/test_test_.py": [],
    "/tmp/pygame/pygame/tests/test_utils/__init__.py": [
        "tempfile",
        "pygame",
        "sys",
        "os"
    ],
    "/tmp/pygame/pygame/tests/test_utils/arrinter.py": [
        "unittest",
        "ctypes",
        "sys",
        "ctypes"
    ],
    "/tmp/pygame/pygame/tests/test_utils/async_sub.py": [
        "win32pipe.PeekNamedPipe",
        "unittest",
        "subprocess",
        "ctypes.wintypes.DWORD",
        "msvcrt",
        "select",
        "signal.SIGKILL",
        "errno",
        "platform",
        "win32file.ReadFile",
        "sys",
        "win32file.WriteFile",
        "ctypes",
        "signal.SIGTERM",
        "win32api.TerminateProcess",
        "time",
        "os"
    ],
    "/tmp/pygame/pygame/tests/test_utils/buftools.py": [
        "ctypes.addressof",
        "ctypes.cast",
        "ctypes.POINTER",
        "ctypes.c_ssize_t",
        "pygame.newbuffer.PyBUF_F_CONTIGUOUS",
        "unittest",
        "functools.reduce",
        "operator",
        "pygame.newbuffer.PyBUF_RECORDS_RO",
        "pygame.newbuffer.PyBUF_WRITABLE",
        "pygame.newbuffer.PyBUF_STRIDES",
        "pygame.newbuffer.PyBUF_C_CONTIGUOUS",
        "pygame.newbuffer.PyBUF_FORMAT",
        "pygame.newbuffer.PyBUF_CONTIG",
        "pygame.newbuffer",
        "pygame.newbuffer.PyBUF_RECORDS",
        "pygame.newbuffer.PyBUF_STRIDED",
        "pygame.newbuffer.PyBUF_ND",
        "pygame.newbuffer.PyBUF_FULL",
        "pygame.newbuffer.PyBUF_SIMPLE",
        "ctypes",
        "pygame.newbuffer.PyBUF_ANY_CONTIGUOUS",
        "pygame.newbuffer.PyBUF_STRIDED_RO"
    ],
    "/tmp/pygame/pygame/tests/test_utils/endian.py": [
        "struct"
    ],
    "/tmp/pygame/pygame/tests/test_utils/png.py": [
        "os",
        "os",
        "inspect",
        "hashlib",
        "itertools",
        "numpy",
        "numpy",
        "numpy",
        "numpy",
        "re",
        "binascii",
        "binascii",
        "re",
        "optparse.OptionParser",
        "zlib",
        "unittest",
        "pygame.compat.imap_",
        "operator",
        "pygame.compat.next_",
        "struct",
        "__future__.generators",
        "math",
        "pygame.compat.geterror",
        "warnings",
        "sys",
        "StringIO.StringIO"
    ],
    "/tmp/pygame/pygame/tests/test_utils/run_tests.py": [
        "test.test_utils.async_sub.proc_in_time_or_kill",
        "random",
        "test.test_utils.test_runner.TEST_RESULTS_START",
        "test.test_utils.test_runner.prepare_test_env",
        "test.test_utils.test_runner.combine_results",
        "shutil",
        "test.test_utils.test_runner.get_test_results",
        "tempfile",
        "re",
        "test.test_utils.import_submodule",
        "pygame.threads",
        "sys",
        "test.test_utils.test_runner.run_test",
        "pprint.pformat",
        "time",
        "os"
    ],
    "/tmp/pygame/pygame/tests/test_utils/test_machinery.py": [
        "inspect",
        "unittest",
        "random",
        "re",
        ".import_submodule"
    ],
    "/tmp/pygame/pygame/tests/test_utils/test_runner.py": [
        "unittest",
        "re",
        "optparse",
        "sys",
        ".test_machinery.PygameTestLoader",
        "io",
        "pprint.pformat",
        "os"
    ],
    "/tmp/pygame/pygame/tests/threads_test.py": [
        "pygame.threads.tmap",
        "unittest",
        "pygame.threads.STOP",
        "pygame.compat.xrange_",
        "pygame.threads.Empty",
        "sys",
        "pygame.threads.WorkerQueue",
        "pygame.threads",
        "os",
        "pygame.threads.FuncResult"
    ],
    "/tmp/pygame/pygame/tests/time_test.py": [
        "unittest",
        "sys",
        "os",
        "pygame"
    ],
    "/tmp/pygame/pygame/tests/transform_test.py": [
        "test.test_utils",
        "unittest",
        "sys",
        "pygame.locals",
        "os",
        "pygame.transform"
    ],
    "/tmp/pygame/pygame/threads/Py25Queue.py": [
        "dummy_threading",
        "collections.deque",
        "time.time"
    ],
    "/tmp/pygame/pygame/threads/__init__.py": [
        "pygame.transform",
        "time",
        "Queue.Queue",
        "pygame.compat.geterror",
        "sys",
        "threading"
    ],
    "/tmp/pygame/pygame/version.py": []
}
{
    "/tmp/pyglet/pyglet/__init__.py": [
        "ctypes",
        "platform",
        "struct",
        "pyglet.lib",
        "sys",
        "ctypes",
        "os"
    ],
    "/tmp/pyglet/pyglet/app/__init__.py": [
        "weakref",
        "pyglet.compat_platform",
        "pyglet.options",
        "pyglet.app.base.EventLoop",
        "pyglet.app.xlib.XlibEventLoop",
        "sys"
    ],
    "/tmp/pyglet/pyglet/app/base.py": [
        "pyglet.window.Window",
        "queue",
        "pyglet.clock",
        "pyglet.app",
        "sys",
        "threading",
        "pyglet.event"
    ],
    "/tmp/pyglet/pyglet/app/carbon.py": [
        "pyglet.app.base.PlatformEventLoop",
        "pyglet.libs.darwin",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/app/cocoa.py": [
        "pyglet.app.base.PlatformEventLoop",
        "pyglet.libs.darwin.cocoapy"
    ],
    "/tmp/pyglet/pyglet/app/win32.py": [
        "pyglet.libs.win32.constants",
        "pyglet.libs.win32.types",
        ".base.PlatformEventLoop",
        "pyglet.libs.win32._kernel32",
        "ctypes",
        "pyglet.libs.win32._user32",
        "pyglet.libs.win32.constants",
        "pyglet.libs.win32.types"
    ],
    "/tmp/pyglet/pyglet/app/xlib.py": [
        "pyglet.app.base.PlatformEventLoop",
        "threading",
        "pyglet.compat.asbytes",
        "os",
        "pyglet.app",
        "select"
    ],
    "/tmp/pyglet/pyglet/canvas/__init__.py": [
        "pyglet.app.displays",
        "pyglet.options",
        "pyglet.compat_platform",
        "sys",
        "pyglet.canvas.xlib.XlibDisplay"
    ],
    "/tmp/pyglet/pyglet/canvas/base.py": [
        "pyglet.app",
        "pyglet.window",
        "pyglet.gl"
    ],
    "/tmp/pyglet/pyglet/canvas/carbon.py": [
        "MacOS",
        ".base.Canvas",
        "pyglet.libs.darwin._oscheck",
        ".base.ScreenMode",
        "pyglet.app",
        ".base.Display",
        "pyglet.libs.darwin",
        ".base.Screen"
    ],
    "/tmp/pyglet/pyglet/canvas/cocoa.py": [
        "pyglet.libs.darwin.cocoapy",
        ".base.Canvas",
        ".base.ScreenMode",
        "ctypes",
        ".base.Screen",
        ".base.Display"
    ],
    "/tmp/pyglet/pyglet/canvas/win32.py": [
        ".base.Canvas",
        ".base.ScreenMode",
        "pyglet.libs.win32.constants",
        ".base.Screen",
        "pyglet.libs.win32.types",
        "pyglet.libs.win32._user32",
        ".base.Display"
    ],
    "/tmp/pyglet/pyglet/canvas/xlib.py": [
        "pyglet",
        "traceback",
        ".base.Canvas",
        "pyglet.libs.x11.xlib",
        "pyglet.app",
        "pyglet.app.xlib.XlibSelectDevice",
        "ctypes",
        ".base.ScreenMode",
        ".xlib_vidmoderestore",
        "pyglet.libs.x11.xinerama",
        "pyglet.libs.x11.xf86vmode",
        "ctypes",
        ".base.Display",
        "pyglet.libs.x11.xsync",
        ".base.Screen"
    ],
    "/tmp/pyglet/pyglet/canvas/xlib_vidmoderestore.py": [
        "struct",
        "pyglet.libs.x11.xlib",
        "signal",
        "threading",
        "ctypes",
        "os",
        "pyglet.libs.x11.xf86vmode",
        "pyglet.compat.asbytes"
    ],
    "/tmp/pyglet/pyglet/clock.py": [
        "pyglet.font.load",
        "pyglet.font",
        "sys",
        "getopt",
        "pyglet.compat_platform",
        "pyglet.lib",
        "ctypes",
        "time"
    ],
    "/tmp/pyglet/pyglet/com.py": [
        "sys",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/compat.py": [
        "sys",
        "itertools",
        "io"
    ],
    "/tmp/pyglet/pyglet/event.py": [
        "inspect"
    ],
    "/tmp/pyglet/pyglet/extlibs/__init__.py": [],
    "/tmp/pyglet/pyglet/extlibs/png.py": [
        "msvcrt",
        "os",
        "optparse.OptionParser",
        "zlib",
        "sys",
        "functools.reduce",
        "operator",
        "warnings",
        "math",
        "struct"
    ],
    "/tmp/pyglet/pyglet/font/__init__.py": [
        "pyglet.font.quartz.QuartzFont",
        "pyglet",
        "pyglet.gl",
        "pyglet.font.win32.Win32Font",
        "pyglet.font.freetype.FreeTypeFont",
        "pyglet.gl",
        "sys",
        "pyglet.font.carbon.CarbonFont",
        "pyglet.font.win32.GDIPlusFont",
        "weakref",
        "os"
    ],
    "/tmp/pyglet/pyglet/font/base.py": [
        "unicodedata",
        "pyglet.image",
        "pyglet.gl"
    ],
    "/tmp/pyglet/pyglet/font/carbon.py": [
        "pyglet.libs.darwin._oscheck",
        "pyglet.image",
        "math",
        "ctypes",
        "pyglet.libs.darwin",
        "pyglet.font.base",
        "sys.byteorder"
    ],
    "/tmp/pyglet/pyglet/font/fontconfig.py": [
        "collections.OrderedDict",
        "pyglet.lib",
        "ctypes",
        "pyglet.compat.asbytes",
        "pyglet.compat.asstr",
        "pyglet.font.base.FontException"
    ],
    "/tmp/pyglet/pyglet/font/freetype.py": [
        "pyglet.font.fontconfig.get_fontconfig",
        "pyglet.image",
        "pyglet.compat.asbytes",
        "pyglet.font.freetype_lib",
        "pyglet.font.base",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/font/freetype_lib.py": [
        "ctypes",
        ".base.FontException",
        "pyglet.lib"
    ],
    "/tmp/pyglet/pyglet/font/quartz.py": [
        "pyglet.libs.darwin.cocoapy",
        "pyglet.font.base",
        "pyglet.image",
        "math"
    ],
    "/tmp/pyglet/pyglet/font/ttf.py": [
        "struct",
        "mmap",
        "codecs",
        "os"
    ],
    "/tmp/pyglet/pyglet/font/win32.py": [
        "os",
        "pyglet.libs.win32._gdi32",
        "pyglet.libs.win32._kernel32",
        "pyglet.image.codecs.gdiplus.BitmapData",
        "pyglet.libs.win32.types",
        "pyglet.image",
        "ctypes",
        "pyglet.libs.win32._user32",
        "pyglet.compat.asbytes",
        "pyglet.image.codecs.gdiplus.PixelFormat32bppARGB",
        "pyglet.image.codecs.gdiplus.gdiplus",
        "pyglet.font.base",
        "ctypes",
        "pyglet.font.win32query",
        "sys.byteorder",
        "pyglet.libs.win32.constants",
        "pyglet.image.codecs.gdiplus.Rect",
        "math",
        "pyglet.image.codecs.gdiplus.ImageLockModeRead"
    ],
    "/tmp/pyglet/pyglet/font/win32query.py": [
        "sys",
        "ctypes",
        "ctypes.wintypes"
    ],
    "/tmp/pyglet/pyglet/gl/__init__.py": [
        "pyglet.app",
        "pyglet.window.Window",
        "pyglet",
        "pyglet.compat_platform",
        "pyglet.gl.glu",
        "pyglet",
        "pyglet.gl.glext_arb",
        "sys",
        "pyglet.gl.gl"
    ],
    "/tmp/pyglet/pyglet/gl/agl.py": [
        "ctypes",
        "pyglet.gl.lib.link_AGL"
    ],
    "/tmp/pyglet/pyglet/gl/base.py": [
        "pprint",
        "pyglet.compat_platform",
        "pyglet.gl.glu_info",
        "pyglet.gl.gl_info",
        "pyglet.gl"
    ],
    "/tmp/pyglet/pyglet/gl/carbon.py": [
        "pyglet.canvas.carbon.CarbonFullScreenCanvas",
        "pyglet.gl.gl",
        ".base.CanvasConfig",
        "pyglet.gl.agl",
        "pyglet.gl.ContextException",
        "pyglet.libs.darwin",
        ".base.Context",
        ".base.Config",
        "pyglet.canvas.carbon.CarbonCanvas"
    ],
    "/tmp/pyglet/pyglet/gl/cocoa.py": [
        "pyglet.canvas.cocoa.CocoaCanvas",
        "pyglet.libs.darwin.cocoapy",
        "pyglet.gl.base.CanvasConfig",
        "pyglet.gl.base.Context",
        "pyglet.gl.base.Config"
    ],
    "/tmp/pyglet/pyglet/gl/gl.py": [
        "pyglet.gl.lib.link_GL",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/gl/gl_info.py": [
        "pyglet.gl.glext_arb.GL_NUM_EXTENSIONS",
        "pyglet.gl.glext_arb.glGetStringi",
        "pyglet.compat.asstr",
        "warnings",
        "ctypes",
        "pyglet.gl.gl"
    ],
    "/tmp/pyglet/pyglet/gl/glext_arb.py": [
        "pyglet.gl.lib.link_GL",
        "ctypes",
        "pyglet.gl.lib.c_ptrdiff_t"
    ],
    "/tmp/pyglet/pyglet/gl/glext_nv.py": [
        "pyglet.gl.lib.link_GL",
        "ctypes",
        "pyglet.gl.lib.c_ptrdiff_t"
    ],
    "/tmp/pyglet/pyglet/gl/glu.py": [
        "ctypes",
        "pyglet.gl.lib.link_GLU"
    ],
    "/tmp/pyglet/pyglet/gl/glu_info.py": [
        "pyglet.compat.asstr",
        "warnings",
        "pyglet.gl.glu",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/gl/glx.py": [
        "pyglet.gl.lib.c_void",
        "pyglet.libs.x11.xlib",
        "ctypes",
        "pyglet.gl.lib.link_GLX"
    ],
    "/tmp/pyglet/pyglet/gl/glx_info.py": [
        "pyglet.compat.asstr",
        "ctypes",
        "pyglet.gl.glx"
    ],
    "/tmp/pyglet/pyglet/gl/glxext_arb.py": [
        "pyglet.gl.glx",
        "pyglet.gl.lib.link_GLX",
        "ctypes",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/gl/glxext_mesa.py": [
        "pyglet.gl.lib.link_GLX",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/gl/glxext_nv.py": [
        "pyglet.gl.glx",
        "pyglet.gl.lib.link_GLX",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/gl/lib.py": [
        "pyglet.gl",
        "pyglet.gl",
        "pyglet.gl",
        "pyglet",
        "pyglet.gl.lib_wgl.link_WGL",
        "pyglet.gl.lib_glx.link_GLX",
        "pyglet.gl.lib_agl.link_AGL",
        "pyglet.gl.lib_glx.link_GLU",
        "ctypes",
        "pyglet.gl.lib_glx.link_GL"
    ],
    "/tmp/pyglet/pyglet/gl/lib_agl.py": [
        "pyglet.gl.lib.decorate_function",
        "pyglet.gl.lib.missing_function",
        "pyglet.lib"
    ],
    "/tmp/pyglet/pyglet/gl/lib_glx.py": [
        "pyglet.gl.lib.decorate_function",
        "ctypes",
        "pyglet.gl.lib.missing_function",
        "pyglet.lib",
        "pyglet.compat.asbytes"
    ],
    "/tmp/pyglet/pyglet/gl/lib_wgl.py": [
        "pyglet.gl.current_context",
        "pyglet.gl.gl_info",
        "pyglet.gl.gl_info",
        "pyglet.gl.lib.decorate_function",
        "ctypes",
        "pyglet.gl.lib.missing_function",
        "ctypes",
        "pyglet",
        "pyglet.lib._TraceLibrary",
        "pyglet.compat.asbytes"
    ],
    "/tmp/pyglet/pyglet/gl/wgl.py": [
        "ctypes",
        "pyglet.gl.lib.link_WGL"
    ],
    "/tmp/pyglet/pyglet/gl/wgl_info.py": [
        "pyglet.compat.asstr",
        "pyglet.gl.lib.MissingFunctionException",
        "pyglet.gl.wgl",
        "warnings",
        "ctypes",
        "pyglet.gl.wglext_arb",
        "pyglet.gl.gl_info",
        "pyglet.gl.gl"
    ],
    "/tmp/pyglet/pyglet/gl/wglext_arb.py": [
        "pyglet.gl.lib.c_void",
        "pyglet.gl.lib.link_WGL",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/gl/wglext_nv.py": [
        "pyglet.gl.lib.c_void",
        "pyglet.gl.lib.link_WGL",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/gl/win32.py": [
        "pyglet.gl.wgl_info",
        "pyglet.libs.win32.constants",
        "pyglet.gl.wgl",
        "pyglet.libs.win32.types",
        ".base.CanvasConfig",
        "pyglet.gl.wglext_arb",
        "pyglet.canvas.win32.Win32Canvas",
        ".base.Context",
        "pyglet.gl.gl_info",
        "pyglet.gl",
        ".base.Config",
        "pyglet.libs.win32._gdi32"
    ],
    "/tmp/pyglet/pyglet/gl/xlib.py": [
        "pyglet.gl",
        "pyglet.gl.glx_info",
        "ctypes",
        "pyglet.canvas.xlib.XlibCanvas",
        "pyglet.gl.glx",
        ".base.CanvasConfig",
        ".base.Context",
        ".base.Config",
        "pyglet.gl.glxext_arb",
        "pyglet.gl.glxext_mesa"
    ],
    "/tmp/pyglet/pyglet/graphics/__init__.py": [
        "pyglet.graphics.vertexattribute",
        "pyglet.gl",
        "ctypes",
        "pyglet.graphics.vertexdomain",
        "pyglet.graphics.vertexbuffer",
        "pyglet",
        "pyglet.gl"
    ],
    "/tmp/pyglet/pyglet/graphics/allocation.py": [],
    "/tmp/pyglet/pyglet/graphics/vertexattribute.py": [
        "re",
        "pyglet.gl",
        "pyglet.graphics.vertexbuffer",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/graphics/vertexbuffer.py": [
        "pyglet.gl",
        "pyglet.gl",
        "sys",
        "pyglet.gl",
        "ctypes",
        "pyglet"
    ],
    "/tmp/pyglet/pyglet/graphics/vertexdomain.py": [
        "pyglet.graphics.vertexattribute",
        "pyglet.graphics.vertexbuffer",
        "pyglet.gl",
        "pyglet.graphics.allocation",
        "re",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/image/__init__.py": [
        "pyglet.gl.gl_info",
        "pyglet.gl",
        "pyglet.gl",
        "ctypes",
        "re",
        "pyglet.window",
        "pyglet.compat.BytesIO",
        "pyglet.compat.bytes_type",
        "warnings",
        "pyglet.image.codecs",
        "sys",
        "weakref",
        "pyglet.compat.asbytes"
    ],
    "/tmp/pyglet/pyglet/image/atlas.py": [
        "pyglet"
    ],
    "/tmp/pyglet/pyglet/image/codecs/__init__.py": [
        "pyglet.image.codecs.dds",
        "pyglet.options",
        "pyglet.compat_platform",
        "os.path"
    ],
    "/tmp/pyglet/pyglet/image/codecs/bmp.py": [
        "pyglet.image.codecs.ImageDecoder",
        "pyglet.image.ImageData",
        "ctypes",
        "pyglet.image.codecs.ImageDecodeException"
    ],
    "/tmp/pyglet/pyglet/image/codecs/dds.py": [
        "pyglet.image.codecs",
        "struct",
        "ctypes",
        "pyglet.gl",
        "pyglet.image.CompressedImageData",
        "pyglet.compat.izip_longest",
        "pyglet.image.codecs.s3tc"
    ],
    "/tmp/pyglet/pyglet/image/codecs/gdiplus.py": [
        "pyglet.com.IUnknown",
        "pyglet.libs.win32._kernel32",
        "ctypes",
        "pyglet.gl",
        "pyglet.image.codecs",
        "pyglet.image",
        "pyglet.libs.win32.types",
        "pyglet.libs.win32.constants"
    ],
    "/tmp/pyglet/pyglet/image/codecs/gdkpixbuf2.py": [
        "pyglet.window",
        "pyglet.gl",
        "ctypes",
        "pyglet.image.codecs.gif",
        "pyglet.image.codecs",
        "pyglet.image"
    ],
    "/tmp/pyglet/pyglet/image/codecs/gif.py": [
        "pyglet.image.codecs.ImageDecodeException",
        "struct"
    ],
    "/tmp/pyglet/pyglet/image/codecs/pil.py": [
        "PIL.Image",
        "pyglet.gl",
        "pyglet.image.codecs",
        "pyglet.image",
        "os.path"
    ],
    "/tmp/pyglet/pyglet/image/codecs/png.py": [
        "pyglet.extlibs.png",
        "pyglet.gl",
        "itertools",
        "pyglet.image.codecs",
        "pyglet.image",
        "array"
    ],
    "/tmp/pyglet/pyglet/image/codecs/quartz.py": [
        "pyglet.image.AnimationFrame",
        "pyglet.image.ImageData",
        "pyglet.libs.darwin.cocoapy",
        "pyglet.image.Animation",
        "pyglet.image.codecs"
    ],
    "/tmp/pyglet/pyglet/image/codecs/quicktime.py": [
        "pyglet.window.carbon._oscheck",
        "ctypes",
        "pyglet.gl",
        "pyglet.image.codecs",
        "pyglet.image",
        "pyglet.libs.darwin.types",
        "pyglet.window.carbon.quicktime",
        "sys",
        "pyglet.window.carbon.carbon",
        "pyglet.libs.darwin.constants._name"
    ],
    "/tmp/pyglet/pyglet/image/codecs/s3tc.py": [
        "pyglet.image.AbstractImage",
        "pyglet.gl",
        "pyglet.image.Texture",
        "re",
        "ctypes",
        "pyglet.gl.gl_info"
    ],
    "/tmp/pyglet/pyglet/info.py": [
        "sys",
        "objc.__version__",
        "os",
        "pyglet",
        "pyglet.window",
        "pyglet.gl.gl_info",
        "pyglet.gl.glu_info",
        "pyglet",
        "pyglet.gl.glx_info",
        "pyglet.media",
        "pyglet.media.avbin",
        "pyglet.media.drivers.openal",
        "pyglet.input.wintab",
        "traceback"
    ],
    "/tmp/pyglet/pyglet/input/__init__.py": [
        "pyglet.compat_platform",
        "sys",
        ".x11_xinput.get_devices",
        ".evdev.get_devices",
        "pyglet.options"
    ],
    "/tmp/pyglet/pyglet/input/base.py": [
        "pyglet.event.EventDispatcher",
        "sys"
    ],
    "/tmp/pyglet/pyglet/input/carbon_hid.py": [
        "pyglet.libs.darwin.constants",
        "pyglet",
        "ctypes",
        ".base.RelativeAxis",
        ".base.AbsoluteAxis",
        "pyglet.libs.darwin.carbon",
        ".base.Device",
        ".base.Joystick",
        "pyglet.libs.darwin.create_cfstring",
        ".base.AppleRemote",
        ".base.DeviceExclusiveException",
        "pyglet.libs.darwin._oscheck",
        ".base.Button"
    ],
    "/tmp/pyglet/pyglet/input/carbon_tablet.py": [
        "pyglet.libs.darwin._oscheck",
        "pyglet.input.base.Tablet",
        "pyglet.input.base.TabletCanvas",
        "pyglet.window.carbon.CarbonEventHandler",
        "pyglet.libs.darwin",
        "ctypes",
        "pyglet.input.base.TabletCursor"
    ],
    "/tmp/pyglet/pyglet/input/darwin_hid.py": [
        ".base.AbsoluteAxis",
        "pyglet.libs.darwin.cocoapy",
        ".base.Button",
        "sys",
        ".base.Device",
        ".base.Joystick",
        ".base.AppleRemote",
        ".base.RelativeAxis"
    ],
    "/tmp/pyglet/pyglet/input/directinput.py": [
        "pyglet.libs.win32",
        "pyglet.libs.win32._kernel32",
        "pyglet.input.base",
        "ctypes",
        "pyglet",
        "pyglet.libs.win32.dinput"
    ],
    "/tmp/pyglet/pyglet/input/evdev.py": [
        ".base.AbsoluteAxis",
        ".evdev_constants._rel_raw_names",
        ".evdev_constants._key_raw_names",
        ".evdev_constants",
        "pyglet.app.xlib.XlibSelectDevice",
        "pyglet",
        ".base.DeviceOpenException",
        "errno",
        ".base.Device",
        ".base.Button",
        ".evdev_constants._abs_raw_names",
        "ctypes",
        ".base.Joystick",
        ".base.RelativeAxis",
        "os"
    ],
    "/tmp/pyglet/pyglet/input/evdev_constants.py": [],
    "/tmp/pyglet/pyglet/input/wintab.py": [
        "pyglet.input.base.Tablet",
        "pyglet.input.base.TabletCanvas",
        "pyglet",
        "pyglet.input.base.DeviceOpenException",
        "pyglet.libs.win32.libwintab",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/input/x11_xinput.py": [
        "pyglet.input.base.AbsoluteAxis",
        "pyglet.libs.x11.xinput",
        "pyglet.compat.asstr",
        "pyglet.libs.x11.xlib",
        "pyglet.input.base.Button",
        "ctypes",
        "pyglet",
        "pyglet.input.base.Device",
        "pyglet.input.base.DeviceOpenException",
        "pyglet.input.base.RelativeAxis"
    ],
    "/tmp/pyglet/pyglet/input/x11_xinput_tablet.py": [
        "pyglet.libs.x11.xinput",
        "pyglet.input.x11_xinput.XInputWindowEventDispatcher",
        "pyglet.input.base.Tablet",
        "pyglet.input.base.TabletCanvas",
        "pyglet.input.x11_xinput.DeviceResponder",
        "pyglet.input.base.TabletCursor",
        "pyglet.input.base.DeviceOpenException",
        "pyglet.input.x11_xinput.get_devices"
    ],
    "/tmp/pyglet/pyglet/lib.py": [
        "sys",
        "re",
        "ctypes.util",
        "pyglet",
        "os"
    ],
    "/tmp/pyglet/pyglet/libs/__init__.py": [],
    "/tmp/pyglet/pyglet/libs/darwin/__init__.py": [
        ".constants",
        ".types",
        ".cocoapy",
        "pyglet"
    ],
    "/tmp/pyglet/pyglet/libs/darwin/cocoapy/__init__.py": [],
    "/tmp/pyglet/pyglet/libs/darwin/cocoapy/cocoalibs.py": [
        "ctypes.util",
        "ctypes",
        ".cocoatypes",
        ".runtime.ObjCInstance"
    ],
    "/tmp/pyglet/pyglet/libs/darwin/cocoapy/cocoatypes.py": [
        "struct",
        "ctypes",
        "platform"
    ],
    "/tmp/pyglet/pyglet/libs/darwin/cocoapy/runtime.py": [
        ".cocoalibs.cfstring_to_string",
        ".cocoatypes",
        "struct",
        "ctypes",
        "platform",
        "ctypes.util"
    ],
    "/tmp/pyglet/pyglet/libs/darwin/constants.py": [],
    "/tmp/pyglet/pyglet/libs/darwin/quartzkey.py": [
        "pyglet.window.key"
    ],
    "/tmp/pyglet/pyglet/libs/darwin/types.py": [
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/libs/win32/__init__.py": [
        ".constants",
        "traceback",
        "struct",
        "ctypes",
        ".types",
        "pyglet"
    ],
    "/tmp/pyglet/pyglet/libs/win32/constants.py": [],
    "/tmp/pyglet/pyglet/libs/win32/dinput.py": [
        "ctypes",
        "pyglet.com"
    ],
    "/tmp/pyglet/pyglet/libs/win32/libwintab.py": [
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/libs/win32/types.py": [
        "ctypes",
        "ctypes.wintypes"
    ],
    "/tmp/pyglet/pyglet/libs/win32/winkey.py": [
        ".constants",
        "pyglet.window.key"
    ],
    "/tmp/pyglet/pyglet/libs/x11/__init__.py": [],
    "/tmp/pyglet/pyglet/libs/x11/cursorfont.py": [],
    "/tmp/pyglet/pyglet/libs/x11/xf86vmode.py": [
        "pyglet.libs.x11.xlib",
        "ctypes",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/libs/x11/xinerama.py": [
        "ctypes",
        "ctypes",
        "pyglet.libs.x11.xlib"
    ],
    "/tmp/pyglet/pyglet/libs/x11/xinput.py": [
        "pyglet.libs.x11.xlib",
        "ctypes",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/libs/x11/xlib.py": [
        "pyglet.lib",
        "ctypes",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/libs/x11/xsync.py": [
        ".xlib",
        "pyglet.lib",
        "ctypes",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/media/__init__.py": [
        "pyglet.image.Animation",
        "pyglet.image.AnimationFrame",
        ".avbin",
        ".riff",
        ".drivers.openal",
        ".drivers.pulse",
        ".drivers.directsound",
        ".drivers.silent",
        "atexit",
        "pyglet",
        "pyglet.compat.BytesIO",
        "pyglet.compat.bytes_type",
        "warnings",
        "ctypes",
        "threading",
        "time"
    ],
    "/tmp/pyglet/pyglet/media/avbin.py": [
        "pyglet.image",
        "pyglet.media.SourceInfo",
        "pyglet.media.WorkerThread",
        "pyglet.lib",
        "struct",
        "pyglet.media.StreamingSource",
        "pyglet.compat.asbytes",
        "pyglet.compat.asbytes_filename",
        "pyglet.media.MediaFormatException",
        "ctypes",
        "pyglet.media.AudioFormat",
        "pyglet.media.VideoFormat",
        "pyglet.media.AudioData",
        "threading",
        "time"
    ],
    "/tmp/pyglet/pyglet/media/drivers/__init__.py": [],
    "/tmp/pyglet/pyglet/media/drivers/directsound/__init__.py": [
        "pyglet.media.AbstractAudioPlayer",
        "pyglet",
        "pyglet.media.MediaEvent",
        "pyglet.window.win32._user32",
        "pyglet.media.AbstractListener",
        "pyglet.media.MediaException",
        "pyglet.media.MediaThread",
        "ctypes",
        "pyglet.media.AbstractAudioDriver",
        ".lib_dsound",
        "threading",
        "math"
    ],
    "/tmp/pyglet/pyglet/media/drivers/directsound/lib_dsound.py": [
        "ctypes",
        "pyglet.com"
    ],
    "/tmp/pyglet/pyglet/media/drivers/openal/__init__.py": [
        "pyglet.media.AbstractAudioPlayer",
        ".lib_openal",
        "atexit",
        "pyglet",
        "pyglet.media.MediaEvent",
        "threading",
        "pyglet.media.AbstractListener",
        "pyglet.media.MediaException",
        ".lib_alc",
        "ctypes",
        "pyglet.media.AbstractAudioDriver",
        "pyglet.media.MediaThread",
        "time"
    ],
    "/tmp/pyglet/pyglet/media/drivers/openal/lib_alc.py": [
        "pyglet.lib",
        "ctypes",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/media/drivers/openal/lib_openal.py": [
        "pyglet.lib",
        "ctypes",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/media/drivers/pulse/__init__.py": [
        "pyglet.media.AbstractAudioPlayer",
        "pyglet.media.MediaException",
        "sys",
        ".lib_pulseaudio",
        "pyglet.media.AbstractAudioDriver",
        "pyglet.media.AbstractListener",
        "pyglet"
    ],
    "/tmp/pyglet/pyglet/media/drivers/pulse/lib_pulseaudio.py": [
        "pyglet.lib",
        "ctypes",
        "ctypes"
    ],
    "/tmp/pyglet/pyglet/media/drivers/silent.py": [
        "pyglet.media.AbstractAudioPlayer",
        "pyglet.media.MediaThread",
        "pyglet",
        "time",
        "pyglet.media.AbstractAudioDriver",
        "pyglet.media.MediaEvent"
    ],
    "/tmp/pyglet/pyglet/media/procedural.py": [
        "pyglet.media.AudioData",
        "pyglet.media.Source",
        "ctypes",
        "pyglet.media.AudioFormat",
        "os",
        "math"
    ],
    "/tmp/pyglet/pyglet/media/riff.py": [
        "struct",
        "pyglet.media.StreamingSource",
        "pyglet.compat.asbytes",
        "pyglet.media.MediaFormatException",
        "pyglet.media.AudioFormat",
        "pyglet.media.AudioData",
        "pyglet.compat.BytesIO"
    ],
    "/tmp/pyglet/pyglet/resource.py": [
        "urllib.parse",
        "pyglet.font",
        "pyglet.media",
        "pyglet.compat.BytesIO",
        "zipfile",
        "sys",
        "weakref",
        "os",
        "pyglet"
    ],
    "/tmp/pyglet/pyglet/sprite.py": [
        "pyglet.clock",
        "pyglet.image",
        "sys",
        "pyglet.gl",
        "pyglet.graphics",
        "pyglet.event",
        "math"
    ],
    "/tmp/pyglet/pyglet/text/__init__.py": [
        "pyglet.text.formats.plaintext",
        "pyglet.text.formats.attributed",
        "pyglet.text.formats.html",
        "pyglet.text.layout",
        "pyglet",
        "os.path"
    ],
    "/tmp/pyglet/pyglet/text/caret.py": [
        "pyglet.gl",
        "pyglet.clock",
        "re",
        "pyglet.window.key",
        "time",
        "pyglet.event"
    ],
    "/tmp/pyglet/pyglet/text/document.py": [
        "pyglet.font",
        "pyglet.font",
        "pyglet.font",
        "pyglet.text.runlist",
        "sys",
        "re",
        "pyglet.event"
    ],
    "/tmp/pyglet/pyglet/text/formats/__init__.py": [],
    "/tmp/pyglet/pyglet/text/formats/attributed.py": [
        "parser",
        "functools.reduce",
        "re",
        "token",
        "pyglet",
        "operator"
    ],
    "/tmp/pyglet/pyglet/text/formats/html.py": [
        "pyglet.text.formats.structured",
        "re",
        "html.entities",
        "pyglet"
    ],
    "/tmp/pyglet/pyglet/text/formats/plaintext.py": [
        "pyglet"
    ],
    "/tmp/pyglet/pyglet/text/formats/structured.py": [
        "re",
        "pyglet"
    ],
    "/tmp/pyglet/pyglet/text/layout.py": [
        "pyglet.event",
        "re",
        "pyglet.text.runlist",
        "pyglet.gl",
        "sys",
        "pyglet.font.base._grapheme_break",
        "pyglet.graphics"
    ],
    "/tmp/pyglet/pyglet/text/runlist.py": [],
    "/tmp/pyglet/pyglet/window/__init__.py": [
        "pyglet.app",
        "pyglet.app",
        "pyglet.app",
        "time.time",
        "pyglet.text.Label",
        "time.time",
        "pyglet.window.xlib.XlibWindow",
        "sys",
        "pyglet.event.EventDispatcher",
        "pyglet.window.event",
        "pyglet.gl"
    ],
    "/tmp/pyglet/pyglet/window/carbon/__init__.py": [
        "pyglet.app",
        "pyglet.app",
        "pyglet.app",
        "pyglet.app",
        "pyglet.app",
        "pyglet.app",
        "pyglet.app",
        "pyglet.libs.darwin.quartzkey.charmap",
        "pyglet.libs.darwin._oscheck",
        "pyglet.window.WindowException",
        "pyglet",
        "pyglet.window.MouseCursor",
        "pyglet.window.mouse",
        "pyglet.event.EventDispatcher",
        "ctypes",
        "pyglet.libs.darwin",
        "pyglet.window.DefaultMouseCursor",
        "pyglet.window.BaseWindow",
        "pyglet.window.key",
        "pyglet.window._PlatformEventHandler",
        "unicodedata",
        "pyglet.libs.darwin.quartzkey.keymap",
        "pyglet.canvas.carbon.CarbonCanvas"
    ],
    "/tmp/pyglet/pyglet/window/cocoa/__init__.py": [
        "pyglet.window.WindowException",
        ".pyglet_window.PygletToolWindow",
        "pyglet",
        "pyglet.window.MouseCursor",
        "pyglet.event.EventDispatcher",
        "ctypes",
        "pyglet.libs.darwin.cocoapy",
        ".systemcursor.SystemCursor",
        "pyglet.window.DefaultMouseCursor",
        ".pyglet_view.PygletView",
        "pyglet.canvas.cocoa.CocoaCanvas",
        "pyglet.window.BaseWindow",
        ".pyglet_delegate.PygletDelegate",
        ".pyglet_window.PygletWindow"
    ],
    "/tmp/pyglet/pyglet/window/cocoa/pyglet_delegate.py": [
        "pyglet.libs.darwin.cocoapy",
        ".systemcursor.SystemCursor"
    ],
    "/tmp/pyglet/pyglet/window/cocoa/pyglet_textview.py": [
        "unicodedata",
        "pyglet.libs.darwin.cocoapy",
        "pyglet.window.key"
    ],
    "/tmp/pyglet/pyglet/window/cocoa/pyglet_view.py": [
        "pyglet.app",
        "pyglet.libs.darwin.cocoapy",
        "pyglet.libs.darwin.quartzkey.keymap",
        "pyglet.window.key",
        "pyglet.window.mouse"
    ],
    "/tmp/pyglet/pyglet/window/cocoa/pyglet_window.py": [
        "pyglet.app",
        "pyglet.app",
        "pyglet.libs.darwin.cocoapy"
    ],
    "/tmp/pyglet/pyglet/window/cocoa/systemcursor.py": [
        "pyglet.libs.darwin.cocoapy"
    ],
    "/tmp/pyglet/pyglet/window/event.py": [
        "pyglet.window.key",
        "pyglet.window.mouse",
        "sys"
    ],
    "/tmp/pyglet/pyglet/window/key.py": [
        "pyglet.compat_platform"
    ],
    "/tmp/pyglet/pyglet/window/mouse.py": [],
    "/tmp/pyglet/pyglet/window/win32/__init__.py": [
        "pyglet.app",
        "pyglet.app",
        "pyglet.app",
        "pyglet.app",
        "pyglet.compat_platform",
        "pyglet.libs.win32.types",
        "pyglet.libs.win32.winkey",
        "pyglet.window.WindowException",
        "pyglet.libs.win32._kernel32",
        "pyglet",
        "pyglet.window.MouseCursor",
        "pyglet.window.mouse",
        "pyglet.window._ViewEventHandler",
        "pyglet.event.EventDispatcher",
        "ctypes",
        "pyglet.libs.win32._user32",
        "pyglet.libs.win32._gdi32",
        "pyglet.window.DefaultMouseCursor",
        "pyglet.window.BaseWindow",
        "pyglet.window.key",
        "pyglet.window._PlatformEventHandler",
        "unicodedata",
        "pyglet.libs.win32.constants",
        "pyglet.canvas.win32.Win32Canvas"
    ],
    "/tmp/pyglet/pyglet/window/xlib/__init__.py": [
        "sys",
        "pyglet.libs.x11.cursorfont",
        "pyglet.libs.x11.xlib",
        "pyglet.window.WindowException",
        "pyglet",
        "pyglet.window.MouseCursor",
        "pyglet.window.mouse",
        "pyglet.window._ViewEventHandler",
        "pyglet.event.EventDispatcher",
        "ctypes",
        "pyglet.canvas.xlib.XlibCanvas",
        "pyglet.window.DefaultMouseCursor",
        "pyglet.compat.asbytes",
        "pyglet.window.MouseCursorException",
        "pyglet.window.BaseWindow",
        "pyglet.window.key",
        "pyglet.window._PlatformEventHandler",
        "unicodedata",
        "pyglet.libs.x11.xsync"
    ]
}
{
    "/tmp/pygtfs/pygtfs/__init__.py": [],
    "/tmp/pygtfs/pygtfs/_version.py": [],
    "/tmp/pygtfs/pygtfs/feed.py": [
        "__future__.division",
        "collections.namedtuple",
        "__future__.unicode_literals",
        "six",
        "zipfile.ZipFile",
        "__future__.absolute_import",
        "io",
        "csv",
        "os",
        "__future__.print_function"
    ],
    "/tmp/pygtfs/pygtfs/gtfs2db.py": [
        "__future__.division",
        "docopt.docopt",
        ".schedule.Schedule",
        "__future__.unicode_literals",
        ".list_feeds",
        ".append_feed",
        "__future__.absolute_import",
        ".delete_feed",
        ".__version__",
        ".overwrite_feed",
        "__future__.print_function"
    ],
    "/tmp/pygtfs/pygtfs/gtfs_entities.py": [
        "__future__.unicode_literals",
        "sqlalchemy.orm.validates",
        "__future__.absolute_import",
        "datetime",
        "sqlalchemy.ForeignKeyConstraint",
        "sqlalchemy.and_",
        "sqlalchemy.ext.declarative.declarative_base",
        "sqlalchemy.ForeignKey",
        "sqlalchemy.types.Date",
        "sqlalchemy.types.Integer",
        "__future__.division",
        "sqlalchemy.orm.relationship",
        "sqlalchemy.Column",
        "sqlalchemy.types.Interval",
        "__future__.print_function",
        "sqlalchemy.orm.synonym",
        "sqlalchemy.types.Float",
        "sqlalchemy.types.Numeric",
        "sqlalchemy.types.Boolean",
        "sqlalchemy.types.Unicode"
    ],
    "/tmp/pygtfs/pygtfs/loader.py": [
        ".gtfs_entities.Feed",
        "__future__.division",
        ".gtfs_entities.ServiceException",
        ".gtfs_entities.Service",
        "__future__.unicode_literals",
        ".gtfs_entities.gtfs_all",
        "six",
        "__future__.absolute_import",
        "sys",
        ".feed",
        "datetime.date",
        ".gtfs_entities.gtfs_required",
        "__future__.print_function"
    ],
    "/tmp/pygtfs/pygtfs/schedule.py": [
        ".gtfs_entities.gtfs_all",
        "__future__.division",
        "sqlalchemy.orm",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        ".gtfs_entities.Feed",
        ".gtfs_entities.Base",
        "__future__.print_function"
    ],
    "/tmp/pygtfs/pygtfs/test/__init__.py": [],
    "/tmp/pygtfs/pygtfs/test/test.py": [
        "pygtfs.Schedule",
        "__future__.unicode_literals",
        "os.path",
        "unittest",
        "datetime",
        "pygtfs.overwrite_feed"
    ]
}
{
    "/tmp/pyharmony/pyharmony/__init__.py": [
        ".__main__"
    ],
    "/tmp/pyharmony/pyharmony/__main__.py": [
        "pyharmony.auth",
        "sys",
        "pyharmony.client",
        "json",
        "argparse",
        "logging",
        "time"
    ],
    "/tmp/pyharmony/pyharmony/auth.py": [
        "logging",
        "re",
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp"
    ],
    "/tmp/pyharmony/pyharmony/client.py": [
        "logging",
        "json",
        "time",
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp"
    ]
}
{
    "/tmp/pyhik/pyhik/__init__.py": [],
    "/tmp/pyhik/pyhik/constants.py": [],
    "/tmp/pyhik/pyhik/hikvision.py": [
        "pyhik.constants.SENSOR_MAP",
        "logging",
        "pyhik.constants.DEFAULT_PORT",
        "datetime",
        "threading",
        "time",
        "xml.etree.ElementTree",
        "requests",
        "pyhik.constants.DEFAULT_HEADERS",
        "pydispatch.dispatcher",
        "pyhik.constants.XML_NAMESPACE"
    ]
}
{
    "/tmp/pyhomematic/pyhomematic/__init__.py": [],
    "/tmp/pyhomematic/pyhomematic/_hm.py": [
        "xmlrpc.server.SimpleXMLRPCRequestHandler",
        "pyhomematic.devicetypes.generic.HMChannel",
        "urllib.request",
        "json",
        "xmlrpc.client",
        "xmlrpc.server.SimpleXMLRPCServer",
        "xml.etree.ElementTree",
        "pyhomematic.devicetypes",
        "logging",
        "socket",
        "threading",
        "os"
    ],
    "/tmp/pyhomematic/pyhomematic/connection.py": [
        "pyhomematic._hm",
        "logging"
    ],
    "/tmp/pyhomematic/pyhomematic/devicetypes/__init__.py": [
        "logging",
        "pyhomematic.devicetypes.generic",
        "pyhomematic.devicetypes.misc",
        "pyhomematic.devicetypes.actors",
        "pyhomematic.devicetypes.thermostats",
        "pyhomematic.devicetypes.sensors"
    ],
    "/tmp/pyhomematic/pyhomematic/devicetypes/actors.py": [
        "pyhomematic.devicetypes.helper.HelperActorLevel",
        "pyhomematic.devicetypes.helper.HelperWorking",
        "pyhomematic.devicetypes.helper.HelperActionPress",
        "pyhomematic.devicetypes.helper.HelperActionOnTime",
        "pyhomematic.devicetypes.sensors.HMSensor",
        "pyhomematic.devicetypes.helper.HelperWired",
        "logging",
        "pyhomematic.devicetypes.helper.HelperEventRemote",
        "pyhomematic.devicetypes.helper.HelperActorState",
        "pyhomematic.devicetypes.generic.HMDevice"
    ],
    "/tmp/pyhomematic/pyhomematic/devicetypes/generic.py": [
        "logging"
    ],
    "/tmp/pyhomematic/pyhomematic/devicetypes/helper.py": [
        "logging",
        "pyhomematic.devicetypes.generic.HMDevice"
    ],
    "/tmp/pyhomematic/pyhomematic/devicetypes/misc.py": [
        "logging",
        "pyhomematic.devicetypes.helper.HelperEventRemote",
        "pyhomematic.devicetypes.helper.HelperActionPress",
        "pyhomematic.devicetypes.helper.HelperEventPress",
        "pyhomematic.devicetypes.generic.HMDevice"
    ],
    "/tmp/pyhomematic/pyhomematic/devicetypes/sensors.py": [
        "pyhomematic.devicetypes.misc.HMEvent",
        "pyhomematic.devicetypes.helper.HelperSensorState",
        "pyhomematic.devicetypes.helper.HelperSabotage",
        "pyhomematic.devicetypes.misc.Remote",
        "logging",
        "pyhomematic.devicetypes.helper.HelperBinaryState",
        "pyhomematic.devicetypes.helper.HelperLowBat",
        "pyhomematic.devicetypes.generic.HMDevice"
    ],
    "/tmp/pyhomematic/pyhomematic/devicetypes/thermostats.py": [
        "logging",
        "pyhomematic.devicetypes.helper.HelperBatteryState",
        "pyhomematic.devicetypes.helper.HelperValveState",
        "pyhomematic.devicetypes.sensors.AreaThermostat",
        "pyhomematic.devicetypes.helper.HelperLowBat",
        "pyhomematic.devicetypes.generic.HMDevice"
    ],
    "/tmp/pyhomematic/pyhomematic/exceptions.py": []
}
{
    "/tmp/pyicloud/pyicloud/__init__.py": [
        "logging"
    ],
    "/tmp/pyicloud/pyicloud/base.py": [
        "pyicloud.exceptions.PyiCloudFailedLoginException",
        "six",
        "pyicloud.services.CalendarService",
        "pyicloud.services.FindMyiPhoneServiceManager",
        "pyicloud.services.PhotosService",
        "uuid",
        "tempfile",
        "pyicloud.services.ContactsService",
        "pyicloud.exceptions.PyiCloudAPIResponseError",
        "json",
        "pyicloud.services.UbiquityService",
        "re.match",
        "pyicloud.services.AccountService",
        "inspect",
        "sys",
        "pyicloud.services.RemindersService",
        "cookielib",
        "pyicloud.exceptions.PyiCloud2FARequiredError",
        "logging",
        "pyicloud.utils.get_password_from_keyring",
        "requests",
        "os"
    ],
    "/tmp/pyicloud/pyicloud/cmdline.py": [
        "argparse",
        "click.confirm",
        "pyicloud",
        ".utils",
        "sys",
        "pickle",
        "__future__.print_function"
    ],
    "/tmp/pyicloud/pyicloud/exceptions.py": [],
    "/tmp/pyicloud/pyicloud/services/__init__.py": [],
    "/tmp/pyicloud/pyicloud/services/account.py": [
        "sys",
        "six",
        "pyicloud.utils.underscore_to_camelcase"
    ],
    "/tmp/pyicloud/pyicloud/services/calendar.py": [
        "calendar.monthrange",
        "__future__.absolute_import",
        "datetime.datetime",
        "tzlocal.get_localzone"
    ],
    "/tmp/pyicloud/pyicloud/services/contacts.py": [
        "__future__.absolute_import"
    ],
    "/tmp/pyicloud/pyicloud/services/findmyiphone.py": [
        "six",
        "sys",
        "json",
        "pyicloud.exceptions.PyiCloudNoDevicesException"
    ],
    "/tmp/pyicloud/pyicloud/services/photos.py": [
        "pyicloud.exceptions.PyiCloudBinaryFeedParseError",
        "bitstring.ConstBitStream",
        "pyicloud.exceptions.PyiCloudPhotoLibraryNotActivatedErrror",
        "pyicloud.exceptions.PyiCloudAPIResponseError",
        "urllib",
        "datetime.datetime",
        "sys",
        "json",
        "base64.b64decode"
    ],
    "/tmp/pyicloud/pyicloud/services/reminders.py": [
        "uuid",
        "__future__.absolute_import",
        "datetime.datetime",
        "json",
        "tzlocal.get_localzone",
        "time"
    ],
    "/tmp/pyicloud/pyicloud/services/ubiquity.py": [
        "sys",
        "datetime.datetime"
    ],
    "/tmp/pyicloud/pyicloud/tests/__init__.py": [],
    "/tmp/pyicloud/pyicloud/tests/test_sanity.py": [
        "unittest2.TestCase",
        "pyicloud.cmdline.main"
    ],
    "/tmp/pyicloud/pyicloud/utils.py": [
        "sys",
        ".exceptions.NoStoredPasswordAvailable",
        "keyring",
        "getpass"
    ]
}
{
    "/tmp/pyiss/pyiss/__init__.py": [
        "voluptuous.All",
        "voluptuous.Required",
        "voluptuous.Range",
        "datetime.datetime",
        "requests",
        "voluptuous.Any",
        "voluptuous.Schema"
    ]
}
{
    "/tmp/pylast/pylast/__init__.py": [
        "urllib.splithost",
        "xml.dom",
        "tempfile",
        "collections",
        "ssl",
        "httplib.HTTPConnection",
        "re",
        "xml.dom.minidom",
        "httplib.HTTPSConnection",
        "xml.dom.Node",
        "urllib.quote_plus",
        "hashlib",
        "certifi",
        "shelve",
        "six",
        "warnings",
        "htmlentitydefs",
        "sys",
        "time"
    ]
}
{
    "/tmp/pylitejet/pylitejet/__init__.py": [
        "logging",
        "threading",
        "serial"
    ]
}
{
    "/tmp/pyloopenergy/pyloopenergy/__init__.py": [],
    "/tmp/pyloopenergy/pyloopenergy/loop_energy.py": [
        "logging",
        "socketIO_client",
        "threading",
        "requests"
    ]
}
{
    "/tmp/pymochad/pymochad/__init__.py": [],
    "/tmp/pymochad/pymochad/controller.py": [
        "logging",
        "six",
        "time",
        "pymochad.exceptions",
        "socket"
    ],
    "/tmp/pymochad/pymochad/device.py": [],
    "/tmp/pymochad/pymochad/exceptions.py": []
}
{
    "/tmp/pymongo/pymongo/__init__.py": [],
    "/tmp/pymongo/pymongo/auth.py": [
        "bson.binary.Binary",
        "base64.standard_b64decode",
        "bson.py3compat.PY3",
        "bson.py3compat.string_type",
        "base64.standard_b64encode",
        "pymongo.errors.OperationFailure",
        "bson.py3compat._unicode",
        "bson.son.SON",
        "collections.namedtuple",
        "random.SystemRandom",
        "kerberos",
        "bson.py3compat.b",
        "binascii.hexlify",
        "hashlib.md5",
        "hashlib.sha1",
        "hashlib.pbkdf2_hmac",
        "socket",
        "pymongo.errors.ConfigurationError",
        "hmac",
        "binascii.unhexlify"
    ],
    "/tmp/pymongo/pymongo/bulk.py": [
        "pymongo.message._UPDATE",
        "pymongo.collation.validate_collation_or_none",
        "pymongo.common.validate_ok_for_update",
        "pymongo.errors.OperationFailure",
        "pymongo.message._DELETE",
        "bson.raw_bson.RawBSONDocument",
        "pymongo.common.validate_ok_for_replace",
        "pymongo.common.validate_is_mapping",
        "pymongo.errors.DocumentTooLarge",
        "bson.son.SON",
        "pymongo.message._INSERT",
        "pymongo.errors.InvalidOperation",
        "pymongo.errors.BulkWriteError",
        "bson.objectid.ObjectId",
        "pymongo.write_concern.WriteConcern",
        "pymongo.common.validate_is_document_type",
        "pymongo.message._do_batched_write_command",
        "pymongo.message._BulkWriteContext",
        "pymongo.message._randint",
        "pymongo.errors.ConfigurationError"
    ],
    "/tmp/pymongo/pymongo/client_options.py": [
        "pymongo.read_preferences.make_read_preference",
        "pymongo.common.validate_boolean",
        "pymongo.read_concern.ReadConcern",
        "pymongo.monitoring._EventListeners",
        "pymongo.errors.ConfigurationError",
        "pymongo.write_concern.WriteConcern",
        "pymongo.ssl_support.get_ssl_context",
        "pymongo.auth._build_credentials_tuple",
        "bson.codec_options._parse_codec_options",
        "pymongo.pool.PoolOptions",
        "pymongo.common"
    ],
    "/tmp/pymongo/pymongo/collation.py": [
        "pymongo.common"
    ],
    "/tmp/pymongo/pymongo/collection.py": [
        "collections.OrderedDict",
        "pymongo.collation.validate_collation_or_none",
        "pymongo.errors.InvalidName",
        "bson.py3compat.string_type",
        "pymongo.errors.OperationFailure",
        "bson.py3compat._unicode",
        "pymongo.bulk._Bulk",
        "pymongo.message",
        "pymongo.results.InsertOneResult",
        "bson.raw_bson.RawBSONDocument",
        "pymongo.operations.IndexModel",
        "pymongo.helpers._UNICODE_REPLACE_CODEC_OPTIONS",
        "pymongo.write_concern.WriteConcern",
        "bson.son.SON",
        "pymongo.read_concern.DEFAULT_READ_CONCERN",
        "collections",
        "pymongo.results.InsertManyResult",
        "bson.codec_options.CodecOptions",
        "pymongo.helpers",
        "pymongo.read_preferences.ReadPreference",
        "bson.objectid.ObjectId",
        "warnings",
        "pymongo.operations._WriteOp",
        "pymongo.cursor.Cursor",
        "pymongo.results.DeleteResult",
        "datetime",
        "pymongo.command_cursor.CommandCursor",
        "bson.code.Code",
        "bson.py3compat.integer_types",
        "pymongo.errors.ConfigurationError",
        "pymongo.bulk.BulkOperationBuilder",
        "pymongo.common",
        "pymongo.results.BulkWriteResult",
        "pymongo.helpers._check_write_command_response",
        "pymongo.results.UpdateResult"
    ],
    "/tmp/pymongo/pymongo/command_cursor.py": [
        "collections.deque",
        "pymongo.message._GetMore",
        "pymongo.message._convert_exception",
        "bson.py3compat.integer_types",
        "datetime",
        "pymongo.errors.NotMasterError",
        "pymongo.helpers",
        "pymongo.message._CursorAddress",
        "pymongo.errors.AutoReconnect",
        "pymongo.errors.OperationFailure"
    ],
    "/tmp/pymongo/pymongo/common.py": [
        "pymongo.auth.MECHANISMS",
        "bson.py3compat.string_type",
        "pymongo.write_concern.WriteConcern",
        "pymongo.ssl_support.validate_cert_reqs",
        "pymongo.read_preferences.read_pref_mode_from_name",
        "bson.raw_bson.RawBSONDocument",
        "collections",
        "bson.binary.PYTHON_LEGACY",
        "bson.codec_options.CodecOptions",
        "warnings",
        "bson.binary.STANDARD",
        "bson.py3compat.iteritems",
        "datetime",
        "pymongo.read_preferences._ServerMode",
        "bson.binary.CSHARP_LEGACY",
        "pymongo.read_concern.ReadConcern",
        "bson.binary.JAVA_LEGACY",
        "pymongo.monitoring._validate_event_listeners",
        "pymongo.errors.ConfigurationError",
        "bson.py3compat.integer_types"
    ],
    "/tmp/pymongo/pymongo/cursor.py": [
        "pymongo.common.validate_boolean",
        "pymongo.message._GetMore",
        "pymongo.collation.validate_collation_or_none",
        "bson.py3compat.string_type",
        "pymongo.errors.OperationFailure",
        "bson.RE_TYPE",
        "pymongo.message._CursorAddress",
        "pymongo.message._Query",
        "copy",
        "pymongo.common.validate_is_mapping",
        "bson.son.SON",
        "pymongo.errors.InvalidOperation",
        "collections.deque",
        "pymongo.read_preferences.ReadPreference",
        "pymongo.message._convert_exception",
        "bson.py3compat.iteritems",
        "datetime",
        "bson.code.Code",
        "bson.py3compat.integer_types",
        "pymongo.errors.ConnectionFailure",
        "pymongo.errors.NotMasterError",
        "pymongo.helpers",
        "pymongo.errors.AutoReconnect"
    ],
    "/tmp/pymongo/pymongo/cursor_manager.py": [
        "weakref",
        "bson.py3compat.integer_types",
        "warnings"
    ],
    "/tmp/pymongo/pymongo/database.py": [
        "bson.dbref.DBRef",
        "pymongo.errors.InvalidName",
        "bson.py3compat.string_type",
        "pymongo.errors.OperationFailure",
        "bson.py3compat._unicode",
        "bson.codec_options.DEFAULT_CODEC_OPTIONS",
        "pymongo.collection.Collection",
        "bson.son.SON",
        "pymongo.errors.CollectionInvalid",
        "bson.codec_options.CodecOptions",
        "pymongo.read_preferences.ReadPreference",
        "bson.objectid.ObjectId",
        "warnings",
        "pymongo.auth",
        "pymongo.son_manipulator.SONManipulator",
        "pymongo.helpers._first_batch",
        "bson.py3compat.iteritems",
        "pymongo.write_concern.WriteConcern",
        "pymongo.command_cursor.CommandCursor",
        "bson.code.Code",
        "pymongo.errors.ConfigurationError",
        "pymongo.helpers",
        "pymongo.common"
    ],
    "/tmp/pymongo/pymongo/errors.py": [
        "bson.errors"
    ],
    "/tmp/pymongo/pymongo/helpers.py": [
        "bson.py3compat.string_type",
        "pymongo.errors.OperationFailure",
        "pymongo.errors.WTimeoutError",
        "bson",
        "pymongo.errors.DuplicateKeyError",
        "pymongo.errors.WriteConcernError",
        "pymongo.errors.ExecutionTimeout",
        "struct",
        "pymongo.errors.ProtocolError",
        "pymongo.ASCENDING",
        "pymongo.read_concern.DEFAULT_READ_CONCERN",
        "collections",
        "bson.py3compat.itervalues",
        "bson.codec_options.CodecOptions",
        "pymongo.message._convert_exception",
        "sys",
        "bson.py3compat.iteritems",
        "datetime",
        "pymongo.errors.CursorNotFound",
        "traceback",
        "pymongo.errors.NotMasterError",
        "bson.son.SON",
        "pymongo.errors.WriteError",
        "pymongo.message._Query"
    ],
    "/tmp/pymongo/pymongo/ismaster.py": [
        "pymongo.server_type.SERVER_TYPE",
        "itertools",
        "pymongo.common",
        "bson.py3compat.imap"
    ],
    "/tmp/pymongo/pymongo/max_staleness_selectors.py": [
        "pymongo.server_type.SERVER_TYPE",
        "pymongo.errors.ConfigurationError"
    ],
    "/tmp/pymongo/pymongo/message.py": [
        "random",
        "pymongo.errors.OperationFailure",
        "bson.codec_options.DEFAULT_CODEC_OPTIONS",
        "bson",
        "struct",
        "pymongo.errors.DocumentTooLarge",
        "bson.son.SON",
        "pymongo.read_concern.DEFAULT_READ_CONCERN",
        "pymongo.errors.InvalidOperation",
        "pymongo.read_preferences.ReadPreference",
        "datetime",
        "pymongo._cmessage",
        "bson.py3compat.b",
        "bson.py3compat.StringIO"
    ],
    "/tmp/pymongo/pymongo/mongo_client.py": [
        "bson.py3compat.string_type",
        "datetime",
        "bson.codec_options.DEFAULT_CODEC_OPTIONS",
        "contextlib",
        "pymongo.errors.NetworkTimeout",
        "pymongo.periodic_executor",
        "pymongo.message",
        "pymongo.uri_parser",
        "pymongo.server_selectors.writable_server_selector",
        "pymongo.client_options.ClientOptions",
        "pymongo.errors.InvalidURI",
        "pymongo.write_concern.WriteConcern",
        "bson.son.SON",
        "pymongo.errors.InvalidOperation",
        "pymongo.topology.Topology",
        "collections.defaultdict",
        "pymongo.read_preferences.ReadPreference",
        "warnings",
        "pymongo.server_type.SERVER_TYPE",
        "pymongo.errors.OperationFailure",
        "pymongo.server_selectors.writable_preferred_server_selector",
        "pymongo.database",
        "pymongo.settings.TopologySettings",
        "bson.py3compat.integer_types",
        "pymongo.errors.ConfigurationError",
        "pymongo.errors.ConnectionFailure",
        "weakref",
        "threading",
        "pymongo.errors.NotMasterError",
        "pymongo.helpers",
        "pymongo.common",
        "pymongo.topology_description.TOPOLOGY_TYPE",
        "pymongo.errors.AutoReconnect",
        "pymongo.cursor_manager.CursorManager"
    ],
    "/tmp/pymongo/pymongo/mongo_replica_set_client.py": [
        "pymongo.mongo_client",
        "warnings"
    ],
    "/tmp/pymongo/pymongo/monitor.py": [
        "pymongo.ismaster.IsMaster",
        "pymongo.server_type.SERVER_TYPE",
        "pymongo.read_preferences.MovingAverage",
        "bson.son.SON",
        "weakref",
        "pymongo.monotonic.time",
        "bson.codec_options.DEFAULT_CODEC_OPTIONS",
        "pymongo.helpers",
        "pymongo.common",
        "pymongo.periodic_executor",
        "pymongo.server_description.ServerDescription",
        "pymongo.message"
    ],
    "/tmp/pymongo/pymongo/monitoring.py": [
        "collections.namedtuple",
        "collections.Sequence",
        "pymongo.helpers._handle_exception"
    ],
    "/tmp/pymongo/pymongo/monotonic.py": [
        "time.time"
    ],
    "/tmp/pymongo/pymongo/network.py": [
        "pymongo.errors.OperationFailure",
        "pymongo.common.MAX_MESSAGE_SIZE",
        "pymongo.message",
        "pymongo.errors.ProtocolError",
        "select",
        "select.poll",
        "struct",
        "errno",
        "pymongo.read_concern.DEFAULT_READ_CONCERN",
        "datetime",
        "threading",
        "pymongo.errors.NotMasterError",
        "pymongo.helpers",
        "pymongo.errors.AutoReconnect"
    ],
    "/tmp/pymongo/pymongo/operations.py": [
        "pymongo.common.validate_boolean",
        "pymongo.common.validate_is_mapping",
        "pymongo.helpers._index_list",
        "pymongo.collation.validate_collation_or_none",
        "pymongo.helpers._index_document",
        "pymongo.helpers._gen_index_name"
    ],
    "/tmp/pymongo/pymongo/periodic_executor.py": [
        "pymongo.monotonic.time",
        "threading",
        "weakref",
        "atexit",
        "time"
    ],
    "/tmp/pymongo/pymongo/pool.py": [
        "pymongo.ismaster.IsMaster",
        "fcntl.F_SETFD",
        "pymongo.errors.OperationFailure",
        "bson.py3compat._unicode",
        "pymongo.common.MAX_MESSAGE_SIZE",
        "contextlib",
        "pymongo.errors.NetworkTimeout",
        "pymongo.ssl_match_hostname.match_hostname",
        "pymongo.read_preferences.ReadPreference",
        "pymongo.monotonic.time",
        "pymongo.errors.DocumentTooLarge",
        "pymongo.ssl_match_hostname.CertificateError",
        "bson.son.SON",
        "platform",
        "pymongo.read_concern.DEFAULT_READ_CONCERN",
        "bson.py3compat.itervalues",
        "pymongo.network.command",
        "pymongo.__version__",
        "fcntl.fcntl",
        "pymongo.network.SocketChecker",
        "pymongo.server_type.SERVER_TYPE",
        "pymongo.network.receive_message",
        "pymongo.auth",
        "sys",
        "ssl",
        "fcntl.FD_CLOEXEC",
        "ipaddress.ip_address",
        "bson.py3compat.imap",
        "pymongo.thread_util",
        "socket",
        "fcntl.F_GETFD",
        "bson.DEFAULT_CODEC_OPTIONS",
        "pymongo.errors.ConfigurationError",
        "pymongo.errors.ConnectionFailure",
        "threading",
        "pymongo.errors.NotMasterError",
        "pymongo.helpers",
        "pymongo.errors.AutoReconnect",
        "os"
    ],
    "/tmp/pymongo/pymongo/read_concern.py": [
        "bson.py3compat.string_type"
    ],
    "/tmp/pymongo/pymongo/read_preferences.py": [
        "pymongo.max_staleness_selectors",
        "pymongo.server_selectors.secondary_with_tags_server_selector",
        "collections.Mapping",
        "pymongo.server_selectors.member_with_tags_server_selector",
        "bson.py3compat.integer_types",
        "pymongo.errors.ConfigurationError"
    ],
    "/tmp/pymongo/pymongo/response.py": [],
    "/tmp/pymongo/pymongo/results.py": [
        "pymongo.errors.InvalidOperation"
    ],
    "/tmp/pymongo/pymongo/server.py": [
        "pymongo.server_type.SERVER_TYPE",
        "pymongo.message._convert_exception",
        "pymongo.errors.ConfigurationError",
        "pymongo.message._Query",
        "contextlib",
        "pymongo.response.ExhaustResponse",
        "datetime.datetime",
        "pymongo.response.Response"
    ],
    "/tmp/pymongo/pymongo/server_description.py": [
        "pymongo.ismaster.IsMaster",
        "pymongo.server_type.SERVER_TYPE",
        "pymongo.monotonic.time",
        "bson.EPOCH_NAIVE"
    ],
    "/tmp/pymongo/pymongo/server_selectors.py": [
        "pymongo.server_type.SERVER_TYPE"
    ],
    "/tmp/pymongo/pymongo/server_type.py": [
        "collections.namedtuple"
    ],
    "/tmp/pymongo/pymongo/settings.py": [
        "bson.objectid.ObjectId",
        "pymongo.common.LOCAL_THRESHOLD_MS",
        "pymongo.errors.ConfigurationError",
        "threading",
        "pymongo.server_description.ServerDescription",
        "pymongo.common",
        "pymongo.common.SERVER_SELECTION_TIMEOUT",
        "pymongo.topology_description.TOPOLOGY_TYPE",
        "pymongo.pool.PoolOptions",
        "pymongo.pool",
        "pymongo.monitor"
    ],
    "/tmp/pymongo/pymongo/son_manipulator.py": [
        "bson.dbref.DBRef",
        "bson.objectid.ObjectId",
        "bson.son.SON",
        "collections"
    ],
    "/tmp/pymongo/pymongo/ssl_context.py": [
        "ssl"
    ],
    "/tmp/pymongo/pymongo/ssl_match_hostname.py": [
        "sys",
        "re"
    ],
    "/tmp/pymongo/pymongo/ssl_support.py": [
        "pymongo.ssl_context.SSLContext",
        "wincertstore.CertFile",
        "ssl",
        "bson.py3compat.string_type",
        "pymongo.errors.ConfigurationError",
        "sys",
        "atexit",
        "threading",
        "certifi"
    ],
    "/tmp/pymongo/pymongo/thread_util.py": [
        "pymongo.monotonic.time",
        "pymongo.errors.ExceededMaxWaiters",
        "threading"
    ],
    "/tmp/pymongo/pymongo/topology.py": [
        "pymongo.server_selectors.any_server_selector",
        "bson.py3compat.PY3",
        "pymongo.server_selectors.secondary_server_selector",
        "pymongo.periodic_executor",
        "pymongo.pool.PoolOptions",
        "pymongo.topology_description.updated_topology_description",
        "pymongo.server_selectors.writable_server_selector",
        "pymongo.monotonic.time",
        "bson.py3compat.itervalues",
        "pymongo.errors.ServerSelectionTimeoutError",
        "random",
        "warnings",
        "pymongo.server.Server",
        "Queue",
        "pymongo.topology_description.TopologyDescription",
        "pymongo.server_selectors.Selection",
        "weakref",
        "threading",
        "pymongo.common",
        "pymongo.topology_description.TOPOLOGY_TYPE",
        "os",
        "pymongo.server_selectors.arbiter_server_selector"
    ],
    "/tmp/pymongo/pymongo/topology_description.py": [
        "collections.namedtuple",
        "pymongo.server_selectors.Selection",
        "pymongo.read_preferences.ReadPreference",
        "pymongo.server_type.SERVER_TYPE",
        "pymongo.errors.ConfigurationError",
        "pymongo.server_description.ServerDescription",
        "pymongo.common"
    ],
    "/tmp/pymongo/pymongo/uri_parser.py": [
        "pprint",
        "bson.py3compat.PY3",
        "bson.py3compat.string_type",
        "urllib.unquote_plus",
        "pymongo.errors.InvalidURI",
        "pymongo.common.get_validated_options",
        "warnings",
        "sys",
        "pymongo.errors.ConfigurationError"
    ],
    "/tmp/pymongo/pymongo/write_concern.py": [
        "bson.py3compat.integer_types",
        "bson.py3compat.string_type",
        "pymongo.errors.ConfigurationError"
    ]
}
{
    "/tmp/pynetgear/pynetgear/__init__.py": [
        "collections.namedtuple",
        "logging",
        "re",
        "requests",
        "__future__.print_function"
    ],
    "/tmp/pynetgear/pynetgear/__main__.py": [
        "sys",
        "pynetgear.Netgear"
    ]
}
{
    "/tmp/pynetio/pynetio.py": [
        "logging",
        "socket",
        "threading.Lock",
        "telnetlib.Telnet"
    ]
}
{
    "/tmp/pynut2/pynut2/__init__.py": [],
    "/tmp/pynut2/pynut2/nut2.py": [
        "logging",
        "telnetlib"
    ]
}
{
    "/tmp/pyowm/pyowm/__init__.py": [
        "pyowm.webapi25.owm25.OWM25",
        "pyowm.constants"
    ],
    "/tmp/pyowm/pyowm/abstractions/__init__.py": [],
    "/tmp/pyowm/pyowm/abstractions/decorators.py": [
        "functools.wraps",
        "warnings"
    ],
    "/tmp/pyowm/pyowm/abstractions/jsonparser.py": [
        "abc.ABCMeta",
        "abc.abstractmethod"
    ],
    "/tmp/pyowm/pyowm/abstractions/linkedlist.py": [
        "abc.ABCMeta",
        "abc.abstractmethod"
    ],
    "/tmp/pyowm/pyowm/abstractions/owm.py": [
        "abc.ABCMeta",
        "abc.abstractmethod"
    ],
    "/tmp/pyowm/pyowm/abstractions/owmcache.py": [
        "abc.ABCMeta",
        "abc.abstractmethod"
    ],
    "/tmp/pyowm/pyowm/caches/__init__.py": [],
    "/tmp/pyowm/pyowm/caches/lrucache.py": [
        "pyowm.abstractions.owmcache",
        "pyowm.commons.frontlinkedlist",
        "pyowm.utils.timeutils"
    ],
    "/tmp/pyowm/pyowm/caches/nullcache.py": [
        "pyowm.abstractions.owmcache"
    ],
    "/tmp/pyowm/pyowm/commons/__init__.py": [],
    "/tmp/pyowm/pyowm/commons/airpollution_client.py": [
        "urllib2.urlopen",
        "pyowm.webapi25.configuration25.ROOT_POLLUTION_API_URL",
        "socket",
        "pyowm.exceptions.api_call_error",
        "pyowm.exceptions.unauthorized_error",
        "pyowm.webapi25.configuration25.OZONE_URL",
        "pyowm.exceptions.not_found_error",
        "pyowm.webapi25.configuration25.CO_INDEX_URL",
        "urllib2.HTTPError",
        "pyowm.utils.timeformatutils",
        "urllib2.URLError"
    ],
    "/tmp/pyowm/pyowm/commons/frontlinkedlist.py": [
        "copy",
        "pyowm.abstractions.linkedlist"
    ],
    "/tmp/pyowm/pyowm/commons/uv_client.py": [
        "urllib2.urlopen",
        "socket",
        "pyowm.exceptions.api_call_error",
        "pyowm.exceptions.unauthorized_error",
        "pyowm.exceptions.not_found_error",
        "pyowm.webapi25.configuration25.ROOT_UV_API_URL",
        "pyowm.webapi25.configuration25.UV_INDEX_URL",
        "urllib2.HTTPError",
        "pyowm.utils.timeformatutils",
        "urllib2.URLError"
    ],
    "/tmp/pyowm/pyowm/commons/weather_client.py": [
        "urllib2.urlopen",
        "urllib.urlencode",
        "socket",
        "pyowm.exceptions.api_call_error",
        "pyowm.exceptions.unauthorized_error",
        "pyowm.exceptions.not_found_error",
        "pyowm.webapi25.configuration25.ROOT_API_URL",
        "urllib2.HTTPError",
        "urllib2.URLError"
    ],
    "/tmp/pyowm/pyowm/constants.py": [],
    "/tmp/pyowm/pyowm/docs/__init__.py": [],
    "/tmp/pyowm/pyowm/exceptions/__init__.py": [],
    "/tmp/pyowm/pyowm/exceptions/api_call_error.py": [
        "os",
        "pyowm.exceptions.OWMError"
    ],
    "/tmp/pyowm/pyowm/exceptions/api_response_error.py": [
        "os",
        "pyowm.exceptions.OWMError"
    ],
    "/tmp/pyowm/pyowm/exceptions/not_found_error.py": [
        "os",
        "pyowm.exceptions.OWMError"
    ],
    "/tmp/pyowm/pyowm/exceptions/parse_response_error.py": [
        "os",
        "pyowm.exceptions.OWMError"
    ],
    "/tmp/pyowm/pyowm/exceptions/unauthorized_error.py": [
        "os",
        "pyowm.exceptions.OWMError"
    ],
    "/tmp/pyowm/pyowm/utils/__init__.py": [],
    "/tmp/pyowm/pyowm/utils/temputils.py": [],
    "/tmp/pyowm/pyowm/utils/timeformatutils.py": [
        "datetime.timedelta",
        "datetime.datetime",
        "calendar.timegm",
        "datetime.tzinfo"
    ],
    "/tmp/pyowm/pyowm/utils/timeutils.py": [
        "datetime.timedelta",
        "datetime.datetime",
        "datetime.date",
        "pyowm.utils.timeformatutils"
    ],
    "/tmp/pyowm/pyowm/utils/xmlutils.py": [
        "xml.etree.ElementTree"
    ],
    "/tmp/pyowm/pyowm/webapi25/__init__.py": [],
    "/tmp/pyowm/pyowm/webapi25/cityidregistry.py": [
        "pyowm.abstractions.decorators.deprecated",
        "pkg_resources.resource_stream",
        "pyowm.webapi25.location.Location"
    ],
    "/tmp/pyowm/pyowm/webapi25/cityids/__init__.py": [],
    "/tmp/pyowm/pyowm/webapi25/coindex.py": [
        "pyowm.webapi25.xsd.xmlnsconfig.COINDEX_XMLNS_URL",
        "pyowm.utils.timeutils",
        "json",
        "pyowm.utils.xmlutils",
        "xml.etree.ElementTree",
        "pyowm.webapi25.xsd.xmlnsconfig.COINDEX_XMLNS_PREFIX",
        "pyowm.utils.timeformatutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/coindexparser.py": [
        "pyowm.exceptions.parse_response_error",
        "pyowm.abstractions.jsonparser",
        "pyowm.utils.timeutils",
        "json",
        "pyowm.webapi25.coindex",
        "pyowm.utils.timeformatutils",
        "pyowm.webapi25.location"
    ],
    "/tmp/pyowm/pyowm/webapi25/configuration25.py": [
        "pyowm.webapi25.stationlistparser",
        "pyowm.webapi25.cityidregistry",
        "pyowm.webapi25.stationhistoryparser",
        "pyowm.webapi25.stationparser",
        "pyowm.webapi25.coindexparser",
        "pyowm.webapi25.observationlistparser",
        "pyowm.webapi25.ozone_parser",
        "pyowm.webapi25.uvindexparser",
        "pyowm.caches.nullcache",
        "pyowm.webapi25.forecastparser",
        "pyowm.webapi25.weathercoderegistry",
        "pyowm.webapi25.observationparser",
        "pyowm.webapi25.weatherhistoryparser"
    ],
    "/tmp/pyowm/pyowm/webapi25/forecast.py": [
        "json",
        "pyowm.utils.timeformatutils",
        "xml.etree.ElementTree",
        "pyowm.webapi25.xsd.xmlnsconfig.FORECAST_XMLNS_PREFIX",
        "pyowm.webapi25.xsd.xmlnsconfig.FORECAST_XMLNS_URL",
        "pyowm.utils.xmlutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/forecaster.py": [
        "pyowm.webapi25.configuration25.weather_code_registry",
        "pyowm.utils.timeformatutils",
        "pyowm.webapi25.weatherutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/forecastparser.py": [
        "pyowm.exceptions.api_response_error",
        "pyowm.exceptions.parse_response_error",
        "pyowm.abstractions.jsonparser",
        "pyowm.webapi25.forecast",
        "json",
        "pyowm.webapi25.weather",
        "pyowm.webapi25.location",
        "time"
    ],
    "/tmp/pyowm/pyowm/webapi25/historian.py": [
        "pyowm.utils.temputils",
        "operator.itemgetter"
    ],
    "/tmp/pyowm/pyowm/webapi25/location.py": [
        "pyowm.webapi25.xsd.xmlnsconfig.LOCATION_XMLNS_URL",
        "json",
        "pyowm.webapi25.xsd.xmlnsconfig.LOCATION_XMLNS_PREFIX",
        "xml.etree.ElementTree",
        "pyowm.utils.xmlutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/observation.py": [
        "pyowm.webapi25.xsd.xmlnsconfig.OBSERVATION_XMLNS_URL",
        "pyowm.webapi25.xsd.xmlnsconfig.OBSERVATION_XMLNS_PREFIX",
        "json",
        "pyowm.utils.timeformatutils",
        "xml.etree.ElementTree",
        "pyowm.utils.xmlutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/observationlistparser.py": [
        "pyowm.exceptions.api_response_error.APIResponseError",
        "pyowm.abstractions.jsonparser.JSONParser",
        "pyowm.webapi25.observationparser.ObservationParser",
        "json",
        "pyowm.exceptions.parse_response_error.ParseResponseError"
    ],
    "/tmp/pyowm/pyowm/webapi25/observationparser.py": [
        "pyowm.exceptions.api_response_error",
        "pyowm.webapi25.observation",
        "pyowm.exceptions.parse_response_error",
        "pyowm.abstractions.jsonparser",
        "json.dumps",
        "pyowm.webapi25.weather",
        "pyowm.webapi25.location",
        "time.time",
        "json.loads"
    ],
    "/tmp/pyowm/pyowm/webapi25/owm25.py": [
        "pyowm.abstractions.owm",
        "pyowm.webapi25.configuration25.STATION_WEATHER_HISTORY_URL",
        "pyowm.webapi25.configuration25.FIND_OBSERVATIONS_URL",
        "pyowm.commons.weather_client",
        "pyowm.webapi25.configuration25.FIND_STATION_URL",
        "pyowm.webapi25.configuration25.API_AVAILABILITY_TIMEOUT",
        "pyowm.webapi25.configuration25.OBSERVATION_URL",
        "pyowm.webapi25.historian",
        "pyowm.webapi25.forecaster",
        "pyowm.webapi25.configuration25.city_id_registry",
        "pyowm.commons.uv_client",
        "pyowm.webapi25.configuration25.BBOX_STATION_URL",
        "pyowm.webapi25.configuration25.GROUP_OBSERVATIONS_URL",
        "pyowm.webapi25.configuration25.CITY_WEATHER_HISTORY_URL",
        "pyowm.caches.nullcache",
        "pyowm.constants",
        "pyowm.webapi25.configuration25.DAILY_FORECAST_URL",
        "pyowm.webapi25.configuration25.THREE_HOURS_FORECAST_URL",
        "pyowm.abstractions.decorators.deprecated",
        "pyowm.commons.airpollution_client",
        "pyowm.webapi25.configuration25.STATION_URL",
        "time.time",
        "pyowm.utils.timeformatutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/ozone.py": [
        "pyowm.webapi25.xsd.xmlnsconfig.OZONE_XMLNS_URL",
        "pyowm.utils.timeutils",
        "json",
        "pyowm.utils.xmlutils",
        "xml.etree.ElementTree",
        "pyowm.webapi25.xsd.xmlnsconfig.OZONE_XMLNS_PREFIX",
        "pyowm.utils.timeformatutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/ozone_parser.py": [
        "pyowm.exceptions.parse_response_error",
        "pyowm.abstractions.jsonparser",
        "pyowm.utils.timeutils",
        "pyowm.webapi25.ozone",
        "json",
        "pyowm.webapi25.location",
        "pyowm.utils.timeformatutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/station.py": [
        "pyowm.webapi25.xsd.xmlnsconfig.LIST_STATION_XMLNS_URL",
        "json",
        "pyowm.webapi25.weather",
        "pyowm.utils.xmlutils",
        "xml.etree.ElementTree",
        "pyowm.webapi25.xsd.xmlnsconfig.LIST_STATION_XMLNS_PREFIX"
    ],
    "/tmp/pyowm/pyowm/webapi25/stationhistory.py": [
        "pyowm.webapi25.xsd.xmlnsconfig.STATION_HISTORY_XMLNS_PREFIX",
        "pyowm.webapi25.xsd.xmlnsconfig.STATION_HISTORY_XMLNS_URL",
        "json",
        "pyowm.utils.timeformatutils",
        "xml.etree.ElementTree",
        "pyowm.utils.xmlutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/stationhistoryparser.py": [
        "pyowm.exceptions.api_response_error",
        "pyowm.exceptions.parse_response_error",
        "pyowm.abstractions.jsonparser",
        "json",
        "time",
        "pyowm.webapi25.stationhistory"
    ],
    "/tmp/pyowm/pyowm/webapi25/stationlistparser.py": [
        "pyowm.webapi25.stationparser.StationParser",
        "pyowm.abstractions.jsonparser.JSONParser",
        "json"
    ],
    "/tmp/pyowm/pyowm/webapi25/stationparser.py": [
        "pyowm.exceptions.parse_response_error",
        "pyowm.abstractions.jsonparser",
        "json",
        "pyowm.webapi25.weather",
        "pyowm.webapi25.station"
    ],
    "/tmp/pyowm/pyowm/webapi25/uvindex.py": [
        "pyowm.utils.timeutils",
        "json",
        "pyowm.utils.xmlutils",
        "pyowm.webapi25.xsd.xmlnsconfig.UVINDEX_XMLNS_PREFIX",
        "xml.etree.ElementTree",
        "pyowm.webapi25.xsd.xmlnsconfig.UVINDEX_XMLNS_URL",
        "pyowm.utils.timeformatutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/uvindexparser.py": [
        "pyowm.exceptions.parse_response_error",
        "pyowm.abstractions.jsonparser",
        "pyowm.utils.timeutils",
        "json",
        "pyowm.webapi25.location",
        "pyowm.webapi25.uvindex",
        "pyowm.utils.timeformatutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/weather.py": [
        "pyowm.webapi25.xsd.xmlnsconfig.WEATHER_XMLNS_PREFIX",
        "pyowm.utils.temputils",
        "json",
        "pyowm.webapi25.xsd.xmlnsconfig.WEATHER_XMLNS_URL",
        "pyowm.utils.xmlutils",
        "xml.etree.ElementTree",
        "pyowm.utils.timeformatutils"
    ],
    "/tmp/pyowm/pyowm/webapi25/weathercoderegistry.py": [],
    "/tmp/pyowm/pyowm/webapi25/weatherhistoryparser.py": [
        "pyowm.exceptions.api_response_error",
        "pyowm.exceptions.parse_response_error",
        "pyowm.abstractions.jsonparser",
        "json",
        "pyowm.webapi25.weather"
    ],
    "/tmp/pyowm/pyowm/webapi25/weatherutils.py": [
        "pyowm.exceptions.not_found_error"
    ],
    "/tmp/pyowm/pyowm/webapi25/xsd/__init__.py": [],
    "/tmp/pyowm/pyowm/webapi25/xsd/xmlnsconfig.py": []
}
{
    "/tmp/pyqwikswitch/pyqwikswitch/__init__.py": [
        "urllib",
        "enum.Enum",
        "queue.Queue",
        "threading",
        "time.sleep",
        "requests",
        "math"
    ]
}
{
    "/tmp/pyscreenshot/pyscreenshot/__init__.py": [
        "logging",
        "pyscreenshot.imcodec",
        "pyscreenshot.loader.Loader",
        "pyscreenshot.loader.FailedBackendError",
        "pyscreenshot.about.__version__",
        "pyscreenshot.procutil.run_in_childprocess"
    ],
    "/tmp/pyscreenshot/pyscreenshot/about.py": [],
    "/tmp/pyscreenshot/pyscreenshot/check/__init__.py": [],
    "/tmp/pyscreenshot/pyscreenshot/check/showall.py": [
        "pyscreenshot",
        "pyscreenshot.FailedBackendError",
        "pyscreenshot.backends",
        "entrypoint2.entrypoint",
        "time"
    ],
    "/tmp/pyscreenshot/pyscreenshot/check/speedtest.py": [
        "pyvirtualdisplay.Display",
        "pyscreenshot",
        "tempfile",
        "entrypoint2.entrypoint",
        "time",
        "shutil",
        "os"
    ],
    "/tmp/pyscreenshot/pyscreenshot/check/versions.py": [
        "pyscreenshot",
        "pyscreenshot.backend_version",
        "entrypoint2.entrypoint"
    ],
    "/tmp/pyscreenshot/pyscreenshot/examples/__init__.py": [],
    "/tmp/pyscreenshot/pyscreenshot/examples/showgrabbox.py": [
        "pyscreenshot"
    ],
    "/tmp/pyscreenshot/pyscreenshot/examples/showgrabfullscreen.py": [
        "pyscreenshot"
    ],
    "/tmp/pyscreenshot/pyscreenshot/imcodec.py": [
        "PIL.Image",
        "io"
    ],
    "/tmp/pyscreenshot/pyscreenshot/loader.py": [
        "logging",
        "pyscreenshot.plugins"
    ],
    "/tmp/pyscreenshot/pyscreenshot/plugins/__init__.py": [
        "pyscreenshot.plugins.scrot",
        "pyscreenshot.plugins.wxscreen",
        "pyscreenshot.plugins.mac_quartz",
        "pyscreenshot.plugins.imagemagick",
        "pyscreenshot.plugins.mac_screencapture",
        "pyscreenshot.plugins.qtgrabwindow",
        "sys",
        "pyscreenshot.plugins.pil",
        "pyscreenshot.plugins.gtkpixbuf"
    ],
    "/tmp/pyscreenshot/pyscreenshot/plugins/gtkpixbuf.py": [
        "gtk",
        "tempfile",
        "PIL.Image"
    ],
    "/tmp/pyscreenshot/pyscreenshot/plugins/imagemagick.py": [
        "easyprocess.EasyProcess",
        "tempfile",
        "PIL.Image",
        "easyprocess.extract_version"
    ],
    "/tmp/pyscreenshot/pyscreenshot/plugins/mac_quartz.py": [
        "LaunchServices",
        "Cocoa.NSURL",
        "Quartz",
        "Quartz.CoreGraphics",
        "tempfile",
        "PIL.Image"
    ],
    "/tmp/pyscreenshot/pyscreenshot/plugins/mac_screencapture.py": [
        "easyprocess.EasyProcessCheckInstalledError",
        "easyprocess.EasyProcess",
        "tempfile",
        "PIL.Image",
        "platform"
    ],
    "/tmp/pyscreenshot/pyscreenshot/plugins/pil.py": [
        "PIL.ImageGrab",
        "PIL.Image"
    ],
    "/tmp/pyscreenshot/pyscreenshot/plugins/qtgrabwindow.py": [
        "PyQt4.Qt",
        "PyQt4.QtGui",
        "PyQt4",
        "PIL.Image",
        "sys",
        "io"
    ],
    "/tmp/pyscreenshot/pyscreenshot/plugins/scrot.py": [
        "easyprocess.EasyProcess",
        "tempfile",
        "PIL.Image",
        "easyprocess.extract_version"
    ],
    "/tmp/pyscreenshot/pyscreenshot/plugins/wxscreen.py": [
        "wx",
        "PIL.Image"
    ],
    "/tmp/pyscreenshot/pyscreenshot/procutil.py": [
        "multiprocessing.Process",
        "multiprocessing.Queue"
    ]
}
{
    "/tmp/pysma/pysma/__init__.py": [
        "logging",
        "asyncio",
        "json",
        "async_timeout"
    ]
}
{
    "/tmp/pysnmp/pysnmp/__init__.py": [],
    "/tmp/pysnmp/pysnmp/cache.py": [],
    "/tmp/pysnmp/pysnmp/carrier/__init__.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asyncio/__init__.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asyncio/base.py": [
        "pysnmp.carrier.base.AbstractTransport",
        "pysnmp.carrier.asyncio.dispatch.AsyncioDispatcher"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncio/dgram/__init__.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asyncio/dgram/base.py": [
        "traceback",
        "sys",
        "pysnmp.carrier.asyncio.base.AbstractAsyncioTransport",
        "pysnmp.carrier.error",
        "pysnmp.debug",
        "trollius"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncio/dgram/udp.py": [
        "pysnmp.carrier.asyncio.dgram.base.DgramAsyncioProtocol",
        "socket",
        "pysnmp.carrier.base.AbstractTransportAddress",
        "trollius"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncio/dgram/udp6.py": [
        "pysnmp.carrier.asyncio.dgram.base.DgramAsyncioProtocol",
        "socket",
        "pysnmp.carrier.base.AbstractTransportAddress",
        "trollius"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncio/dispatch.py": [
        "pysnmp.error.PySnmpError",
        "traceback",
        "sys",
        "pysnmp.carrier.base.AbstractTransportDispatcher",
        "trollius"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncore/__init__.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asyncore/base.py": [
        "pysnmp.carrier.base.AbstractTransport",
        "asyncore",
        "socket",
        "sys",
        "pysnmp.carrier.error",
        "pysnmp.debug",
        "pysnmp.carrier.asyncore.dispatch.AsyncoreDispatcher"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncore/dgram/__init__.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asyncore/dgram/base.py": [
        "pysnmp.carrier.sockmsg",
        "socket",
        "errno",
        "sys",
        "pysnmp.carrier.error",
        "pysnmp.debug",
        "pysnmp.carrier.asyncore.base.AbstractSocketTransport"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncore/dgram/udp.py": [
        "pysnmp.carrier.asyncore.dgram.base.DgramSocketTransport",
        "socket.AF_INET",
        "pysnmp.carrier.base.AbstractTransportAddress"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncore/dgram/udp6.py": [
        "pysnmp.carrier.asyncore.dgram.base.DgramSocketTransport",
        "pysnmp.carrier.base.AbstractTransportAddress",
        "socket"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncore/dgram/unix.py": [
        "pysnmp.carrier.asyncore.dgram.base.DgramSocketTransport",
        "random",
        "pysnmp.carrier.base.AbstractTransportAddress",
        "os"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asyncore/dispatch.py": [
        "pysnmp.error.PySnmpError",
        "traceback.format_exception",
        "asyncore.socket_map",
        "time.time",
        "sys.exc_info",
        "pysnmp.carrier.base.AbstractTransportDispatcher",
        "asyncore.loop"
    ],
    "/tmp/pysnmp/pysnmp/carrier/asynsock/__init__.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asynsock/dgram/__init__.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asynsock/dgram/udp.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asynsock/dgram/udp6.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asynsock/dgram/unix.py": [],
    "/tmp/pysnmp/pysnmp/carrier/asynsock/dispatch.py": [
        "pysnmp.carrier.asyncore.dispatch"
    ],
    "/tmp/pysnmp/pysnmp/carrier/base.py": [
        "pysnmp.carrier.error"
    ],
    "/tmp/pysnmp/pysnmp/carrier/error.py": [
        "pysnmp.error"
    ],
    "/tmp/pysnmp/pysnmp/carrier/sockfix.py": [
        "socket"
    ],
    "/tmp/pysnmp/pysnmp/carrier/sockmsg.py": [
        "socket",
        "sys",
        "ctypes",
        "pysnmp.carrier.error",
        "ipaddress"
    ],
    "/tmp/pysnmp/pysnmp/carrier/twisted/__init__.py": [],
    "/tmp/pysnmp/pysnmp/carrier/twisted/base.py": [
        "pysnmp.carrier.base.AbstractTransport",
        "pysnmp.carrier.twisted.dispatch.TwistedDispatcher"
    ],
    "/tmp/pysnmp/pysnmp/carrier/twisted/dgram/__init__.py": [],
    "/tmp/pysnmp/pysnmp/carrier/twisted/dgram/base.py": [
        "twisted.internet.protocol.DatagramProtocol",
        "sys",
        "pysnmp.carrier.error",
        "pysnmp.debug",
        "twisted.internet.reactor",
        "pysnmp.carrier.twisted.base.AbstractTwistedTransport"
    ],
    "/tmp/pysnmp/pysnmp/carrier/twisted/dgram/udp.py": [
        "twisted.internet.reactor",
        "pysnmp.carrier.twisted.dgram.base.DgramTwistedTransport",
        "sys",
        "pysnmp.carrier.base.AbstractTransportAddress",
        "pysnmp.carrier.error"
    ],
    "/tmp/pysnmp/pysnmp/carrier/twisted/dgram/unix.py": [
        "twisted.internet.reactor",
        "pysnmp.carrier.twisted.dgram.base.DgramTwistedTransport",
        "sys",
        "pysnmp.carrier.base.AbstractTransportAddress",
        "pysnmp.carrier.error"
    ],
    "/tmp/pysnmp/pysnmp/carrier/twisted/dispatch.py": [
        "twisted.internet.task",
        "twisted.internet.reactor",
        "pysnmp.error.PySnmpError",
        "traceback",
        "sys",
        "time",
        "pysnmp.carrier.base.AbstractTransportDispatcher"
    ],
    "/tmp/pysnmp/pysnmp/debug.py": [
        "pysnmp.__version__",
        "pyasn1.compat.octets.octs2ints",
        "logging",
        "pysnmp.error"
    ],
    "/tmp/pysnmp/pysnmp/entity/__init__.py": [],
    "/tmp/pysnmp/pysnmp/entity/config.py": [
        "pysnmp.proto.secmod.rfc3414.priv.des",
        "pysnmp.proto.secmod.eso.priv.des3",
        "pysnmp.proto.secmod.rfc3414.auth.hmacmd5",
        "pysnmp.carrier.asyncore.dgram.unix",
        "pysnmp.proto.secmod.rfc3414.auth.noauth",
        "pysnmp.proto.secmod.eso.priv.aes192",
        "pyasn1.compat.octets.null",
        "pysnmp.proto.secmod.rfc3414.priv.nopriv",
        "pysnmp.proto.secmod.eso.priv.aes256",
        "pysnmp.carrier.asyncore.dgram.udp6",
        "pysnmp.carrier.asyncore.dgram.udp",
        "pysnmp.proto.secmod.rfc3414.auth.hmacsha",
        "pysnmp.proto.secmod.rfc3826.priv.aes",
        "pysnmp.proto.rfc1905",
        "pysnmp.error"
    ],
    "/tmp/pysnmp/pysnmp/entity/engine.py": [
        "pysnmp.proto.secmod.rfc2576.SnmpV2cSecurityModel",
        "pysnmp.proto.mpmod.rfc2576.SnmpV1MessageProcessingModel",
        "pysnmp.entity.observer",
        "pysnmp.proto.secmod.rfc2576.SnmpV1SecurityModel",
        "tempfile",
        "pysnmp.proto.acmod.void",
        "pysnmp.error",
        "sys",
        "pysnmp.proto.mpmod.rfc2576.SnmpV2cMessageProcessingModel",
        "pysnmp.proto.mpmod.rfc3412.SnmpV3MessageProcessingModel",
        "pysnmp.proto.rfc3412.MsgAndPduDispatcher",
        "pysnmp.debug",
        "pysnmp.proto.secmod.rfc3414.SnmpUSMSecurityModel",
        "os",
        "pysnmp.proto.acmod.rfc3415"
    ],
    "/tmp/pysnmp/pysnmp/entity/observer.py": [
        "pysnmp.error"
    ],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/__init__.py": [],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/cmdgen.py": [
        "pysnmp.proto.api.v2c",
        "pysnmp.proto.errind",
        "pysnmp.nextid",
        "pyasn1.type.univ",
        "pysnmp.proto.error.StatusInformation",
        "pysnmp.proto.proxy.rfc2576",
        "pysnmp.entity.rfc3413.config",
        "sys",
        "pysnmp.proto.rfc1905",
        "pysnmp.error",
        "pysnmp.debug"
    ],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/cmdrsp.py": [
        "pysnmp.proto.api.v2c",
        "pysnmp.smi.error",
        "pysnmp.proto.rfc1905",
        "pysnmp.proto.rfc1902",
        "pysnmp.proto.proxy.rfc2576",
        "sys",
        "pysnmp.proto.errind",
        "pysnmp.proto.error",
        "pysnmp.debug",
        "pysnmp.proto.rfc3411"
    ],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/config.py": [
        "pysnmp.smi.error.SmiError",
        "pysnmp.entity.config",
        "pysnmp.smi.error.NoSuchInstanceError"
    ],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/context.py": [
        "pysnmp.debug",
        "pyasn1.compat.octets.null",
        "pyasn1.type.univ",
        "pysnmp.error"
    ],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/mibvar.py": [
        "pysnmp.smi.error.NoSuchObjectError",
        "pyasn1.type.univ"
    ],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/ntforg.py": [
        "pysnmp.proto.proxy.rfc2576",
        "pysnmp.proto.rfc3411",
        "pysnmp.smi.rfc1902",
        "pysnmp.proto.api.v2c",
        "sys",
        "pysnmp.proto.error",
        "pysnmp.debug",
        "pysnmp.nextid",
        "pyasn1.compat.octets.null",
        "pysnmp.entity.rfc3413.config",
        "pysnmp.smi.view"
    ],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/ntfrcv.py": [
        "pysnmp.proto.api.v2c",
        "pysnmp.proto.rfc3411",
        "pysnmp.proto.proxy.rfc2576",
        "sys",
        "pysnmp.proto.api.v1",
        "pysnmp.proto.error",
        "pysnmp.debug",
        "pyasn1.compat.octets.null"
    ],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/oneliner/__init__.py": [],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/oneliner/cmdgen.py": [
        "pysnmp.hlapi.asyncore",
        "pysnmp.hlapi.lcd",
        "pysnmp.hlapi.asyncore.sync",
        "pysnmp.hlapi.varbinds",
        "pyasn1.compat.octets.null",
        "pyasn1.type.univ"
    ],
    "/tmp/pysnmp/pysnmp/entity/rfc3413/oneliner/ntforg.py": [
        "pysnmp.hlapi.asyncore",
        "pysnmp.hlapi.lcd",
        "pysnmp.hlapi.asyncore.sync",
        "pysnmp.hlapi.varbinds",
        "pysnmp.entity.rfc3413.context",
        "pyasn1.compat.octets.null",
        "pysnmp.entity.config"
    ],
    "/tmp/pysnmp/pysnmp/error.py": [],
    "/tmp/pysnmp/pysnmp/hlapi/__init__.py": [],
    "/tmp/pysnmp/pysnmp/hlapi/asyncio/__init__.py": [],
    "/tmp/pysnmp/pysnmp/hlapi/asyncio/cmdgen.py": [
        "pysnmp.entity.rfc3413.cmdgen",
        "pysnmp.hlapi.lcd",
        "pysnmp.hlapi.asyncio.transport",
        "pysnmp.hlapi.varbinds",
        "pysnmp.hlapi.context",
        "pysnmp.smi.rfc1902",
        "pysnmp.hlapi.auth",
        "trollius"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/asyncio/ntforg.py": [
        "pysnmp.entity.rfc3413.ntforg",
        "pysnmp.hlapi.lcd",
        "pysnmp.hlapi.asyncio.transport",
        "pysnmp.hlapi.varbinds",
        "pysnmp.hlapi.context",
        "pysnmp.smi.rfc1902",
        "pysnmp.hlapi.auth",
        "trollius"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/asyncio/transport.py": [
        "pysnmp.carrier.asyncio.dgram.udp",
        "socket",
        "pysnmp.error.PySnmpError",
        "sys",
        "pysnmp.carrier.asyncio.dgram.udp6",
        "pysnmp.hlapi.transport.AbstractTransportTarget"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/__init__.py": [],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/cmdgen.py": [
        "pysnmp.entity.rfc3413.cmdgen",
        "pysnmp.hlapi.lcd",
        "pysnmp.hlapi.asyncore.transport",
        "pysnmp.hlapi.varbinds",
        "pysnmp.hlapi.context",
        "pysnmp.smi.rfc1902",
        "pysnmp.hlapi.auth"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/ntforg.py": [
        "pysnmp.entity.rfc3413.ntforg",
        "pysnmp.hlapi.lcd",
        "pysnmp.hlapi.asyncore.transport",
        "pysnmp.hlapi.varbinds",
        "pysnmp.hlapi.context",
        "pysnmp.smi.rfc1902",
        "pysnmp.hlapi.auth"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/sync/__init__.py": [],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/sync/cmdgen.py": [
        "pysnmp.hlapi.asyncore.cmdgen",
        "sys.version_info",
        "pysnmp.hlapi.varbinds",
        "pysnmp.proto.errind",
        "pysnmp.proto.rfc1905.endOfMibView",
        "pyasn1.type.univ.Null"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/sync/compat/__init__.py": [],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/sync/compat/cmdgen.py": [
        "pysnmp.hlapi.asyncore.cmdgen",
        "pysnmp.hlapi.varbinds",
        "pysnmp.proto.errind",
        "pysnmp.proto.rfc1905.endOfMibView",
        "pyasn1.type.univ.Null"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/sync/compat/ntforg.py": [
        "pysnmp.hlapi.asyncore.ntforg"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/sync/ntforg.py": [
        "pysnmp.hlapi.asyncore.ntforg",
        "sys.version_info"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/asyncore/transport.py": [
        "pysnmp.carrier.asyncore.dgram.udp",
        "socket",
        "sys",
        "pysnmp.carrier.asyncore.dgram.udp6",
        "pysnmp.carrier.asyncore.dgram.unix",
        "pysnmp.error",
        "pysnmp.hlapi.transport.AbstractTransportTarget"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/auth.py": [
        "pysnmp.error",
        "pyasn1.compat.octets.null",
        "pysnmp.entity.config"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/context.py": [
        "pyasn1.compat.octets.null"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/lcd.py": [
        "pysnmp.hlapi.auth",
        "pysnmp.error",
        "pysnmp.nextid",
        "pysnmp.entity.config"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/transport.py": [
        "pysnmp.carrier.base.AbstractTransport",
        "pyasn1.compat.octets.null",
        "pysnmp.error"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/twisted/__init__.py": [],
    "/tmp/pysnmp/pysnmp/hlapi/twisted/cmdgen.py": [
        "pysnmp.entity.rfc3413.cmdgen",
        "twisted.python.failure.Failure",
        "pysnmp.hlapi.twisted.transport",
        "pysnmp.hlapi.varbinds",
        "pysnmp.hlapi.context",
        "pysnmp.smi.rfc1902",
        "twisted.internet.defer.Deferred",
        "pysnmp.hlapi.auth",
        "pysnmp.hlapi.lcd"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/twisted/ntforg.py": [
        "twisted.internet.reactor",
        "twisted.python.failure.Failure",
        "pysnmp.entity.rfc3413.ntforg",
        "pysnmp.hlapi.twisted.transport",
        "pysnmp.hlapi.varbinds",
        "pysnmp.hlapi.context",
        "pysnmp.smi.rfc1902",
        "twisted.internet.defer.Deferred",
        "pysnmp.hlapi.auth",
        "pysnmp.hlapi.lcd"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/twisted/transport.py": [
        "pysnmp.carrier.twisted.dgram.udp",
        "socket",
        "sys",
        "pysnmp.error.PySnmpError",
        "pysnmp.hlapi.transport.AbstractTransportTarget"
    ],
    "/tmp/pysnmp/pysnmp/hlapi/varbinds.py": [
        "pysnmp.smi.view",
        "pysnmp.smi.rfc1902"
    ],
    "/tmp/pysnmp/pysnmp/nextid.py": [
        "random"
    ],
    "/tmp/pysnmp/pysnmp/proto/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/acmod/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/acmod/rfc3415.py": [
        "pysnmp.proto.error",
        "pysnmp.proto.errind",
        "pysnmp.debug",
        "pysnmp.smi.error.NoSuchInstanceError"
    ],
    "/tmp/pysnmp/pysnmp/proto/acmod/void.py": [
        "pysnmp.debug",
        "pysnmp.proto.errind",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/api/__init__.py": [
        "pysnmp.proto.api.verdec",
        "pysnmp.proto.api.v2c",
        "pysnmp.proto.api.v1"
    ],
    "/tmp/pysnmp/pysnmp/proto/api/v1.py": [
        "socket",
        "pysnmp.nextid",
        "pyasn1.type.univ",
        "pysnmp.proto.rfc1155",
        "pysnmp.proto.rfc1157",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/api/v2c.py": [
        "pysnmp.proto.api.v1",
        "pyasn1.type.univ",
        "pyasn1.type.constraint",
        "pysnmp.proto.rfc1905",
        "pysnmp.proto.rfc1902",
        "pysnmp.proto.rfc1901"
    ],
    "/tmp/pysnmp/pysnmp/proto/api/verdec.py": [
        "pyasn1.codec.ber.eoo",
        "pyasn1.error.PyAsn1Error",
        "pyasn1.codec.ber.decoder",
        "pysnmp.proto.error.ProtocolError",
        "pyasn1.type.univ"
    ],
    "/tmp/pysnmp/pysnmp/proto/cache.py": [
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/errind.py": [],
    "/tmp/pysnmp/pysnmp/proto/error.py": [
        "pysnmp.error.PySnmpError",
        "pyasn1.error.PyAsn1Error",
        "pysnmp.debug"
    ],
    "/tmp/pysnmp/pysnmp/proto/mpmod/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/mpmod/base.py": [
        "pysnmp.proto.mpmod.cache",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/mpmod/cache.py": [
        "pysnmp.nextid",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/mpmod/rfc2576.py": [
        "pysnmp.proto.api.v2c",
        "pysnmp.proto.rfc3411",
        "pysnmp.proto.error",
        "pyasn1.codec.ber.eoo",
        "sys",
        "pysnmp.proto.api.v1",
        "pyasn1.error.PyAsn1Error",
        "pysnmp.proto.errind",
        "pyasn1.codec.ber.decoder",
        "pysnmp.debug",
        "pyasn1.compat.octets.null",
        "pyasn1.type.univ",
        "pysnmp.proto.mpmod.base.AbstractMessageProcessingModel"
    ],
    "/tmp/pysnmp/pysnmp/proto/mpmod/rfc3412.py": [
        "pyasn1.type.namedtype",
        "pyasn1.type.constraint",
        "pysnmp.proto.rfc1905",
        "pyasn1.codec.ber.eoo",
        "sys",
        "pyasn1.codec.ber.decoder",
        "pysnmp.proto.api",
        "pysnmp.proto.errind",
        "pysnmp.proto.error",
        "pysnmp.debug",
        "pysnmp.proto.rfc3411",
        "pyasn1.type.univ",
        "pyasn1.error.PyAsn1Error",
        "pysnmp.proto.mpmod.base.AbstractMessageProcessingModel"
    ],
    "/tmp/pysnmp/pysnmp/proto/proxy/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/proxy/rfc2576.py": [
        "pysnmp.proto.rfc1905",
        "pysnmp.proto.api.v2c",
        "pysnmp.proto.api.v1",
        "pysnmp.proto.error",
        "pysnmp.debug",
        "pysnmp.proto.rfc3411"
    ],
    "/tmp/pysnmp/pysnmp/proto/rfc1155.py": [
        "pyasn1.type.constraint",
        "pyasn1.type.tag",
        "pyasn1.type.namedtype",
        "pysnmp.proto.error",
        "pyasn1.type.univ",
        "pyasn1.error.PyAsn1Error"
    ],
    "/tmp/pysnmp/pysnmp/proto/rfc1157.py": [
        "pyasn1.type.univ",
        "pyasn1.type.tag",
        "pyasn1.type.namedtype",
        "pysnmp.proto.rfc1155",
        "pyasn1.type.namedval"
    ],
    "/tmp/pysnmp/pysnmp/proto/rfc1901.py": [
        "pyasn1.type.univ",
        "pysnmp.proto.rfc1905",
        "pyasn1.type.namedtype",
        "pyasn1.type.namedval"
    ],
    "/tmp/pysnmp/pysnmp/proto/rfc1902.py": [
        "pyasn1.type.tag",
        "pyasn1.type.namedtype",
        "pyasn1.type.univ",
        "pysnmp.proto.rfc1155",
        "pyasn1.type.namedval",
        "sys.version_info",
        "pyasn1.compat.octets",
        "pyasn1.type.constraint",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/rfc1905.py": [
        "pyasn1.type.tag",
        "pyasn1.type.namedtype",
        "pyasn1.type.univ",
        "pyasn1.type.namedval",
        "pyasn1.type.constraint",
        "pysnmp.proto.rfc1902"
    ],
    "/tmp/pysnmp/pysnmp/proto/rfc3411.py": [
        "pysnmp.proto.rfc1905",
        "pysnmp.proto.rfc1157"
    ],
    "/tmp/pysnmp/pysnmp/proto/rfc3412.py": [
        "pysnmp.error.PySnmpError",
        "pysnmp.proto.api.verdec",
        "pysnmp.smi.builder",
        "pysnmp.proto.cache",
        "sys",
        "pysnmp.smi.instrum",
        "pysnmp.proto.errind",
        "pysnmp.proto.error",
        "pysnmp.debug",
        "pysnmp.nextid",
        "pyasn1.compat.octets.null"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/secmod/base.py": [
        "pysnmp.proto.secmod.cache",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/cache.py": [
        "pysnmp.nextid",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/eso/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/secmod/eso/priv/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/secmod/eso/priv/aes192.py": [
        "pysnmp.proto.secmod.eso.priv.aesbase"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/eso/priv/aes256.py": [
        "pysnmp.proto.secmod.eso.priv.aesbase"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/eso/priv/aesbase.py": [
        "pysnmp.proto.secmod.rfc3826.priv.aes",
        "pysnmp.proto.secmod.rfc3414.auth.hmacsha",
        "math.ceil",
        "pysnmp.proto.secmod.rfc3414.auth.hmacmd5",
        "sha",
        "pysnmp.proto.error",
        "pysnmp.proto.secmod.rfc3414.localkey"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/eso/priv/des3.py": [
        "pysnmp.proto.secmod.rfc3414.auth.hmacsha",
        "random",
        "math.ceil",
        "pysnmp.proto.secmod.rfc3414.auth.hmacmd5",
        "sha",
        "pysnmp.proto.secmod.rfc3414.priv.base",
        "pysnmp.proto.errind",
        "pysnmp.proto.error",
        "pyasn1.compat.octets.null",
        "pyasn1.type.univ",
        "pysnmp.proto.secmod.rfc3414.localkey"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc2576.py": [
        "pysnmp.carrier.asyncore.dgram.udp",
        "pysnmp.proto.errind",
        "pyasn1.codec.ber.encoder",
        "sys",
        "pysnmp.carrier.asyncore.dgram.udp6",
        "pysnmp.carrier.asyncore.dgram.unix",
        "pyasn1.error.PyAsn1Error",
        "pysnmp.proto.secmod.base",
        "pysnmp.proto.error",
        "pysnmp.debug",
        "pysnmp.smi.error.NoSuchInstanceError"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/__init__.py": [
        "pysnmp.proto.secmod.rfc3414.service"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/auth/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/auth/base.py": [
        "pysnmp.proto.errind",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/auth/hmacmd5.py": [
        "pysnmp.proto.secmod.rfc3414.auth.base",
        "pysnmp.proto.errind",
        "pysnmp.proto.error",
        "pyasn1.type.univ",
        "pysnmp.proto.secmod.rfc3414.localkey"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/auth/hmacsha.py": [
        "sha",
        "pysnmp.proto.secmod.rfc3414.auth.base",
        "pysnmp.proto.errind",
        "pysnmp.proto.error",
        "pyasn1.type.univ",
        "pysnmp.proto.secmod.rfc3414.localkey"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/auth/noauth.py": [
        "pysnmp.proto.secmod.rfc3414.auth.base",
        "pysnmp.proto.errind",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/localkey.py": [
        "sha",
        "pyasn1.type.univ"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/priv/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/priv/base.py": [
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/priv/des.py": [
        "pysnmp.proto.secmod.rfc3414.auth.hmacsha",
        "sys.version_info",
        "random",
        "pysnmp.proto.secmod.rfc3414.auth.hmacmd5",
        "pysnmp.proto.secmod.rfc3414.priv.base",
        "pysnmp.proto.errind",
        "pysnmp.proto.error",
        "pyasn1.type.univ",
        "pysnmp.proto.secmod.rfc3414.localkey"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/priv/nopriv.py": [
        "pysnmp.proto.secmod.rfc3414.priv.base",
        "pysnmp.proto.errind",
        "pysnmp.proto.error"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3414/service.py": [
        "pysnmp.proto.errind",
        "pysnmp.proto.secmod.eso.priv.des3",
        "pysnmp.proto.secmod.rfc3414.auth.hmacmd5",
        "pysnmp.proto.secmod.base.AbstractSecurityModel",
        "pysnmp.proto.secmod.rfc3414.auth.noauth",
        "pyasn1.type.namedtype",
        "pysnmp.proto.secmod.eso.priv.aes192",
        "pyasn1.compat.octets.null",
        "pyasn1.type.univ",
        "pysnmp.proto.secmod.eso.priv.aes256",
        "pysnmp.proto.secmod.rfc3414.priv.nopriv",
        "pyasn1.error.PyAsn1Error",
        "pysnmp.proto.rfc1155",
        "pysnmp.proto.secmod.rfc3414.auth.hmacsha",
        "time",
        "pyasn1.codec.ber.encoder",
        "sys",
        "pyasn1.codec.ber.decoder",
        "pysnmp.smi.error.NoSuchInstanceError",
        "pysnmp.proto.secmod.rfc3826.priv.aes",
        "pyasn1.type.constraint",
        "pysnmp.proto.secmod.rfc3414.priv.des",
        "pyasn1.codec.ber.eoo",
        "pysnmp.proto.error",
        "pysnmp.debug"
    ],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3826/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3826/priv/__init__.py": [],
    "/tmp/pysnmp/pysnmp/proto/secmod/rfc3826/priv/aes.py": [
        "pysnmp.proto.secmod.rfc3414.auth.hmacsha",
        "random",
        "pysnmp.proto.secmod.rfc3414.auth.hmacmd5",
        "pysnmp.proto.secmod.rfc3414.priv.base",
        "pysnmp.proto.errind",
        "pysnmp.proto.error",
        "pyasn1.type.univ",
        "pysnmp.proto.secmod.rfc3414.localkey"
    ],
    "/tmp/pysnmp/pysnmp/smi/__init__.py": [],
    "/tmp/pysnmp/pysnmp/smi/builder.py": [
        "pysnmp.smi.error",
        "struct",
        "traceback",
        "sys",
        "imp",
        "time",
        "pysnmp.debug",
        "os",
        "marshal",
        "types"
    ],
    "/tmp/pysnmp/pysnmp/smi/compiler.py": [
        "pysmi.searcher.stub.StubSearcher",
        "pysmi.borrower.pyfile.PyFileBorrower",
        "pysmi.codegen.pysnmp.PySnmpCodeGen",
        "pysmi.codegen.pysnmp.baseMibs",
        "os",
        "pysmi.parser.smi.parserFactory",
        "sys",
        "pysmi.writer.pyfile.PyFileWriter",
        "pysmi.searcher.pypackage.PyPackageSearcher",
        "pysmi.compiler.MibCompiler",
        "pysnmp.smi.error",
        "pysmi.parser.dialect.smiV1Relaxed",
        "pysmi.reader.url.getReadersFromUrls"
    ],
    "/tmp/pysnmp/pysnmp/smi/error.py": [
        "pysnmp.error.PySnmpError",
        "pyasn1.error.PyAsn1Error"
    ],
    "/tmp/pysnmp/pysnmp/smi/exval.py": [
        "pysnmp.proto.rfc1905"
    ],
    "/tmp/pysnmp/pysnmp/smi/indices.py": [
        "bisect.bisect"
    ],
    "/tmp/pysnmp/pysnmp/smi/instrum.py": [
        "traceback",
        "sys",
        "pysnmp.smi.error",
        "pysnmp.debug"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/ASN1-ENUMERATION.py": [
        "pyasn1.type.namedval"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/ASN1-REFINEMENT.py": [
        "pyasn1.type.constraint"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/ASN1.py": [
        "pysnmp.proto.rfc1902",
        "pyasn1.type.univ"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/PYSNMP-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/PYSNMP-SOURCE-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/PYSNMP-USM-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/RFC1158-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/RFC1213-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-COMMUNITY-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-FRAMEWORK-MIB.py": [
        "time",
        "os"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-MPD-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-NOTIFICATION-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-PROXY-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-TARGET-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-USER-BASED-SM-3DES-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-USER-BASED-SM-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-USM-AES-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMP-VIEW-BASED-ACM-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMPv2-CONF.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMPv2-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMPv2-SMI.py": [
        "pysnmp.smi.exval",
        "pysnmp.cache",
        "pyasn1.error.PyAsn1Error",
        "pysnmp.smi.indices.OidOrderedDict",
        "sys",
        "traceback",
        "pysnmp.proto.rfc1902",
        "pysnmp.smi.error",
        "pysnmp.debug"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMPv2-TC.py": [
        "pysnmp.smi.error",
        "pyasn1.compat.octets",
        "sys",
        "pysnmp.debug"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/SNMPv2-TM.py": [
        "pyasn1.compat.octets.oct2int",
        "socket.inet_ntoa",
        "pyasn1.compat.octets.int2oct",
        "socket.inet_aton",
        "socket.AF_INET"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/TRANSPORT-ADDRESS-MIB.py": [
        "struct",
        "socket.inet_aton",
        "pyasn1.compat.octets.oct2int",
        "sys",
        "socket.inet_ntoa",
        "pyasn1.compat.octets.int2oct",
        "socket",
        "pysnmp.error"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/__init__.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/instances/__PYSNMP-USM-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/instances/__SNMP-FRAMEWORK-MIB.py": [
        "time"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/instances/__SNMP-MPD-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/instances/__SNMP-TARGET-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/instances/__SNMP-USER-BASED-SM-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/instances/__SNMP-VIEW-BASED-ACM-MIB.py": [],
    "/tmp/pysnmp/pysnmp/smi/mibs/instances/__SNMPv2-MIB.py": [
        "sys.version",
        "pysnmp.__version__",
        "time.time"
    ],
    "/tmp/pysnmp/pysnmp/smi/mibs/instances/__init__.py": [],
    "/tmp/pysnmp/pysnmp/smi/rfc1902.py": [
        "pysnmp.proto.api.v2c",
        "pyasn1.type.base.AbstractSimpleAsn1Item",
        "pysnmp.proto.rfc1905",
        "pysnmp.proto.rfc1902",
        "pysnmp.smi.error.SmiError",
        "pysnmp.smi.compiler.addMibCompiler",
        "sys",
        "pyasn1.error.PyAsn1Error",
        "pysnmp.debug",
        "pysnmp.smi.builder.ZipMibSource"
    ],
    "/tmp/pysnmp/pysnmp/smi/view.py": [
        "pysnmp.smi.indices.OrderedDict",
        "pysnmp.smi.indices.OidOrderedDict",
        "sys",
        "pysnmp.smi.error",
        "pysnmp.debug",
        "types"
    ]
}
{
    "/tmp/pytrackr/pytrackr/__init__.py": [],
    "/tmp/pytrackr/pytrackr/api.py": [
        "logging",
        "datetime",
        "requests",
        "pytrackr.device.trackrDevice"
    ],
    "/tmp/pytrackr/pytrackr/device.py": [
        "datetime"
    ]
}
{
    "/tmp/pytz/pytz/__init__.py": [
        "sys",
        "pytz",
        "os",
        "doctest",
        "datetime",
        "pytz.tzfile.build_tzinfo",
        "pytz.lazy.LazySet",
        "pytz.lazy.LazyList",
        "pytz.exceptions.UnknownTimeZoneError",
        "pytz.tzinfo.unpickler",
        "pytz.lazy.LazyDict",
        "pytz.exceptions.InvalidTimeError",
        "pytz.exceptions.NonExistentTimeError",
        "pytz.exceptions.AmbiguousTimeError",
        "os.path"
    ],
    "/tmp/pytz/pytz/exceptions.py": [],
    "/tmp/pytz/pytz/lazy.py": [
        "collections.Mapping",
        "threading.RLock"
    ],
    "/tmp/pytz/pytz/reference.py": [
        "datetime.datetime",
        "pytz.HOUR",
        "datetime.tzinfo",
        "datetime.timedelta",
        "pytz.ZERO",
        "time"
    ],
    "/tmp/pytz/pytz/tzfile.py": [
        "pprint.pprint",
        "pytz.tzinfo.StaticTzInfo",
        "os.path",
        "pytz.tzinfo.DstTzInfo",
        "datetime.datetime",
        "struct.calcsize",
        "pytz.tzinfo.memorized_datetime",
        "pytz.tzinfo.memorized_ttinfo",
        "pytz.tzinfo.memorized_timedelta",
        "struct.unpack"
    ],
    "/tmp/pytz/pytz/tzinfo.py": [
        "sets.Set",
        "datetime.tzinfo",
        "datetime.timedelta",
        "pytz",
        "bisect.bisect_right",
        "datetime.datetime",
        "pytz.exceptions.AmbiguousTimeError",
        "pytz.exceptions.NonExistentTimeError"
    ]
}
{
    "/tmp/pyunifi/pyunifi/__init__.py": [],
    "/tmp/pyunifi/pyunifi/controller.py": [
        "_ssl",
        "logging",
        "ast",
        "urllib2",
        "urllib",
        "sys",
        "ssl",
        "json",
        "time.time",
        "http.cookiejar"
    ]
}
{
    "/tmp/pyvera/pyvera/__init__.py": [
        "logging",
        ".subscribe.SubscriptionRegistry",
        "requests"
    ],
    "/tmp/pyvera/pyvera/subscribe.py": [
        "pyvera.get_controller",
        "logging",
        "threading",
        "collections",
        "time",
        "requests"
    ]
}
{
    "/tmp/pywebpush/pywebpush/__init__.py": [
        "six",
        "base64",
        "http_ece",
        "json",
        "pyelliptic",
        "requests",
        "os"
    ]
}
{
    "/tmp/pywemo/pywemo/__init__.py": [],
    "/tmp/pywemo/pywemo/color.py": [],
    "/tmp/pywemo/pywemo/discovery.py": [
        ".ouimeaux_device.bridge.Bridge",
        ".ouimeaux_device.lightswitch.LightSwitch",
        ".ouimeaux_device.insight.Insight",
        ".ouimeaux_device.maker.Maker",
        ".ouimeaux_device.motion.Motion",
        ".ouimeaux_device.switch.Switch",
        ".ouimeaux_device.api.xsd.device",
        "requests",
        ".ssdp",
        ".ouimeaux_device.coffeemaker.CoffeeMaker"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/__init__.py": [
        "..discovery.discover_devices",
        ".api.xsd.device",
        "logging",
        ".api.service.Service",
        "urlparse.urlparse",
        "time",
        "requests"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/api/__init__.py": [],
    "/tmp/pywemo/pywemo/ouimeaux_device/api/service.py": [
        "logging",
        ".xsd.service",
        "xml.etree.cElementTree",
        "requests"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/api/xsd/__init__.py": [],
    "/tmp/pywemo/pywemo/ouimeaux_device/api/xsd/device.py": [
        "io.BytesIO",
        "re",
        "datetime.datetime",
        "base64",
        "datetime.tzinfo",
        "datetime.timedelta",
        "sys",
        "elementtree.ElementTree"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/api/xsd/service.py": [
        "io.BytesIO",
        "re",
        "datetime.datetime",
        "base64",
        "datetime.tzinfo",
        "datetime.timedelta",
        "sys",
        "elementtree.ElementTree"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/bridge.py": [
        "..color.limit_to_gamut",
        "six",
        "six.moves.html_escape",
        "..color.get_profiles",
        "time",
        ".Device",
        "xml.etree.cElementTree"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/coffeemaker.py": [
        "pywemo.ouimeaux_device.api.xsd.device.quote_xml",
        "sys",
        ".switch.Switch",
        "enum.IntEnum",
        "xml.etree.cElementTree"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/insight.py": [
        ".switch.Switch",
        "datetime.datetime"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/lightswitch.py": [
        ".switch.Switch"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/maker.py": [
        "xml.etree.cElementTree",
        ".switch.Switch"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/motion.py": [
        ".Device"
    ],
    "/tmp/pywemo/pywemo/ouimeaux_device/switch.py": [
        ".Device"
    ],
    "/tmp/pywemo/pywemo/ssdp.py": [
        ".util.etree_to_dict",
        "logging",
        "socket",
        "datetime.timedelta",
        "threading",
        "pprint.pprint",
        "datetime.datetime",
        "re",
        ".util.interface_addresses",
        "requests",
        "xml.etree.ElementTree",
        "select"
    ],
    "/tmp/pywemo/pywemo/subscribe.py": [
        "logging",
        "socket",
        "xml.etree.cElementTree",
        "threading",
        "collections",
        "time",
        "http.server",
        "sched",
        "requests"
    ],
    "/tmp/pywemo/pywemo/util.py": [
        "collections.defaultdict",
        "netifaces"
    ]
}
{
    "/tmp/pywinusb/pywinusb/hid/__init__.py": [
        "__future__.absolute_import",
        ".hid_pnp_mixin",
        ".core",
        ".helpers"
    ],
    "/tmp/pywinusb/pywinusb/hid/core.py": [
        ".tools",
        "ctypes.c_wchar",
        "__future__.absolute_import",
        "ctypes.wintypes.DWORD",
        "ctypes.sizeof",
        "ctypes.byref",
        "collections",
        "ctypes.create_unicode_buffer",
        "_winreg",
        ".winapi",
        "sys",
        "ctypes.c_ubyte",
        "ctypes.c_ulong",
        "__future__.print_function",
        "ctypes.c_ushort",
        "threading",
        ".helpers",
        "ctypes"
    ],
    "/tmp/pywinusb/pywinusb/hid/helpers.py": [
        "__future__.absolute_import",
        "sys",
        "UserList.UserList",
        "__future__.print_function"
    ],
    "/tmp/pywinusb/pywinusb/hid/hid_pnp_mixin.py": [
        ".core",
        ".winapi",
        ".wnd_hook_mixin",
        "__future__.absolute_import",
        "ctypes",
        "ctypes.wintypes.DWORD",
        "__future__.print_function"
    ],
    "/tmp/pywinusb/pywinusb/hid/tools.py": [
        ".winapi",
        "__future__.absolute_import",
        "operator.attrgetter",
        ".helpers",
        ".usage_pages"
    ],
    "/tmp/pywinusb/pywinusb/hid/usage_pages.py": [
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/pywinusb/pywinusb/hid/winapi.py": [
        "ctypes.Union",
        "ctypes.c_wchar",
        "__future__.absolute_import",
        "ctypes.byref",
        "platform",
        "ctypes.wintypes.LPCWSTR",
        "ctypes.c_ulong",
        "ctypes.sizeof",
        "ctypes.wintypes.ULONG",
        "ctypes.c_long",
        "ctypes.wintypes.LPWSTR",
        "ctypes",
        ".helpers",
        "ctypes.wintypes.WCHAR",
        "ctypes.wintypes.WORD",
        "ctypes.c_ushort",
        "ctypes.wintypes.HANDLE",
        "ctypes.c_ubyte",
        "ctypes.wintypes.BYTE",
        "ctypes.wintypes.BOOLEAN",
        "ctypes.wintypes.BOOL",
        "ctypes.wintypes.DWORD",
        "ctypes.Structure",
        "ctypes.c_uint",
        "ctypes.c_void_p",
        "ctypes.POINTER"
    ],
    "/tmp/pywinusb/pywinusb/hid/wnd_hook_mixin.py": [
        "wx",
        "ctypes.wintypes.WPARAM",
        "ctypes.wintypes.LPARAM",
        "ctypes.wintypes.HANDLE",
        "ctypes.wintypes.LPVOID",
        "__future__.absolute_import",
        "platform",
        "ctypes",
        "ctypes.wintypes.LONG",
        "ctypes.wintypes.UINT",
        "__future__.print_function"
    ]
}
{
    "/tmp/pyyeelight/pyyeelight/__init__.py": [
        "voluptuous.All",
        "voluptuous.Range",
        ".yeelightAPICall.YeelightAPICall",
        "voluptuous.Any",
        "voluptuous.Schema"
    ],
    "/tmp/pyyeelight/pyyeelight/yeelightAPICall.py": [
        ".yeelightMessage.YeelightCommand",
        ".yeelightMessage.YeelightResponse",
        "socket",
        "uuid"
    ],
    "/tmp/pyyeelight/pyyeelight/yeelightMessage.py": [
        "json"
    ]
}
{
    "/tmp/qhue/qhue/__init__.py": [],
    "/tmp/qhue/qhue/qhue.py": [
        "socket.getfqdn",
        "sys",
        "json",
        "requests"
    ]
}
{
    "/tmp/requests/requests/__init__.py": [
        ".exceptions.FileModeWarning",
        ".packages.urllib3.contrib.pyopenssl",
        ".packages.urllib3.exceptions.DependencyWarning",
        "warnings",
        "logging"
    ],
    "/tmp/requests/requests/_internal_utils.py": [
        ".compat.str",
        ".compat.builtin_str",
        ".compat.is_py2"
    ],
    "/tmp/requests/requests/adapters.py": [
        ".utils.urldefragauth",
        ".packages.urllib3.exceptions.SSLError",
        ".packages.urllib3.util.retry.Retry",
        ".packages.urllib3.exceptions.ResponseError",
        ".packages.urllib3.exceptions.MaxRetryError",
        ".utils.DEFAULT_CA_BUNDLE_PATH",
        ".exceptions.InvalidSchema",
        ".packages.urllib3.exceptions.HTTPError",
        ".packages.urllib3.exceptions.ProtocolError",
        ".exceptions.ReadTimeout",
        ".compat.basestring",
        ".packages.urllib3.exceptions.ConnectTimeoutError",
        ".exceptions.ConnectionError",
        ".packages.urllib3.exceptions.ClosedPoolError",
        ".utils.prepend_scheme_if_needed",
        ".packages.urllib3.util.Timeout",
        ".exceptions.ProxyError",
        ".packages.urllib3.poolmanager.proxy_from_url",
        ".structures.CaseInsensitiveDict",
        ".utils.select_proxy",
        ".exceptions.SSLError",
        ".packages.urllib3.response.HTTPResponse",
        ".models.Response",
        ".packages.urllib3.exceptions.ReadTimeoutError",
        ".exceptions.ConnectTimeout",
        ".exceptions.RetryError",
        ".utils.get_encoding_from_headers",
        ".packages.urllib3.exceptions.ProxyError",
        ".packages.urllib3.exceptions.NewConnectionError",
        ".cookies.extract_cookies_to_jar",
        "socket",
        ".compat.urlparse",
        ".packages.urllib3.poolmanager.PoolManager",
        ".auth._basic_auth_str",
        "os.path",
        ".utils.get_auth_from_url"
    ],
    "/tmp/requests/requests/api.py": [
        ".sessions"
    ],
    "/tmp/requests/requests/auth.py": [
        "hashlib",
        "re",
        ".utils.parse_dict_header",
        "warnings",
        ".compat.basestring",
        ".compat.urlparse",
        "threading",
        "base64.b64encode",
        ".compat.str",
        "time",
        ".cookies.extract_cookies_to_jar",
        "os",
        "._internal_utils.to_native_string"
    ],
    "/tmp/requests/requests/certs.py": [
        "os.path"
    ],
    "/tmp/requests/requests/compat.py": [
        "sys"
    ],
    "/tmp/requests/requests/cookies.py": [
        ".compat.urlunparse",
        "calendar",
        "._internal_utils.to_native_string",
        "collections",
        "copy",
        ".compat.cookielib",
        ".compat.Morsel",
        ".compat.urlparse",
        "dummy_threading",
        "time"
    ],
    "/tmp/requests/requests/exceptions.py": [
        ".packages.urllib3.exceptions.HTTPError"
    ],
    "/tmp/requests/requests/hooks.py": [],
    "/tmp/requests/requests/models.py": [
        "idna",
        "io.UnsupportedOperation",
        ".compat.urlencode",
        ".packages.urllib3.util.parse_url",
        ".utils.iter_slices",
        "._internal_utils.unicode_is_ascii",
        ".utils.guess_filename",
        "datetime",
        ".packages.urllib3.filepost.encode_multipart_formdata",
        ".packages.urllib3.fields.RequestField",
        ".packages.urllib3.exceptions.DecodeError",
        ".utils.super_len",
        ".compat.urlunparse",
        ".packages.urllib3.exceptions.ProtocolError",
        "._internal_utils.to_native_string",
        ".utils.check_header_validity",
        ".compat.basestring",
        ".status_codes.codes",
        ".exceptions.ConnectionError",
        ".utils.parse_header_links",
        ".utils.guess_json_utf",
        ".exceptions.InvalidURL",
        ".cookies.cookiejar_from_dict",
        ".utils.requote_uri",
        ".exceptions.StreamConsumedError",
        "collections",
        ".packages.urllib3.exceptions.ReadTimeoutError",
        ".utils.stream_decode_response_unicode",
        ".structures.CaseInsensitiveDict",
        ".compat.is_py2",
        ".utils.to_key_val_list",
        ".hooks.default_hooks",
        "sys",
        ".compat.json",
        ".exceptions.HTTPError",
        ".compat.cookielib",
        ".compat.urlsplit",
        ".packages.urllib3.exceptions.LocationParseError",
        ".auth.HTTPBasicAuth",
        ".cookies._copy_cookie_jar",
        ".compat.bytes",
        ".cookies.get_cookie_header",
        ".exceptions.ChunkedEncodingError",
        ".exceptions.MissingSchema",
        ".compat.str",
        ".exceptions.ContentDecodingError",
        ".compat.chardet",
        ".compat.builtin_str",
        ".utils.get_auth_from_url"
    ],
    "/tmp/requests/requests/packages/__init__.py": [
        "sys",
        "chardet",
        "urllib3",
        "__future__.absolute_import"
    ],
    "/tmp/requests/requests/packages/chardet/__init__.py": [
        ".universaldetector",
        "sys.version_info"
    ],
    "/tmp/requests/requests/packages/chardet/big5freq.py": [],
    "/tmp/requests/requests/packages/chardet/big5prober.py": [
        ".mbcssm.Big5SMModel",
        ".codingstatemachine.CodingStateMachine",
        ".chardistribution.Big5DistributionAnalysis",
        ".mbcharsetprober.MultiByteCharSetProber"
    ],
    "/tmp/requests/requests/packages/chardet/chardetect.py": [
        "chardet.universaldetector.UniversalDetector",
        "argparse",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "sys",
        "chardet.__version__",
        "__future__.print_function"
    ],
    "/tmp/requests/requests/packages/chardet/chardistribution.py": [
        ".euctwfreq.EUCTW_TYPICAL_DISTRIBUTION_RATIO",
        ".euctwfreq.EUCTW_TABLE_SIZE",
        ".gb2312freq.GB2312CharToFreqOrder",
        ".jisfreq.JIS_TABLE_SIZE",
        ".euctwfreq.EUCTWCharToFreqOrder",
        ".big5freq.Big5CharToFreqOrder",
        ".jisfreq.JIS_TYPICAL_DISTRIBUTION_RATIO",
        ".big5freq.BIG5_TABLE_SIZE",
        ".euckrfreq.EUCKRCharToFreqOrder",
        ".gb2312freq.GB2312_TYPICAL_DISTRIBUTION_RATIO",
        ".gb2312freq.GB2312_TABLE_SIZE",
        ".euckrfreq.EUCKR_TYPICAL_DISTRIBUTION_RATIO",
        ".euckrfreq.EUCKR_TABLE_SIZE",
        ".big5freq.BIG5_TYPICAL_DISTRIBUTION_RATIO",
        ".compat.wrap_ord",
        ".jisfreq.JISCharToFreqOrder"
    ],
    "/tmp/requests/requests/packages/chardet/charsetgroupprober.py": [
        "sys",
        ".charsetprober.CharSetProber",
        ".constants"
    ],
    "/tmp/requests/requests/packages/chardet/charsetprober.py": [
        "re",
        ".constants"
    ],
    "/tmp/requests/requests/packages/chardet/codingstatemachine.py": [
        ".constants.eStart",
        ".compat.wrap_ord"
    ],
    "/tmp/requests/requests/packages/chardet/compat.py": [
        "sys"
    ],
    "/tmp/requests/requests/packages/chardet/constants.py": [],
    "/tmp/requests/requests/packages/chardet/cp949prober.py": [
        ".codingstatemachine.CodingStateMachine",
        ".mbcssm.CP949SMModel",
        ".mbcharsetprober.MultiByteCharSetProber",
        ".chardistribution.EUCKRDistributionAnalysis"
    ],
    "/tmp/requests/requests/packages/chardet/escprober.py": [
        ".compat.wrap_ord",
        ".escsm.ISO2022KRSMModel",
        ".escsm.ISO2022CNSMModel",
        ".escsm.ISO2022JPSMModel",
        ".codingstatemachine.CodingStateMachine",
        ".escsm.HZSMModel",
        ".charsetprober.CharSetProber",
        ".constants"
    ],
    "/tmp/requests/requests/packages/chardet/escsm.py": [
        ".constants.eStart",
        ".constants.eError",
        ".constants.eItsMe"
    ],
    "/tmp/requests/requests/packages/chardet/eucjpprober.py": [
        ".mbcharsetprober.MultiByteCharSetProber",
        ".jpcntx.EUCJPContextAnalysis",
        "sys",
        ".codingstatemachine.CodingStateMachine",
        ".chardistribution.EUCJPDistributionAnalysis",
        ".mbcssm.EUCJPSMModel",
        ".constants"
    ],
    "/tmp/requests/requests/packages/chardet/euckrfreq.py": [],
    "/tmp/requests/requests/packages/chardet/euckrprober.py": [
        ".mbcssm.EUCKRSMModel",
        ".codingstatemachine.CodingStateMachine",
        ".mbcharsetprober.MultiByteCharSetProber",
        ".chardistribution.EUCKRDistributionAnalysis"
    ],
    "/tmp/requests/requests/packages/chardet/euctwfreq.py": [],
    "/tmp/requests/requests/packages/chardet/euctwprober.py": [
        ".mbcssm.EUCTWSMModel",
        ".codingstatemachine.CodingStateMachine",
        ".mbcharsetprober.MultiByteCharSetProber",
        ".chardistribution.EUCTWDistributionAnalysis"
    ],
    "/tmp/requests/requests/packages/chardet/gb2312freq.py": [],
    "/tmp/requests/requests/packages/chardet/gb2312prober.py": [
        ".chardistribution.GB2312DistributionAnalysis",
        ".codingstatemachine.CodingStateMachine",
        ".mbcharsetprober.MultiByteCharSetProber",
        ".mbcssm.GB2312SMModel"
    ],
    "/tmp/requests/requests/packages/chardet/hebrewprober.py": [
        ".compat.wrap_ord",
        ".constants.eDetecting",
        ".constants.eNotMe",
        ".charsetprober.CharSetProber"
    ],
    "/tmp/requests/requests/packages/chardet/jisfreq.py": [],
    "/tmp/requests/requests/packages/chardet/jpcntx.py": [
        ".compat.wrap_ord"
    ],
    "/tmp/requests/requests/packages/chardet/langbulgarianmodel.py": [],
    "/tmp/requests/requests/packages/chardet/langcyrillicmodel.py": [],
    "/tmp/requests/requests/packages/chardet/langgreekmodel.py": [],
    "/tmp/requests/requests/packages/chardet/langhebrewmodel.py": [],
    "/tmp/requests/requests/packages/chardet/langhungarianmodel.py": [],
    "/tmp/requests/requests/packages/chardet/langthaimodel.py": [],
    "/tmp/requests/requests/packages/chardet/latin1prober.py": [
        ".compat.wrap_ord",
        ".constants.eNotMe",
        ".charsetprober.CharSetProber"
    ],
    "/tmp/requests/requests/packages/chardet/mbcharsetprober.py": [
        "sys",
        ".charsetprober.CharSetProber",
        ".constants"
    ],
    "/tmp/requests/requests/packages/chardet/mbcsgroupprober.py": [
        ".cp949prober.CP949Prober",
        ".charsetgroupprober.CharSetGroupProber",
        ".utf8prober.UTF8Prober",
        ".euctwprober.EUCTWProber",
        ".euckrprober.EUCKRProber",
        ".eucjpprober.EUCJPProber",
        ".gb2312prober.GB2312Prober",
        ".big5prober.Big5Prober",
        ".sjisprober.SJISProber"
    ],
    "/tmp/requests/requests/packages/chardet/mbcssm.py": [
        ".constants.eStart",
        ".constants.eItsMe",
        ".constants.eError"
    ],
    "/tmp/requests/requests/packages/chardet/sbcharsetprober.py": [
        ".compat.wrap_ord",
        "sys",
        ".charsetprober.CharSetProber",
        ".constants"
    ],
    "/tmp/requests/requests/packages/chardet/sbcsgroupprober.py": [
        ".langhungarianmodel.Latin2HungarianModel",
        ".charsetgroupprober.CharSetGroupProber",
        ".langgreekmodel.Win1253GreekModel",
        ".langcyrillicmodel.Win1251CyrillicModel",
        ".langcyrillicmodel.Koi8rModel",
        ".langcyrillicmodel.MacCyrillicModel",
        ".langgreekmodel.Latin7GreekModel",
        ".langhebrewmodel.Win1255HebrewModel",
        ".sbcharsetprober.SingleByteCharSetProber",
        ".langbulgarianmodel.Win1251BulgarianModel",
        ".langthaimodel.TIS620ThaiModel",
        ".langcyrillicmodel.Ibm866Model",
        ".langcyrillicmodel.Ibm855Model",
        ".hebrewprober.HebrewProber",
        ".langhungarianmodel.Win1250HungarianModel",
        ".langcyrillicmodel.Latin5CyrillicModel",
        ".langbulgarianmodel.Latin5BulgarianModel"
    ],
    "/tmp/requests/requests/packages/chardet/sjisprober.py": [
        ".mbcssm.SJISSMModel",
        ".chardistribution.SJISDistributionAnalysis",
        ".mbcharsetprober.MultiByteCharSetProber",
        "sys",
        ".codingstatemachine.CodingStateMachine",
        ".jpcntx.SJISContextAnalysis",
        ".constants"
    ],
    "/tmp/requests/requests/packages/chardet/universaldetector.py": [
        ".mbcsgroupprober.MBCSGroupProber",
        "sys",
        "re",
        ".latin1prober.Latin1Prober",
        ".sbcsgroupprober.SBCSGroupProber",
        "codecs",
        ".escprober.EscCharSetProber",
        ".constants"
    ],
    "/tmp/requests/requests/packages/chardet/utf8prober.py": [
        ".codingstatemachine.CodingStateMachine",
        ".charsetprober.CharSetProber",
        ".mbcssm.UTF8SMModel",
        ".constants"
    ],
    "/tmp/requests/requests/packages/idna/__init__.py": [],
    "/tmp/requests/requests/packages/idna/codec.py": [
        ".core.IDNAError",
        ".core.alabel",
        ".core.decode",
        "re",
        "codecs",
        ".core.encode",
        ".core.ulabel"
    ],
    "/tmp/requests/requests/packages/idna/compat.py": [
        ".codec",
        ".core"
    ],
    "/tmp/requests/requests/packages/idna/core.py": [
        ".uts46data.uts46data",
        "re",
        "sys",
        ".idnadata",
        "unicodedata",
        "bisect",
        ".intranges.intranges_contain"
    ],
    "/tmp/requests/requests/packages/idna/idnadata.py": [],
    "/tmp/requests/requests/packages/idna/intranges.py": [
        "bisect"
    ],
    "/tmp/requests/requests/packages/idna/uts46data.py": [],
    "/tmp/requests/requests/packages/urllib3/__init__.py": [
        ".connectionpool.HTTPSConnectionPool",
        ".util.retry.Retry",
        ".connectionpool.connection_from_url",
        "__future__.absolute_import",
        ".filepost.encode_multipart_formdata",
        ".connectionpool.HTTPConnectionPool",
        ".poolmanager.proxy_from_url",
        ".response.HTTPResponse",
        "warnings",
        ".util.url.get_host",
        ".util.timeout.Timeout",
        "logging",
        ".poolmanager.ProxyManager",
        ".poolmanager.PoolManager",
        ".exceptions",
        ".util.request.make_headers"
    ],
    "/tmp/requests/requests/packages/urllib3/_collections.py": [
        ".packages.ordered_dict.OrderedDict",
        "collections.MutableMapping",
        ".packages.six.PY3",
        "collections.Mapping",
        "__future__.absolute_import",
        ".packages.six.itervalues",
        ".packages.six.iterkeys"
    ],
    "/tmp/requests/requests/packages/urllib3/connection.py": [
        ".exceptions.SubjectAltNameWarning",
        "__future__.absolute_import",
        "datetime",
        ".packages.ssl_match_hostname.match_hostname",
        ".util.ssl_.resolve_ssl_version",
        ".exceptions.ConnectTimeoutError",
        ".packages.six",
        ".packages.ssl_match_hostname.CertificateError",
        ".util.ssl_.create_urllib3_context",
        "socket.timeout",
        ".util.ssl_.resolve_cert_reqs",
        ".packages.six.moves.http_client.HTTPConnection",
        ".util.ssl_.ssl_wrap_socket",
        "socket.error",
        "warnings",
        ".util.ssl_.assert_fingerprint",
        ".exceptions.SystemTimeWarning",
        "sys",
        ".exceptions.NewConnectionError",
        "._collections.HTTPHeaderDict",
        "logging",
        "socket",
        ".util.connection",
        "os"
    ],
    "/tmp/requests/requests/packages/urllib3/connectionpool.py": [
        ".util.retry.Retry",
        ".connection.HTTPConnection",
        ".exceptions.ProxyError",
        ".exceptions.MaxRetryError",
        "__future__.absolute_import",
        ".exceptions.EmptyPoolError",
        ".util.timeout.Timeout",
        ".exceptions.ProtocolError",
        ".util.request.set_file_position",
        ".exceptions.ClosedPoolError",
        "errno",
        ".packages.six",
        ".packages.ssl_match_hostname.CertificateError",
        "socket.timeout",
        ".exceptions.ReadTimeoutError",
        ".exceptions.SSLError",
        ".response.HTTPResponse",
        ".connection.DummyConnection",
        "socket.error",
        ".exceptions.TimeoutError",
        ".connection.HTTPException",
        "warnings",
        ".util.url.Url",
        ".util.url.get_host",
        ".connection.BaseSSLError",
        ".exceptions.HostChangedError",
        ".connection.port_by_scheme",
        ".exceptions.NewConnectionError",
        ".connection.VerifiedHTTPSConnection",
        ".exceptions.LocationValueError",
        ".util.response.assert_header_parsing",
        "sys",
        "logging",
        "socket",
        ".exceptions.HeaderParsingError",
        ".util.connection.is_connection_dropped",
        ".packages.six.moves.queue",
        ".request.RequestMethods",
        ".connection.HTTPSConnection",
        ".exceptions.InsecureRequestWarning"
    ],
    "/tmp/requests/requests/packages/urllib3/contrib/__init__.py": [],
    "/tmp/requests/requests/packages/urllib3/contrib/appengine.py": [
        "..util.retry.Retry",
        "..exceptions.MaxRetryError",
        "__future__.absolute_import",
        "..exceptions.ProtocolError",
        "..request.RequestMethods",
        "..exceptions.SSLError",
        "..response.HTTPResponse",
        "..packages.six.BytesIO",
        "..packages.six.moves.urllib.parse.urljoin",
        "..exceptions.TimeoutError",
        "warnings",
        "..util.timeout.Timeout",
        "..exceptions.HTTPError",
        "logging",
        "os",
        "..exceptions.HTTPWarning"
    ],
    "/tmp/requests/requests/packages/urllib3/contrib/ntlmpool.py": [
        "..HTTPSConnectionPool",
        "ntlm.ntlm",
        "__future__.absolute_import",
        "logging.getLogger",
        "..packages.six.moves.http_client.HTTPSConnection"
    ],
    "/tmp/requests/requests/packages/urllib3/contrib/pyopenssl.py": [
        "OpenSSL.crypto.X509",
        "cryptography.x509.extensions.Extensions",
        "idna",
        "cryptography.hazmat.backends.openssl.x509._Certificate",
        "__future__.absolute_import",
        "..packages.backports.makefile.backport_makefile",
        "six",
        "OpenSSL.SSL",
        "cryptography.hazmat.backends.openssl.backend",
        "io.BytesIO",
        "socket.error",
        "cryptography.x509",
        "..util",
        "ssl",
        "sys",
        "logging",
        "socket.timeout"
    ],
    "/tmp/requests/requests/packages/urllib3/contrib/socks.py": [
        "..connectionpool.HTTPConnectionPool",
        "..connectionpool.HTTPSConnectionPool",
        "socket.error",
        "..exceptions.NewConnectionError",
        "warnings",
        "..util.url.parse_url",
        "socks",
        "..exceptions.DependencyWarning",
        "socket.timeout",
        "..poolmanager.PoolManager",
        "__future__.absolute_import",
        "..connection.HTTPConnection",
        "..connection.HTTPSConnection",
        "..exceptions.ConnectTimeoutError"
    ],
    "/tmp/requests/requests/packages/urllib3/exceptions.py": [
        "__future__.absolute_import",
        ".packages.six.moves.http_client.IncompleteRead"
    ],
    "/tmp/requests/requests/packages/urllib3/fields.py": [
        "mimetypes",
        ".packages.six",
        "__future__.absolute_import",
        "email.utils"
    ],
    "/tmp/requests/requests/packages/urllib3/filepost.py": [
        ".packages.six.b",
        ".packages.six",
        "__future__.absolute_import",
        "uuid.uuid4",
        ".fields.RequestField",
        "codecs",
        "io.BytesIO"
    ],
    "/tmp/requests/requests/packages/urllib3/packages/__init__.py": [
        ".ssl_match_hostname",
        "__future__.absolute_import"
    ],
    "/tmp/requests/requests/packages/urllib3/packages/backports/__init__.py": [],
    "/tmp/requests/requests/packages/urllib3/packages/backports/makefile.py": [
        "io",
        "socket.SocketIO"
    ],
    "/tmp/requests/requests/packages/urllib3/packages/ordered_dict.py": [
        "_abcoll.ValuesView",
        "dummy_thread.get_ident",
        "_abcoll.ItemsView",
        "_abcoll.KeysView"
    ],
    "/tmp/requests/requests/packages/urllib3/packages/six.py": [
        "functools",
        "__future__.absolute_import",
        "struct",
        "sys",
        "itertools",
        "operator",
        "io",
        "types"
    ],
    "/tmp/requests/requests/packages/urllib3/packages/ssl_match_hostname/__init__.py": [
        "sys",
        "._implementation.match_hostname",
        "._implementation.CertificateError"
    ],
    "/tmp/requests/requests/packages/urllib3/packages/ssl_match_hostname/_implementation.py": [
        "sys",
        "re"
    ],
    "/tmp/requests/requests/packages/urllib3/poolmanager.py": [
        ".connectionpool.HTTPSConnectionPool",
        ".util.retry.Retry",
        "._collections.RecentlyUsedContainer",
        "functools",
        ".exceptions.MaxRetryError",
        ".util.url.parse_url",
        "__future__.absolute_import",
        ".request.RequestMethods",
        ".connectionpool.HTTPConnectionPool",
        "collections",
        ".exceptions.ProxySchemeUnknown",
        ".packages.six.moves.urllib.parse.urljoin",
        ".connectionpool.port_by_scheme",
        ".exceptions.LocationValueError",
        "logging"
    ],
    "/tmp/requests/requests/packages/urllib3/request.py": [
        ".packages.six.moves.urllib.parse.urlencode",
        ".filepost.encode_multipart_formdata",
        "__future__.absolute_import"
    ],
    "/tmp/requests/requests/packages/urllib3/response.py": [
        "contextlib.contextmanager",
        ".packages.six.PY3",
        "__future__.absolute_import",
        ".exceptions.ResponseNotChunked",
        "io",
        ".exceptions.DecodeError",
        ".exceptions.ProtocolError",
        ".packages.six.string_types",
        ".util.response.is_fp_closed",
        ".exceptions.IncompleteRead",
        "socket.timeout",
        ".exceptions.ReadTimeoutError",
        ".exceptions.BodyNotHttplibCompatible",
        ".exceptions.InvalidHeader",
        "socket.error",
        ".connection.HTTPException",
        "._collections.HTTPHeaderDict",
        ".connection.BaseSSLError",
        ".util.response.is_response_to_head",
        ".packages.six.binary_type",
        ".packages.six.moves.http_client",
        "logging",
        "zlib"
    ],
    "/tmp/requests/requests/packages/urllib3/util/__init__.py": [
        ".ssl_.ssl_wrap_socket",
        ".ssl_.SSLContext",
        ".url.parse_url",
        ".retry.Retry",
        ".url.Url",
        ".ssl_.resolve_ssl_version",
        ".response.is_fp_closed",
        ".ssl_.assert_fingerprint",
        ".ssl_.HAS_SNI",
        ".wait.wait_for_read",
        "__future__.absolute_import",
        ".url.get_host",
        ".connection.is_connection_dropped",
        ".ssl_.resolve_cert_reqs",
        ".timeout.current_time",
        ".wait.wait_for_write",
        ".timeout.Timeout",
        ".ssl_.IS_PYOPENSSL",
        ".url.split_first",
        ".request.make_headers"
    ],
    "/tmp/requests/requests/packages/urllib3/util/connection.py": [
        ".wait.wait_for_read",
        "socket",
        ".selectors.SelectorError",
        "__future__.absolute_import",
        ".selectors.HAS_SELECT"
    ],
    "/tmp/requests/requests/packages/urllib3/util/request.py": [
        "..packages.six.b",
        "..packages.six.integer_types",
        "base64.b64encode",
        "__future__.absolute_import",
        "..exceptions.UnrewindableBodyError"
    ],
    "/tmp/requests/requests/packages/urllib3/util/response.py": [
        "..packages.six.moves.http_client",
        "..exceptions.HeaderParsingError",
        "__future__.absolute_import"
    ],
    "/tmp/requests/requests/packages/urllib3/util/retry.py": [
        "collections.namedtuple",
        "..exceptions.InvalidHeader",
        "logging",
        "itertools.takewhile",
        "..exceptions.ResponseError",
        "..exceptions.MaxRetryError",
        "__future__.absolute_import",
        "..packages.six",
        "re",
        "..exceptions.ReadTimeoutError",
        "time",
        "..exceptions.ConnectTimeoutError",
        "..exceptions.ProtocolError",
        "email"
    ],
    "/tmp/requests/requests/packages/urllib3/util/selectors.py": [
        "select",
        "errno",
        "collections.Mapping",
        "math",
        "collections.namedtuple",
        "time"
    ],
    "/tmp/requests/requests/packages/urllib3/util/ssl_.py": [
        "__future__.absolute_import",
        "errno",
        "ssl.CERT_NONE",
        "ssl.wrap_socket",
        "..exceptions.SSLError",
        "hashlib.sha256",
        "binascii.unhexlify",
        "..exceptions.SNIMissingWarning",
        "sys",
        "ssl",
        "binascii.hexlify",
        "hashlib.md5",
        "ssl.PROTOCOL_SSLv23",
        "hashlib.sha1",
        "ssl.HAS_SNI",
        "..exceptions.InsecurePlatformWarning",
        "warnings",
        "hmac"
    ],
    "/tmp/requests/requests/packages/urllib3/util/timeout.py": [
        "..exceptions.TimeoutStateError",
        "__future__.absolute_import",
        "time",
        "socket._GLOBAL_DEFAULT_TIMEOUT"
    ],
    "/tmp/requests/requests/packages/urllib3/util/url.py": [
        "collections.namedtuple",
        "..exceptions.LocationParseError",
        "__future__.absolute_import"
    ],
    "/tmp/requests/requests/packages/urllib3/util/wait.py": [
        ".selectors.DefaultSelector",
        ".selectors.HAS_SELECT",
        ".selectors.EVENT_READ",
        ".selectors.EVENT_WRITE"
    ],
    "/tmp/requests/requests/sessions.py": [
        ".utils.get_netrc_auth",
        ".compat.OrderedDict",
        ".models.DEFAULT_REDIRECT_LIMIT",
        ".models.PreparedRequest",
        ".utils.rewind_body",
        "datetime.datetime",
        ".utils.should_bypass_proxies",
        ".exceptions.InvalidSchema",
        "._internal_utils.to_native_string",
        ".status_codes.codes",
        "collections.Mapping",
        ".exceptions.ContentDecodingError",
        ".cookies.cookiejar_from_dict",
        ".utils.requote_uri",
        ".structures.CaseInsensitiveDict",
        ".cookies.merge_cookies",
        ".packages.urllib3._collections.RecentlyUsedContainer",
        ".compat.urljoin",
        ".adapters.HTTPAdapter",
        ".models.Request",
        ".utils.to_key_val_list",
        ".hooks.default_hooks",
        ".utils.get_environ_proxies",
        ".cookies.extract_cookies_to_jar",
        ".cookies.RequestsCookieJar",
        ".hooks.dispatch_hook",
        ".compat.cookielib",
        ".auth._basic_auth_str",
        ".compat.urlparse",
        ".exceptions.TooManyRedirects",
        ".exceptions.ChunkedEncodingError",
        ".utils.default_headers",
        "os",
        ".utils.get_auth_from_url"
    ],
    "/tmp/requests/requests/status_codes.py": [
        ".structures.LookupDict"
    ],
    "/tmp/requests/requests/structures.py": [
        ".compat.OrderedDict",
        "collections"
    ],
    "/tmp/requests/requests/utils.py": [
        "netrc.netrc",
        "netrc.NetrcParseError",
        ".compat.unquote",
        ".compat.getproxies",
        ".compat.OrderedDict",
        ".exceptions.UnrewindableBodyError",
        ".certs",
        "io",
        ".compat.urlunparse",
        ".compat.basestring",
        "struct",
        ".exceptions.InvalidURL",
        ".cookies.cookiejar_from_dict",
        "re",
        "collections",
        ".structures.CaseInsensitiveDict",
        ".__version__",
        "cgi",
        ".exceptions.InvalidHeader",
        "warnings",
        ".compat.quote",
        ".exceptions.FileModeWarning",
        "codecs",
        ".cookies.RequestsCookieJar",
        "socket",
        ".compat.integer_types",
        ".compat.proxy_bypass",
        ".compat.bytes",
        ".compat.parse_http_list",
        ".compat.urlparse",
        ".compat.str",
        "os"
    ]
}
{
    "/tmp/rxv/rxv/__init__.py": [
        "__future__.division",
        "logging",
        "__future__.absolute_import",
        ".ssdp",
        "__future__.print_function",
        ".rxv.RXV"
    ],
    "/tmp/rxv/rxv/exceptions.py": [
        "__future__.division",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/rxv/rxv/rxv.py": [
        "collections.namedtuple",
        ".exceptions.ResponseException",
        "__future__.absolute_import",
        ".exceptions.PlaybackUnavailable",
        "math.floor",
        "re",
        "__future__.division",
        "warnings",
        ".exceptions.MenuUnavailable",
        "xml.etree.ElementTree",
        "copy",
        "__future__.print_function",
        "logging",
        "urlparse.urlparse",
        "time",
        "requests"
    ],
    "/tmp/rxv/rxv/ssdp.py": [
        "urlparse.urljoin",
        "__future__.division",
        "socket",
        "collections.namedtuple",
        "__future__.absolute_import",
        "re",
        "xml.etree.ElementTree",
        "requests",
        "__future__.print_function"
    ]
}
{
    "/tmp/samsungctl/samsungctl/__init__.py": [],
    "/tmp/samsungctl/samsungctl/__main__.py": [
        "argparse",
        "logging",
        "socket",
        ".__title__",
        ".__doc__",
        "json",
        ".__version__",
        "collections",
        ".exceptions",
        ".Remote",
        "os",
        ".interactive"
    ],
    "/tmp/samsungctl/samsungctl/exceptions.py": [],
    "/tmp/samsungctl/samsungctl/interactive.py": [
        "curses"
    ],
    "/tmp/samsungctl/samsungctl/remote.py": [
        ".exceptions",
        ".remote_legacy.RemoteLegacy",
        ".remote_websocket.RemoteWebsocket"
    ],
    "/tmp/samsungctl/samsungctl/remote_legacy.py": [
        "base64",
        "logging",
        "socket",
        "time",
        ".exceptions"
    ],
    "/tmp/samsungctl/samsungctl/remote_websocket.py": [
        "websocket",
        "logging",
        "base64",
        "json",
        "time",
        ".exceptions"
    ]
}
{
    "/tmp/schiene/schiene/__init__.py": [],
    "/tmp/schiene/schiene/schiene.py": [
        "bs4.BeautifulSoup",
        "datetime.datetime",
        "json",
        "requests"
    ]
}
{
    "/tmp/scsgate/scsgate/__init__.py": [],
    "/tmp/scsgate/scsgate/connection.py": [
        "serial"
    ],
    "/tmp/scsgate/scsgate/messages.py": [
        "functools.reduce"
    ],
    "/tmp/scsgate/scsgate/monitor/__init__.py": [
        "argparse",
        "logging",
        "signal",
        "scsgate.messages",
        "pathlib",
        "sys",
        "yaml",
        "scsgate.connection.Connection"
    ],
    "/tmp/scsgate/scsgate/reactor.py": [
        "queue",
        "threading",
        "scsgate.tasks.MonitorTask",
        "scsgate.tasks.ExecutionError"
    ],
    "/tmp/scsgate/scsgate/tasks.py": [
        "scsgate.messages.StateMessage",
        "scsgate.messages.compose_telegram",
        "scsgate.messages.parse"
    ]
}
{
    "/tmp/selenium/selenium/__init__.py": [],
    "/tmp/selenium/selenium/common/__init__.py": [],
    "/tmp/selenium/selenium/common/exceptions.py": [],
    "/tmp/selenium/selenium/webdriver/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/android/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/android/webdriver.py": [
        "selenium.webdriver.remote.webdriver.WebDriver",
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities"
    ],
    "/tmp/selenium/selenium/webdriver/blackberry/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/blackberry/webdriver.py": [
        "selenium.webdriver.remote.webdriver.WebDriver",
        "selenium.common.exceptions.WebDriverException",
        "subprocess",
        "platform",
        "httplib",
        "os",
        "selenium.webdriver.support.ui.WebDriverWait"
    ],
    "/tmp/selenium/selenium/webdriver/chrome/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/chrome/options.py": [
        "base64",
        "os",
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities"
    ],
    "/tmp/selenium/selenium/webdriver/chrome/remote_connection.py": [
        "selenium.webdriver.remote.remote_connection.RemoteConnection"
    ],
    "/tmp/selenium/selenium/webdriver/chrome/service.py": [
        "selenium.webdriver.common.service"
    ],
    "/tmp/selenium/selenium/webdriver/chrome/webdriver.py": [
        ".service.Service",
        "selenium.webdriver.remote.webdriver.WebDriver",
        ".remote_connection.ChromeRemoteConnection",
        ".options.Options"
    ],
    "/tmp/selenium/selenium/webdriver/common/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/common/action_chains.py": [
        ".utils.keys_to_typing",
        "selenium.webdriver.remote.command.Command"
    ],
    "/tmp/selenium/selenium/webdriver/common/alert.py": [
        "selenium.webdriver.remote.command.Command",
        "selenium.webdriver.common.utils.keys_to_typing"
    ],
    "/tmp/selenium/selenium/webdriver/common/by.py": [],
    "/tmp/selenium/selenium/webdriver/common/desired_capabilities.py": [],
    "/tmp/selenium/selenium/webdriver/common/html5/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/common/html5/application_cache.py": [
        "selenium.webdriver.remote.command.Command"
    ],
    "/tmp/selenium/selenium/webdriver/common/keys.py": [
        "__future__.unicode_literals"
    ],
    "/tmp/selenium/selenium/webdriver/common/proxy.py": [],
    "/tmp/selenium/selenium/webdriver/common/service.py": [
        "urllib2",
        "urllib2",
        "selenium.common.exceptions.WebDriverException",
        "errno",
        "selenium.webdriver.common.utils",
        "subprocess",
        "subprocess.PIPE",
        "platform",
        "time",
        "os"
    ],
    "/tmp/selenium/selenium/webdriver/common/touch_actions.py": [
        "selenium.webdriver.remote.command.Command"
    ],
    "/tmp/selenium/selenium/webdriver/common/utils.py": [
        "urllib2",
        "socket",
        "selenium.webdriver.common.keys.Keys"
    ],
    "/tmp/selenium/selenium/webdriver/edge/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/edge/options.py": [
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities"
    ],
    "/tmp/selenium/selenium/webdriver/edge/service.py": [
        "selenium.webdriver.common.service"
    ],
    "/tmp/selenium/selenium/webdriver/edge/webdriver.py": [
        "selenium.webdriver.remote.webdriver.WebDriver",
        ".service.Service",
        "selenium.webdriver.common.utils",
        "selenium.webdriver.remote.remote_connection.RemoteConnection",
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities"
    ],
    "/tmp/selenium/selenium/webdriver/firefox/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/firefox/extension_connection.py": [
        "logging",
        "selenium.webdriver.firefox.firefox_binary.FirefoxBinary",
        "selenium.webdriver.common.utils",
        "time",
        "selenium.webdriver.remote.command.Command",
        "selenium.webdriver.remote.remote_connection.RemoteConnection",
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities"
    ],
    "/tmp/selenium/selenium/webdriver/firefox/firefox_binary.py": [
        "winreg.HKEY_CURRENT_USER",
        "winreg.HKEY_LOCAL_MACHINE",
        "shlex",
        "winreg.OpenKey",
        "winreg.QueryValue",
        "shutil",
        "selenium.common.exceptions.WebDriverException",
        "selenium.webdriver.common.utils",
        "subprocess.STDOUT",
        "subprocess.Popen",
        "platform",
        "time",
        "os"
    ],
    "/tmp/selenium/selenium/webdriver/firefox/firefox_profile.py": [
        "warnings",
        "warnings",
        "xml.dom.minidom",
        "selenium.webdriver.common.proxy.ProxyType",
        "shutil",
        "selenium.common.exceptions.WebDriverException",
        "tempfile",
        "zipfile",
        "base64",
        "__future__.with_statement",
        "sys",
        "re",
        "json",
        "copy",
        "os",
        "io.BytesIO"
    ],
    "/tmp/selenium/selenium/webdriver/firefox/options.py": [
        "selenium.webdriver.firefox.firefox_profile.FirefoxProfile",
        "selenium.webdriver.firefox.firefox_binary.FirefoxBinary"
    ],
    "/tmp/selenium/selenium/webdriver/firefox/remote_connection.py": [
        "selenium.webdriver.remote.remote_connection.RemoteConnection"
    ],
    "/tmp/selenium/selenium/webdriver/firefox/service.py": [
        "selenium.webdriver.common.service"
    ],
    "/tmp/selenium/selenium/webdriver/firefox/webdriver.py": [
        ".firefox_profile.FirefoxProfile",
        "socket",
        ".service.Service",
        ".extension_connection.ExtensionConnection",
        ".remote_connection.FirefoxRemoteConnection",
        "sys",
        "contextlib.contextmanager",
        ".webelement.FirefoxWebElement",
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities",
        "httplib",
        "shutil",
        "selenium.webdriver.remote.webdriver.WebDriver",
        ".options.Options",
        ".firefox_binary.FirefoxBinary"
    ],
    "/tmp/selenium/selenium/webdriver/firefox/webelement.py": [
        "selenium.webdriver.remote.webelement.WebElement"
    ],
    "/tmp/selenium/selenium/webdriver/ie/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/ie/service.py": [
        "selenium.webdriver.common.service"
    ],
    "/tmp/selenium/selenium/webdriver/ie/webdriver.py": [
        "selenium.webdriver.remote.webdriver.WebDriver",
        ".service.Service",
        "selenium.webdriver.common.utils",
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities"
    ],
    "/tmp/selenium/selenium/webdriver/opera/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/opera/options.py": [
        "selenium.webdriver.chrome.options.Options",
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities"
    ],
    "/tmp/selenium/selenium/webdriver/opera/webdriver.py": [
        "selenium.webdriver.chrome.webdriver.WebDriver",
        ".options.Options"
    ],
    "/tmp/selenium/selenium/webdriver/phantomjs/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/phantomjs/service.py": [
        "tempfile",
        "os",
        "selenium.webdriver.common.service"
    ],
    "/tmp/selenium/selenium/webdriver/phantomjs/webdriver.py": [
        "selenium.webdriver.remote.webdriver.WebDriver",
        ".service.Service",
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities"
    ],
    "/tmp/selenium/selenium/webdriver/remote/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/remote/command.py": [],
    "/tmp/selenium/selenium/webdriver/remote/errorhandler.py": [
        "json",
        "selenium.common.exceptions.InvalidElementStateException",
        "selenium.common.exceptions.NoSuchFrameException",
        "selenium.common.exceptions.StaleElementReferenceException",
        "selenium.common.exceptions.InvalidSelectorException",
        "selenium.common.exceptions.ElementNotSelectableException",
        "selenium.common.exceptions.NoSuchElementException",
        "selenium.common.exceptions.ErrorInResponseException",
        "selenium.common.exceptions.NoSuchWindowException",
        "selenium.common.exceptions.ImeActivationFailedException",
        "selenium.common.exceptions.TimeoutException",
        "selenium.common.exceptions.ImeNotAvailableException",
        "selenium.common.exceptions.WebDriverException",
        "selenium.common.exceptions.ElementNotVisibleException",
        "selenium.common.exceptions.UnexpectedAlertPresentException",
        "selenium.common.exceptions.MoveTargetOutOfBoundsException",
        "selenium.common.exceptions.NoAlertPresentException"
    ],
    "/tmp/selenium/selenium/webdriver/remote/file_detector.py": [
        "abc",
        "selenium.webdriver.common.utils.keys_to_typing",
        "os"
    ],
    "/tmp/selenium/selenium/webdriver/remote/mobile.py": [
        ".command.Command"
    ],
    "/tmp/selenium/selenium/webdriver/remote/remote_connection.py": [
        ".errorhandler.ErrorCode",
        "httplib",
        "logging",
        "socket",
        "selenium.webdriver.common.utils",
        ".utils",
        "base64",
        "urlparse",
        ".command.Command",
        "urllib2",
        "string"
    ],
    "/tmp/selenium/selenium/webdriver/remote/switch_to.py": [
        "selenium.common.exceptions.NoSuchFrameException",
        "selenium.common.exceptions.NoSuchElementException",
        "selenium.webdriver.common.alert.Alert",
        ".command.Command",
        "selenium.webdriver.common.by.By"
    ],
    "/tmp/selenium/selenium/webdriver/remote/utils.py": [
        "logging",
        "tempfile",
        "zipfile",
        "selenium.common.exceptions.NoSuchElementException",
        "json",
        "os"
    ],
    "/tmp/selenium/selenium/webdriver/remote/webdriver.py": [
        "selenium.common.exceptions.WebDriverException",
        ".file_detector.FileDetector",
        "warnings",
        "contextlib.contextmanager",
        "base64",
        ".errorhandler.ErrorHandler",
        ".webelement.WebElement",
        ".mobile.Mobile",
        ".command.Command",
        ".remote_connection.RemoteConnection",
        "selenium.webdriver.common.html5.application_cache.ApplicationCache",
        ".file_detector.LocalFileDetector",
        "selenium.webdriver.common.by.By",
        ".switch_to.SwitchTo"
    ],
    "/tmp/selenium/selenium/webdriver/remote/webelement.py": [
        "hashlib",
        "selenium.webdriver.common.utils.keys_to_typing",
        "pkgutil",
        "base64",
        "zipfile",
        "selenium.common.exceptions.WebDriverException",
        ".command.Command",
        "io.BytesIO",
        "os",
        "selenium.webdriver.common.by.By"
    ],
    "/tmp/selenium/selenium/webdriver/safari/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/safari/service.py": [
        "subprocess.PIPE",
        "selenium.webdriver.common.utils",
        "os",
        "selenium.webdriver.common.service"
    ],
    "/tmp/selenium/selenium/webdriver/safari/webdriver.py": [
        "httplib",
        "selenium.webdriver.remote.webdriver.WebDriver",
        ".service.Service",
        "selenium.webdriver.common.desired_capabilities.DesiredCapabilities"
    ],
    "/tmp/selenium/selenium/webdriver/support/__init__.py": [],
    "/tmp/selenium/selenium/webdriver/support/abstract_event_listener.py": [],
    "/tmp/selenium/selenium/webdriver/support/color.py": [
        "re"
    ],
    "/tmp/selenium/selenium/webdriver/support/event_firing_webdriver.py": [
        "selenium.webdriver.remote.webdriver.WebDriver",
        ".abstract_event_listener.AbstractEventListener",
        "selenium.webdriver.remote.webelement.WebElement",
        "selenium.common.exceptions.WebDriverException",
        "selenium.webdriver.common.by.By"
    ],
    "/tmp/selenium/selenium/webdriver/support/events.py": [],
    "/tmp/selenium/selenium/webdriver/support/expected_conditions.py": [
        "selenium.common.exceptions.NoSuchElementException",
        "selenium.common.exceptions.NoSuchFrameException",
        "selenium.common.exceptions.WebDriverException",
        "selenium.common.exceptions.StaleElementReferenceException",
        "selenium.common.exceptions.NoAlertPresentException"
    ],
    "/tmp/selenium/selenium/webdriver/support/select.py": [
        "selenium.common.exceptions.UnexpectedTagNameException",
        "selenium.webdriver.common.by.By",
        "selenium.common.exceptions.NoSuchElementException"
    ],
    "/tmp/selenium/selenium/webdriver/support/ui.py": [],
    "/tmp/selenium/selenium/webdriver/support/wait.py": [
        "selenium.common.exceptions.NoSuchElementException",
        "selenium.common.exceptions.TimeoutException",
        "time"
    ]
}
{
    "/tmp/sense_hat/sense_hat/__init__.py": [
        "__future__.absolute_import"
    ],
    "/tmp/sense_hat/sense_hat/sense_hat.py": [
        "fcntl",
        "RTIMU",
        ".stick.SenseStick",
        "struct",
        "glob",
        "pwd",
        "time",
        "numpy",
        "copy.deepcopy",
        "array",
        "shutil",
        "os",
        "PIL.Image",
        "math"
    ],
    "/tmp/sense_hat/sense_hat/stick.py": [
        "collections.namedtuple",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "io",
        "select",
        "functools.wraps",
        "struct",
        "errno",
        "__future__.division",
        "threading.Thread",
        "glob",
        "inspect",
        "__future__.print_function",
        "os",
        "threading.Event"
    ]
}
{
    "/tmp/setuptools/setuptools/__init__.py": [
        "distutils.filelist",
        "six.moves.map",
        "functools",
        "setuptools.dist.Feature",
        "setuptools.dist.Distribution",
        ".monkey",
        "fnmatch.fnmatchcase",
        "distutils.util.convert_path",
        "setuptools.extension.Extension",
        "setuptools.depends.Require",
        "six.moves.filter",
        "setuptools.version",
        "os"
    ],
    "/tmp/setuptools/setuptools/archive_util.py": [
        "posixpath",
        "zipfile",
        "tarfile",
        "pkg_resources.ensure_directory",
        "pkg_resources.ContextualZipFile",
        "contextlib",
        "shutil",
        "os",
        "distutils.errors.DistutilsError"
    ],
    "/tmp/setuptools/setuptools/command/__init__.py": [
        "setuptools.command.install_scripts"
    ],
    "/tmp/setuptools/setuptools/command/alias.py": [
        "six.moves.map",
        "setuptools.command.setopt.config_file",
        "distutils.errors.DistutilsOptionError",
        "setuptools.command.setopt.edit_config",
        "setuptools.command.setopt.option_base"
    ],
    "/tmp/setuptools/setuptools/command/bdist_egg.py": [
        "zipfile",
        "distutils.errors.DistutilsSetupError",
        "pkg_resources.ensure_directory",
        "types.CodeType",
        "distutils.log",
        "distutils.sysconfig.get_python_version",
        "six",
        "setuptools.extension.Library",
        "distutils.dir_util.remove_tree",
        "textwrap",
        "sys",
        "pkg_resources.get_build_platform",
        "setuptools.Command",
        "pkg_resources.Distribution",
        "distutils.dir_util.mkpath",
        "sysconfig.get_path",
        "pkg_resources.EntryPoint",
        "os",
        "marshal",
        "distutils.sysconfig.get_python_lib"
    ],
    "/tmp/setuptools/setuptools/command/bdist_rpm.py": [
        "distutils.command.bdist_rpm"
    ],
    "/tmp/setuptools/setuptools/command/bdist_wininst.py": [
        "distutils.command.bdist_wininst"
    ],
    "/tmp/setuptools/setuptools/command/build_ext.py": [
        "distutils.util.byte_compile",
        "distutils.sysconfig.get_config_var",
        "distutils.command.build_ext.build_ext",
        "distutils.sysconfig._config_vars",
        "distutils.sysconfig.customize_compiler",
        "distutils.log",
        "six",
        "distutils.errors.DistutilsError",
        "imp",
        "distutils.ccompiler.new_compiler",
        "dl",
        "distutils.file_util.copy_file",
        "sys",
        "setuptools.extension.Library",
        "itertools",
        "os"
    ],
    "/tmp/setuptools/setuptools/command/build_py.py": [
        "distutils.errors.DistutilsSetupError",
        "distutils.util.convert_path",
        "distutils.errors",
        "six.moves.map",
        "glob.glob",
        "six",
        "textwrap",
        "six.moves.filter",
        "six.moves.filterfalse",
        "itertools",
        "io",
        "fnmatch",
        "os",
        "distutils.command.build_py"
    ],
    "/tmp/setuptools/setuptools/command/develop.py": [
        "distutils.util.convert_path",
        "pkg_resources.PathMetadata",
        "distutils.log",
        "pkg_resources.normalize_path",
        "setuptools",
        "glob",
        "six",
        "setuptools.namespaces",
        "setuptools.command.easy_install.easy_install",
        "io",
        "pkg_resources.Distribution",
        "distutils.errors.DistutilsOptionError",
        "os",
        "distutils.errors.DistutilsError"
    ],
    "/tmp/setuptools/setuptools/command/easy_install.py": [
        "distutils.file_util",
        "distutils.spawn.spawn",
        "distutils.util.byte_compile",
        "distutils.util.subst_vars",
        "setuptools",
        "setuptools.setup",
        "setuptools.dist.Distribution",
        "distutils.core",
        "distutils.errors.DistutilsPlatformError",
        "random",
        "subprocess",
        "distutils.command.install.INSTALL_SCHEMES",
        "distutils.util.subst_vars",
        "distutils.errors.DistutilsArgError",
        "struct",
        "re",
        "tempfile",
        "distutils.util.convert_path",
        "zipimport",
        "setuptools.archive_util.unpack_archive",
        "zipfile",
        "textwrap",
        "distutils.errors.DistutilsError",
        "setuptools.command.egg_info",
        "setuptools.command.bdist_egg",
        "distutils.dir_util",
        "distutils.util.get_platform",
        "pkg_resources.resource_string",
        "shlex",
        "distutils.spawn.find_executable",
        "setuptools.package_index.PackageIndex",
        "setuptools.Command",
        "pkg_resources.Distribution",
        "pkg_resources.normalize_path",
        "distutils.command.build_scripts.first_line_re",
        "setuptools.package_index.URL_SCHEME",
        "pkg_resources",
        "pkg_resources.ensure_directory",
        "pkg_resources.PathMetadata",
        "pkg_resources.Environment",
        "setuptools.py31compat.get_config_vars",
        "distutils.log",
        "pkg_resources.find_distributions",
        "pkg_resources.WorkingSet",
        "setuptools.command.setopt",
        "setuptools.package_index.parse_requirement_arg",
        "distutils.errors.DistutilsOptionError",
        "pkg_resources.yield_lines",
        "pkg_resources.Requirement",
        "setuptools.sandbox.run_setup",
        "pkg_resources.DistributionNotFound",
        "site",
        "pkg_resources.EggMetadata",
        "contextlib",
        "io",
        "shutil",
        "six.moves.configparser",
        "six",
        "setuptools.py27compat.rmtree_safe",
        "distutils.command.install.SCHEME_KEYS",
        "six.moves.map",
        "stat",
        "pkg_resources.get_distribution",
        "warnings",
        "glob.glob",
        "sys",
        "pkg_resources.DEVELOP_DIST",
        "os",
        "pkg_resources.VersionConflict",
        "setuptools.py31compat.get_path"
    ],
    "/tmp/setuptools/setuptools/command/egg_info.py": [
        "distutils.filelist",
        "six.moves.map",
        "setuptools.command.sdist.sdist",
        "pkg_resources.safe_name",
        "packaging",
        "io",
        "setuptools.command.setopt.edit_config",
        "pkg_resources.iter_entry_points",
        "distutils.log",
        "six",
        "re",
        "collections",
        "distutils.filelist.FileList",
        "setuptools.command.sdist.walk_revctrl",
        "distutils.util.convert_path",
        "warnings",
        "setuptools.glob.glob",
        "distutils.errors.DistutilsInternalError",
        "pkg_resources.to_filename",
        "sys",
        "setuptools.Command",
        "setuptools.unicode_utils",
        "pkg_resources.parse_version",
        "pkg_resources.parse_requirements",
        "pkg_resources.yield_lines",
        "pkg_resources.safe_version",
        "pkg_resources.EntryPoint",
        "setuptools.command.bdist_egg",
        "time",
        "os"
    ],
    "/tmp/setuptools/setuptools/command/install.py": [
        "distutils.errors.DistutilsArgError",
        "warnings",
        "glob",
        "inspect",
        "platform",
        "setuptools",
        "distutils.command.install"
    ],
    "/tmp/setuptools/setuptools/command/install_egg_info.py": [
        "distutils.log",
        "setuptools.archive_util.unpack_archive",
        "pkg_resources",
        "setuptools.Command",
        "setuptools.namespaces",
        "distutils.dir_util",
        "os"
    ],
    "/tmp/setuptools/setuptools/command/install_lib.py": [
        "setuptools.archive_util.unpack_directory",
        "distutils.log",
        "itertools.product",
        "itertools.starmap",
        "imp",
        "os",
        "distutils.command.install_lib"
    ],
    "/tmp/setuptools/setuptools/command/install_scripts.py": [
        "setuptools.command.easy_install",
        "setuptools.command.easy_install.current_umask",
        "setuptools.command.easy_install.chmod",
        "pkg_resources.PathMetadata",
        "distutils.log",
        "pkg_resources.ensure_directory",
        "sys",
        "pkg_resources.Distribution",
        "os",
        "distutils.command.install_scripts"
    ],
    "/tmp/setuptools/setuptools/command/py36compat.py": [
        "distutils.util.convert_path",
        "glob.glob",
        "six.moves.filter",
        "os",
        "distutils.command.sdist"
    ],
    "/tmp/setuptools/setuptools/command/register.py": [
        "distutils.command.register"
    ],
    "/tmp/setuptools/setuptools/command/rotate.py": [
        "glob.glob",
        "distutils.util.convert_path",
        "distutils.log",
        "six",
        "setuptools.Command",
        "distutils.errors.DistutilsOptionError",
        "shutil",
        "os"
    ],
    "/tmp/setuptools/setuptools/command/saveopts.py": [
        "setuptools.command.setopt.edit_config",
        "setuptools.command.setopt.option_base"
    ],
    "/tmp/setuptools/setuptools/command/sdist.py": [
        "distutils.command",
        "distutils.log",
        "six",
        "pkg_resources",
        "sys",
        ".py36compat.sdist_add_defaults",
        "contextlib",
        "io",
        "os",
        "distutils.command.sdist"
    ],
    "/tmp/setuptools/setuptools/command/setopt.py": [
        "distutils.util.convert_path",
        "distutils.log",
        "distutils",
        "setuptools.Command",
        "distutils.errors.DistutilsOptionError",
        "os",
        "six.moves.configparser"
    ],
    "/tmp/setuptools/setuptools/command/test.py": [
        "contextlib",
        "operator",
        "distutils.log",
        "six",
        "pkg_resources.add_activation_listener",
        "pkg_resources.resource_listdir",
        "pkg_resources.resource_exists",
        "unittest.TestLoader",
        "six.moves.map",
        "pkg_resources._namespace_packages",
        "sys",
        "setuptools.py31compat.unittest_main",
        "setuptools.Command",
        "distutils.errors.DistutilsOptionError",
        "distutils.errors.DistutilsError",
        "pkg_resources.normalize_path",
        "pkg_resources.require",
        "pkg_resources.working_set",
        "six.moves.filter",
        "itertools",
        "pkg_resources.EntryPoint",
        "os"
    ],
    "/tmp/setuptools/setuptools/command/upload.py": [
        "getpass",
        "distutils.command.upload"
    ],
    "/tmp/setuptools/setuptools/command/upload_docs.py": [
        "distutils.log",
        "tempfile",
        "functools",
        "six",
        "zipfile",
        ".upload.upload",
        "base64.standard_b64encode",
        "itertools",
        "six.moves.urllib",
        "six.moves.http_client",
        "distutils.errors.DistutilsOptionError",
        "shutil",
        "os",
        "pkg_resources.iter_entry_points",
        "socket"
    ],
    "/tmp/setuptools/setuptools/config.py": [
        "setuptools.dist.Distribution",
        "setuptools.dist._Distribution",
        "setuptools.find_packages",
        "collections.defaultdict",
        "distutils.errors.DistutilsFileError",
        "functools.partial",
        "__future__.unicode_literals",
        "six.string_types",
        "__future__.absolute_import",
        "sys",
        "io",
        "distutils.errors.DistutilsOptionError",
        "setuptools.py26compat.import_module",
        "os"
    ],
    "/tmp/setuptools/setuptools/depends.py": [
        "distutils.version.StrictVersion",
        "imp.PY_COMPILED",
        "sys",
        "imp",
        ".py33compat.Bytecode",
        "imp.PKG_DIRECTORY",
        "imp.PY_SOURCE",
        "imp.PY_FROZEN",
        "marshal"
    ],
    "/tmp/setuptools/setuptools/dist.py": [
        "setuptools.command.easy_install.easy_install",
        "shlex",
        "sys",
        "io",
        "distutils.errors.DistutilsPlatformError",
        "distutils.errors.DistutilsSetupError",
        "distutils.dist",
        "packaging",
        "numbers",
        ".py36compat.Distribution_parse_config_files",
        "six",
        "distutils.util.rfc822_escape",
        "re",
        "setuptools.monkey.get_unpatched",
        "six.moves.map",
        "warnings",
        "setuptools.depends.Require",
        "distutils.errors.DistutilsOptionError",
        "setuptools.config.parse_configuration",
        "pkg_resources",
        "setuptools.windows_support",
        "os"
    ],
    "/tmp/setuptools/setuptools/extension.py": [
        "six.moves.map",
        "distutils.extension",
        "functools",
        "re",
        ".monkey.get_unpatched"
    ],
    "/tmp/setuptools/setuptools/glob.py": [
        "six.binary_type",
        "re",
        "fnmatch",
        "os"
    ],
    "/tmp/setuptools/setuptools/launch.py": [
        "sys",
        "tokenize"
    ],
    "/tmp/setuptools/setuptools/lib2to3_ex.py": [
        "distutils.log",
        "lib2to3.refactor.RefactoringTool",
        "lib2to3.refactor.get_fixers_from_package",
        "setuptools",
        "distutils.util.Mixin2to3"
    ],
    "/tmp/setuptools/setuptools/monkey.py": [
        "six",
        "distutils.filelist",
        "functools",
        "inspect",
        "sys",
        "platform",
        "setuptools",
        ".py26compat.import_module",
        "types"
    ],
    "/tmp/setuptools/setuptools/msvc.py": [
        "numpy",
        "distutils.errors",
        "packaging.version.LegacyVersion",
        "sys",
        "platform",
        "itertools",
        "six.moves.filterfalse",
        ".monkey.get_unpatched",
        "os",
        "distutils.msvc9compiler.Reg"
    ],
    "/tmp/setuptools/setuptools/namespaces.py": [
        "six.moves.map",
        "distutils.log",
        "itertools",
        "os"
    ],
    "/tmp/setuptools/setuptools/package_index.py": [
        "setuptools.command.easy_install.samefile",
        "base64",
        "pkg_resources.safe_name",
        "pkg_resources.Environment",
        "pkg_resources.Requirement",
        "shutil",
        "six.moves.configparser",
        "functools.wraps",
        "distutils.log",
        "urllib2.splituser",
        "six",
        "pkg_resources.BINARY_DIST",
        "six.moves.urllib",
        "re",
        "setuptools.ssl_support",
        "fnmatch.translate",
        "pkg_resources.SOURCE_DIST",
        "pkg_resources.find_distributions",
        "six.moves.map",
        "pkg_resources.safe_version",
        "pkg_resources.to_filename",
        "sys",
        "pkg_resources.CHECKOUT_DIST",
        "pkg_resources.Distribution",
        "distutils.errors.DistutilsError",
        "pkg_resources.DEVELOP_DIST",
        "hashlib",
        "setuptools.py27compat.get_all_headers",
        "socket",
        "pkg_resources.normalize_path",
        "setuptools.py26compat.strip_fragment",
        "itertools",
        "setuptools",
        "six.moves.http_client",
        "os"
    ],
    "/tmp/setuptools/setuptools/py26compat.py": [
        "sys",
        "urllib.splittag"
    ],
    "/tmp/setuptools/setuptools/py27compat.py": [
        "sys",
        "platform"
    ],
    "/tmp/setuptools/setuptools/py31compat.py": [
        "tempfile",
        "unittest",
        "sys",
        "distutils.sysconfig.get_config_vars",
        "shutil",
        "distutils.sysconfig.get_python_lib"
    ],
    "/tmp/setuptools/setuptools/py33compat.py": [
        "six",
        "collections",
        "array",
        "dis"
    ],
    "/tmp/setuptools/setuptools/py36compat.py": [
        "configparser.ConfigParser",
        "sys",
        "distutils.debug.DEBUG",
        "distutils.errors.DistutilsOptionError",
        "distutils.util.strtobool"
    ],
    "/tmp/setuptools/setuptools/sandbox.py": [
        "setuptools.sandbox.UnpickleableException",
        "setuptools.sandbox.SandboxViolation",
        "functools",
        "contextlib",
        "operator",
        "six.moves.builtins",
        "tempfile",
        "six",
        "re",
        "six.moves.map",
        "sys",
        "distutils.errors.DistutilsError",
        "os",
        "pkg_resources",
        "pkg_resources.working_set",
        "itertools",
        "pickle"
    ],
    "/tmp/setuptools/setuptools/site-patch.py": [
        "sys",
        "imp",
        "os"
    ],
    "/tmp/setuptools/setuptools/ssl_support.py": [
        "wincertstore",
        "pkg_resources.ExtractionError",
        "functools",
        "atexit",
        "six.moves.urllib",
        "re",
        "six.moves.map",
        "pkg_resources.ResolutionError",
        "socket",
        "six.moves.filter",
        "six.moves.http_client",
        "os"
    ],
    "/tmp/setuptools/setuptools/unicode_utils.py": [
        "unicodedata",
        "six",
        "sys"
    ],
    "/tmp/setuptools/setuptools/version.py": [
        "pkg_resources"
    ],
    "/tmp/setuptools/setuptools/windows_support.py": [
        "platform",
        "ctypes"
    ]
}
{
    "/tmp/sharp_aquos_rc/sharp_aquos_rc/__init__.py": [],
    "/tmp/sharp_aquos_rc/sharp_aquos_rc/tv.py": [
        "socket",
        "time"
    ]
}
{
    "/tmp/slacker/slacker/__init__.py": [
        "slacker.utils.get_item_id_by_name",
        "json",
        "requests"
    ],
    "/tmp/slacker/slacker/utils.py": []
}
{
    "/tmp/sleekxmpp/sleekxmpp/__init__.py": [
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/api.py": [
        "sleekxmpp.xmlstream.JID"
    ],
    "/tmp/sleekxmpp/sleekxmpp/basexmpp.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "__future__.unicode_literals",
        "__future__.with_statement",
        "sleekxmpp.stanza.nick.Nick",
        "sleekxmpp.plugins",
        "sleekxmpp.plugins.load_plugin",
        "sleekxmpp.stanza.roster.Roster",
        "sleekxmpp.stanza",
        "sleekxmpp.xmlstream.stanzabase.XML_NS",
        "sleekxmpp.plugins.PluginManager",
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.api.APIRegistry",
        "sleekxmpp.roster",
        "sleekxmpp.util.misc_ops.setdefaultencoding",
        "sys",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.xmlstream.ET",
        "logging",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.exceptions.IqTimeout",
        "sleekxmpp.exceptions.IqError",
        "threading",
        "sleekxmpp.xmlstream.XMLStream",
        "sleekxmpp.stanza.StreamError",
        "sleekxmpp.stanza.Message",
        "sleekxmpp.xmlstream.matcher.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/clientxmpp.py": [
        "sleekxmpp.basexmpp.BaseXMPP",
        "sleekxmpp.stanza.StreamFeatures",
        "logging",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.xmlstream.XMLStream",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.xmlstream.matcher.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/componentxmpp.py": [
        "hashlib",
        "logging",
        "sleekxmpp.basexmpp.BaseXMPP",
        "__future__.absolute_import",
        "sys",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.xmlstream.XMLStream",
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.matcher.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/exceptions.py": [],
    "/tmp/sleekxmpp/sleekxmpp/features/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_bind/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.features.feature_bind.bind.FeatureBind"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_bind/bind.py": [
        "sleekxmpp.jid.JID",
        "sleekxmpp.stanza.StreamFeatures",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.features.feature_bind.stanza",
        "sleekxmpp.plugins.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_bind/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.features.feature_mechanisms.mechanisms.FeatureMechanisms"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/mechanisms.py": [
        "sleekxmpp.stanza.StreamFeatures",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.xmlstream.RestartStream",
        "sleekxmpp.features.feature_mechanisms.stanza",
        "ssl",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.util.stringprep_profiles.StringPrepError",
        "sleekxmpp.util.sasl",
        "sleekxmpp.xmlstream.matcher.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/stanza/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/stanza/abort.py": [
        "sleekxmpp.xmlstream.StanzaBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/stanza/auth.py": [
        "base64",
        "sleekxmpp.util.bytes",
        "sleekxmpp.xmlstream.StanzaBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/stanza/challenge.py": [
        "base64",
        "sleekxmpp.util.bytes",
        "sleekxmpp.xmlstream.StanzaBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/stanza/failure.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.StanzaBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/stanza/mechanisms.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/stanza/response.py": [
        "base64",
        "sleekxmpp.util.bytes",
        "sleekxmpp.xmlstream.StanzaBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_mechanisms/stanza/success.py": [
        "base64",
        "sleekxmpp.util.bytes",
        "sleekxmpp.xmlstream.StanzaBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_preapproval/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.features.feature_preapproval.preapproval.FeaturePreApproval"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_preapproval/preapproval.py": [
        "sleekxmpp.stanza.StreamFeatures",
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.features.feature_preapproval.stanza",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_preapproval/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_rosterver/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.features.feature_rosterver.rosterver.FeatureRosterVer"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_rosterver/rosterver.py": [
        "sleekxmpp.stanza.StreamFeatures",
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.features.feature_rosterver.stanza",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_rosterver/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_session/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.features.feature_session.session.FeatureSession"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_session/session.py": [
        "sleekxmpp.stanza.StreamFeatures",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.features.feature_session.stanza",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_session/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_starttls/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.features.feature_starttls.starttls.FeatureSTARTTLS"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_starttls/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.StanzaBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/features/feature_starttls/starttls.py": [
        "sleekxmpp.stanza.StreamFeatures",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.RestartStream",
        "sleekxmpp.features.feature_starttls.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/jid.py": [
        "sleekxmpp.thirdparty.OrderedDict",
        "__future__.unicode_literals",
        "encodings.idna",
        "re",
        "copy.deepcopy",
        "socket",
        "stringprep",
        "threading",
        "sleekxmpp.util.stringprep_profiles"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/base.py": [
        "logging",
        "sys",
        "threading",
        "copy"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/gmail_notify.py": [
        "logging",
        "..stanza.iq.Iq",
        "..xmlstream.handler.callback.Callback",
        ".base",
        "..xmlstream.stanzabase.ElementBase",
        "..xmlstream.stanzabase.registerStanzaPlugin",
        "..xmlstream.matcher.xpath.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.plugins.google.nosave.GoogleNoSave",
        "sleekxmpp.plugins.google.settings.GoogleSettings",
        "sleekxmpp.plugins.google.auth.GoogleAuth",
        "sleekxmpp.plugins.google.gmail.Gmail"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/auth/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/auth/auth.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.google.auth.stanza",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/auth/stanza.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/gmail/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/gmail/notifications.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.plugins.google.gmail.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/gmail/stanza.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/nosave/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/nosave/nosave.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.plugins.google.nosave.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/nosave/stanza.py": [
        "sleekxmpp.jid.JID",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/settings/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/settings/settings.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.plugins.google.settings.stanza",
        "sleekxmpp.xmlstream.handler.Callback"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/google/settings/stanza.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0004/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0004.dataforms.XEP_0004"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0004/dataforms.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.plugins.xep_0004.stanza.Form",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0004.stanza.FieldOption",
        "sleekxmpp.plugins.xep_0004.stanza",
        "sleekxmpp.plugins.xep_0004.stanza.FormField",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0004/stanza/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0004/stanza/field.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0004/stanza/form.py": [
        "sleekxmpp.thirdparty.OrderedDict",
        "sleekxmpp.plugins.xep_0004.stanza.FormField",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.ET",
        "logging",
        "copy"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0009/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0009.rpc.XEP_0009"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0009/binding.py": [
        "logging",
        "base64",
        "sys",
        "time",
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0009/remote.py": [
        "binding.xml2py",
        "abc",
        "binding.py2xml",
        "binding.xml2fault",
        "sleekxmpp",
        "inspect",
        "binding.fault2xml",
        "threading.RLock",
        "sys",
        "logging",
        "traceback",
        "threading"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0009/rpc.py": [
        "sleekxmpp.plugins.xep_0009.stanza.RPC.RPCQuery",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0009.stanza",
        "sleekxmpp.plugins.xep_0009.stanza.RPC.MethodResponse",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.plugins.xep_0009.stanza.RPC.MethodCall",
        "sleekxmpp.xmlstream.matcher.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0009/stanza/RPC.py": [
        "sleekxmpp.xmlstream.stanzabase.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0009/stanza/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0012/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0012.last_activity.XEP_0012"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0012/last_activity.py": [
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.plugins.BasePlugin",
        "datetime.timedelta",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "datetime.datetime",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.xep_0012.LastActivity",
        "sleekxmpp.exceptions.XMPPError",
        "logging",
        "sleekxmpp.plugins.xep_0012.stanza"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0012/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0013/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0013.offline.XEP_0013"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0013/offline.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.plugins.xep_0013.stanza",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.stanza.Message",
        "sleekxmpp.xmlstream.handler.Collector"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0013/stanza.py": [
        "sleekxmpp.jid.JID",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.register_stanza_plugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0016/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0016.privacy.XEP_0016"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0016/privacy.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0016.stanza.Privacy",
        "sleekxmpp.Iq",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0016.stanza",
        "sleekxmpp.plugins.xep_0016.stanza.Item"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0016/stanza.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0020/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0020.feature_negotiation.XEP_0020"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0020/feature_negotiation.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0004.Form",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0020.stanza",
        "sleekxmpp.plugins.xep_0020.FeatureNegotiation",
        "logging",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0020/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0027/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0027.gpg.XEP_0027"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0027/gpg.py": [
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.plugins.xep_0027.Encrypted",
        "sleekxmpp.thirdparty.GPG",
        "sleekxmpp.plugins.xep_0027.stanza",
        "sleekxmpp.plugins.xep_0027.Signed",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.stanza.Message",
        "sleekxmpp.xmlstream.register_stanza_plugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0027/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0030/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0030.disco.XEP_0030"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0030/disco.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0030.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.xep_0030.DiscoInfo",
        "sleekxmpp.plugins.xep_0030.DiscoItems",
        "logging",
        "sleekxmpp.plugins.xep_0030.StaticDisco"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0030/stanza/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0030/stanza/info.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0030/stanza/items.py": [
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.register_stanza_plugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0030/static.py": [
        "sleekxmpp.xmlstream.JID",
        "logging",
        "sleekxmpp.Iq",
        "sleekxmpp.exceptions.IqTimeout",
        "sleekxmpp.exceptions.IqError",
        "threading",
        "sleekxmpp.plugins.xep_0030.DiscoInfo",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.xep_0030.DiscoItems"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0033/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0033.stanza.Addresses",
        "sleekxmpp.plugins.xep_0033.addresses.XEP_0033"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0033/addresses.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0033.Addresses",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Presence",
        "sleekxmpp.plugins.xep_0033.stanza",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0033/stanza.py": [
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0045.py": [
        "sleekxmpp.plugins.register_plugin",
        "sleekxmpp.xmlstream.JID",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.matcher.xmlmask.MatchXMLMask",
        "sleekxmpp.Presence",
        "__future__.with_statement",
        "sleekxmpp.exceptions.IqError",
        "sleekxmpp.xmlstream.handler.callback.Callback",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.exceptions.IqTimeout",
        "sleekxmpp.xmlstream.matcher.xpath.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0047/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0047.ibb.XEP_0047"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0047/ibb.py": [
        "sleekxmpp.plugins.xep_0047.IBBytestream",
        "logging",
        "uuid",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0047.Data",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0047.stanza",
        "threading",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0047.Close",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.Message",
        "sleekxmpp.plugins.xep_0047.Open"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0047/stanza.py": [
        "base64",
        "sleekxmpp.util.bytes",
        "re",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.exceptions.XMPPError"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0047/stream.py": [
        "logging",
        "socket",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.util.Queue",
        "threading",
        "sleekxmpp.exceptions.XMPPError"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0048/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0048.bookmarks.XEP_0048"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0048/bookmarks.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0048.stanza",
        "sleekxmpp.exceptions.XMPPError",
        "logging",
        "sleekxmpp.plugins.xep_0048.Bookmarks"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0048/stanza.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0049/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0049.private_storage.XEP_0049"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0049/private_storage.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0049.PrivateXML",
        "sleekxmpp.plugins.xep_0049.stanza",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0049/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0050/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0050.adhoc.XEP_0050"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0050/adhoc.py": [
        "sleekxmpp.xmlstream.JID",
        "logging",
        "sleekxmpp.plugins.xep_0004.Form",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0050.stanza",
        "sleekxmpp.exceptions.IqError",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.xep_0050.Command",
        "sleekxmpp.plugins.BasePlugin",
        "time",
        "sleekxmpp.xmlstream.matcher.StanzaPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0050/stanza.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0054/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0054.vcard_temp.XEP_0054"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0054/stanza.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "base64",
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.plugins.xep_0082",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.ET",
        "datetime",
        "sleekxmpp.util.bytes"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0054/vcard_temp.py": [
        "sleekxmpp.JID",
        "sleekxmpp.plugins.xep_0054.VCardTemp",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0054.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.StanzaPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0059/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0059.rsm.XEP_0059"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0059/rsm.py": [
        "sleekxmpp.plugins.xep_0059.Set",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0059.stanza",
        "sleekxmpp.exceptions.XMPPError",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0059/stanza.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0060/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0060.pubsub.XEP_0060"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0060/pubsub.py": [
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.plugins.xep_0060.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.base.BasePlugin",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0060/stanza/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0060/stanza/base.py": [
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0060/stanza/pubsub.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0060.stanza.base.OptionalSetting",
        "sleekxmpp.plugins.xep_0004",
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.Iq"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0060/stanza/pubsub_errors.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.stanza.Error"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0060/stanza/pubsub_event.py": [
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.plugins.xep_0004.Form",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0082",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.ET",
        "datetime",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0060/stanza/pubsub_owner.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0060.stanza.pubsub.Subscriptions",
        "sleekxmpp.plugins.xep_0060.stanza.pubsub.Configure",
        "sleekxmpp.plugins.xep_0004.Form",
        "sleekxmpp.plugins.xep_0060.stanza.base.OptionalSetting",
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.plugins.xep_0060.stanza.pubsub.Affiliations",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0060.stanza.pubsub.Affiliation"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0065/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0065.proxy.XEP_0065"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0065/proxy.py": [
        "sleekxmpp.thirdparty.socks.socksocket",
        "hashlib.sha1",
        "logging",
        "socket",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.plugins.xep_0065.Socks5",
        "threading",
        "uuid.uuid4",
        "sleekxmpp.thirdparty.socks.PROXY_TYPE_SOCKS5",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.base.base_plugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0065/stanza.py": [
        "sleekxmpp.jid.JID",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0066/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0066.oob.XEP_0066"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0066/oob.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.plugins.xep_0066.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0066/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0071/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0071.xhtml_im.XEP_0071"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0071/stanza.py": [
        "sleekxmpp.xmlstream.tostring",
        "sleekxmpp.thirdparty.OrderedDict",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.util.unicode",
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0071/xhtml_im.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0071.XHTML_IM",
        "sleekxmpp.plugins.xep_0071.stanza",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0077/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0077.register.XEP_0077"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0077/register.py": [
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.stanza.StreamFeatures",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.plugins.xep_0077.Register",
        "sleekxmpp.plugins.xep_0077.stanza",
        "ssl",
        "sleekxmpp.plugins.xep_0077.RegisterFeature",
        "sleekxmpp.plugins.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0077/stanza.py": [
        "__future__.unicode_literals",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0078/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0078.legacyauth.XEP_0078"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0078/legacyauth.py": [
        "sleekxmpp.jid.JID",
        "sleekxmpp.stanza.StreamFeatures",
        "logging",
        "uuid",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.exceptions.IqTimeout",
        "hashlib",
        "sleekxmpp.exceptions.IqError",
        "sys",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0078.stanza"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0078/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0080/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0080.geoloc.XEP_0080"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0080/geoloc.py": [
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.plugins.xep_0080.stanza",
        "sleekxmpp.plugins.xep_0080.Geoloc",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0080/stanza.py": [
        "sleekxmpp.plugins.xep_0082",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0082.py": [
        "sleekxmpp.plugins.register_plugin",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.thirdparty.tzutc",
        "datetime",
        "sleekxmpp.thirdparty.parse_iso",
        "sleekxmpp.thirdparty.tzoffset"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0084/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0084.avatar.XEP_0084"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0084/avatar.py": [
        "hashlib",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0084.stanza",
        "logging",
        "sleekxmpp.plugins.xep_0084.Data",
        "sleekxmpp.plugins.xep_0084.MetaData"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0084/stanza.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.util.bytes",
        "base64.b64encode",
        "sleekxmpp.xmlstream.ElementBase",
        "base64.b64decode"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0085/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0085.chat_states.XEP_0085"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0085/chat_states.py": [
        "sleekxmpp.plugins.xep_0085.ChatState",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0085.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "logging",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0085/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0086/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0086.legacy_error.XEP_0086"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0086/legacy_error.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0086.stanza",
        "sleekxmpp.plugins.xep_0086.LegacyError",
        "sleekxmpp.stanza.Error"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0086/stanza.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.stanza.Error"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0091/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0091.legacy_delay.XEP_0091"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0091/legacy_delay.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.plugins.xep_0091.stanza",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0091/stanza.py": [
        "sleekxmpp.plugins.xep_0082",
        "datetime",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.jid.JID"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0092/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0092.version.XEP_0092"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0092/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0092/version.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0092.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.xep_0092.Version",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0095/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0095.stream_initiation.XEP_0095"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0095/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0095/stream_initiation.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "logging",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.Iq",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0095.stanza",
        "sleekxmpp.plugins.xep_0095.SI",
        "threading",
        "uuid.uuid4",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0096/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0096.file_transfer.XEP_0096"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0096/file_transfer.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0096.stanza",
        "sleekxmpp.plugins.xep_0096.File",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0096/stanza.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0082",
        "sleekxmpp.xmlstream.ElementBase",
        "datetime"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0106.py": [
        "sleekxmpp.plugins.register_plugin",
        "sleekxmpp.plugins.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0107/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0107.user_mood.XEP_0107"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0107/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0107/user_mood.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0107.stanza",
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.Message",
        "sleekxmpp.plugins.xep_0107.UserMood"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0108/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0108.user_activity.XEP_0108"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0108/stanza.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0108/user_activity.py": [
        "sleekxmpp.plugins.xep_0108.UserActivity",
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.plugins.xep_0108.stanza",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0115/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0115.caps.XEP_0115"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0115/caps.py": [
        "hashlib",
        "sleekxmpp.stanza.StreamFeatures",
        "logging",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.stanza.Iq",
        "base64",
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.plugins.xep_0115.stanza",
        "sleekxmpp.plugins.xep_0115.StaticCaps",
        "threading",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.__version__",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.handler.Callback"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0115/stanza.py": [
        "__future__.unicode_literals",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0115/static.py": [
        "sleekxmpp.xmlstream.JID",
        "logging",
        "sleekxmpp.exceptions.IqTimeout",
        "sleekxmpp.exceptions.IqError"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0118/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0118.user_tune.XEP_0118"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0118/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0118/user_tune.py": [
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.plugins.xep_0118.UserTune",
        "sleekxmpp.plugins.xep_0118.stanza",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0128/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0128.extended_disco.XEP_0128"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0128/extended_disco.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0004.Form",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0030.DiscoInfo",
        "sleekxmpp.plugins.xep_0128.StaticExtendedDisco"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0128/static.py": [
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0131/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0131.headers.XEP_0131"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0131/headers.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Presence",
        "sleekxmpp.plugins.xep_0131.stanza",
        "sleekxmpp.plugins.xep_0131.stanza.Headers",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0131/stanza.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.thirdparty.OrderedDict",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0133.py": [
        "sleekxmpp.plugins.register_plugin",
        "sleekxmpp.plugins.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0152/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0152.reachability.XEP_0152"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0152/reachability.py": [
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.plugins.xep_0152.stanza",
        "sleekxmpp.plugins.xep_0152.Reachability",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0152/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.register_stanza_plugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0153/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0153.vcard_avatar.XEP_0153"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0153/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0153/vcard_avatar.py": [
        "hashlib",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.plugins.xep_0153.stanza",
        "sleekxmpp.plugins.xep_0153.VCardTempUpdate",
        "threading",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.base.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0163.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0172/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0172.user_nick.XEP_0172"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0172/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0172/user_nick.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0172.UserNick",
        "sleekxmpp.stanza.presence.Presence",
        "sleekxmpp.plugins.xep_0172.stanza",
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.stanza.message.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0184/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0184.receipt.XEP_0184"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0184/receipt.py": [
        "sleekxmpp.plugins.xep_0184.Received",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0184.Request",
        "sleekxmpp.plugins.xep_0184.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0184/stanza.py": [
        "sleekxmpp.xmlstream.stanzabase.ET",
        "sleekxmpp.xmlstream.stanzabase.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0186/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0186.invisible_command.XEP_0186"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0186/invisible_command.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0186.Visible",
        "sleekxmpp.plugins.xep_0186.Invisible",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0186/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0191/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0191.blocking.XEP_0191"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0191/blocking.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0191.BlockList",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0191.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.xep_0191.Unblock",
        "logging",
        "sleekxmpp.plugins.xep_0191.Block"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0191/stanza.py": [
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0196/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0196.user_gaming.XEP_0196"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0196/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0196/user_gaming.py": [
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.plugins.xep_0196.stanza",
        "logging",
        "sleekxmpp.plugins.xep_0196.UserGaming"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0198/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0198.stream_management.XEP_0198"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0198/stanza.py": [
        "sleekxmpp.xmlstream.StanzaBase",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.stanza.Error"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0198/stream_management.py": [
        "sleekxmpp.stanza.StreamFeatures",
        "logging",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0198.stanza",
        "threading",
        "sleekxmpp.xmlstream.matcher.MatchMany",
        "collections",
        "sleekxmpp.xmlstream.matcher.MatchXPath",
        "sleekxmpp.xmlstream.handler.Waiter",
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.stanza.Message",
        "sleekxmpp.xmlstream.handler.Callback"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0199/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0199.ping.XEP_0199"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0199/ping.py": [
        "sleekxmpp.jid.JID",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.exceptions.IqTimeout",
        "sleekxmpp.plugins.xep_0199.Ping",
        "sleekxmpp.plugins.xep_0199.stanza",
        "sleekxmpp.exceptions.IqError",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "time",
        "sleekxmpp.xmlstream.matcher.StanzaPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0199/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0202/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0202.time.XEP_0202"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0202/stanza.py": [
        "sleekxmpp.thirdparty.tzutc",
        "sleekxmpp.plugins.xep_0082",
        "sleekxmpp.xmlstream.ElementBase",
        "datetime"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0202/time.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.iq.Iq",
        "sleekxmpp.plugins.xep_0202.stanza",
        "sleekxmpp.plugins.xep_0082",
        "sleekxmpp.xmlstream.handler.Callback",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0203/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0203.delay.XEP_0203"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0203/delay.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.plugins.xep_0203.stanza",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0203/stanza.py": [
        "sleekxmpp.plugins.xep_0082",
        "datetime",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.jid.JID"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0221/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0221.media.XEP_0221"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0221/media.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0221.Media",
        "logging",
        "sleekxmpp.plugins.xep_0004.FormField"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0221/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.register_stanza_plugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0222.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.base.BasePlugin",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0223.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.base.BasePlugin",
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0224/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0224.attention.XEP_0224"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0224/attention.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0224.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "logging",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0224/stanza.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0231/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0231.bob.XEP_0231"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0231/bob.py": [
        "hashlib",
        "logging",
        "sleekxmpp.plugins.xep_0231.BitsOfBinary",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.base.BasePlugin",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0231/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase",
        "base64",
        "sleekxmpp.util.bytes"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0235/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0235.oauth.XEP_0235"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0235/oauth.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0235.stanza",
        "sleekxmpp.plugins.xep_0235.OAuth",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0235/stanza.py": [
        "hashlib",
        "base64",
        "urllib",
        "sleekxmpp.xmlstream.ElementBase",
        "hmac"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0242.py": [
        "sleekxmpp.plugins.register_plugin",
        "sleekxmpp.plugins.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0249/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0249.invite.XEP_0249"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0249/invite.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0249.Invite",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0249.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "logging",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0249/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0256.py": [
        "sleekxmpp.plugins.register_plugin",
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Presence",
        "sleekxmpp.plugins.xep_0012.stanza",
        "sleekxmpp.plugins.xep_0012.LastActivity",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0257/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0257.client_cert_management.XEP_0257"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0257/client_cert_management.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0257.stanza",
        "sleekxmpp.plugins.xep_0257.DisableCert",
        "sleekxmpp.plugins.xep_0257.Certs",
        "logging",
        "sleekxmpp.plugins.xep_0257.RevokeCert",
        "sleekxmpp.plugins.xep_0257.AppendCert"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0257/stanza.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0258/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0258.security_labels.XEP_0258"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0258/security_labels.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0258.stanza",
        "sleekxmpp.plugins.xep_0258.Catalog",
        "sleekxmpp.plugins.xep_0258.SecurityLabel",
        "logging",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0258/stanza.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.util.bytes",
        "base64.b64encode",
        "sleekxmpp.xmlstream.ElementBase",
        "base64.b64decode"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0270.py": [
        "sleekxmpp.plugins.register_plugin",
        "sleekxmpp.plugins.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0279/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0279.ipcheck.XEP_0279"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0279/ipcheck.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0279.IPCheck",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.plugins.xep_0279.stanza"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0279/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0280/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0280.carbons.XEP_0280"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0280/carbons.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.plugins.xep_0280.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0280/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0297/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0297.forwarded.XEP_0297"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0297/forwarded.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.plugins.xep_0297.Forwarded",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.Iq",
        "sleekxmpp.Presence",
        "sleekxmpp.plugins.xep_0297.stanza",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0297/stanza.py": [
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.stanza.Message",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.stanza.Presence"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0302.py": [
        "sleekxmpp.plugins.register_plugin",
        "sleekxmpp.plugins.BasePlugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0308/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0308.correction.XEP_0308"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0308/correction.py": [
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.plugins.xep_0308.stanza",
        "sleekxmpp.plugins.xep_0308.Replace",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.BasePlugin",
        "logging",
        "sleekxmpp.stanza.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0308/stanza.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0313/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0313.mam.XEP_0313"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0313/mam.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.plugins.xep_0313.stanza",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.stanza.Message",
        "sleekxmpp.xmlstream.handler.Collector"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0313/stanza.py": [
        "sleekxmpp.jid.JID",
        "sleekxmpp.plugins.xep_0082",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.ET",
        "datetime"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0319/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0319.idle.XEP_0319"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0319/idle.py": [
        "sleekxmpp.plugins.BasePlugin",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.plugins.xep_0319.stanza",
        "datetime.datetime",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.xmlstream.matcher.StanzaPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0319/stanza.py": [
        "sleekxmpp.plugins.xep_0082",
        "datetime",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0323/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0323.sensordata.XEP_0323"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0323/device.py": [
        "logging",
        "datetime"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0323/sensordata.py": [
        "sleekxmpp.plugins.base.BasePlugin",
        "logging",
        "threading.Thread",
        "threading.Lock",
        "sleekxmpp.plugins.xep_0323.stanza",
        "threading.Timer",
        "datetime",
        "sleekxmpp.plugins.xep_0323.stanza.Sensordata",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.xep_0323.timerreset.TimerReset",
        "time",
        "sleekxmpp.xmlstream.matcher.StanzaPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0323/stanza/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0323/stanza/base.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0323/stanza/sensordata.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.Iq",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0323/timerreset.py": [
        "threading.Thread",
        "threading.Event"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0325/__init__.py": [
        "sleekxmpp.plugins.base.register_plugin",
        "sleekxmpp.plugins.xep_0325.control.XEP_0325"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0325/control.py": [
        "sleekxmpp.plugins.xep_0325.stanza.Control",
        "logging",
        "threading.Thread",
        "threading.Lock",
        "sleekxmpp.plugins.xep_0325.stanza",
        "threading.Timer",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.plugins.base.BasePlugin",
        "time",
        "sleekxmpp.xmlstream.matcher.StanzaPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0325/device.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0325/stanza/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0325/stanza/base.py": [],
    "/tmp/sleekxmpp/sleekxmpp/plugins/xep_0325/stanza/control.py": [
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.Iq",
        "sleekxmpp.Message"
    ],
    "/tmp/sleekxmpp/sleekxmpp/roster/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/roster/item.py": [],
    "/tmp/sleekxmpp/sleekxmpp/roster/multi.py": [
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.roster.RosterNode",
        "sleekxmpp.stanza.Presence"
    ],
    "/tmp/sleekxmpp/sleekxmpp/roster/single.py": [
        "threading",
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.roster.RosterItem"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/stanza/atom.py": [
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/error.py": [
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.xmlstream.ElementBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/htmlim.py": [
        "sleekxmpp.stanza.Message",
        "sleekxmpp.plugins.xep_0071.XHTML_IM",
        "sleekxmpp.xmlstream.register_stanza_plugin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/iq.py": [
        "sleekxmpp.xmlstream.matcher.MatcherId",
        "sleekxmpp.xmlstream.handler.Waiter",
        "sleekxmpp.stanza.rootstanza.RootStanza",
        "sleekxmpp.exceptions.IqTimeout",
        "sleekxmpp.xmlstream.StanzaBase",
        "sleekxmpp.exceptions.IqError",
        "sleekxmpp.xmlstream.handler.Callback",
        "sleekxmpp.xmlstream.matcher.MatchIDSender",
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/message.py": [
        "sleekxmpp.stanza.rootstanza.RootStanza",
        "sleekxmpp.xmlstream.StanzaBase",
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/nick.py": [
        "sleekxmpp.plugins.xep_0172.UserNick",
        "sleekxmpp.stanza.Message",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.stanza.Presence"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/presence.py": [
        "sleekxmpp.stanza.rootstanza.RootStanza",
        "sleekxmpp.xmlstream.StanzaBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/rootstanza.py": [
        "logging",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.exceptions.IqTimeout",
        "sleekxmpp.xmlstream.StanzaBase",
        "sleekxmpp.exceptions.IqError",
        "sleekxmpp.exceptions.XMPPError",
        "sleekxmpp.stanza.Error",
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/roster.py": [
        "sleekxmpp.xmlstream.JID",
        "sleekxmpp.stanza.Iq",
        "sleekxmpp.xmlstream.register_stanza_plugin",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/stream_error.py": [
        "sleekxmpp.xmlstream.StanzaBase",
        "sleekxmpp.stanza.error.Error"
    ],
    "/tmp/sleekxmpp/sleekxmpp/stanza/stream_features.py": [
        "sleekxmpp.thirdparty.OrderedDict",
        "sleekxmpp.xmlstream.StanzaBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/test/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/test/livesocket.py": [
        "sleekxmpp.util.Queue",
        "threading",
        "socket"
    ],
    "/tmp/sleekxmpp/sleekxmpp/test/mocksocket.py": [
        "sleekxmpp.util.Queue",
        "socket"
    ],
    "/tmp/sleekxmpp/sleekxmpp/test/sleektest.py": [
        "sleekxmpp.xmlstream.tostring.tostring",
        "sleekxmpp.xmlstream.matcher.MatchXPath",
        "sleekxmpp.xmlstream.matcher.StanzaPath",
        "sleekxmpp.ComponentXMPP",
        "sleekxmpp.xmlstream.matcher.MatchXMLMask",
        "sleekxmpp.stanza.Presence",
        "sleekxmpp.stanza.Iq",
        "unittest",
        "sleekxmpp.test.TestLiveSocket",
        "sleekxmpp.xmlstream.matcher.MatchIDSender",
        "sleekxmpp.util.Queue",
        "sleekxmpp.ClientXMPP",
        "sleekxmpp.xmlstream.ElementBase",
        "sleekxmpp.xmlstream.matcher.MatcherId",
        "sleekxmpp.xmlstream.ET",
        "sleekxmpp.stanza.Message",
        "sleekxmpp.test.TestSocket",
        "xml.parsers.expat.ExpatError"
    ],
    "/tmp/sleekxmpp/sleekxmpp/thirdparty/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/thirdparty/gnupg.py": [
        "io.BytesIO",
        "tempfile",
        "locale",
        "subprocess.PIPE",
        "subprocess.Popen",
        "sys",
        "codecs",
        "logging",
        "socket",
        "cStringIO.StringIO",
        "threading",
        "os"
    ],
    "/tmp/sleekxmpp/sleekxmpp/thirdparty/mini_dateutil.py": [
        "datetime",
        "re",
        "math"
    ],
    "/tmp/sleekxmpp/sleekxmpp/thirdparty/ordereddict.py": [
        "UserDict.DictMixin"
    ],
    "/tmp/sleekxmpp/sleekxmpp/thirdparty/socks.py": [
        "socket",
        "struct"
    ],
    "/tmp/sleekxmpp/sleekxmpp/thirdparty/statemachine.py": [
        "logging",
        "threading",
        "time"
    ],
    "/tmp/sleekxmpp/sleekxmpp/util/__init__.py": [
        "gevent.thread",
        "Queue",
        "sys"
    ],
    "/tmp/sleekxmpp/sleekxmpp/util/misc_ops.py": [
        "__builtin__",
        "builtins",
        "__builtin__",
        "gc",
        "types",
        "hashlib",
        "sys"
    ],
    "/tmp/sleekxmpp/sleekxmpp/util/sasl/__init__.py": [],
    "/tmp/sleekxmpp/sleekxmpp/util/sasl/client.py": [
        "logging",
        "sleekxmpp.util.bytes",
        "stringprep",
        "sleekxmpp.util.hashes",
        "sleekxmpp.util.stringprep_profiles"
    ],
    "/tmp/sleekxmpp/sleekxmpp/util/sasl/mechanisms.py": [
        "sleekxmpp.util.sasl.client.SASLFailed",
        "random",
        "base64.b64encode",
        "sleekxmpp.util.XOR",
        "sleekxmpp.util.sasl.client.SASLMutualAuthFailed",
        "sleekxmpp.util.num_to_bytes",
        "sleekxmpp.util.sasl.client.Mech",
        "sleekxmpp.util.hash",
        "sleekxmpp.util.quote",
        "kerberos",
        "sys",
        "base64.b64decode",
        "sleekxmpp.util.sasl.client.sasl_mech",
        "sleekxmpp.util.bytes",
        "hmac",
        "sleekxmpp.util.sasl.client.SASLCancelled"
    ],
    "/tmp/sleekxmpp/sleekxmpp/util/stringprep_profiles.py": [
        "unicodedata.ucd_3_2_0",
        "__future__.unicode_literals",
        "stringprep",
        "sleekxmpp.util.unicode"
    ],
    "/tmp/sleekxmpp/sleekxmpp/version.py": [],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/__init__.py": [
        "sleekxmpp.xmlstream.tostring.tostring",
        "sleekxmpp.xmlstream.xmlstream.RESPONSE_TIMEOUT",
        "sleekxmpp.jid.JID",
        "sleekxmpp.xmlstream.xmlstream.RestartStream",
        "sleekxmpp.xmlstream.stanzabase.StanzaBase",
        "sleekxmpp.xmlstream.xmlstream.XMLStream",
        "sleekxmpp.xmlstream.stanzabase.ElementBase",
        "sleekxmpp.xmlstream.scheduler.Scheduler",
        "sleekxmpp.xmlstream.stanzabase.ET"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/cert.py": [
        "pyasn1_modules.rfc2459.Certificate",
        "datetime.datetime",
        "pyasn1_modules.rfc2459.id_at_commonName",
        "pyasn1_modules.rfc2459.DirectoryString",
        "pyasn1.type.char.BMPString",
        "pyasn1.type.univ.OctetString",
        "pyasn1.type.useful.GeneralizedTime",
        "pyasn1_modules.rfc2459.id_ce_subjectAltName",
        "pyasn1.codec.der.decoder",
        "pyasn1_modules.rfc2459.SubjectAltName",
        "logging",
        "pyasn1.type.char.UTF8String",
        "pyasn1.type.char.IA5String",
        "pyasn1.type.univ.ObjectIdentifier"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/filesocket.py": [
        "errno",
        "socket._fileobject",
        "socket"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/handler/__init__.py": [
        "sleekxmpp.xmlstream.handler.xmlcallback.XMLCallback",
        "sleekxmpp.xmlstream.handler.waiter.Waiter",
        "sleekxmpp.xmlstream.handler.xmlwaiter.XMLWaiter",
        "sleekxmpp.xmlstream.handler.callback.Callback"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/handler/base.py": [
        "weakref"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/handler/callback.py": [
        "sleekxmpp.xmlstream.handler.base.BaseHandler"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/handler/collector.py": [
        "logging",
        "sleekxmpp.xmlstream.handler.base.BaseHandler",
        "sleekxmpp.util.QueueEmpty",
        "sleekxmpp.util.Queue"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/handler/waiter.py": [
        "logging",
        "sleekxmpp.xmlstream.handler.base.BaseHandler",
        "sleekxmpp.util.QueueEmpty",
        "sleekxmpp.util.Queue"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/handler/xmlcallback.py": [
        "sleekxmpp.xmlstream.handler.Callback"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/handler/xmlwaiter.py": [
        "sleekxmpp.xmlstream.handler.Waiter"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/jid.py": [
        "logging"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/matcher/__init__.py": [
        "sleekxmpp.xmlstream.matcher.many.MatchMany",
        "sleekxmpp.xmlstream.matcher.stanzapath.StanzaPath",
        "sleekxmpp.xmlstream.matcher.xmlmask.MatchXMLMask",
        "sleekxmpp.xmlstream.matcher.id.MatcherId",
        "sleekxmpp.xmlstream.matcher.xpath.MatchXPath"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/matcher/base.py": [],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/matcher/id.py": [
        "sleekxmpp.xmlstream.matcher.base.MatcherBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/matcher/idsender.py": [
        "sleekxmpp.xmlstream.matcher.base.MatcherBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/matcher/many.py": [
        "sleekxmpp.xmlstream.matcher.base.MatcherBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/matcher/stanzapath.py": [
        "sleekxmpp.xmlstream.stanzabase.fix_ns",
        "sleekxmpp.xmlstream.matcher.base.MatcherBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/matcher/xmlmask.py": [
        "logging",
        "sleekxmpp.xmlstream.matcher.base.MatcherBase",
        "sleekxmpp.xmlstream.stanzabase.ET",
        "xml.parsers.expat.ExpatError"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/matcher/xpath.py": [
        "sleekxmpp.xmlstream.stanzabase.ET",
        "sleekxmpp.xmlstream.stanzabase.fix_ns",
        "sleekxmpp.xmlstream.matcher.base.MatcherBase"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/resolver.py": [
        "logging",
        "socket",
        "random",
        "dns.resolver"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/scheduler.py": [
        "logging",
        "sleekxmpp.util.QueueEmpty",
        "sleekxmpp.util.Queue",
        "threading",
        "itertools",
        "time"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/stanzabase.py": [
        "sleekxmpp.xmlstream.JID",
        "logging",
        "__future__.unicode_literals",
        "__future__.with_statement",
        "sleekxmpp.thirdparty.OrderedDict",
        "weakref",
        "sleekxmpp.xmlstream.tostring.tostring",
        "xml.etree.cElementTree",
        "copy"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/tostring.py": [
        "__future__.unicode_literals",
        "sys",
        "types"
    ],
    "/tmp/sleekxmpp/sleekxmpp/xmlstream/xmlstream.py": [
        "__future__.unicode_literals",
        "sleekxmpp.xmlstream.matcher.MatchXMLMask",
        "random",
        "__future__.with_statement",
        "sleekxmpp.xmlstream.handler.XMLCallback",
        "sleekxmpp.util.safedict",
        "uuid",
        "sleekxmpp.thirdparty.statemachine.StateMachine",
        "errno",
        "base64",
        "sleekxmpp.xmlstream.stanzabase.StanzaBase",
        "sleekxmpp.xmlstream.Scheduler",
        "sleekxmpp.xmlstream.filesocket.FileSocket",
        "sleekxmpp",
        "sleekxmpp.xmlstream.resolver.default_resolver",
        "socket",
        "sleekxmpp.xmlstream.handler.Waiter",
        "sleekxmpp.xmlstream.filesocket.Socket26",
        "sleekxmpp.util.Queue",
        "ssl",
        "sleekxmpp.xmlstream.tostring",
        "sleekxmpp.xmlstream.stanzabase.ET",
        "copy",
        "xml.parsers.expat.ExpatError",
        "sys",
        "sleekxmpp.xmlstream.resolver.resolve",
        "logging",
        "signal",
        "weakref",
        "threading",
        "sleekxmpp.xmlstream.cert",
        "time",
        "sleekxmpp.xmlstream.stanzabase.ElementBase"
    ]
}
{
    "/tmp/sleepyq/sleepyq/__init__.py": [
        "inflection",
        "requests"
    ]
}
{
    "/tmp/soco/soco/__init__.py": [
        ".exceptions.UnknownSoCoException",
        ".compat.NullHandler",
        "logging",
        ".core.SoCo",
        ".exceptions.SoCoException",
        ".discovery.discover"
    ],
    "/tmp/soco/soco/alarms.py": [
        ".xml.XML",
        "logging",
        "__future__.unicode_literals",
        "datetime.datetime",
        "weakref",
        "re",
        ".core.PLAY_MODES",
        ".discovery"
    ],
    "/tmp/soco/soco/cache.py": [
        "__future__.unicode_literals",
        ".compat.dumps",
        "threading",
        "time.time",
        ".config"
    ],
    "/tmp/soco/soco/compat.py": [
        "logging",
        "__future__.unicode_literals"
    ],
    "/tmp/soco/soco/config.py": [
        "__future__.unicode_literals"
    ],
    "/tmp/soco/soco/core.py": [
        ".data_structures.to_didl_string",
        "__future__.unicode_literals",
        "datetime",
        ".exceptions.SoCoSlaveException",
        ".data_structures.DidlObject",
        ".music_library.MusicLibrary",
        "functools.wraps",
        ".services.MusicServices",
        ".compat.UnicodeType",
        "re",
        ".utils.camel_to_underscore",
        ".data_structures.DidlPlaylistContainer",
        ".groups.ZoneGroup",
        ".config",
        ".services.AlarmClock",
        ".services.RenderingControl",
        ".xml.XML",
        "warnings",
        ".services.ContentDirectory",
        ".data_structures.DidlResource",
        ".data_structures.Queue",
        ".services.SystemProperties",
        "soco.exceptions.SoCoUPnPException",
        ".services.DeviceProperties",
        ".utils.really_utf8",
        "logging",
        "socket",
        ".services.zone_group_state_shared_cache",
        ".utils.deprecated",
        ".services.AVTransport",
        ".data_structures.from_didl_string",
        ".services.ZoneGroupTopology",
        "requests"
    ],
    "/tmp/soco/soco/data_structures.py": [
        "__future__.unicode_literals",
        ".utils.really_unicode",
        ".xml.ns_tag",
        ".exceptions.DIDLMetadataError",
        ".xml.XML",
        "warnings",
        ".compat.with_metaclass",
        "textwrap",
        "sys"
    ],
    "/tmp/soco/soco/discovery.py": [
        "textwrap.dedent",
        "logging",
        "socket",
        "__future__.unicode_literals",
        ".utils.really_utf8",
        "time",
        ".config",
        "select",
        "struct"
    ],
    "/tmp/soco/soco/events.py": [
        ".compat.socketserver",
        "__future__.unicode_literals",
        "atexit",
        ".utils.camel_to_underscore",
        ".config",
        ".compat.URLError",
        ".xml.XML",
        ".compat.urlopen",
        ".compat.Queue",
        "logging",
        "socket",
        ".exceptions.SoCoException",
        "weakref",
        "threading",
        ".data_structures.from_didl_string",
        "time",
        ".compat.BaseHTTPRequestHandler",
        "requests"
    ],
    "/tmp/soco/soco/exceptions.py": [
        "__future__.unicode_literals"
    ],
    "/tmp/soco/soco/groups.py": [
        "__future__.unicode_literals"
    ],
    "/tmp/soco/soco/ms_data_structures.py": [
        ".xml.XML",
        "__future__.unicode_literals",
        ".xml.ns_tag",
        ".utils.camel_to_underscore",
        ".exceptions.DIDLMetadataError",
        ".xml.NAMESPACES"
    ],
    "/tmp/soco/soco/music_library.py": [
        ".utils.really_unicode",
        "logging",
        "__future__.unicode_literals",
        ".data_structures.SearchResult",
        ".data_structures.DidlResource",
        ".utils.url_escape_path",
        ".data_structures.from_didl_string",
        ".data_structures.DidlObject",
        ".exceptions.SoCoUPnPException",
        ".utils.camel_to_underscore",
        ".data_structures.DidlMusicAlbum",
        ".discovery"
    ],
    "/tmp/soco/soco/music_services/__init__.py": [
        ".accounts.Account",
        ".music_service.desc_from_uri",
        ".music_service.MusicService"
    ],
    "/tmp/soco/soco/music_services/accounts.py": [
        "..xml.XML",
        "logging",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "weakref",
        "requests",
        "..discovery"
    ],
    "/tmp/soco/soco/music_services/music_service.py": [
        "..exceptions.MusicServiceException",
        "..compat.urlparse",
        "..music_services.accounts.Account",
        "logging",
        "__future__.unicode_literals",
        "..xml.XML",
        "__future__.absolute_import",
        "xmltodict.parse",
        "..compat.parse_qs",
        "..soap.SoapFault",
        "requests",
        "..compat.quote_url",
        "..soap.SoapMessage",
        "..discovery"
    ],
    "/tmp/soco/soco/plugins/__init__.py": [
        "logging",
        "importlib"
    ],
    "/tmp/soco/soco/plugins/example.py": [
        "__future__.unicode_literals",
        "__future__.print_function",
        "..plugins.SoCoPlugin"
    ],
    "/tmp/soco/soco/plugins/spotify.py": [
        "sys",
        "os"
    ],
    "/tmp/soco/soco/plugins/wimp.py": [
        "__future__.unicode_literals",
        "..ms_data_structures.MSAlbum",
        ".__init__.SoCoPlugin",
        "..ms_data_structures.MSAlbumList",
        "..ms_data_structures.MSArtistTracklist",
        "..services.MusicServices",
        "..ms_data_structures.MSCollection",
        "locale",
        "..exceptions.UnknownXMLStructure",
        "..exceptions.SoCoUPnPException",
        "..xml.XML",
        "..ms_data_structures.MSTrack",
        "..ms_data_structures.get_ms_item",
        "socket",
        "..ms_data_structures.MSFavorites",
        "..ms_data_structures.MSPlaylist",
        "..ms_data_structures.MSArtist",
        "..utils.really_utf8",
        "requests"
    ],
    "/tmp/soco/soco/services.py": [
        ".exceptions.UnknownSoCoException",
        "__future__.unicode_literals",
        ".cache.Cache",
        "__future__.absolute_import",
        "xml.sax.saxutils.escape",
        ".exceptions.SoCoUPnPException",
        ".events.Subscription",
        ".xml.XML",
        "collections.namedtuple",
        ".xml.illegal_xml_re",
        ".xml.PARSEERROR",
        ".utils.prettify",
        "logging",
        "requests"
    ],
    "/tmp/soco/soco/snapshot.py": [],
    "/tmp/soco/soco/soap.py": [
        ".xml.XML",
        ".utils.prettify",
        "logging",
        "__future__.unicode_literals",
        ".exceptions.SoCoException",
        "__future__.absolute_import",
        "xml.sax.saxutils.escape",
        "requests"
    ],
    "/tmp/soco/soco/utils.py": [
        "xml.dom.minidom",
        ".xml.XML",
        ".compat.StringType",
        "warnings",
        "__future__.unicode_literals",
        "functools",
        "__future__.absolute_import",
        "re",
        ".compat.UnicodeType",
        "__future__.print_function",
        ".compat.quote_url"
    ],
    "/tmp/soco/soco/xml.py": [
        "xml.etree.ElementTree",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "sys",
        "re",
        "xml.etree.ElementTree"
    ]
}
{
    "/tmp/somecomfort/somecomfort/__init__.py": [],
    "/tmp/somecomfort/somecomfort/__main__.py": [
        "argparse",
        "logging",
        "prettytable",
        "datetime",
        "sys",
        "json",
        "contextlib",
        "http.client",
        "requests",
        "os",
        "somecomfort.client"
    ],
    "/tmp/somecomfort/somecomfort/client.py": [
        "datetime",
        "contextlib",
        "time",
        "copy",
        "logging",
        "requests"
    ]
}
{
    "/tmp/sqlalchemy/sqlalchemy/__init__.py": [
        ".util",
        "inspect"
    ],
    "/tmp/sqlalchemy/sqlalchemy/connectors/__init__.py": [],
    "/tmp/sqlalchemy/sqlalchemy/connectors/mxodbc.py": [
        "mx.ODBC.iODBC",
        "mx.ODBC.ProgrammingError",
        "mx.ODBC.InterfaceError",
        "mx.ODBC.Error.Warning",
        ".Connector",
        "warnings",
        "sys",
        "re"
    ],
    "/tmp/sqlalchemy/sqlalchemy/connectors/pyodbc.py": [
        ".Connector",
        "..util",
        "sys",
        "re"
    ],
    "/tmp/sqlalchemy/sqlalchemy/connectors/zxJDBC.py": [
        "com.ziclix.python.sql.zxJDBC",
        "sys",
        ".Connector"
    ],
    "/tmp/sqlalchemy/sqlalchemy/databases/__init__.py": [
        "..dialects.sqlite.base",
        "..dialects.postgresql.base",
        "..dialects.firebird.base",
        "..dialects.sybase.base",
        "..dialects.mysql.base",
        "..dialects.oracle.base",
        "..dialects.mssql.base"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/__init__.py": [
        "..util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/firebird/__init__.py": [
        "sqlalchemy.dialects.firebird.base.SMALLINT",
        "sqlalchemy.dialects.firebird.base.CHAR",
        "sqlalchemy.dialects.firebird.fdb",
        "sqlalchemy.dialects.firebird.base.VARCHAR",
        "sqlalchemy.dialects.firebird.base.dialect",
        "sqlalchemy.dialects.firebird.base.TEXT",
        "sqlalchemy.dialects.firebird.base.FLOAT",
        "sqlalchemy.dialects.firebird.base.NUMERIC",
        "sqlalchemy.dialects.firebird.base.BIGINT",
        "sqlalchemy.dialects.firebird.base",
        "sqlalchemy.dialects.firebird.base.BLOB",
        "sqlalchemy.dialects.firebird.base.TIME",
        "sqlalchemy.dialects.firebird.base.DATE",
        "sqlalchemy.dialects.firebird.base.TIMESTAMP"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/firebird/base.py": [
        "sqlalchemy.types.TEXT",
        "datetime",
        "sqlalchemy.types.BIGINT",
        "sqlalchemy.types.DATE",
        "sqlalchemy.types.SMALLINT",
        "sqlalchemy.engine.reflection",
        "sqlalchemy.types.Integer",
        "sqlalchemy.types.NUMERIC",
        "sqlalchemy.types",
        "sqlalchemy.types.INTEGER",
        "sqlalchemy.util",
        "sqlalchemy.sql",
        "sqlalchemy.sql.compiler",
        "sqlalchemy.sql.elements.quoted_name",
        "sqlalchemy.exc",
        "sqlalchemy.engine.default",
        "sqlalchemy.types.TIMESTAMP",
        "sqlalchemy.types.FLOAT",
        "sqlalchemy.types.BLOB",
        "sqlalchemy.types.TIME",
        "sqlalchemy.sql.expression"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/firebird/fdb.py": [
        "...util",
        ".kinterbasdb.FBDialect_kinterbasdb"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/firebird/kinterbasdb.py": [
        ".base.FBExecutionContext",
        "decimal",
        "...types",
        "...util",
        "re.match",
        ".base.FBDialect"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mssql/__init__.py": [
        "sqlalchemy.dialects.mssql.base.DATETIMEOFFSET",
        "sqlalchemy.dialects.mssql.base.REAL",
        "sqlalchemy.dialects.mssql.base.SMALLDATETIME",
        "sqlalchemy.dialects.mssql.base.TEXT",
        "sqlalchemy.dialects.mssql.base.CHAR",
        "sqlalchemy.dialects.mssql.base.TINYINT",
        "sqlalchemy.dialects.mssql.base.BIGINT",
        "sqlalchemy.dialects.mssql.base.DATETIME2",
        "sqlalchemy.dialects.mssql.base.VARBINARY",
        "sqlalchemy.dialects.mssql.base.DATE",
        "sqlalchemy.dialects.mssql.pyodbc",
        "sqlalchemy.dialects.mssql.base.SMALLINT",
        "sqlalchemy.dialects.mssql.base.VARCHAR",
        "sqlalchemy.dialects.mssql.base.IMAGE",
        "sqlalchemy.dialects.mssql.base.NUMERIC",
        "sqlalchemy.dialects.mssql.base.INTEGER",
        "sqlalchemy.dialects.mssql.base.BIT",
        "sqlalchemy.dialects.mssql.base.NTEXT",
        "sqlalchemy.dialects.mssql.base.dialect",
        "sqlalchemy.dialects.mssql.base.DECIMAL",
        "sqlalchemy.dialects.mssql.base.DATETIME",
        "sqlalchemy.dialects.mssql.base",
        "sqlalchemy.dialects.mssql.base.MONEY",
        "sqlalchemy.dialects.mssql.base.NVARCHAR",
        "sqlalchemy.dialects.mssql.base.NCHAR",
        "sqlalchemy.dialects.mssql.base.BINARY",
        "sqlalchemy.dialects.mssql.base.UNIQUEIDENTIFIER",
        "sqlalchemy.dialects.mssql.base.SQL_VARIANT",
        "sqlalchemy.dialects.mssql.base.TIMESTAMP",
        "sqlalchemy.dialects.mssql.base.FLOAT",
        "sqlalchemy.dialects.mssql.base.SMALLMONEY",
        "sqlalchemy.dialects.mssql.base.TIME"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mssql/adodbapi.py": [
        "adodbapi",
        "sys",
        "sqlalchemy.dialects.mssql.base.MSDialect",
        "sqlalchemy.types",
        "sqlalchemy.util",
        "sqlalchemy.dialects.mssql.base.MSDateTime",
        "datetime"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mssql/base.py": [
        "...types.TEXT",
        "datetime",
        "...types.BIGINT",
        "...types.NUMERIC",
        "...types.DATETIME",
        "...util",
        "...sql.compiler",
        "...types.BINARY",
        ".information_schema",
        "re",
        "...types.INTEGER",
        "...util.update_wrapper",
        "...types.NVARCHAR",
        "...types.TIMESTAMP",
        "...sql.expression",
        "...types.CHAR",
        "operator",
        "...types.NCHAR",
        "...engine",
        "...types.DECIMAL",
        "...schema",
        "...engine.default",
        "...exc",
        "...sql.util",
        "...types.DATE",
        "...types.SMALLINT",
        "...types.VARCHAR",
        "...types",
        "...sql",
        "...engine.reflection",
        "...types.FLOAT"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mssql/information_schema.py": [
        ".base",
        "...types.String",
        "...types.TypeDecorator",
        "...types.Integer",
        "...MetaData",
        "...Column",
        "...util",
        "...ext.compiler.compiles",
        "...cast",
        "...types.Unicode",
        "...Table",
        "...sql.expression"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mssql/mxodbc.py": [
        ".pyodbc._MSNumeric_pyodbc",
        ".pyodbc.MSExecutionContext_pyodbc",
        ".base.MSDialect",
        "...types",
        ".base._MSDate",
        ".base._MSDateTime",
        "...connectors.mxodbc.MxODBCConnector",
        ".base.VARBINARY",
        ".base._MSTime"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mssql/pymssql.py": [
        "...processors",
        ".base.MSDialect",
        "...types",
        "...util",
        "re"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mssql/pyodbc.py": [
        "...exc",
        "re",
        "decimal",
        ".base.MSDialect",
        "...types",
        "...util",
        "...connectors.pyodbc.PyODBCConnector",
        ".base.MSExecutionContext",
        ".base.VARBINARY"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mssql/zxjdbc.py": [
        "...engine",
        "...connectors.zxJDBC.ZxJDBCConnector",
        ".base.MSDialect",
        ".base.MSExecutionContext"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/__init__.py": [
        ".base.REAL",
        ".base.MEDIUMINT",
        ".base.CHAR",
        ".base.TINYINT",
        ".mysqldb",
        ".base.DATE",
        ".base.VARBINARY",
        ".base.TIMESTAMP",
        ".base.SMALLINT",
        ".base.MEDIUMBLOB",
        ".base.SET",
        ".base.VARCHAR",
        ".base.NUMERIC",
        ".base.BIGINT",
        ".base.TINYTEXT",
        ".base.JSON",
        ".base.TEXT",
        ".base.INTEGER",
        ".base.BIT",
        ".base.dialect",
        ".base.DECIMAL",
        ".base.ENUM",
        ".base.DATETIME",
        ".base",
        ".base.YEAR",
        ".base.TINYBLOB",
        ".base.NVARCHAR",
        ".base.NCHAR",
        ".base.BINARY",
        ".base.LONGTEXT",
        ".base.DOUBLE",
        ".base.FLOAT",
        ".base.MEDIUMTEXT",
        ".base.BOOLEAN",
        ".base.BLOB",
        ".base.TIME",
        ".base.LONGBLOB"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/base.py": [
        ".types.TEXT",
        ".types.BIGINT",
        "...types.VARBINARY",
        ".types.NUMERIC",
        ".types._FloatType",
        ".enumerated.ENUM",
        ".types.DATETIME",
        "...util",
        ".types.YEAR",
        "...sql.compiler",
        "...types.BINARY",
        ".types._NumericType",
        ".reflection",
        ".types.DOUBLE",
        ".types.TINYBLOB",
        ".types.MEDIUMINT",
        ".types.MEDIUMBLOB",
        ".types._StringType",
        ".types._IntegerType",
        "re",
        ".types.INTEGER",
        "array.array",
        ".types.NVARCHAR",
        ".types.TIMESTAMP",
        "...types.BLOB",
        ".types.TIME",
        ".types.LONGBLOB",
        ".json.JSONIndexType",
        ".types.REAL",
        ".types.CHAR",
        "...util.topological",
        ".enumerated.SET",
        "...log",
        ".json.JSON",
        ".types.NCHAR",
        ".types.DECIMAL",
        "...schema",
        "...exc",
        "...engine.default",
        ".types.TINYTEXT",
        ".types.MEDIUMTEXT",
        "...types.BOOLEAN",
        ".types.TINYINT",
        "...types.DATE",
        ".types.SMALLINT",
        ".types.VARCHAR",
        "...types",
        ".types.BIT",
        "sys",
        "...sql",
        ".json.JSONPathType",
        ".types._MatchType",
        "...engine.reflection",
        ".types.LONGTEXT",
        ".types.FLOAT"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/cymysql.py": [
        ".mysqldb.MySQLDialect_mysqldb",
        "...util",
        "re",
        ".base.MySQLDialect",
        ".base.BIT"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/enumerated.py": [
        ".types._StringType",
        "...exc",
        "...types",
        "...util",
        "re",
        "...sql"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/gaerdbms.py": [
        "google.storage.speckle.python.api.rdbms_googleapi",
        "google.appengine.api.apiproxy_stub_map",
        "google.appengine.api.rdbms_mysqldb",
        "google.storage.speckle.python.api.rdbms_apiproxy",
        "...pool.NullPool",
        "sqlalchemy.util.warn_deprecated",
        ".mysqldb.MySQLDialect_mysqldb",
        "re",
        "os"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/json.py": [
        "__future__.absolute_import",
        "...types"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/mysqlconnector.py": [
        "mysql.connector",
        "mysql.connector.constants.ClientFlag",
        ".base.MySQLExecutionContext",
        "...util",
        "re",
        ".base.MySQLDialect",
        ".base.MySQLCompiler",
        ".base.MySQLIdentifierPreparer",
        ".base.BIT"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/mysqldb.py": [
        ".base.MySQLExecutionContext",
        ".base.TEXT",
        "...util",
        "re",
        ".base.MySQLDialect",
        "...sql",
        ".base.MySQLCompiler",
        ".base.MySQLIdentifierPreparer"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/oursql.py": [
        ".base.MySQLExecutionContext",
        "...types",
        "...util",
        "re",
        ".base.MySQLDialect",
        ".base.BIT"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/pymysql.py": [
        "...util.langhelpers",
        ".mysqldb.MySQLDialect_mysqldb",
        "...util.py3k"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/pyodbc.py": [
        ".base.MySQLExecutionContext",
        "re",
        "...util",
        "...connectors.pyodbc.PyODBCConnector",
        ".base.MySQLDialect"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/reflection.py": [
        ".enumerated.SET",
        "...log",
        ".types.TIMESTAMP",
        "...types",
        "...util",
        "re",
        ".types.TIME",
        ".enumerated._EnumeratedValues",
        ".types.DATETIME"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/types.py": [
        "datetime",
        "...types",
        "...util",
        "...exc"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/mysql/zxjdbc.py": [
        ".base.MySQLExecutionContext",
        "...connectors.zxJDBC.ZxJDBCConnector",
        "...types",
        "...util",
        "re",
        ".base.MySQLDialect",
        ".base.BIT"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/oracle/__init__.py": [
        "sqlalchemy.dialects.oracle.base.NVARCHAR2",
        "sqlalchemy.dialects.oracle.base.BFILE",
        "sqlalchemy.dialects.oracle.base.CLOB",
        "sqlalchemy.dialects.oracle.cx_oracle",
        "sqlalchemy.dialects.oracle.base.NUMBER",
        "sqlalchemy.dialects.oracle.base.DOUBLE_PRECISION",
        "sqlalchemy.dialects.oracle.base.CHAR",
        "sqlalchemy.dialects.oracle.base.VARCHAR2",
        "sqlalchemy.dialects.oracle.base.DATE",
        "sqlalchemy.dialects.oracle.base.VARCHAR",
        "sqlalchemy.dialects.oracle.base.INTERVAL",
        "sqlalchemy.dialects.oracle.base.LONG",
        "sqlalchemy.dialects.oracle.base.RAW",
        "sqlalchemy.dialects.oracle.base.dialect",
        "sqlalchemy.dialects.oracle.base",
        "sqlalchemy.dialects.oracle.base.NVARCHAR",
        "sqlalchemy.dialects.oracle.base.TIMESTAMP",
        "sqlalchemy.dialects.oracle.base.FLOAT",
        "sqlalchemy.dialects.oracle.base.BLOB",
        "sqlalchemy.dialects.oracle.base.ROWID",
        "sqlalchemy.dialects.oracle.base.NCLOB"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/oracle/base.py": [
        "sqlalchemy.types.CLOB",
        "sqlalchemy.types.CHAR",
        "sqlalchemy.types",
        "sqlalchemy.types.VARCHAR",
        "sqlalchemy.sql.operators",
        "re",
        "sqlalchemy.schema",
        "sqlalchemy.util",
        "sqlalchemy.sql.visitors",
        "sqlalchemy.sql",
        "sqlalchemy.types.NVARCHAR",
        "sqlalchemy.sql.compiler",
        "sqlalchemy.sql.elements.quoted_name",
        "sqlalchemy.engine.reflection",
        "sqlalchemy.engine.default",
        "sqlalchemy.types.TIMESTAMP",
        "sqlalchemy.types.FLOAT",
        "sqlalchemy.types.BLOB",
        "sqlalchemy.sql.expression",
        "sqlalchemy.sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/oracle/cx_oracle.py": [
        "cx_Oracle",
        "...engine.result",
        "random",
        "__future__.absolute_import",
        ".base.OracleCompiler",
        "sqlalchemy.processors",
        ".base.OracleDialect",
        "sqlalchemy.types",
        "re",
        "collections",
        "sqlalchemy.util",
        "sqlalchemy.exc",
        "decimal",
        ".base",
        ".base.OracleExecutionContext"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/oracle/zxjdbc.py": [
        "com.ziclix.python.sql.zxJDBC",
        "java.sql.SQLException",
        "com.ziclix.python.sql.handler.OracleDataHandler",
        "sqlalchemy.engine.result",
        "sqlalchemy.connectors.zxJDBC.ZxJDBCConnector",
        "re",
        "sqlalchemy.types",
        "sqlalchemy.dialects.oracle.base.OracleDialect",
        "collections",
        "sqlalchemy.util",
        "sqlalchemy.sql",
        "sqlalchemy.dialects.oracle.base.OracleCompiler",
        "decimal",
        "sqlalchemy.sql.expression",
        "sqlalchemy.dialects.oracle.base.OracleExecutionContext"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/__init__.py": [
        ".base.REAL",
        ".ext.ExcludeConstraint",
        ".base.OID",
        ".dml.Insert",
        ".base.TEXT",
        ".array.ARRAY",
        ".base.DOUBLE_PRECISION",
        ".base.CHAR",
        ".ext.array_agg",
        ".base.BIGINT",
        ".ranges.TSRANGE",
        ".base.DATE",
        ".array.array",
        ".base.CreateEnumType",
        ".base.SMALLINT",
        ".base.MACADDR",
        ".base.VARCHAR",
        ".json.JSONB",
        ".psycopg2",
        ".base.INTERVAL",
        ".base.NUMERIC",
        ".ranges.TSTZRANGE",
        ".json.JSON",
        ".base.BOOLEAN",
        ".ranges.INT8RANGE",
        ".base.BIT",
        ".base.INET",
        ".base.dialect",
        ".base.ENUM",
        ".ranges.NUMRANGE",
        ".base",
        ".ranges.INT4RANGE",
        ".base.INTEGER",
        ".base.CIDR",
        ".base.DropEnumType",
        ".base.BYTEA",
        ".hstore.HSTORE",
        ".dml.insert",
        ".array.All",
        ".base.UUID",
        ".base.TIMESTAMP",
        ".ranges.DATERANGE",
        ".base.FLOAT",
        ".hstore.hstore",
        ".base.TIME",
        ".ext.aggregate_order_by",
        ".array.Any"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/array.py": [
        "...sql.base.SchemaEventTarget",
        ".base.ischema_names",
        "...sql.operators",
        "...types",
        "...sql.expression"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/base.py": [
        "sqlalchemy.types.REAL",
        "sqlalchemy.types.TEXT",
        "sqlalchemy.types.CHAR",
        "sqlalchemy.types.BIGINT",
        "sqlalchemy.types.DATE",
        "sqlalchemy.types.SMALLINT",
        "sqlalchemy.types.VARCHAR",
        "sqlalchemy.types.NUMERIC",
        "...types",
        "re",
        "sqlalchemy.types.INTEGER",
        "...sql.compiler",
        "...schema",
        "collections.defaultdict",
        "sqlalchemy.sql.elements",
        "...util",
        "...sql",
        "datetime",
        "...engine.reflection",
        "...exc",
        "...engine.default",
        "sqlalchemy.types.FLOAT",
        "sqlalchemy.types.BOOLEAN",
        "...sql.expression"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/dml.py": [
        "...sql.base._generative",
        "...util",
        "...sql.expression.alias",
        ".ext",
        "...sql.dml.Insert",
        "...sql.elements.ClauseElement",
        "...util.langhelpers.public_factory",
        "...sql.schema"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/ext.py": [
        "...sql.functions",
        "...sql.elements",
        "...sql.schema.ColumnCollectionConstraint",
        ".array.ARRAY",
        "...sql.expression"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/hstore.py": [
        "...types",
        ".base.ischema_names",
        "re",
        ".array.ARRAY",
        "...sql.operators",
        "...util",
        "...sql.functions"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/json.py": [
        "...sql.operators",
        "__future__.absolute_import",
        "...types",
        "...util",
        "collections",
        ".base.colspecs",
        ".base.ischema_names"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/pg8000.py": [
        ".base.PGIdentifierPreparer",
        "...processors",
        ".base._INT_TYPES",
        "...types",
        "re",
        "sqlalchemy.dialects.postgresql.json.JSON",
        ".base._DECIMAL_TYPES",
        ".base.PGExecutionContext",
        "...util",
        ".base.PGCompiler",
        ".base.PGDialect",
        "...exc",
        "decimal",
        ".base._FLOAT_TYPES"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/psycopg2.py": [
        "psycopg2",
        "psycopg2.extensions",
        "psycopg2.extras",
        "...engine.result",
        "__future__.absolute_import",
        ".base.PGIdentifierPreparer",
        "...processors",
        ".base._INT_TYPES",
        "...types",
        "re",
        ".json.JSON",
        ".base._DECIMAL_TYPES",
        ".base.PGExecutionContext",
        ".base.ENUM",
        ".base.UUID",
        "...util",
        ".base.PGCompiler",
        ".base.PGDialect",
        ".json.JSONB",
        "logging",
        "...exc",
        ".hstore.HSTORE",
        "decimal",
        ".base._FLOAT_TYPES"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/psycopg2cffi.py": [
        ".psycopg2.PGDialect_psycopg2"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/pygresql.py": [
        "pgdb",
        "...types.JSON",
        ".base.PGIdentifierPreparer",
        "...processors",
        ".base._INT_TYPES",
        "re",
        ".json.JSON",
        ".base._DECIMAL_TYPES",
        ".base.UUID",
        "...util",
        ".base.PGCompiler",
        ".base.PGDialect",
        ".json.JSONB",
        "...exc",
        ".hstore.HSTORE",
        "decimal",
        "...types.Numeric",
        ".base._FLOAT_TYPES",
        "...sql.elements.Null"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/pypostgresql.py": [
        "postgresql.driver.dbapi20",
        "...processors",
        "...types",
        "...util",
        ".base.PGExecutionContext",
        ".base.PGDialect"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/ranges.py": [
        "...types",
        ".base.ischema_names"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/postgresql/zxjdbc.py": [
        "com.ziclix.python.sql.handler.PostgresqlDataHandler",
        "...connectors.zxJDBC.ZxJDBCConnector",
        ".base.PGExecutionContext",
        ".base.PGDialect"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/sqlite/__init__.py": [
        "sqlalchemy.dialects.sqlite.base.REAL",
        "sqlalchemy.dialects.sqlite.base.SMALLINT",
        "sqlalchemy.dialects.sqlite.base.VARCHAR",
        "sqlalchemy.dialects.sqlite.base.dialect",
        "sqlalchemy.dialects.sqlite.base.TEXT",
        "sqlalchemy.dialects.sqlite.base.DECIMAL",
        "sqlalchemy.dialects.sqlite.base.FLOAT",
        "sqlalchemy.dialects.sqlite.base.NUMERIC",
        "sqlalchemy.dialects.sqlite.base.DATETIME",
        "sqlalchemy.dialects.sqlite.base.CHAR",
        "sqlalchemy.dialects.sqlite.base.BOOLEAN",
        "sqlalchemy.dialects.sqlite.base.BLOB",
        "sqlalchemy.dialects.sqlite.base",
        "sqlalchemy.dialects.sqlite.base.TIME",
        "sqlalchemy.dialects.sqlite.base.DATE",
        "sqlalchemy.dialects.sqlite.base.INTEGER",
        "sqlalchemy.dialects.sqlite.base.TIMESTAMP",
        "sqlalchemy.dialects.sqlite.pysqlite"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/sqlite/base.py": [
        "datetime",
        "...processors",
        "...types",
        "re",
        "...sql.compiler",
        "...schema",
        "...util",
        "...sql",
        "...engine.reflection",
        "...exc",
        "...engine.default"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/sqlite/pysqlcipher.py": [
        "pysqlcipher3.dbapi2",
        ".pysqlite.SQLiteDialect_pysqlite",
        "__future__.absolute_import",
        "...engine.url",
        "...pool"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/sqlite/pysqlite.py": [
        "sqlite3.dbapi2",
        "sqlalchemy.exc",
        "sqlalchemy.dialects.sqlite.base.DATETIME",
        "sqlalchemy.util",
        "sqlalchemy.dialects.sqlite.base.DATE",
        "sqlalchemy.types",
        "os",
        "sqlalchemy.pool",
        "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/sybase/__init__.py": [
        ".base.TEXT",
        ".base.CHAR",
        ".base.TINYINT",
        ".base.BIGINT",
        ".base.DATE",
        ".base.VARBINARY",
        ".base.UNIVARCHAR",
        ".base.SMALLINT",
        "sqlalchemy.dialects.sybase.pyodbc",
        ".base.VARCHAR",
        ".base.IMAGE",
        ".base.NUMERIC",
        ".base.UNICHAR",
        ".base.INTEGER",
        ".base.BIT",
        ".base.dialect",
        ".base.DATETIME",
        "sqlalchemy.dialects.sybase.base",
        ".base.NVARCHAR",
        ".base.NCHAR",
        ".base.BINARY",
        ".base.INT",
        ".base.MONEY",
        ".base.FLOAT",
        ".base.SMALLMONEY",
        ".base.TIME",
        ".base.UNITEXT"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/sybase/base.py": [
        "sqlalchemy.types.REAL",
        "sqlalchemy.sql.text",
        "sqlalchemy.types.CHAR",
        "sqlalchemy.types.BIGINT",
        "sqlalchemy.types.DATE",
        "sqlalchemy.types.VARBINARY",
        "sqlalchemy.types.SMALLINT",
        "sqlalchemy.types.VARCHAR",
        "sqlalchemy.types.NUMERIC",
        "sqlalchemy.types",
        "re",
        "sqlalchemy.types.TEXT",
        "sqlalchemy.types.INTEGER",
        "sqlalchemy.types.NCHAR",
        "sqlalchemy.types.DECIMAL",
        "sqlalchemy.sql.compiler",
        "sqlalchemy.schema",
        "sqlalchemy.types.DATETIME",
        "sqlalchemy.util",
        "sqlalchemy.types.NVARCHAR",
        "sqlalchemy.exc",
        "sqlalchemy.types.BINARY",
        "sqlalchemy.engine.reflection",
        "sqlalchemy.engine.default",
        "sqlalchemy.types.TIMESTAMP",
        "sqlalchemy.types.FLOAT",
        "sqlalchemy.types.Unicode",
        "sqlalchemy.types.TIME"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/sybase/mxodbc.py": [
        "sqlalchemy.dialects.sybase.base.SybaseExecutionContext",
        "sqlalchemy.connectors.mxodbc.MxODBCConnector",
        "sqlalchemy.dialects.sybase.base.SybaseDialect"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/sybase/pyodbc.py": [
        "sqlalchemy.processors",
        "decimal",
        "sqlalchemy.types",
        "sqlalchemy.connectors.pyodbc.PyODBCConnector",
        "sqlalchemy.dialects.sybase.base.SybaseExecutionContext",
        "sqlalchemy.dialects.sybase.base.SybaseDialect"
    ],
    "/tmp/sqlalchemy/sqlalchemy/dialects/sybase/pysybase.py": [
        "Sybase",
        "sqlalchemy.processors",
        "sqlalchemy.dialects.sybase.base.SybaseSQLCompiler",
        "sqlalchemy.types",
        "sqlalchemy.dialects.sybase.base.SybaseExecutionContext",
        "sqlalchemy.dialects.sybase.base.SybaseDialect"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/__init__.py": [
        ".strategies"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/base.py": [
        "..util",
        "..exc",
        ".util._distill_params",
        "..interfaces",
        "__future__.with_statement",
        "sys",
        ".interfaces.ExceptionContext",
        "..sql.schema",
        "contextlib",
        ".interfaces.Connectable",
        "..sql.util",
        "..log"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/default.py": [
        "weakref",
        ".reflection",
        "..processors",
        ".interfaces",
        "random",
        "..exc",
        "..types",
        "..util",
        "re",
        ".result",
        "codecs",
        "..sql.schema",
        "..sql.expression",
        "..event",
        "..pool",
        "..sql.compiler"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/interfaces.py": [
        "..util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/reflection.py": [
        "..sql.type_api.TypeEngine",
        "..exc",
        "..util.deprecated",
        "..sql.schema",
        "..util.topological",
        "..util",
        "..sql",
        "..inspection",
        ".base.Connectable"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/result.py": [
        "..exc",
        "collections.Sequence",
        "sqlalchemy.cresultproxy.safe_rowproxy_reconstructor",
        "..sql.sqltypes",
        "..util",
        "collections",
        "operator",
        "..sql.expression",
        "..sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/strategies.py": [
        "sqlalchemy.engine.ddl",
        "sqlalchemy.engine.ddl",
        "sqlalchemy.engine.url",
        "sqlalchemy.engine.threadlocal",
        "sqlalchemy.util",
        "sqlalchemy.pool",
        "operator.attrgetter",
        "sqlalchemy.engine.base",
        "sqlalchemy.event",
        "sqlalchemy.sql.schema"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/threadlocal.py": [
        "..util",
        "weakref",
        ".base"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/url.py": [
        ".Dialect",
        "..exc",
        "..util",
        "re",
        "..dialects.registry",
        "..dialects.plugins"
    ],
    "/tmp/sqlalchemy/sqlalchemy/engine/util.py": [
        "..util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/event/__init__.py": [],
    "/tmp/sqlalchemy/sqlalchemy/event/api.py": [
        "..exc",
        "__future__.absolute_import",
        "..util",
        ".registry._EventKey",
        ".base._registrars"
    ],
    "/tmp/sqlalchemy/sqlalchemy/event/attr.py": [
        "weakref",
        "itertools.chain",
        "__future__.with_statement",
        "__future__.absolute_import",
        "..util",
        "..util.threading",
        ".legacy",
        "collections",
        ".registry"
    ],
    "/tmp/sqlalchemy/sqlalchemy/event/base.py": [
        ".attr._EmptyListener",
        "..util",
        ".attr._ClsLevelDispatch",
        "__future__.absolute_import",
        "weakref",
        ".attr._JoinedListener"
    ],
    "/tmp/sqlalchemy/sqlalchemy/event/legacy.py": [
        "..util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/event/registry.py": [
        "..util",
        "..exc",
        "__future__.absolute_import",
        "weakref",
        "collections",
        "types"
    ],
    "/tmp/sqlalchemy/sqlalchemy/events.py": [
        ".engine.Engine",
        ".engine.Dialect",
        ".engine.Connectable",
        ".sql.base.SchemaEventTarget",
        ".event",
        ".pool.Pool",
        ".exc"
    ],
    "/tmp/sqlalchemy/sqlalchemy/exc.py": [
        "sqlalchemy.sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/__init__.py": [
        "..util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/associationproxy.py": [
        "..util",
        "..exc",
        "..sql.or_",
        "..orm.interfaces",
        "weakref",
        "..orm",
        "..orm.collections",
        "operator"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/automap.py": [
        "..util",
        ".declarative.declarative_base",
        "..orm.relationship",
        "..orm.interfaces",
        ".declarative.base._DeferredMapperConfig",
        "..schema.ForeignKeyConstraint",
        "..sql.and_",
        "..orm.backref"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/baked.py": [
        "..exc",
        "..orm.strategies",
        "..orm.interfaces",
        "..util",
        "..orm.util",
        "..orm.query.Query",
        "logging",
        "copy",
        "..orm.properties",
        "..orm.exc",
        "..orm.strategy_options",
        "..log",
        "..orm.attributes",
        "..sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/compiler.py": [
        "..sql.visitors",
        "..exc"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/declarative/__init__.py": [
        ".api.DeclarativeMeta",
        ".api.instrument_declarative",
        ".api.as_declarative",
        ".api.comparable_using",
        ".api.synonym_for",
        ".api.DeferredReflection",
        ".api.AbstractConcreteBase",
        ".api.declared_attr",
        ".api.declarative_base",
        ".api.has_inherited_table",
        ".api.ConcreteBase"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/declarative/api.py": [
        "...util.OrderedDict",
        "...util.hybridproperty",
        ".base._DeferredMapperConfig",
        ".base._add_attribute",
        ".base._declarative_constructor",
        ".base._as_declarative",
        "...schema.MetaData",
        ".clsregistry._class_resolver",
        "...orm.interfaces",
        "...orm.synonym",
        "...util.hybridmethod",
        "...util",
        "...schema.Table",
        "...orm.properties",
        "...exc",
        "...orm.base._mapper_or_none",
        "...orm.util.polymorphic_union",
        "...orm.comparable_property",
        "weakref",
        "...orm.attributes"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/declarative/base.py": [
        ".api.declared_attr",
        "...orm.interfaces.MapperProperty",
        "...event",
        "...orm.base._is_mapped_class",
        "...util.topological",
        "collections",
        "...orm.attributes.QueryableAttribute",
        "...schema.Column",
        "...orm.class_mapper",
        "...orm.properties.CompositeProperty",
        "...util",
        "...schema.Table",
        "...orm.mapper",
        "...orm.synonym",
        "...exc",
        "...orm.properties.ColumnProperty",
        "weakref",
        ".clsregistry",
        "...sql.expression"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/declarative/clsregistry.py": [
        "sqlalchemy",
        "sqlalchemy.orm.remote",
        "sqlalchemy.orm.foreign",
        "weakref",
        "...exc",
        "...schema._get_table_key",
        "...orm.interfaces",
        "...orm.properties.ColumnProperty",
        "...orm.class_mapper",
        "...util",
        "...orm.properties.SynonymProperty",
        "...inspection",
        "...orm.properties.RelationshipProperty"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/horizontal_shard.py": [
        "..util",
        "..orm.session.Session",
        "..orm.query.Query"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/hybrid.py": [
        "..orm.interfaces",
        "..util",
        "..orm.attributes"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/indexable.py": [
        "..orm.attributes.flag_modified",
        "__future__.absolute_import",
        "..ext.hybrid.hybrid_property"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/instrumentation.py": [
        "..orm.instrumentation",
        "..orm.instrumentation.InstrumentationFactory",
        "..orm.instrumentation._default_state_getter",
        "..orm.instrumentation.ClassManager",
        "..orm.collections",
        "..orm.instrumentation._default_dict_getter",
        "..orm.instrumentation._default_manager_getter",
        "..orm.base",
        "..util",
        "..orm.exc",
        "weakref",
        "..orm.attributes"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/mutable.py": [
        "..orm.Mapper",
        "..orm.object_mapper",
        "..orm.attributes.flag_modified",
        "weakref",
        "..util.memoized_property",
        "..event",
        "..types",
        "..orm.mapper"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/orderinglist.py": [
        "..orm.collections.collection",
        "..util",
        "..orm.collections.collection_adapter"
    ],
    "/tmp/sqlalchemy/sqlalchemy/ext/serializer.py": [
        "..engine.Engine",
        "..orm.mapper.Mapper",
        "..orm.attributes.QueryableAttribute",
        "..Column",
        "..util.byte_buffer",
        "..orm.class_mapper",
        "..util.b64encode",
        "re",
        "..orm.session.Session",
        "..orm.interfaces.MapperProperty",
        "..util.text_type",
        "..Table",
        "..util.b64decode",
        "..util.pickle"
    ],
    "/tmp/sqlalchemy/sqlalchemy/inspection.py": [
        ".exc",
        ".util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/interfaces.py": [
        ".util",
        ".event"
    ],
    "/tmp/sqlalchemy/sqlalchemy/log.py": [
        "logging",
        "sys"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/__init__.py": [
        "inspect",
        ".descriptor_props.ComparableProperty",
        ".descriptor_props.SynonymProperty",
        ".mapper._mapper_registry",
        "..util",
        ".mapper.configure_mappers",
        "..util.langhelpers.public_factory",
        ".mapper.Mapper",
        ".query.AliasOption",
        ".mapper",
        ".descriptor_props.CompositeProperty",
        ".properties.ColumnProperty",
        ".relationships.RelationshipProperty",
        ".strategy_options",
        ".session.Session"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/attributes.py": [
        ".base.PASSIVE_OFF",
        ".base.PASSIVE_NO_RESULT",
        ".base.ATTR_EMPTY",
        ".base.manager_of_class",
        ".base.LOAD_AGAINST_COMMITTED",
        ".base.NO_VALUE",
        ".base.instance_state",
        "operator",
        ".base.instance_dict",
        "..event",
        ".base.NEVER_SET",
        ".base.INIT_OK",
        ".base.NO_AUTOFLUSH",
        ".base.CALLABLES_OK",
        ".collections",
        ".base.PASSIVE_ONLY_PERSISTENT",
        ".base.ATTR_WAS_SET",
        ".interfaces",
        "..util",
        ".base.state_str",
        ".exc",
        ".base.PASSIVE_NO_INITIALIZE",
        ".base.PASSIVE_NO_FETCH",
        "..inspection",
        ".base.PASSIVE_RETURN_NEVER_SET",
        ".base.instance_str"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/base.py": [
        "..exc",
        "operator",
        "..util",
        ".exc",
        "..sql.expression",
        "..inspection"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/collections.py": [
        "sqlalchemy.util.compat.inspect_getargspec",
        "..exc",
        "operator",
        "..util",
        ".base",
        "weakref",
        "..sql.expression"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/dependency.py": [
        ".exc",
        ".interfaces.ONETOMANY",
        ".util",
        ".interfaces.MANYTOONE",
        "..exc",
        ".sync",
        "..util",
        ".unitofwork",
        ".interfaces.MANYTOMANY",
        "..sql",
        ".attributes"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/deprecated_interfaces.py": [
        "..event",
        "..util",
        ".interfaces.EXT_CONTINUE"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/descriptor_props.py": [
        ".properties",
        ".interfaces.PropComparator",
        ".util._none_set",
        "..exc",
        "..util",
        ".query",
        ".interfaces.MapperProperty",
        "..sql",
        ".attributes",
        "..sql.expression",
        "..event",
        "..schema"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/dynamic.py": [
        ".object_session",
        ".exc",
        "..log",
        ".object_mapper",
        "..util",
        ".util",
        ".strategies",
        ".attributes",
        ".query.Query",
        ".properties",
        "..exc"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/evaluator.py": [
        "..sql.operators",
        "operator"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/events.py": [
        "sqlalchemy.util.compat.inspect_getargspec",
        "..event",
        ".instrumentation",
        ".session.sessionmaker",
        ".attributes.QueryableAttribute",
        ".interfaces",
        ".mapperlib",
        "..util",
        ".scoping.scoped_session",
        ".base._mapper_or_none",
        "..exc",
        "weakref",
        ".session.Session",
        ".query.Query"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/exc.py": [
        "..exc",
        "..util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/identity.py": [
        "..util",
        "..exc",
        "weakref",
        ".util",
        ".attributes"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/instrumentation.py": [
        ".exc",
        ".interfaces",
        "..util",
        ".state",
        ".base",
        ".collections"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/interfaces.py": [
        "__future__.absolute_import",
        ".base.NOT_EXTENSION",
        ".base.MANYTOMANY",
        "collections",
        "..sql.operators",
        "..inspect",
        "..util",
        ".base.MANYTOONE",
        ".base._MappedAttribute",
        ".base.EXT_CONTINUE",
        ".base.ONETOMANY",
        ".base.EXT_STOP",
        ".base.InspectionAttr"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/loading.py": [
        ".util._none_set",
        "__future__.absolute_import",
        "collections",
        "..exc",
        "..util",
        ".util.state_str",
        ".base._DEFER_FOR_STATE",
        ".exc",
        ".base._SET_DEFERRED_EXPIRED",
        ".strategy_options",
        ".attributes",
        "..sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/mapper.py": [
        ".base._class_to_mapper",
        "itertools.chain",
        "..exc",
        "__future__.absolute_import",
        ".interfaces.MapperProperty",
        ".base._state_mapper",
        "..event",
        ".instrumentation",
        ".loading",
        "..log",
        "..schema",
        "collections.deque",
        "..sql.operators",
        ".base.class_mapper",
        "..util",
        "..sql.visitors",
        ".base.state_str",
        ".util",
        "..sql",
        ".properties",
        "types",
        "sys",
        ".interfaces._MappedAttribute",
        ".exc",
        "..inspection",
        ".base._INSTRUMENTOR",
        ".path_registry.PathRegistry",
        "weakref",
        ".interfaces.InspectionAttr",
        ".attributes",
        "..sql.expression",
        "..sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/path_registry.py": [
        "logging",
        "..exc",
        "itertools.chain",
        ".base.class_mapper",
        "..util",
        "..inspection"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/persistence.py": [
        "itertools.chain",
        "..exc",
        "operator",
        ".loading",
        ".base._attr_as_key",
        ".base._entity_descriptor",
        "..sql.base._from_objects",
        ".sync",
        "..util",
        ".base.state_str",
        "..sql",
        ".evaluator",
        ".exc",
        ".attributes",
        "..sql.expression",
        "itertools.groupby"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/properties.py": [
        ".interfaces.StrategizedProperty",
        "..log",
        ".interfaces.PropComparator",
        "__future__.absolute_import",
        "..util",
        ".util._orm_full_deannotate",
        ".attributes",
        "..sql.expression"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/query.py": [
        ".object_mapper",
        "itertools.chain",
        ".util.aliased",
        "..exc",
        ".util.join",
        ".base._is_mapped_class",
        ".loading",
        "..log",
        ".base._generative",
        "..sql.selectable.ForUpdateArg",
        "..sql.base.ColumnCollection",
        ".persistence",
        ".base._entity_descriptor",
        ".util.AliasedClass",
        "..sql.expression._interpret_as_from",
        ".interfaces",
        "..inspect",
        "..util",
        "..sql.visitors",
        "..sql",
        ".base._orm_columns",
        ".properties",
        ".exc",
        ".base._is_aliased_class",
        "..sql.expression",
        ".path_registry.PathRegistry",
        ".util.with_parent",
        ".base.InspectionAttr",
        ".util.ORMAdapter",
        ".attributes",
        "..inspection",
        "..sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/relationships.py": [
        ".util._orm_annotate",
        ".util._orm_deannotate",
        ".interfaces.MANYTOONE",
        "..sql.util.join_condition",
        "..exc",
        "__future__.absolute_import",
        "..sql.util.adapt_criterion_to_null",
        "..sql.util._shallow_annotate",
        "..log",
        ".dependency",
        ".interfaces.MANYTOMANY",
        "collections",
        "..sql.util.selectables_overlap",
        "..schema",
        "..sql.operators",
        "..inspection.inspect",
        ".mapper",
        "..sql.util.visit_binary_product",
        "..util",
        "..sql.visitors",
        "..sql",
        ".interfaces.StrategizedProperty",
        ".interfaces.ONETOMANY",
        ".interfaces.PropComparator",
        "weakref",
        "..sql.util._deep_deannotate",
        ".attributes",
        ".util.CascadeOptions",
        "..sql.util.ClauseAdapter",
        "..sql.expression"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/scoping.py": [
        "..util.ScopedRegistry",
        ".exc",
        "..util.ThreadLocalRegistry",
        ".class_mapper",
        "..exc",
        "..util.warn",
        ".session.Session"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/session.py": [
        ".base.object_mapper",
        "..exc",
        ".unitofwork.UOWTransaction",
        ".query",
        ".base._state_mapper",
        ".loading",
        ".persistence",
        ".attributes",
        "..engine",
        "..inspection.inspect",
        ".base._none_set",
        "..util",
        ".base.state_str",
        ".base.instance_str",
        "..sql",
        ".identity",
        "sys",
        ".exc",
        ".state",
        "weakref",
        "itertools",
        ".base.object_state",
        ".base._class_to_mapper",
        ".SessionExtension",
        "..sql.expression",
        "..sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/state.py": [
        "..util",
        ".base.ATTR_WAS_SET",
        ".base.INIT_OK",
        ".exc",
        ".interfaces",
        ".path_registry.PathRegistry",
        ".base.PASSIVE_OFF",
        "weakref",
        ".base.PASSIVE_NO_INITIALIZE",
        ".base.NO_VALUE",
        ".base",
        ".base.PASSIVE_NO_RESULT",
        "..inspection",
        ".base.NEVER_SET",
        ".base.SQL_OK"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/strategies.py": [
        ".session._state_session",
        ".state.InstanceState",
        "..exc",
        "..event",
        ".loading",
        ".interfaces.LoaderStrategy",
        "..log",
        ".interfaces",
        "..inspect",
        ".util._none_set",
        "..util",
        "..sql.visitors",
        ".util",
        ".unitofwork",
        "..sql",
        ".interfaces.StrategizedProperty",
        ".base._DEFER_FOR_STATE",
        ".properties",
        ".exc",
        ".base._SET_DEFERRED_EXPIRED",
        "itertools",
        ".attributes",
        "..sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/strategy_options.py": [
        "..exc",
        "..sql.base._generative",
        ".path_registry._WILDCARD_TOKEN",
        ".path_registry.TokenRegistry",
        "..inspect",
        "..util",
        ".util",
        ".interfaces.MapperOption",
        ".base._is_aliased_class",
        ".path_registry._DEFAULT_TOKEN",
        ".interfaces.PropComparator",
        ".path_registry.PathRegistry",
        "..sql.base.Generative",
        ".base._class_to_mapper"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/sync.py": [
        ".exc",
        ".util",
        ".attributes"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/unitofwork.py": [
        ".exc",
        "..util.topological",
        "..util",
        ".util",
        ".attributes",
        "..event",
        ".persistence"
    ],
    "/tmp/sqlalchemy/sqlalchemy/orm/util.py": [
        "sqlalchemy.orm.mapper",
        "sqlalchemy.util.topological",
        "sqlalchemy.orm.dependency",
        "sqlalchemy.orm.session",
        "sqlalchemy.orm.unitofwork",
        "sqlalchemy.testing.util.RandomSet",
        ".base.object_mapper",
        ".base.InspectionAttr",
        "..exc",
        ".interfaces.MapperProperty",
        "..event",
        "re",
        ".base._class_to_mapper",
        ".base.class_mapper",
        "..util",
        "..sql",
        ".interfaces.PropComparator",
        ".path_registry.PathRegistry",
        "..sql.expression",
        ".attributes",
        "..inspection",
        "..sql.util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/pool.py": [
        ".util.chop_traceback",
        ".event",
        ".log",
        ".util.queue",
        "collections.deque",
        ".interfaces",
        ".util",
        ".exc",
        ".util.memoized_property",
        "traceback",
        "weakref",
        ".util.threading",
        "time"
    ],
    "/tmp/sqlalchemy/sqlalchemy/processors.py": [
        "sqlalchemy.cprocessors.DecimalResultProcessor",
        "sqlalchemy.cprocessors.UnicodeResultProcessor",
        "datetime",
        ".util",
        "re",
        "codecs"
    ],
    "/tmp/sqlalchemy/sqlalchemy/schema.py": [],
    "/tmp/sqlalchemy/sqlalchemy/sql/__init__.py": [
        "..util",
        ".annotation.Annotated",
        ".elements.AnnotatedColumnElement",
        ".selectable.AnnotatedFromClause",
        ".elements.ClauseList",
        ".annotation._prepare_annotations",
        "inspect",
        ".expression.ColumnElement",
        ".expression.FromClause"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/annotation.py": [
        ".operators",
        "..util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/base.py": [
        "re",
        "collections",
        ".visitors.ClauseVisitor",
        "..util",
        "..exc",
        "itertools"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/compiler.py": [
        "contextlib",
        ".functions",
        ".sqltypes",
        "re",
        ".schema",
        ".elements",
        ".operators",
        ".crud",
        "..util",
        ".visitors",
        ".selectable",
        "..exc",
        "itertools"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/crud.py": [
        "operator",
        ".elements",
        "..util",
        "..exc",
        ".dml"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/ddl.py": [
        ".base.Executable",
        "..util.topological",
        ".elements.ClauseElement",
        "..event",
        ".base.SchemaVisitor",
        ".base._bind_or_error",
        ".base._generative",
        "..util",
        "..exc"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/default_comparator.py": [
        ".elements.ColumnElement",
        ".elements.and_",
        ".elements.BinaryExpression",
        ".elements.ClauseElement",
        ".selectable.SelectBase",
        ".elements.BindParameter",
        ".elements._clause_element_as_expr",
        ".elements.False_",
        ".elements.collate",
        ".elements._is_literal",
        ".operators",
        ".elements._literal_as_text",
        "..util",
        ".selectable.Alias",
        ".type_api",
        ".elements.ClauseList",
        ".elements.TextClause",
        ".selectable.Selectable",
        ".selectable.ScalarSelect",
        ".elements.or_",
        ".elements.UnaryExpression",
        "..exc",
        ".elements._const_expr",
        ".elements.True_",
        ".elements.Visitable",
        ".elements.Null"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/dml.py": [
        ".base.Executable",
        ".elements.ClauseElement",
        ".elements.and_",
        ".elements._clone",
        ".selectable.HasCTE",
        ".selectable._interpret_as_select",
        ".base._generative",
        ".elements._column_as_key",
        ".base._from_objects",
        ".selectable._interpret_as_from",
        ".elements._literal_as_text",
        "..util",
        ".base.DialectKWArgs",
        ".elements.Null",
        "..exc",
        ".selectable.HasPrefixes"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/elements.py": [
        ".annotation.Annotated",
        "..util",
        ".visitors.traverse",
        "operator",
        "re",
        ".base.PARSE_AUTOCOMMIT",
        "..inspection",
        "itertools",
        ".visitors.Visitable",
        ".base.Immutable",
        ".base._generative",
        ".operators",
        "..exc",
        ".base.NO_ARG",
        ".base.Executable",
        "__future__.unicode_literals",
        "numbers",
        ".visitors.cloned_traverse",
        ".type_api"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/expression.py": [
        ".selectable.SelectBase",
        ".selectable.lateral",
        ".dml.Update",
        ".elements.FunctionFilter",
        ".selectable.Selectable",
        ".selectable.Lateral",
        ".selectable.ScalarSelect",
        ".elements.WithinGroup",
        ".elements.Over",
        ".selectable.subquery",
        ".selectable.Select",
        ".elements.ColumnClause",
        ".dml.Insert",
        ".elements.Label",
        ".base.ColumnCollection",
        ".elements.True_",
        ".elements.collate",
        ".elements.between",
        ".selectable.Join",
        ".dml.Delete",
        ".selectable.Exists",
        ".selectable.Alias",
        ".selectable.CompoundSelect",
        ".elements.BooleanClauseList",
        ".elements.Null",
        ".elements.TypeClause",
        ".elements.ColumnElement",
        ".elements.ClauseElement",
        ".elements.Tuple",
        ".elements.BindParameter",
        ".elements.literal",
        "..util.langhelpers.public_factory",
        ".elements.Grouping",
        ".elements.outparam",
        ".selectable.TableSample",
        ".elements.Case",
        ".functions.func",
        ".elements.BinaryExpression",
        ".elements.TextClause",
        ".elements.False_",
        ".elements.UnaryExpression",
        ".selectable.FromClause",
        ".base.Generative",
        ".functions.modifier",
        ".elements.Extract",
        ".base.Executable",
        ".selectable.TableClause",
        ".elements.not_",
        ".selectable.tablesample",
        ".elements.Cast",
        ".elements.TypeCoerce",
        ".selectable.FromGrouping",
        ".elements.literal_column",
        ".selectable.alias",
        ".elements.CollectionAggregate"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/functions.py": [
        ".base.Executable",
        ".util",
        ".elements.ColumnElement",
        ".elements._clone",
        ".sqltypes",
        ".base.ColumnCollection",
        ".visitors.VisitableType",
        ".elements.BindParameter",
        ".elements.FunctionFilter",
        ".schema",
        ".elements._type_from_args",
        ".operators",
        "..util",
        ".elements.Cast",
        ".elements.ClauseList",
        ".annotation",
        ".elements.Grouping",
        ".elements.literal_column",
        ".elements.WithinGroup",
        ".selectable.FromClause",
        ".selectable.Alias",
        ".elements.Over",
        ".elements._literal_as_binds",
        ".elements.Extract",
        ".selectable.Select"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/naming.py": [
        ".schema.Index",
        ".schema.UniqueConstraint",
        "..exc",
        ".elements.conv",
        ".schema.Constraint",
        ".schema.Column",
        ".schema.CheckConstraint",
        ".schema.ForeignKeyConstraint",
        ".elements._defer_none_name",
        "re",
        ".schema.Table",
        ".schema.PrimaryKeyConstraint",
        "..event",
        ".elements._defer_name"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/operators.py": [
        "operator.gt",
        "operator.inv",
        "operator.ge",
        "operator.lshift",
        "operator.eq",
        "operator.le",
        "operator.sub",
        "operator.neg",
        "operator.contains",
        "operator.ne",
        "operator.add",
        "operator.lt",
        "operator.truediv",
        "operator.mul",
        "operator.rshift",
        "..util",
        "operator.mod",
        "operator.or_",
        "operator.and_",
        "operator.getitem"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/schema.py": [
        ".elements.ColumnClause",
        ".base.SchemaEventTarget",
        ".selectable.TableClause",
        ".elements.ColumnElement",
        "__future__.absolute_import",
        "operator",
        ".elements.ClauseElement",
        "..event",
        ".base.ColumnCollection",
        ".base._bind_or_error",
        ".elements._as_truncated",
        "collections",
        ".ddl",
        "sqlalchemy",
        ".elements._literal_as_text",
        "..util",
        ".visitors",
        ".type_api",
        ".elements.TextClause",
        ".base.DialectKWArgs",
        ".elements.quoted_name",
        "..exc",
        "..inspection"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/selectable.py": [
        ".base.Executable",
        ".annotation.Annotated",
        ".elements._literal_and_labels_as_label_reference",
        ".elements.ClauseElement",
        ".elements.and_",
        ".elements._clone",
        ".base.Immutable",
        ".base.ColumnCollection",
        "operator.attrgetter",
        ".elements._cloned_difference",
        ".base._generative",
        ".elements.BindParameter",
        ".elements._anonymous_label",
        ".elements._cloned_intersection",
        "collections",
        ".elements._clause_element_as_expr",
        ".operators",
        ".base._from_objects",
        "itertools",
        ".elements._select_iterables",
        ".elements._literal_as_text",
        "operator",
        "..util",
        ".type_api",
        ".base.ColumnSet",
        ".elements.ClauseList",
        ".elements.TextClause",
        ".elements._interpret_as_column_or_from",
        ".elements.Grouping",
        ".elements.literal_column",
        ".elements.UnaryExpression",
        "..exc",
        ".elements._literal_as_label_reference",
        ".elements.True_",
        "sqlalchemy.sql.visitors.Visitable",
        ".base.Generative",
        "..inspection",
        ".elements._expand_cloned"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/sqltypes.py": [
        ".elements.Slice",
        ".type_api.TypeEngine",
        ".base.SchemaEventTarget",
        "array",
        "..event",
        "..util.compat",
        ".elements.TypeCoerce",
        "..processors",
        ".base._bind_or_error",
        "json",
        ".type_api.TypeDecorator",
        "collections",
        ".elements",
        ".operators",
        "..util",
        ".type_api",
        "codecs",
        "datetime",
        ".elements._defer_name",
        ".elements.quoted_name",
        "..exc",
        "..inspection",
        "decimal",
        ".type_api.to_instance",
        ".elements._literal_as_binds",
        "..util.pickle"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/type_api.py": [
        "..exc",
        ".visitors.VisitableType",
        ".operators",
        "..util",
        ".visitors.Visitable",
        ".base.SchemaEventTarget"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/util.py": [
        ".elements.ColumnClause",
        "itertools.chain",
        ".elements.ColumnElement",
        ".elements._label_reference",
        ".elements._textual_label_reference",
        ".selectable.ScalarSelect",
        ".elements.BindParameter",
        "collections.deque",
        ".selectable.Join",
        ".schema.Column",
        ".operators",
        ".base._from_objects",
        "..util",
        ".visitors",
        ".base.ColumnSet",
        ".selectable.FromGrouping",
        ".selectable.FromClause",
        ".elements.UnaryExpression",
        "..exc",
        ".elements.Null"
    ],
    "/tmp/sqlalchemy/sqlalchemy/sql/visitors.py": [
        "collections.deque",
        "..exc",
        "..util",
        "operator"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/__init__.py": [
        ".exclusions.skip",
        ".config",
        ".exclusions.against"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/assertions.py": [
        ".db",
        ".util",
        "sqlalchemy.exc",
        "__future__.absolute_import",
        ".exclusions.db_spec",
        "contextlib",
        ".util.fail",
        "sqlalchemy.types",
        "re",
        "sqlalchemy.pool",
        ".config",
        ".mock",
        "sqlalchemy.schema",
        ".assertsql",
        "warnings",
        "sqlalchemy.util",
        "sqlalchemy.orm",
        "sqlalchemy.util.decorator",
        "sqlalchemy.engine.default",
        "sqlalchemy.engine.url"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/assertsql.py": [
        "contextlib",
        "..event",
        "re",
        "collections",
        "sqlalchemy.engine.util._distill_params",
        "..util",
        "..engine.default.DefaultDialect",
        "sqlalchemy.engine.url",
        "sqlalchemy.schema._DDLCompiles"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/config.py": [
        "collections"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/engines.py": [
        ".assertions",
        "sqlalchemy.databases",
        "sqlalchemy.engine.url.make_url",
        "sqlalchemy.create_engine",
        "sqlalchemy.create_engine",
        "..pool",
        "..event",
        ".util.decorator",
        ".config",
        "warnings",
        "__future__.absolute_import",
        "re",
        "weakref"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/entities.py": [
        "sqlalchemy.exc",
        "sqlalchemy"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/exclusions.py": [
        "sqlalchemy.util.compat.inspect_getargspec",
        "contextlib",
        "operator",
        ".config",
        "..util.decorator",
        "..util"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/fixtures.py": [
        "sys",
        "sqlalchemy.ext.declarative.DeclarativeMeta",
        ".entities.BasicEntity",
        ".engines.drop_all_tables",
        "sqlalchemy.event",
        "..util",
        ".entities.ComparableEntity",
        ".util.adict",
        ".assertions",
        "sqlalchemy.ext.declarative.declarative_base",
        "sqlalchemy",
        ".config",
        ".schema"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/mock.py": [
        "__future__.absolute_import",
        "..util.py33"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/pickleable.py": [
        ".fixtures"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/plugin/__init__.py": [],
    "/tmp/sqlalchemy/sqlalchemy/testing/plugin/bootstrap.py": [
        "imp",
        "importlib.machinery",
        "sys",
        "os"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/plugin/noseplugin.py": [
        "sqlalchemy.testing.fixtures",
        ".plugin_base",
        "nose.plugins.Plugin",
        "sys",
        "nose",
        "os"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/plugin/plugin_base.py": [
        "sqlalchemy.testing.provision",
        "sqlalchemy.testing.profiling",
        "sqlalchemy.testing.engines",
        "sqlalchemy.testing.warnings",
        "sqlalchemy.testing",
        "sqlalchemy.util",
        "sqlalchemy.testing.assertions",
        "sqlalchemy.testing.fixtures",
        "sqlalchemy.testing.config",
        "sqlalchemy.testing.exclusions",
        "logging",
        "cdecimal",
        "sqlalchemy.testing.config",
        "sqlalchemy.testing.config",
        "sqlalchemy.testing",
        "sqlalchemy.testing.provision",
        "sqlalchemy.testing",
        "sqlalchemy.testing.config",
        "sqlalchemy.inspect",
        "sqlalchemy.testing.exclusions.against",
        "sqlalchemy.testing.util",
        "sqlalchemy.dialects.postgresql",
        "sqlalchemy.testing.config",
        "sqlalchemy.schema",
        "sqlalchemy.orm.util.randomize_unitofwork",
        "sqlalchemy.testing.config",
        "sqlalchemy.testing.profiling",
        "__future__.absolute_import",
        "ConfigParser",
        "re",
        "sys"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/plugin/pytestplugin.py": [
        "sqlalchemy.testing.provision",
        "sqlalchemy.testing.provision",
        ".plugin_base",
        "uuid",
        "pytest",
        "collections",
        "inspect",
        "argparse",
        "os"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/profiling.py": [
        "..util.win32",
        "..util.jython",
        "os",
        "..util.pypy",
        "sys",
        "..util.update_wrapper",
        "collections",
        "pstats",
        "contextlib",
        ".util.gc_collect",
        ".config"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/provision.py": [
        "sqlalchemy.event",
        "sqlalchemy.text",
        "sqlalchemy.util.compat",
        ".engines",
        "sqlalchemy.engine.url",
        ".config",
        "logging",
        "sqlalchemy.exc",
        "os",
        "time"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/replay_fixture.py": [
        "collections.deque",
        ".profiling",
        "sqlalchemy.create_engine",
        "..util",
        "sqlalchemy.orm.Session",
        "contextlib",
        ".fixtures",
        ".config",
        "types",
        "sqlalchemy.MetaData"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/requirements.py": [
        "sqlalchemy.util.pickle",
        "sqlalchemy.create_engine",
        "sys",
        "..util",
        ".exclusions"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/runner.py": [
        ".plugin.noseplugin.NoseSQLAlchemy",
        "nose"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/schema.py": [
        ".exclusions",
        ".config",
        "..event",
        "..schema"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/__init__.py": [],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/test_ddl.py": [
        "..config.requirements",
        "sqlalchemy.String",
        "..assertions.eq_",
        "sqlalchemy.Column",
        "..util",
        "sqlalchemy.Integer",
        "sqlalchemy.Table",
        "..fixtures",
        "..config"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/test_dialect.py": [
        "..config.requirements",
        "sqlalchemy.String",
        "..schema.Column",
        "..schema.Table",
        "sqlalchemy.Integer",
        "..fixtures",
        "..assert_raises",
        "..config",
        "sqlalchemy.exc"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/test_insert.py": [
        "sqlalchemy.literal_column",
        "..config.requirements",
        "..assertions.eq_",
        "..engines",
        "..schema.Column",
        "sqlalchemy.literal",
        "..schema.Table",
        "sqlalchemy.Integer",
        "..fixtures",
        "..config",
        "sqlalchemy.select",
        "sqlalchemy.String"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/test_reflection.py": [
        "sqlalchemy.pool",
        "sqlalchemy.schema.Index",
        "sqlalchemy.testing.eq_",
        "sqlalchemy.testing",
        "sqlalchemy.exc",
        "sqlalchemy.testing.assert_raises_message",
        "operator",
        "sqlalchemy.testing.fixtures",
        "sqlalchemy.types",
        "sqlalchemy.event",
        "sqlalchemy.String",
        "sqlalchemy.testing.engines",
        "sqlalchemy.ForeignKey",
        "sqlalchemy.Integer",
        "..config",
        "sqlalchemy.MetaData",
        "sqlalchemy.testing.schema.Column",
        "sqlalchemy.inspect",
        "sqlalchemy.schema.DDL",
        "sqlalchemy.engine.reflection.Inspector",
        "sqlalchemy.sql.elements.quoted_name",
        "sqlalchemy.testing.schema.Table",
        "sqlalchemy"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/test_results.py": [
        "..schema.Table",
        "..config.requirements",
        "..assertions.eq_",
        "..engines",
        "..schema.Column",
        "sqlalchemy.text",
        "...testing",
        "sqlalchemy.DateTime",
        "sqlalchemy.func",
        "sqlalchemy.sql",
        "sqlalchemy.Integer",
        "..fixtures",
        "datetime",
        "..config",
        "sqlalchemy.select",
        "sqlalchemy.String"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/test_select.py": [
        "sqlalchemy.String",
        "..assertions.eq_",
        "sqlalchemy.union",
        "sqlalchemy.testing",
        "sqlalchemy.util",
        "..schema.Column",
        "sqlalchemy.bindparam",
        "sqlalchemy.func",
        "..schema.Table",
        "sqlalchemy.Integer",
        "..fixtures",
        "..config",
        "sqlalchemy.select"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/test_sequence.py": [
        "..config.requirements",
        "...String",
        "..assertions.eq_",
        "...Sequence",
        "..schema.Column",
        "...testing",
        "..schema.Table",
        "...Integer",
        "..fixtures",
        "..config",
        "...schema"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/test_types.py": [
        "sqlalchemy.orm.Session",
        "sqlalchemy.ext.declarative.declarative_base",
        "..assertions.eq_",
        "sqlalchemy.UnicodeText",
        "...testing",
        "sqlalchemy.DateTime",
        "sqlalchemy.and_",
        "..fixtures",
        "sqlalchemy.null",
        "sqlalchemy.select",
        "sqlalchemy.type_coerce",
        "..config.requirements",
        "sqlalchemy.String",
        "sqlalchemy.literal",
        "sqlalchemy.JSON",
        "sqlalchemy.Date",
        "sqlalchemy.Integer",
        "..config",
        "sqlalchemy.MetaData",
        "..schema.Column",
        "...util",
        "sqlalchemy.Time",
        "datetime",
        "sqlalchemy.Text",
        "decimal",
        "sqlalchemy.Float",
        "sqlalchemy.Numeric",
        "sqlalchemy.cast",
        "sqlalchemy.Boolean",
        "...util.u",
        "sqlalchemy.Unicode",
        "..schema.Table"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/suite/test_update_delete.py": [
        "sqlalchemy.String",
        "..assertions.eq_",
        "..schema.Column",
        "..schema.Table",
        "sqlalchemy.Integer",
        "..fixtures",
        "..config"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/util.py": [
        "cPickle",
        "pickle",
        ".engines",
        ".config",
        "sqlalchemy.schema",
        "sqlalchemy.inspect",
        ".config",
        "sqlalchemy.Column",
        "sqlalchemy.ForeignKeyConstraint",
        "sqlalchemy.schema.DropTable",
        "sqlalchemy.schema.DropConstraint",
        "sqlalchemy.Integer",
        "sqlalchemy.Table",
        "sqlalchemy.MetaData",
        "random",
        "gc",
        "..util.py2k",
        "..util.decorator",
        "..util.defaultdict",
        "..util.jython",
        "sys",
        "..util.pypy",
        "types",
        "decimal",
        "time"
    ],
    "/tmp/sqlalchemy/sqlalchemy/testing/warnings.py": [
        "warnings",
        "__future__.absolute_import",
        "..exc",
        ".assertions"
    ],
    "/tmp/sqlalchemy/sqlalchemy/types.py": [
        ".sql.sqltypes.Binary",
        ".sql.sqltypes.Float",
        ".sql.type_api.TypeEngine",
        ".sql.sqltypes.CLOB",
        ".sql.sqltypes.UnicodeText",
        ".sql.sqltypes.TEXT",
        ".sql.sqltypes.Time",
        ".sql.sqltypes.DateTime",
        ".sql.sqltypes.CHAR",
        ".sql.sqltypes.String",
        ".sql.sqltypes.BIGINT",
        ".sql.sqltypes.DATE",
        ".sql.sqltypes.VARBINARY",
        ".sql.sqltypes.SMALLINT",
        ".sql.sqltypes.VARCHAR",
        ".sql.sqltypes.Indexable",
        ".sql.sqltypes.Enum",
        ".sql.sqltypes.JSON",
        ".sql.sqltypes.NUMERIC",
        ".sql.sqltypes.NVARCHAR",
        ".sql.sqltypes.Concatenable",
        ".sql.type_api.TypeDecorator",
        ".sql.sqltypes.Boolean",
        ".sql.sqltypes.Date",
        ".sql.sqltypes.INTEGER",
        ".sql.sqltypes.ARRAY",
        ".sql.sqltypes.Text",
        ".sql.sqltypes.LargeBinary",
        ".sql.sqltypes.Interval",
        ".sql.sqltypes.SmallInteger",
        ".sql.sqltypes.DECIMAL",
        ".sql.type_api.UserDefinedType",
        ".sql.sqltypes.REAL",
        ".sql.sqltypes.DATETIME",
        ".sql.sqltypes.PickleType",
        ".sql.sqltypes.Integer",
        ".sql.sqltypes.NCHAR",
        ".sql.sqltypes.BINARY",
        ".sql.sqltypes.BigInteger",
        ".sql.sqltypes.INT",
        ".sql.sqltypes.TIMESTAMP",
        ".sql.sqltypes.FLOAT",
        ".sql.sqltypes.Numeric",
        ".sql.sqltypes.BOOLEAN",
        ".sql.sqltypes.BLOB",
        ".sql.sqltypes.Unicode",
        ".sql.sqltypes.TIME"
    ],
    "/tmp/sqlalchemy/sqlalchemy/util/__init__.py": [],
    "/tmp/sqlalchemy/sqlalchemy/util/_collections.py": [
        "__future__.absolute_import",
        "operator",
        ".py2k",
        "collections",
        ".compat.binary_types",
        ".compat.itertools_filterfalse",
        "types",
        ".compat.string_types",
        "weakref",
        ".compat.threading"
    ],
    "/tmp/sqlalchemy/sqlalchemy/util/compat.py": [
        "contextlib.contextmanager",
        "builtins",
        "base64",
        "collections",
        "time",
        "sys",
        "itertools",
        "inspect.getargspec"
    ],
    "/tmp/sqlalchemy/sqlalchemy/util/deprecations.py": [
        "..exc",
        "warnings",
        "textwrap",
        "re",
        ".langhelpers.decorator"
    ],
    "/tmp/sqlalchemy/sqlalchemy/util/langhelpers.py": [
        "pkg_resources",
        "._collections",
        "operator",
        ".compat",
        "inspect.CO_VARKEYWORDS",
        "re",
        "types",
        "warnings",
        "inspect",
        "sys",
        "functools.update_wrapper",
        "hashlib",
        "..exc",
        "itertools"
    ],
    "/tmp/sqlalchemy/sqlalchemy/util/queue.py": [
        "collections.deque",
        "time.time",
        ".compat.threading"
    ],
    "/tmp/sqlalchemy/sqlalchemy/util/topological.py": [
        "..exc.CircularDependencyError",
        "..util"
    ]
}
{
    "/tmp/steam/steam/__init__.py": [],
    "/tmp/steam/steam/client/__init__.py": [
        "steam.util.proto_fill_from_dict",
        "getpass.getpass",
        "gevent.monkey",
        "steam.enums.EResult",
        "io.open",
        "six",
        "json",
        "steam.enums.emsg.EMsg",
        "steam.client.builtins.BuiltinBase",
        "steam.SteamID",
        "steam.core.cm.CMClient",
        "steam.util.ip_to_int",
        "logging",
        "steam.core.msg.MsgProto",
        "steam.enums.EOSType",
        "steam.core.crypto.sha1_hash",
        "time.time",
        "os",
        "steam.util.ip_from_int"
    ],
    "/tmp/steam/steam/client/builtins/__init__.py": [
        "steam.client.builtins.leaderboards.Leaderboards",
        "steam.client.builtins.web.Web",
        "steam.client.builtins.account.Account",
        "steam.client.builtins.unified_messages.UnifiedMessages",
        "steam.client.builtins.apps.Apps",
        "steam.client.builtins.user.User",
        "steam.client.builtins.friends.Friends",
        "steam.client.builtins.gameservers.GameServers"
    ],
    "/tmp/steam/steam/client/builtins/account.py": [
        "steam.steamid.SteamID",
        "steam.core.msg.MsgProto",
        "steam.enums.EResult",
        "steam.core.msg.Msg",
        "steam.enums.emsg.EMsg"
    ],
    "/tmp/steam/steam/client/builtins/apps.py": [
        "steam.core.msg.MsgProto",
        "steam.enums.emsg.EMsg",
        "steam.enums.EResult",
        "vdf"
    ],
    "/tmp/steam/steam/client/builtins/friends.py": [
        "steam.steamid.SteamID",
        "steam.client.user.SteamUser",
        "steam.steamid.intBase",
        "logging",
        "steam.core.msg.MsgProto",
        "steam.enums.EFriendRelationship",
        "eventemitter.EventEmitter",
        "steam.enums.EResult",
        "six.itervalues",
        "steam.enums.emsg.EMsg"
    ],
    "/tmp/steam/steam/client/builtins/gameservers.py": [
        "steam.steamid.SteamID",
        "steam.util.proto_to_dict",
        "steam.core.msg.MsgProto",
        "steam.util.ip_to_int",
        "steam.enums.emsg.EMsg",
        "steam.util.ip_from_int"
    ],
    "/tmp/steam/steam/client/builtins/leaderboards.py": [
        "steam.util.throttle.ConstantRateLimit",
        "steam.core.msg.MsgProto",
        "steam.util._range",
        "steam.enums.ELeaderboardDataRequest",
        "steam.enums.EResult",
        "steam.util.chunks",
        "steam.enums.ELeaderboardSortMethod",
        "steam.enums.emsg.EMsg",
        "steam.enums.ELeaderboardDisplayType"
    ],
    "/tmp/steam/steam/client/builtins/misc.py": [
        "logging",
        "steam.util.throttle.ConstantRateLimit",
        "steam.core.msg.MsgProto",
        "steam.util._range",
        "steam.enums.ELeaderboardDataRequest",
        "eventemitter.EventEmitter",
        "steam.core.msg.get_um",
        "steam.enums.EResult",
        "steam.util.chunks",
        "steam.util.WeakRefKeyDict",
        "steam.enums.ELeaderboardSortMethod",
        "steam.enums.emsg.EMsg",
        "steam.enums.ELeaderboardDisplayType"
    ],
    "/tmp/steam/steam/client/builtins/unified_messages.py": [
        "logging",
        "steam.core.msg.MsgProto",
        "steam.util.proto_fill_from_dict",
        "eventemitter.EventEmitter",
        "steam.core.msg.get_um",
        "steam.enums.EResult",
        "steam.util.WeakRefKeyDict",
        "steam.enums.emsg.EMsg"
    ],
    "/tmp/steam/steam/client/builtins/user.py": [
        "steam.client.user.SteamUser",
        "steam.enums.EChatEntryType",
        "steam.core.msg.MsgProto",
        "steam.util.proto_fill_from_dict",
        "weakref.WeakValueDictionary",
        "steam.enums.EPersonaState",
        "steam.enums.emsg.EMsg"
    ],
    "/tmp/steam/steam/client/builtins/web.py": [
        "steam.webapi",
        "steam.core.crypto.generate_session_key",
        "steam.core.crypto.symmetric_encrypt",
        "steam.util.web.make_requests_session",
        "steam.core.msg.MsgProto",
        "steam.util.web.generate_session_id",
        "steam.enums.emsg.EMsg"
    ],
    "/tmp/steam/steam/client/features/__init__.py": [
        "steam.client.features.web.Web",
        "steam.client.features.misc.Misc",
        "steam.client.features.user.User"
    ],
    "/tmp/steam/steam/client/features/misc.py": [
        "steam.enums.emsg.EMsg",
        "steam.core.msg.MsgProto"
    ],
    "/tmp/steam/steam/client/features/user.py": [
        "steam.enums.EPersonaState",
        "steam.enums.emsg.EMsg",
        "steam.core.msg.MsgProto"
    ],
    "/tmp/steam/steam/client/features/web.py": [
        "steam.WebAPI",
        "steam.core.crypto.generate_session_key",
        "steam.core.crypto.symmetric_encrypt",
        "steam.util.web.make_requests_session",
        "Crypto.Random.new",
        "Crypto.Hash.SHA"
    ],
    "/tmp/steam/steam/client/gc.py": [
        "steam.util.set_proto_bit",
        "logging",
        "steam.core.msg.MsgProto",
        "eventemitter.EventEmitter",
        "steam.core.msg.GCMsgHdrProto",
        "steam.core.msg.GCMsgHdr",
        "steam.util.is_proto",
        "steam.util.clear_proto_bit",
        "steam.client.SteamClient",
        "steam.enums.emsg.EMsg"
    ],
    "/tmp/steam/steam/client/mixins/__init__.py": [],
    "/tmp/steam/steam/client/mixins/friends.py": [
        "steam.steamid.SteamID",
        "steam.steamid.intBase",
        "logging",
        "steam.core.msg.MsgProto",
        "steam.enums.EFriendRelationship",
        "eventemitter.EventEmitter",
        "steam.enums.EPersonaState",
        "steam.enums.EResult",
        "steam.enums.emsg.EMsg"
    ],
    "/tmp/steam/steam/client/user.py": [
        "steam.steamid.SteamID",
        "steam.enums.EChatEntryType",
        "steam.core.msg.MsgProto",
        "steam.enums.EFriendRelationship",
        "datetime.datetime",
        "steam.enums.EPersonaState",
        "binascii.hexlify",
        "steam.enums.emsg.EMsg",
        "gevent.event.Event"
    ],
    "/tmp/steam/steam/core/__init__.py": [],
    "/tmp/steam/steam/core/cm.py": [
        "steam._webapi",
        "steam.steamid.SteamID",
        "random.shuffle",
        "steam.enums.EUniverse",
        "steam.util.clear_proto_bit",
        "gevent",
        "steam.enums.EResult",
        "steam.core.msg.Msg",
        "struct",
        "binascii",
        "steam.util.is_proto",
        "steam.enums.emsg.EMsg",
        "io.BytesIO",
        "collections.defaultdict",
        "eventemitter.EventEmitter",
        "logging",
        "steam.core.msg.MsgProto",
        "steam.core.connection.TCPConnection",
        "steam.core.crypto",
        "time.time",
        "gzip.GzipFile",
        "steam.util.ip_from_int"
    ],
    "/tmp/steam/steam/core/connection.py": [
        "logging",
        "struct",
        "gevent.queue",
        "gevent",
        "gevent.select.select",
        "gevent.event",
        "gevent.socket"
    ],
    "/tmp/steam/steam/core/crypto.py": [
        "cryptography.hazmat.primitives.ciphers.algorithms.AES",
        "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
        "cryptography.hazmat.primitives.asymmetric.padding.OAEP",
        "cryptography.hazmat.primitives.hashes.Hash",
        "cryptography.hazmat.primitives.ciphers.modes.ECB",
        "cryptography.hazmat.primitives.ciphers.Cipher",
        "cryptography.hazmat.primitives.hashes.SHA1",
        "cryptography.hazmat.backends",
        "os.urandom",
        "sys",
        "base64.b64decode",
        "cryptography.hazmat.primitives.ciphers.modes.CBC",
        "cryptography.hazmat.primitives.hmac.HMAC",
        "struct.pack"
    ],
    "/tmp/steam/steam/core/msg.py": [
        "steam.enums.EUniverse",
        "steam.enums.EResult",
        "steam.protobufs.steammessages_clientserver_2_pb2",
        "steam.protobufs.steammessages_clientserver_pb2",
        "struct",
        "re",
        "steam.protobufs.gc_pb2",
        "steam.util.clear_proto_bit",
        "steam.enums.emsg.EMsg",
        "steam.util.set_proto_bit",
        "fnmatch",
        "importlib.import_module",
        "steam.protobufs.steammessages_base_pb2"
    ],
    "/tmp/steam/steam/core/msg/__init__.py": [
        "steam.protobufs.steammessages_clientserver_pb2",
        "steam.core.msg.structs.get_struct",
        "steam.core.msg.unified.get_um",
        "steam.core.msg.headers.MsgHdrProtoBuf",
        "steam.core.msg.headers.ExtendedMsgHdr",
        "steam.protobufs.steammessages_clientserver_2_pb2",
        "fnmatch",
        "steam.core.msg.headers.MsgHdr",
        "steam.enums.emsg.EMsg",
        "steam.protobufs.steammessages_base_pb2"
    ],
    "/tmp/steam/steam/core/msg/headers.py": [
        "steam.util.set_proto_bit",
        "struct",
        "steam.protobufs.gc_pb2",
        "steam.util.clear_proto_bit",
        "steam.enums.emsg.EMsg",
        "steam.protobufs.steammessages_base_pb2"
    ],
    "/tmp/steam/steam/core/msg/structs.py": [
        "steam.enums.EUniverse",
        "steam.enums.EResult",
        "struct",
        "steam.util.binary.StructReader",
        "six",
        "steam.enums.emsg.EMsg",
        "six.moves.range",
        "vdf"
    ],
    "/tmp/steam/steam/core/msg/unified.py": [
        "re",
        "importlib.import_module"
    ],
    "/tmp/steam/steam/enums.py": [
        "enum"
    ],
    "/tmp/steam/steam/enums/__init__.py": [],
    "/tmp/steam/steam/enums/base.py": [
        "enum.IntEnum"
    ],
    "/tmp/steam/steam/enums/common.py": [
        "steam.enums.base.SteamIntEnum"
    ],
    "/tmp/steam/steam/enums/emsg.py": [
        "steam.enums.base.SteamIntEnum"
    ],
    "/tmp/steam/steam/globalid.py": [
        "sys",
        "datetime.timedelta",
        "datetime.datetime"
    ],
    "/tmp/steam/steam/guard.py": [
        "subprocess",
        "base64.b64encode",
        "steam.enums.common.EResult",
        "steam.util.proto_to_dict",
        "struct",
        "json",
        "steam.webauth.MobileWebAuth",
        "steam.webapi",
        "steam.enums.ETwoFactorTokenType",
        "steam.core.crypto.hmac_sha1",
        "binascii.hexlify",
        "base64.b64decode",
        "steam.core.crypto.sha1_hash",
        "time.time",
        "requests"
    ],
    "/tmp/steam/steam/protobufs/__init__.py": [],
    "/tmp/steam/steam/protobufs/content_manifest_pb2.py": [
        "google.protobuf.symbol_database",
        "google.protobuf.message",
        "google.protobuf.reflection",
        "sys",
        "google.protobuf.descriptor",
        "google.protobuf.descriptor_pb2"
    ],
    "/tmp/steam/steam/protobufs/encrypted_app_ticket_pb2.py": [
        "google.protobuf.symbol_database",
        "google.protobuf.message",
        "google.protobuf.reflection",
        "sys",
        "google.protobuf.descriptor",
        "google.protobuf.descriptor_pb2"
    ],
    "/tmp/steam/steam/protobufs/gc_pb2.py": [
        "google.protobuf.symbol_database",
        "google.protobuf.message",
        "google.protobuf.reflection",
        "sys",
        "google.protobuf.descriptor",
        "google.protobuf.internal.enum_type_wrapper"
    ],
    "/tmp/steam/steam/protobufs/steammessages_base_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_broadcast_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_clientserver_2_pb2.py": [
        "google.protobuf.reflection",
        "google.protobuf.descriptor",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "sys",
        "google.protobuf.symbol_database",
        "steam.protobufs.steammessages_base_pb2"
    ],
    "/tmp/steam/steam/protobufs/steammessages_clientserver_pb2.py": [
        "google.protobuf.reflection",
        "steam.protobufs.encrypted_app_ticket_pb2",
        "google.protobuf.descriptor",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.symbol_database",
        "sys",
        "steam.protobufs.steammessages_base_pb2"
    ],
    "/tmp/steam/steam/protobufs/steammessages_cloud_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_credentials_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_depotbuilder_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_deviceauth_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_econ_pb2.py": [
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "google.protobuf.message",
        "google.protobuf.reflection",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.service"
    ],
    "/tmp/steam/steam/protobufs/steammessages_gamenotifications_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_gameservers_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_inventory_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_linkfilter_pb2.py": [
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection",
        "google.protobuf.descriptor"
    ],
    "/tmp/steam/steam/protobufs/steammessages_offline_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.service_reflection",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_parental_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_partnerapps_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_physicalgoods_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_player_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_publishedfile_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "google.protobuf.symbol_database",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.reflection",
        "google.protobuf.service_reflection",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.message",
        "sys"
    ],
    "/tmp/steam/steam/protobufs/steammessages_secrets_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "google.protobuf.internal.enum_type_wrapper",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_twofactor_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_unified_base_pb2.py": [
        "google.protobuf.descriptor_pb2",
        "google.protobuf.symbol_database",
        "google.protobuf.internal.enum_type_wrapper",
        "sys",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection",
        "google.protobuf.descriptor"
    ],
    "/tmp/steam/steam/protobufs/steammessages_unified_test_pb2.py": [
        "google.protobuf.message",
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/steammessages_video_pb2.py": [
        "google.protobuf.descriptor",
        "google.protobuf.service",
        "steam.protobufs.steammessages_unified_base_pb2",
        "google.protobuf.symbol_database",
        "sys",
        "google.protobuf.service_reflection",
        "google.protobuf.descriptor_pb2",
        "google.protobuf.message",
        "google.protobuf.reflection"
    ],
    "/tmp/steam/steam/protobufs/test_messages_pb2.py": [
        "google.protobuf.symbol_database",
        "google.protobuf.message",
        "google.protobuf.reflection",
        "sys",
        "google.protobuf.descriptor"
    ],
    "/tmp/steam/steam/steamid.py": [
        "steam.enums.base.SteamIntEnum",
        "steam.enums.EUniverse",
        "steam.util.web.make_requests_session",
        "sys",
        "re",
        "time.time",
        "steam.enums.EType",
        "requests"
    ],
    "/tmp/steam/steam/util/__init__.py": [
        "types.GeneratorType",
        "struct",
        "six.moves.xrange",
        "six",
        "weakref",
        "google.protobuf.internal.python_message.GeneratedProtocolMessageType",
        "socket"
    ],
    "/tmp/steam/steam/util/binary.py": [
        "struct"
    ],
    "/tmp/steam/steam/util/throttle.py": [
        "sys",
        "gevent",
        "time"
    ],
    "/tmp/steam/steam/util/web.py": [
        "steam.core.crypto.random_bytes",
        "steam.core.crypto.sha1_hash",
        "binascii.hexlify",
        "requests"
    ],
    "/tmp/steam/steam/webapi.py": [
        "lxml.etree",
        "vdf",
        "steam.util.web.make_requests_session",
        "json"
    ],
    "/tmp/steam/steam/webauth.py": [
        "steam.SteamID",
        "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
        "steam.util.web.make_requests_session",
        "steam.util.web.generate_session_id",
        "sys",
        "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers",
        "json",
        "base64.b64encode",
        "time.time",
        "requests",
        "steam.core.crypto.backend"
    ]
}
{
    "/tmp/telegram/telegram/__init__.py": []
}
{
    "/tmp/telepot/telepot/__init__.py": [
        ".helper",
        ".api",
        "io",
        "json",
        "collections",
        "inspect",
        "sys",
        ".exception",
        "bisect",
        "traceback",
        "queue",
        "threading",
        "time"
    ],
    "/tmp/telepot/telepot/aio/__init__.py": [
        ".._rectify",
        ".._find_first_key",
        ".._BotBase",
        "io",
        "traceback",
        ".helper",
        ".._dismantle_message_identifier",
        "concurrent.futures._base.CancelledError",
        "json",
        "asyncio",
        "time",
        ".._strip",
        ".api",
        ".._isstring",
        "collections",
        "..flavor"
    ],
    "/tmp/telepot/telepot/aio/api.py": [
        "..api._fileurl",
        "aiohttp",
        "..exception",
        "..api._which_pool",
        "..api._guess_filename",
        "re",
        "..api._methodurl"
    ],
    "/tmp/telepot/telepot/aio/delegate.py": [
        "traceback",
        "asyncio",
        "..exception",
        ".helper"
    ],
    "/tmp/telepot/telepot/aio/hack.py": [
        "aiohttp.hdrs",
        "urllib.parse.quote"
    ],
    "/tmp/telepot/telepot/aio/helper.py": [
        "..chat_flavors",
        "..message_identifier",
        "traceback",
        "asyncio",
        "..origin_identifier",
        "..helper.openable",
        "..flavor",
        "..is_event",
        "concurrent.futures._base.CancelledError",
        "..filtering",
        "..exception",
        "..helper",
        "..inline_flavors",
        "..helper.StandardEventMixin"
    ],
    "/tmp/telepot/telepot/aio/routing.py": [
        ".helper._delay_yell",
        "..all_content_types"
    ],
    "/tmp/telepot/telepot/api.py": [
        "os",
        "._isstring",
        "re",
        "json",
        "urllib3",
        "sys",
        ".exception"
    ],
    "/tmp/telepot/telepot/delegate.py": [
        ".flavor",
        "functools.wraps",
        ".helper",
        ".peel",
        ".exception",
        ".inline_flavors",
        "traceback",
        ".chat_flavors",
        ".is_event"
    ],
    "/tmp/telepot/telepot/exception.py": [
        "sys"
    ],
    "/tmp/telepot/telepot/filtering.py": [],
    "/tmp/telepot/telepot/hack.py": [
        "urllib3.fields"
    ],
    "/tmp/telepot/telepot/helper.py": [
        ".filtering",
        "functools.partial",
        ".flavor",
        ".chat_flavors",
        "re",
        ".origin_identifier",
        ".message_identifier",
        "inspect",
        ".exception",
        "logging",
        ".inline_flavors",
        "traceback",
        "queue",
        "threading",
        ".is_event"
    ],
    "/tmp/telepot/telepot/namedtuple.py": [
        "collections",
        "warnings",
        "sys"
    ],
    "/tmp/telepot/telepot/routing.py": [
        "._isstring",
        "re",
        ".all_content_types",
        ".glance"
    ]
}
{
    "/tmp/temperusb/temperusb/__init__.py": [],
    "/tmp/temperusb/temperusb/cli.py": [
        ".temper.TemperHandler",
        "argparse",
        "logging",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/temperusb/temperusb/snmp.py": [
        "temperusb.temper.TemperHandler",
        "threading",
        "snmp_passpersist",
        "sys",
        "syslog",
        "os"
    ],
    "/tmp/temperusb/temperusb/temper.py": [
        "logging",
        "usb",
        "re",
        "os"
    ]
}
{
    "/tmp/transmissionrpc/transmissionrpc/__init__.py": [],
    "/tmp/transmissionrpc/transmissionrpc/client.py": [
        "transmissionrpc.utils.make_rpc_name",
        "six.PY3",
        "transmissionrpc.utils.argument_value_convert",
        "operator",
        "six.iteritems",
        "base64",
        "re",
        "json",
        "transmissionrpc.utils.LOGGER",
        "transmissionrpc.error.TransmissionError",
        "transmissionrpc.constants.DEFAULT_TIMEOUT",
        "warnings",
        "urllib2.urlopen",
        "transmissionrpc.utils.rpc_bool",
        "transmissionrpc.constants.DEFAULT_PORT",
        "transmissionrpc.torrent.Torrent",
        "six.integer_types",
        "six.string_types",
        "transmissionrpc.error.HTTPHandlerError",
        "urlparse.urlparse",
        "transmissionrpc.session.Session",
        "transmissionrpc.utils.get_arguments",
        "time",
        "transmissionrpc.httphandler.DefaultHTTPHandler",
        "os"
    ],
    "/tmp/transmissionrpc/transmissionrpc/constants.py": [
        "six.iteritems",
        "logging"
    ],
    "/tmp/transmissionrpc/transmissionrpc/error.py": [
        "six.integer_types",
        "six.string_types"
    ],
    "/tmp/transmissionrpc/transmissionrpc/httphandler.py": [
        "httplib.BadStatusLine",
        "urllib2.build_opener",
        "urllib2.HTTPPasswordMgrWithDefaultRealm",
        "six.PY3",
        "urllib2.Request",
        "transmissionrpc.error.HTTPHandlerError",
        "sys",
        "urllib2.HTTPDigestAuthHandler",
        "urllib2.HTTPBasicAuthHandler",
        "urllib2.HTTPError",
        "urllib2.URLError"
    ],
    "/tmp/transmissionrpc/transmissionrpc/session.py": [
        "transmissionrpc.utils.Field",
        "six.integer_types",
        "six.iteritems"
    ],
    "/tmp/transmissionrpc/transmissionrpc/torrent.py": [
        "transmissionrpc.constants.PRIORITY",
        "six.integer_types",
        "transmissionrpc.utils.format_timedelta",
        "transmissionrpc.constants.IDLE_LIMIT",
        "six.string_types",
        "datetime",
        "sys",
        "transmissionrpc.utils.Field",
        "transmissionrpc.constants.RATIO_LIMIT",
        "six.text_type",
        "six.iteritems"
    ],
    "/tmp/transmissionrpc/transmissionrpc/utils.py": [
        "six.string_types",
        "transmissionrpc.constants.LOGGER",
        "collections.namedtuple",
        "six.iteritems",
        "datetime",
        "transmissionrpc.constants",
        "logging",
        "socket"
    ]
}
{
    "/tmp/tweepy/tweepy/__init__.py": [
        "six.moves.http_client.HTTPConnection",
        "tweepy.api.API"
    ],
    "/tmp/tweepy/tweepy/api.py": [
        "tweepy.binder.bind_api",
        "mimetypes",
        "tweepy.parsers.Parser",
        "six",
        "tweepy.parsers.ModelParser",
        "tweepy.utils.list_to_csv",
        "os",
        "tweepy.error.TweepError",
        "__future__.print_function"
    ],
    "/tmp/tweepy/tweepy/auth.py": [
        "requests_oauthlib.OAuth1",
        "logging",
        "six.moves.urllib.parse.parse_qs",
        "requests.auth.AuthBase",
        "six",
        "requests_oauthlib.OAuth1Session",
        "tweepy.api.API",
        "requests",
        "tweepy.error.TweepError",
        "__future__.print_function"
    ],
    "/tmp/tweepy/tweepy/binder.py": [
        "tweepy.models.Model",
        "tweepy.error.is_rate_limit_error_message",
        "logging",
        "six.moves.urllib.parse.quote",
        "tweepy.error.RateLimitError",
        "re",
        "time",
        "tweepy.utils.convert_to_utf8_str",
        "requests",
        "tweepy.error.TweepError",
        "__future__.print_function"
    ],
    "/tmp/tweepy/tweepy/cache.py": [
        "bson.binary.Binary",
        "fcntl",
        "md5",
        "os",
        "datetime",
        "threading",
        "time",
        "pickle",
        "__future__.print_function"
    ],
    "/tmp/tweepy/tweepy/cursor.py": [
        "tweepy.parsers.RawParser",
        "tweepy.parsers.ModelParser",
        "tweepy.error.TweepError",
        "__future__.print_function"
    ],
    "/tmp/tweepy/tweepy/error.py": [
        "six",
        "__future__.print_function"
    ],
    "/tmp/tweepy/tweepy/models.py": [
        "tweepy.utils.parse_html_value",
        "__future__.absolute_import",
        "tweepy.utils.parse_a_href",
        "tweepy.utils.parse_datetime",
        "__future__.print_function"
    ],
    "/tmp/tweepy/tweepy/parsers.py": [
        "tweepy.utils.import_simplejson",
        "tweepy.models.ModelFactory",
        "tweepy.error.TweepError",
        "__future__.print_function"
    ],
    "/tmp/tweepy/tweepy/streaming.py": [
        "tweepy.models.Status",
        "tweepy.utils.import_simplejson",
        "logging",
        "threading.Thread",
        "ssl",
        "six",
        "__future__.absolute_import",
        "re",
        "tweepy.api.API",
        "time.sleep",
        "requests.exceptions.Timeout",
        "requests",
        "tweepy.error.TweepError",
        "__future__.print_function"
    ],
    "/tmp/tweepy/tweepy/utils.py": [
        "django.utils.simplejson",
        "email.utils.parsedate",
        "six",
        "datetime.datetime",
        "__future__.print_function"
    ]
}
{
    "/tmp/twilio/twilio/__init__.py": [],
    "/tmp/twilio/twilio/access_token.py": [
        "twilio.jwt",
        "time"
    ],
    "/tmp/twilio/twilio/compat/__init__.py": [],
    "/tmp/twilio/twilio/exceptions.py": [],
    "/tmp/twilio/twilio/jwt/__init__.py": [
        "hashlib",
        "six.b",
        "base64",
        "simplejson",
        "hmac"
    ],
    "/tmp/twilio/twilio/rest/__init__.py": [
        ".pricing.TwilioPricingClient",
        ".task_router.TwilioTaskRouterClient",
        ".trunking.TwilioTrunkingClient",
        ".client.TwilioRestClient",
        ".lookups.TwilioLookupsClient",
        ".ip_messaging.TwilioIpMessagingClient",
        ".base.set_twilio_proxy"
    ],
    "/tmp/twilio/twilio/rest/base.py": [
        "logging",
        "twilio.rest.resources.make_request",
        "twilio.rest.resources.UNSET_TIMEOUT",
        "platform",
        "twilio.rest.resources.Connection",
        "twilio.exceptions.TwilioException",
        "os",
        "twilio.version.__version__"
    ],
    "/tmp/twilio/twilio/rest/client.py": [
        "twilio.rest.resources.CallFeedbackFactory",
        "twilio.rest.resources.Sip",
        "twilio.rest.resources.Transcriptions",
        "twilio.rest.resources.Sms",
        "twilio.rest.resources.Participants",
        "twilio.rest.resources.Usage",
        "twilio.rest.resources.PhoneNumbers",
        "twilio.rest.resources.AuthorizedConnectApps",
        "twilio.rest.resources.Notifications",
        "twilio.rest.resources.Keys",
        "twilio.rest.resources.UNSET_TIMEOUT",
        "twilio.rest.resources.Tokens",
        "twilio.rest.resources.Applications",
        "twilio.rest.resources.Recordings",
        "twilio.rest.resources.Members",
        "twilio.rest.resources.Sandboxes",
        "twilio.rest.resources.MediaList",
        "twilio.rest.resources.Calls",
        "twilio.rest.resources.Queues",
        "twilio.rest.resources.Messages",
        "twilio.rest.resources.Addresses",
        "twilio.rest.resources.Conferences",
        "twilio.rest.base.TwilioClient",
        "twilio.rest.resources.CallerIds",
        "twilio.rest.resources.CallFeedback",
        "twilio.rest.resources.Accounts",
        "twilio.rest.resources.ConnectApps",
        "twilio.rest.resources.DependentPhoneNumbers"
    ],
    "/tmp/twilio/twilio/rest/exceptions.py": [
        "sys",
        "..exceptions.TwilioException",
        "six.u"
    ],
    "/tmp/twilio/twilio/rest/ip_messaging.py": [
        "twilio.rest.resources.ip_messaging.services.Services",
        "twilio.rest.base.TwilioClient",
        "twilio.rest.resources.UNSET_TIMEOUT",
        "twilio.rest.resources.ip_messaging.credentials.Credentials"
    ],
    "/tmp/twilio/twilio/rest/lookups.py": [
        "twilio.rest.base.TwilioClient",
        "twilio.rest.resources.UNSET_TIMEOUT",
        "twilio.rest.resources.lookups.phone_numbers.PhoneNumbers"
    ],
    "/tmp/twilio/twilio/rest/monitor.py": [
        "twilio.rest.base.TwilioClient",
        "twilio.rest.resources.UNSET_TIMEOUT",
        "twilio.rest.resources.monitor.alerts.Alerts",
        "twilio.rest.resources.monitor.events.Events"
    ],
    "/tmp/twilio/twilio/rest/pricing.py": [
        "twilio.rest.resources.pricing.PhoneNumbers",
        "twilio.rest.base.TwilioClient",
        "twilio.rest.resources.pricing.MessagingCountries",
        "twilio.rest.resources.UNSET_TIMEOUT",
        "twilio.rest.resources.pricing.Voice"
    ],
    "/tmp/twilio/twilio/rest/resources/__init__.py": [],
    "/tmp/twilio/twilio/rest/resources/accounts.py": [
        ".sip.Sip",
        ".sms_messages.Sms",
        ".phone_numbers.PhoneNumbers",
        ".connect_apps.AuthorizedConnectApps",
        ".applications.Applications",
        ".ListResource",
        ".notifications.Notifications",
        ".recordings.Recordings",
        ".media.MediaList",
        ".usage.UsageRecords",
        ".calls.Calls",
        ".queues.Queues",
        ".messages.Messages",
        ".InstanceResource",
        ".usage.UsageTriggers",
        ".conferences.Conferences",
        ".keys.Keys",
        ".caller_ids.CallerIds",
        ".recordings.Transcriptions",
        ".connect_apps.ConnectApps"
    ],
    "/tmp/twilio/twilio/rest/resources/addresses.py": [
        "twilio.rest.resources.ListResource",
        "twilio.rest.resources.InstanceResource",
        "twilio.exceptions.TwilioException"
    ],
    "/tmp/twilio/twilio/rest/resources/applications.py": [
        ".ListResource",
        ".InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/base.py": [
        "...compat.urlencode",
        ".imports.parse_qs",
        "...compat.urlunparse",
        ".util.parse_rfc2822_date",
        ".imports.json",
        "platform",
        ".util.UNSET_TIMEOUT",
        "...__version__",
        ".util.parse_iso_date",
        ".connection.Connection",
        ".imports.httplib2",
        "six.iteritems",
        "six.binary_type",
        "logging",
        "six.integer_types",
        "six.string_types",
        "..exceptions.TwilioRestException",
        "...compat.urlparse",
        "...exceptions.TwilioException",
        "os",
        ".util.transform_params"
    ],
    "/tmp/twilio/twilio/rest/resources/call_feedback.py": [
        ".ListResource",
        ".InstanceResource",
        ".transform_params"
    ],
    "/tmp/twilio/twilio/rest/resources/caller_ids.py": [
        ".ListResource",
        ".transform_params",
        ".InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/calls.py": [
        "twilio.rest.resources.call_feedback.CallFeedbackFactory",
        ".ListResource",
        ".InstanceResource",
        ".notifications.Notifications",
        ".recordings.Recordings",
        ".util.normalize_dates",
        ".util.parse_date",
        "twilio.rest.resources.call_feedback.CallFeedbackSummary"
    ],
    "/tmp/twilio/twilio/rest/resources/conferences.py": [
        ".ListResource",
        ".InstanceResource",
        ".util.normalize_dates",
        ".util.parse_date"
    ],
    "/tmp/twilio/twilio/rest/resources/connect_apps.py": [
        ".ListResource",
        ".InstanceResource",
        "six.iteritems"
    ],
    "/tmp/twilio/twilio/rest/resources/connection.py": [
        ".imports.PROXY_TYPE_SOCKS4",
        ".imports.PROXY_TYPE_SOCKS5",
        ".imports.PROXY_TYPE_HTTP",
        ".imports.socks",
        ".imports.httplib2"
    ],
    "/tmp/twilio/twilio/rest/resources/imports.py": [],
    "/tmp/twilio/twilio/rest/resources/ip_messaging/__init__.py": [],
    "/tmp/twilio/twilio/rest/resources/ip_messaging/channels.py": [
        ".messages.Messages",
        "twilio.rest.resources.NextGenInstanceResource",
        ".members.Members",
        "twilio.rest.resources.NextGenListResource"
    ],
    "/tmp/twilio/twilio/rest/resources/ip_messaging/credentials.py": [
        "twilio.rest.resources.NextGenListResource",
        "twilio.rest.resources.NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/ip_messaging/members.py": [
        "twilio.rest.resources.NextGenListResource",
        "twilio.rest.resources.NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/ip_messaging/messages.py": [
        "twilio.rest.resources.NextGenListResource",
        "twilio.rest.resources.NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/ip_messaging/roles.py": [
        "twilio.rest.resources.NextGenListResource",
        "twilio.rest.resources.NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/ip_messaging/services.py": [
        ".users.Users",
        ".channels.Channels",
        "twilio.rest.resources.NextGenInstanceResource",
        ".roles.Roles",
        "twilio.rest.resources.NextGenListResource"
    ],
    "/tmp/twilio/twilio/rest/resources/ip_messaging/users.py": [
        "twilio.rest.resources.NextGenListResource",
        "twilio.rest.resources.NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/keys.py": [
        "twilio.rest.resources.base.ListResource",
        "twilio.rest.resources.base.InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/lookups/__init__.py": [],
    "/tmp/twilio/twilio/rest/resources/lookups/phone_numbers.py": [
        "twilio.rest.resources.NextGenListResource",
        "twilio.rest.resources.NextGenInstanceResource",
        "twilio.rest.resources.transform_params"
    ],
    "/tmp/twilio/twilio/rest/resources/media.py": [
        ".ListResource",
        ".InstanceResource",
        ".util.normalize_dates",
        ".util.parse_date"
    ],
    "/tmp/twilio/twilio/rest/resources/messages.py": [
        ".ListResource",
        ".InstanceResource",
        ".util.normalize_dates",
        ".util.parse_date",
        ".media.MediaList"
    ],
    "/tmp/twilio/twilio/rest/resources/monitor/__init__.py": [],
    "/tmp/twilio/twilio/rest/resources/monitor/alerts.py": [
        "twilio.rest.resources.NextGenListResource",
        "twilio.rest.resources.NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/monitor/events.py": [
        "twilio.rest.resources.base.NextGenListResource",
        "twilio.rest.resources.base.NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/notifications.py": [
        ".ListResource",
        ".util.normalize_dates",
        ".InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/phone_numbers.py": [
        ".ListResource",
        ".util.change_dict_key",
        ".InstanceResource",
        "re",
        ".util.UNSET_TIMEOUT",
        "twilio.exceptions.TwilioException",
        ".util.transform_params"
    ],
    "/tmp/twilio/twilio/rest/resources/pricing/__init__.py": [],
    "/tmp/twilio/twilio/rest/resources/pricing/messaging_countries.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/pricing/phone_numbers.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/pricing/voice.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/queues.py": [
        ".ListResource",
        ".InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/recordings.py": [
        ".base.ListResource",
        ".base.InstanceResource",
        ".transcriptions.Transcriptions",
        ".util.normalize_dates"
    ],
    "/tmp/twilio/twilio/rest/resources/sandboxes.py": [
        ".ListResource",
        ".util.transform_params",
        ".InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/sip/__init__.py": [
        ".ip_access_control_lists.SipIpAccessControlLists",
        ".domains.IpAccessControlListMappings",
        ".domains.Domains",
        ".ip_access_control_lists.IpAddresses",
        ".domains.CredentialListMappings",
        ".credential_lists.Credentials",
        ".credential_lists.SipCredentialLists"
    ],
    "/tmp/twilio/twilio/rest/resources/sip/credential_lists.py": [
        "..ListResource",
        "..InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/sip/domains.py": [
        "..ListResource",
        "..InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/sip/ip_access_control_lists.py": [
        "..ListResource",
        "..InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/sms_messages.py": [
        ".ListResource",
        ".InstanceResource",
        ".util.normalize_dates",
        ".util.parse_date"
    ],
    "/tmp/twilio/twilio/rest/resources/task_router/__init__.py": [],
    "/tmp/twilio/twilio/rest/resources/task_router/activities.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/task_router/events.py": [
        "twilio.rest.resources.base.NextGenListResource",
        "twilio.rest.resources.base.NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/task_router/reservations.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/task_router/statistics.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource",
        "..transform_params"
    ],
    "/tmp/twilio/twilio/rest/resources/task_router/task_queues.py": [
        ".statistics.Statistics",
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/task_router/tasks.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/task_router/workers.py": [
        ".statistics.Statistics",
        ".reservations.Reservations",
        "..NextGenInstanceResource",
        "..NextGenListResource"
    ],
    "/tmp/twilio/twilio/rest/resources/task_router/workflows.py": [
        ".statistics.Statistics",
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/task_router/workspaces.py": [
        ".statistics.Statistics",
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/tokens.py": [
        ".ListResource",
        ".InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/transcriptions.py": [
        ".ListResource",
        ".InstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/trunking/__init__.py": [],
    "/tmp/twilio/twilio/rest/resources/trunking/credential_lists.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/trunking/ip_access_control_lists.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/trunking/origination_urls.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/trunking/phone_numbers.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/trunking/trunks.py": [
        "..NextGenListResource",
        "..NextGenInstanceResource"
    ],
    "/tmp/twilio/twilio/rest/resources/usage.py": [
        ".ListResource",
        ".InstanceResource",
        ".util.UNSET_TIMEOUT"
    ],
    "/tmp/twilio/twilio/rest/resources/util.py": [
        "email.utils.parsedate",
        "datetime",
        "pytz",
        "six.iteritems"
    ],
    "/tmp/twilio/twilio/rest/task_router.py": [
        "twilio.rest.resources.Activities",
        "twilio.rest.resources.Tasks",
        "twilio.rest.resources.Workspaces",
        "twilio.rest.base.TwilioClient",
        "twilio.rest.resources.Workers",
        "twilio.rest.resources.Workflows",
        "twilio.rest.resources.TaskQueues",
        "twilio.rest.resources.UNSET_TIMEOUT",
        "twilio.rest.resources.Reservations",
        "twilio.rest.resources.Events"
    ],
    "/tmp/twilio/twilio/rest/trunking.py": [
        "twilio.rest.resources.trunking.CredentialLists",
        "twilio.rest.resources.trunking.PhoneNumbers",
        "twilio.rest.resources.trunking.Trunks",
        "twilio.rest.resources.trunking.OriginationUrls",
        "twilio.rest.base.TwilioClient",
        "twilio.rest.resources.trunking.IpAccessControlLists",
        "twilio.rest.resources.UNSET_TIMEOUT"
    ],
    "/tmp/twilio/twilio/task_router/__init__.py": [
        "warnings",
        "..jwt",
        "time"
    ],
    "/tmp/twilio/twilio/task_router/taskrouter_config.py": [
        ".workflow_rule.WorkflowRule"
    ],
    "/tmp/twilio/twilio/task_router/workflow_config.py": [
        "json",
        ".taskrouter_config.TaskRouterConfig"
    ],
    "/tmp/twilio/twilio/task_router/workflow_rule.py": [],
    "/tmp/twilio/twilio/task_router/workflow_ruletarget.py": [],
    "/tmp/twilio/twilio/twiml.py": [
        "xml.etree.ElementTree",
        ".exceptions.TwimlException"
    ],
    "/tmp/twilio/twilio/util.py": [
        ".compat.urlencode",
        "hashlib.sha1",
        "six.PY3",
        ".compat.izip",
        "base64",
        ".jwt",
        "time",
        "six.iteritems",
        "hmac"
    ],
    "/tmp/twilio/twilio/version.py": []
}
{
    "/tmp/twisted/twisted/__init__.py": [
        "sys",
        "twisted._version.__version__"
    ],
    "/tmp/twisted/twisted/__main__.py": [
        "sys",
        "__future__.division",
        "pkg_resources.load_entry_point",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/_threads/__init__.py": [
        "__future__.division",
        "._threadworker.ThreadWorker",
        "._pool.pool",
        "._ithreads.IWorker",
        "__future__.absolute_import",
        "._ithreads.AlreadyQuit",
        "._memory.createMemoryWorker",
        "._team.Team",
        "._threadworker.LockWorker",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_threads/_convenience.py": [
        "__future__.division",
        "._ithreads.AlreadyQuit",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/_threads/_ithreads.py": [
        "__future__.division",
        "__future__.absolute_import",
        "zope.interface.Interface",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_threads/_memory.py": [
        "._convenience.Quit",
        "__future__.division",
        ".IWorker",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_threads/_pool.py": [
        "__future__.division",
        "twisted.python.log.err",
        "threading.Thread",
        "threading.Lock",
        "._threadworker.ThreadWorker",
        "__future__.absolute_import",
        "queue.Queue",
        "threading.local",
        "._team.Team",
        "._threadworker.LockWorker",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_threads/_team.py": [
        "__future__.division",
        "collections.deque",
        ".IWorker",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "._convenience.Quit",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_threads/_threadworker.py": [
        "._convenience.Quit",
        "._ithreads.IExclusiveWorker",
        "__future__.division",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_threads/test/__init__.py": [
        "__future__.division",
        "__future__.print_function",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/_threads/test/test_convenience.py": [
        "__future__.division",
        ".._convenience.Quit",
        "twisted.trial.unittest.SynchronousTestCase",
        "__future__.absolute_import",
        ".._ithreads.AlreadyQuit",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_threads/test/test_memory.py": [
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase",
        "zope.interface.verify.verifyObject",
        "..IWorker",
        "__future__.absolute_import",
        "..AlreadyQuit",
        "..createMemoryWorker",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_threads/test/test_team.py": [
        "__future__.division",
        "twisted.python.context.get",
        "twisted.trial.unittest.SynchronousTestCase",
        "..IWorker",
        "__future__.absolute_import",
        "twisted.python.failure.Failure",
        "..AlreadyQuit",
        "twisted.python.context.call",
        "..createMemoryWorker",
        "..Team",
        "twisted.python.components.proxyForInterface",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_threads/test/test_threadworker.py": [
        "__future__.division",
        "..ThreadWorker",
        "twisted.trial.unittest.SynchronousTestCase",
        "__future__.absolute_import",
        "weakref",
        "..AlreadyQuit",
        "gc",
        "threading.ThreadError",
        "threading.local",
        "..LockWorker",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/_version.py": [
        "incremental.Version"
    ],
    "/tmp/twisted/twisted/application/__init__.py": [],
    "/tmp/twisted/twisted/application/app.py": [
        "profile",
        "cProfile",
        "pstats",
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "threading",
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.persisted.sob",
        "twisted.python.reflect.namedAny",
        "__future__.absolute_import",
        "getpass",
        "twisted.python.reflect.qual",
        "twisted.python.log",
        "twisted.application.service",
        "twisted.application.reactors.NoSuchReactor",
        "operator.attrgetter",
        "twisted.python.usage",
        "twisted.logger",
        "twisted.application.reactors.installReactor",
        "__future__.division",
        "warnings",
        "sys",
        "twisted.python.failure",
        "twisted.python.logfile",
        "__future__.print_function",
        "twisted.python.util",
        "twisted.copyright",
        "twisted.plugin",
        "signal",
        "traceback",
        "pdb",
        "twisted.python.runtime",
        "os",
        "twisted.application.reactors"
    ],
    "/tmp/twisted/twisted/application/internet.py": [
        "twisted.internet.reactor",
        "__future__.absolute_import",
        "twisted.internet.defer.fail",
        "twisted.logger.Logger",
        "random.random",
        "twisted.python.log",
        "twisted.application.service",
        "twisted.python.failure.Failure",
        "__future__.division",
        "twisted.internet.defer.CancelledError",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.internet.defer.gatherResults",
        "twisted.internet.task"
    ],
    "/tmp/twisted/twisted/application/reactors.py": [
        "twisted.internet.reactor",
        "__future__.division",
        "twisted.plugin.IPlugin",
        "zope.interface.Attribute",
        "twisted.python.reflect.namedAny",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.plugin.getPlugins",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/application/runner/__init__.py": [],
    "/tmp/twisted/twisted/application/runner/_exit.py": [
        "sys.stdout",
        "sys.exit",
        "constantly.ValueConstant",
        "constantly.Values",
        "sys.stderr"
    ],
    "/tmp/twisted/twisted/application/runner/_runner.py": [
        "twisted.logger.Logger",
        "twisted.logger.globalLogBeginner",
        "twisted.logger.LogLevel",
        "twisted.logger.FilteringLogObserver",
        "twisted.internet.default",
        "twisted.logger.LogLevelFilterPredicate",
        "os.kill",
        "constantly.Names",
        "sys.stderr",
        "._exit.exit",
        "signal.SIGTERM",
        "._exit.ExitStatus",
        "constantly.NamedConstant",
        "twisted.logger.textFileLogObserver",
        "os.getpid"
    ],
    "/tmp/twisted/twisted/application/runner/test/__init__.py": [],
    "/tmp/twisted/twisted/application/runner/test/test_exit.py": [
        "twisted.trial.unittest",
        ".._exit.exit",
        "...runner._exit",
        ".._exit.ExitStatus",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/application/runner/test/test_runner.py": [
        ".._runner.RunnerOptions",
        "twisted.logger.LogBeginner",
        "...runner._runner",
        "twisted.python.filepath.FilePath",
        "twisted.logger.LogLevel",
        ".._exit.ExitStatus",
        "twisted.logger.LogPublisher",
        "twisted.trial.unittest",
        ".._runner.Runner",
        "twisted.logger.LogLevelFilterPredicate",
        "twisted.logger.FilteringLogObserver",
        "signal.SIGTERM",
        "twisted.test.proto_helpers.MemoryReactor",
        "twisted.logger.FileLogObserver",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/application/service.py": [
        "__future__.division",
        "twisted.persisted.sob",
        "twisted.python.reflect.namedAny",
        "zope.interface.Attribute",
        "twisted.plugin.IPlugin",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.defer",
        "twisted.python.components",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/application/strports.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "__future__.division",
        "warnings",
        "__future__.absolute_import",
        "incremental.Version",
        "twisted.internet.endpoints",
        "twisted.application.internet.StreamServerEndpointService"
    ],
    "/tmp/twisted/twisted/application/test/__init__.py": [],
    "/tmp/twisted/twisted/application/test/test_internet.py": [
        "zope.interface.verify.verifyClass",
        "twisted.internet.task.Clock",
        "twisted.internet.interfaces.IFileDescriptorReceiver",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.logger.formatEvent",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.internet.interfaces.IListeningPort",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.application.internet",
        "twisted.internet.interfaces.IStreamServerEndpoint",
        "__future__.division",
        "twisted.internet.interfaces.IHalfCloseableProtocol",
        "twisted.internet.defer.CancelledError",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.internet.protocol.Factory",
        "twisted.internet.defer.Deferred",
        "twisted.application.internet.ClientService",
        "twisted.application.internet.StreamServerEndpointService",
        "twisted.logger.globalLogPublisher",
        "twisted.internet.task",
        "twisted.internet.protocol.Protocol",
        "pickle",
        "twisted.internet.interfaces.IStreamClientEndpoint",
        "twisted.application.internet.TimerService"
    ],
    "/tmp/twisted/twisted/application/test/test_service.py": [
        "__future__.division",
        "twisted.application.service.IService",
        "twisted.persisted.sob.IPersistable",
        "zope.interface.verify.verifyObject",
        "__future__.absolute_import",
        "twisted.application.service.IServiceCollection",
        "twisted.application.service.Application",
        "twisted.trial.unittest.TestCase",
        "twisted.application.service.IProcess"
    ],
    "/tmp/twisted/twisted/application/twist/__init__.py": [],
    "/tmp/twisted/twisted/application/twist/_options.py": [
        "textwrap.dedent",
        "..service.IServiceMaker",
        "twisted.plugin.getPlugins",
        "twisted.python.usage.UsageError",
        "twisted.logger.LogLevel",
        "sys.stdout",
        "twisted.copyright.version",
        "..reactors.getReactorTypes",
        "twisted.logger.InvalidLogLevelError",
        "sys.stderr",
        "..reactors.NoSuchReactor",
        "..runner._exit.exit",
        "twisted.logger.jsonFileLogObserver",
        "..runner._exit.ExitStatus",
        "twisted.python.usage.Options",
        "twisted.logger.textFileLogObserver",
        "..reactors.installReactor"
    ],
    "/tmp/twisted/twisted/application/twist/_twist.py": [
        "..service.IService",
        "..runner._runner.RunnerOptions",
        "._options.TwistOptions",
        "twisted.python.usage.UsageError",
        "..runner._runner.Runner",
        "sys",
        "..service.Application",
        "..runner._exit.exit",
        "..runner._exit.ExitStatus"
    ],
    "/tmp/twisted/twisted/application/twist/test/__init__.py": [],
    "/tmp/twisted/twisted/application/twist/test/test_options.py": [
        "...twist._options",
        ".._options.TwistOptions",
        "twisted.python.usage.UsageError",
        "twisted.logger.LogLevel",
        "...runner._exit.ExitStatus",
        "sys.stdout",
        "twisted.trial.unittest",
        "...service.ServiceMaker",
        "twisted.copyright.version",
        "sys.stderr",
        "...reactors.NoSuchReactor",
        "twisted.logger.jsonFileLogObserver",
        "twisted.test.proto_helpers.MemoryReactor",
        "...runner.test.test_runner.DummyExit",
        "twisted.logger.textFileLogObserver"
    ],
    "/tmp/twisted/twisted/application/twist/test/test_twist.py": [
        ".._twist.Twist",
        "...service.IService",
        "...runner._runner.RunnerOptions",
        ".._options.TwistOptions",
        "sys.stdout",
        "twisted.logger.LogLevel",
        "...runner._exit.ExitStatus",
        "...twist._options",
        "twisted.trial.unittest",
        "...twist._twist",
        "...service.MultiService",
        "...runner._runner.Runner",
        "twisted.logger.jsonFileLogObserver",
        "twisted.test.proto_helpers.MemoryReactor",
        "...runner.test.test_runner.DummyExit"
    ],
    "/tmp/twisted/twisted/conch/__init__.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "incremental.Version",
        "twisted._version.__version__"
    ],
    "/tmp/twisted/twisted/conch/avatar.py": [
        "__future__.division",
        "twisted.conch.interfaces.IConchUser",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.conch.ssh.connection.OPEN_UNKNOWN_CHANNEL_TYPE",
        "twisted.python.compat.nativeString",
        "twisted.conch.error.ConchError",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/conch/checkers.py": [
        "twisted.internet.defer",
        "twisted.cred.checkers.ICredentialsChecker",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "crypt",
        "incremental.Version",
        "twisted.cred.error.UnhandledCredentials",
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "twisted.python.log",
        "errno",
        "binascii",
        "twisted.python.util.runAsEffectiveUser",
        "twisted.cred.credentials.IUsernamePassword",
        "twisted.cred.credentials.ISSHPrivateKey",
        "twisted.python.compat._keys",
        "zope.interface.Interface",
        "twisted.python.compat._b64decodebytes",
        "__future__.division",
        "twisted.conch.ssh.keys",
        "twisted.python.compat._PY3",
        "sys",
        "twisted.python.failure",
        "zope.interface.providedBy",
        "twisted.python.reflect",
        "twisted.python.filepath.FilePath",
        "twisted.conch.error",
        "twisted.cred.error.UnauthorizedLogin"
    ],
    "/tmp/twisted/twisted/conch/client/__init__.py": [],
    "/tmp/twisted/twisted/conch/client/agent.py": [
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.conch.ssh.keys",
        "twisted.conch.ssh.agent",
        "os",
        "twisted.conch.ssh.channel",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/conch/client/default.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.python.compat._PY3",
        "twisted.conch.client.agent",
        "getpass",
        "twisted.conch.client.knownhosts.ConsoleUI",
        "io",
        "twisted.conch.ssh.userauth",
        "twisted.python.log",
        "twisted.python.compat.nativeString",
        "twisted.conch.ssh.keys",
        "sys",
        "__future__.print_function",
        "twisted.python.compat._b64decodebytes",
        "twisted.python.filepath.FilePath",
        "twisted.python.compat.raw_input",
        "twisted.conch.client.knownhosts.KnownHostsFile",
        "twisted.conch.ssh.common",
        "twisted.conch.error.ConchError",
        "contextlib",
        "os"
    ],
    "/tmp/twisted/twisted/conch/client/knownhosts.py": [
        "twisted.internet.defer",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.conch.ssh.keys.BadKeyError",
        "binascii.Error",
        "binascii.b2a_base64",
        "twisted.python.log",
        "twisted.python.util.FancyEqMixin",
        "twisted.conch.error.InvalidEntry",
        "twisted.python.compat.nativeString",
        "twisted.conch.interfaces.IKnownHostEntry",
        "__future__.division",
        "twisted.conch.ssh.keys.Key",
        "sys",
        "hashlib.sha1",
        "binascii.a2b_base64",
        "twisted.conch.error.HostKeyChanged",
        "contextlib.closing",
        "hmac",
        "twisted.python.randbytes.secureRandom",
        "twisted.conch.error.UserRejectedKey"
    ],
    "/tmp/twisted/twisted/conch/client/options.py": [
        "twisted.conch.ssh.transport.SSHClientTransport",
        "twisted.conch.ssh.transport.SSHCiphers",
        "sys",
        "twisted.python.usage"
    ],
    "/tmp/twisted/twisted/conch/endpoints.py": [
        "twisted.internet.error.ConnectionDone",
        "zope.interface.implementer",
        "twisted.python.compat.networkString",
        "twisted.conch.client.knownhosts.ConsoleUI",
        "twisted.internet.error.ProcessTerminated",
        "twisted.conch.ssh.connection.SSHConnection",
        "twisted.python.failure.Failure",
        "twisted.python.compat.nativeString",
        "zope.interface.Interface",
        "twisted.conch.ssh.common.NS",
        "os.path.expanduser",
        "twisted.conch.ssh.keys.Key",
        "twisted.internet.defer.CancelledError",
        "twisted.internet.protocol.Factory",
        "twisted.conch.ssh.transport.SSHClientTransport",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.conch.client.agent.SSHAgentClient",
        "twisted.internet.endpoints.TCP4ClientEndpoint",
        "struct.unpack",
        "twisted.internet.endpoints.connectProtocol",
        "twisted.conch.ssh.userauth.SSHUserAuthClient",
        "twisted.conch.client.default._KNOWN_HOSTS",
        "twisted.python.filepath.FilePath",
        "twisted.conch.client.knownhosts.KnownHostsFile",
        "twisted.internet.interfaces.IStreamClientEndpoint",
        "twisted.conch.ssh.channel.SSHChannel"
    ],
    "/tmp/twisted/twisted/conch/error.py": [
        "__future__.division",
        "__future__.absolute_import",
        "twisted.cred.error.UnauthorizedLogin"
    ],
    "/tmp/twisted/twisted/conch/insults/__init__.py": [
        "twisted.python.deprecate",
        "twisted.python.versions"
    ],
    "/tmp/twisted/twisted/conch/insults/client.py": [
        "twisted.internet.reactor",
        "twisted.internet.protocol",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/conch/insults/colors.py": [],
    "/tmp/twisted/twisted/conch/insults/helper.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "zope.interface.implementer",
        "incremental.Version",
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "twisted.python.log",
        "re",
        "string",
        "twisted.conch.insults.insults",
        "twisted.python.compat.iterbytes",
        "__future__.print_function",
        "twisted.python.deprecate.deprecated",
        "twisted.python._textattributes"
    ],
    "/tmp/twisted/twisted/conch/insults/insults.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "zope.interface.implementer",
        "twisted.python.compat.iterbytes",
        "twisted.python.compat.networkString",
        "twisted.internet.interfaces",
        "twisted.python.compat.intToBytes",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/conch/insults/text.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "twisted.conch.insults.helper",
        "twisted.conch.insults.insults",
        "incremental.Version",
        "twisted.python._textattributes"
    ],
    "/tmp/twisted/twisted/conch/insults/window.py": [
        "twisted.conch.insults.helper",
        "array",
        "twisted.python.text",
        "twisted.conch.insults.insults"
    ],
    "/tmp/twisted/twisted/conch/interfaces.py": [
        "zope.interface.Attribute",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/conch/ls.py": [
        "stat",
        "twisted.python.compat.networkString",
        "time.time",
        "array",
        "time.strftime",
        "time.localtime"
    ],
    "/tmp/twisted/twisted/conch/manhole.py": [
        "twisted.internet.defer",
        "code",
        "twisted.conch.recvline",
        "sys",
        "tokenize",
        "twisted.python.htmlizer.TokenPrinter",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/conch/manhole_ssh.py": [
        "twisted.conch.error",
        "twisted.conch.ssh.factory",
        "zope.interface.implementer",
        "twisted.conch.ssh.session",
        "twisted.conch.avatar",
        "twisted.python.components",
        "twisted.conch.interfaces",
        "twisted.conch.insults.insults"
    ],
    "/tmp/twisted/twisted/conch/manhole_tap.py": [
        "twisted.python._appdirs.getDataDirectory",
        "twisted.conch.manhole_ssh",
        "twisted.application.strports",
        "twisted.cred.checkers",
        "twisted.application.service",
        "twisted.python.filepath",
        "twisted.conch.ssh.keys",
        "zope.interface.implementer",
        "twisted.conch.telnet",
        "twisted.conch.insults.insults",
        "twisted.cred.portal",
        "twisted.conch.manhole",
        "twisted.python.usage",
        "twisted.internet.protocol"
    ],
    "/tmp/twisted/twisted/conch/mixin.py": [
        "twisted.internet.reactor"
    ],
    "/tmp/twisted/twisted/conch/openssh_compat/__init__.py": [],
    "/tmp/twisted/twisted/conch/openssh_compat/factory.py": [
        "twisted.python.log",
        "twisted.conch.ssh.keys",
        "errno",
        "twisted.conch.ssh.factory",
        "twisted.python.util.runAsEffectiveUser",
        "twisted.conch.ssh.common",
        "twisted.conch.openssh_compat.primes",
        "os"
    ],
    "/tmp/twisted/twisted/conch/openssh_compat/primes.py": [
        "twisted.python.compat.long"
    ],
    "/tmp/twisted/twisted/conch/recvline.py": [
        "twisted.python.log",
        "twisted.conch.insults.helper",
        "zope.interface.implementer",
        "twisted.python.compat.iterbytes",
        "twisted.conch.insults.insults",
        "twisted.python.reflect",
        "string"
    ],
    "/tmp/twisted/twisted/conch/scripts/__init__.py": [],
    "/tmp/twisted/twisted/conch/scripts/cftp.py": [
        "twisted.internet.defer",
        "tty",
        "twisted.internet.reactor",
        "twisted.internet.utils",
        "getpass",
        "twisted.conch.ssh.filetransfer",
        "twisted.conch.client.connect",
        "struct",
        "twisted.protocols.basic",
        "twisted.python.usage",
        "twisted.conch.ssh.channel",
        "fcntl",
        "__future__.division",
        "stat",
        "glob",
        "sys",
        "twisted.python.failure",
        "pwd",
        "__future__.print_function",
        "twisted.python.log",
        "twisted.conch.client.default",
        "twisted.internet.stdio",
        "twisted.conch.ssh.connection",
        "twisted.conch.ssh.common",
        "fnmatch",
        "os",
        "twisted.conch.client.options"
    ],
    "/tmp/twisted/twisted/conch/scripts/ckeygen.py": [
        "cryptography.hazmat.backends.default_backend",
        "cryptography.hazmat.primitives.asymmetric.rsa",
        "cryptography.hazmat.backends.default_backend",
        "cryptography.hazmat.primitives.asymmetric.dsa",
        "cryptography.hazmat.backends.default_backend",
        "cryptography.hazmat.primitives.asymmetric.ec",
        "twisted.python.compat._PY3",
        "getpass",
        "functools.wraps",
        "twisted.python.log",
        "twisted.python.filepath",
        "twisted.python.usage",
        "twisted.conch.ssh.keys",
        "termios",
        "sys",
        "twisted.python.failure",
        "__future__.print_function",
        "socket",
        "twisted.python.compat.raw_input",
        "os"
    ],
    "/tmp/twisted/twisted/conch/scripts/conch.py": [
        "twisted.python.failure",
        "errno",
        "tty",
        "twisted.internet.reactor",
        "getpass",
        "twisted.conch.ssh.session",
        "twisted.conch.client.connect",
        "twisted.conch.ssh.forwarding",
        "twisted.python.log",
        "twisted.python.usage",
        "twisted.conch.ssh.channel",
        "fcntl",
        "sys",
        "__future__.print_function",
        "struct",
        "twisted.internet.task",
        "twisted.conch.client.default",
        "twisted.internet.stdio",
        "twisted.conch.ssh.connection",
        "twisted.conch.ssh.common",
        "twisted.conch.error.ConchError",
        "os",
        "signal"
    ],
    "/tmp/twisted/twisted/conch/scripts/tkconch.py": [
        "twisted.python.failure",
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "tkFileDialog",
        "getpass",
        "twisted.conch.ssh.session",
        "twisted.conch.ssh.userauth",
        "twisted.conch.ssh.forwarding",
        "twisted.conch.ssh.transport",
        "twisted.conch.ui.tkvt100",
        "twisted.python.log",
        "base64",
        "twisted.python.usage",
        "twisted.conch.ssh.channel",
        "Tkinter",
        "twisted.internet.tksupport",
        "twisted.conch.ssh.keys",
        "sys",
        "__future__.print_function",
        "struct",
        "signal",
        "twisted.conch.client.default.isInKnownHosts",
        "twisted.conch.ssh.connection",
        "tkMessageBox",
        "twisted.conch.ssh.common",
        "twisted.conch.error",
        "os"
    ],
    "/tmp/twisted/twisted/conch/ssh/__init__.py": [],
    "/tmp/twisted/twisted/conch/ssh/_cryptography_backports.py": [
        "__future__.division",
        "struct",
        "binascii",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/conch/ssh/_kex.py": [
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.long",
        "zope.interface.Interface",
        "hashlib.sha256",
        "__future__.division",
        "hashlib.sha1",
        "zope.interface.Attribute",
        "twisted.conch.error"
    ],
    "/tmp/twisted/twisted/conch/ssh/address.py": [
        "__future__.division",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.util",
        "twisted.internet.interfaces.IAddress"
    ],
    "/tmp/twisted/twisted/conch/ssh/agent.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "__future__.absolute_import",
        "twisted.conch.ssh.common.getMP",
        "struct",
        "twisted.python.compat.itervalues",
        "twisted.conch.ssh.common.NS",
        "__future__.division",
        "twisted.conch.ssh.keys",
        "twisted.conch.error.MissingKeyStoreError",
        "twisted.conch.ssh.common.getNS",
        "twisted.conch.error.ConchError"
    ],
    "/tmp/twisted/twisted/conch/ssh/channel.py": [
        "__future__.division",
        "twisted.python.log",
        "twisted.internet.interfaces",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.intToBytes",
        "twisted.python.compat.nativeString"
    ],
    "/tmp/twisted/twisted/conch/ssh/common.py": [
        "__future__.division",
        "struct",
        "twisted.python.deprecate.deprecated",
        "twisted.conch.ssh._cryptography_backports.intFromBytes",
        "__future__.absolute_import",
        "twisted.python.versions.Version",
        "twisted.conch.ssh._cryptography_backports.intToBytes"
    ],
    "/tmp/twisted/twisted/conch/ssh/connection.py": [
        "twisted.internet.defer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "struct",
        "twisted.conch.ssh.service",
        "twisted.python.compat._bytesChr",
        "twisted.python.compat.long",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "string",
        "twisted.python.log",
        "twisted.conch.ssh.common",
        "twisted.conch.error"
    ],
    "/tmp/twisted/twisted/conch/ssh/factory.py": [
        "__future__.division",
        "random",
        "twisted.internet.protocol",
        "twisted.python.log",
        "twisted.conch.ssh._kex",
        "twisted.conch.ssh.userauth",
        "__future__.absolute_import",
        "twisted.conch.ssh.connection",
        "twisted.conch.error",
        "twisted.conch.ssh.transport"
    ],
    "/tmp/twisted/twisted/conch/ssh/filetransfer.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.python.compat.xrange",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "struct",
        "errno",
        "twisted.python.compat.nativeString",
        "twisted.conch.ssh.common.NS",
        "__future__.division",
        "twisted.python.compat.itervalues",
        "twisted.conch.ssh.common.getNS",
        "twisted.python.failure",
        "twisted.conch.interfaces.ISFTPServer",
        "twisted.python.log",
        "twisted.conch.interfaces.ISFTPFile"
    ],
    "/tmp/twisted/twisted/conch/ssh/forwarding.py": [
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "__future__.absolute_import",
        "struct",
        "twisted.conch.ssh.channel",
        "twisted.internet.endpoints.HostnameEndpoint",
        "__future__.division",
        "twisted.internet.endpoints.connectProtocol",
        "twisted.python.log",
        "twisted.conch.ssh.common"
    ],
    "/tmp/twisted/twisted/conch/ssh/keys.py": [
        "Crypto.PublicKey.RSA",
        "Crypto.PublicKey.DSA",
        "Crypto.PublicKey.RSA",
        "Crypto.PublicKey.DSA",
        "twisted.conch.ssh.sexpy",
        "base64",
        "twisted.python.compat.izip",
        "pyasn1.codec.ber.decoder",
        "twisted.conch.ssh.common.int_from_bytes",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat._b64decodebytes",
        "cryptography.hazmat.primitives.asymmetric.utils.decode_rfc6979_signature",
        "incremental.Version",
        "cryptography.exceptions.InvalidSignature",
        "twisted.python.compat.unicode",
        "twisted.python.randbytes",
        "twisted.python.compat.iterbytes",
        "pyasn1.type.univ",
        "twisted.python.constants.NamedConstant",
        "cryptography.hazmat.primitives.serialization.load_pem_private_key",
        "binascii",
        "twisted.python.compat.long",
        "cryptography.hazmat.primitives.ciphers.Cipher",
        "twisted.conch.ssh.common.int_to_bytes",
        "twisted.python.compat.nativeString",
        "hashlib.sha256",
        "pyasn1.error.PyAsn1Error",
        "cryptography.hazmat.primitives.asymmetric.dsa",
        "__future__.division",
        "warnings",
        "twisted.python.compat._b64encodebytes",
        "cryptography.hazmat.primitives.asymmetric.rsa",
        "cryptography.hazmat.primitives.asymmetric.padding",
        "pyasn1.codec.ber.encoder",
        "cryptography.hazmat.primitives.asymmetric.ec",
        "cryptography.hazmat.primitives.serialization",
        "cryptography.hazmat.primitives.hashes",
        "hashlib.md5",
        "cryptography.hazmat.backends.default_backend",
        "cryptography.hazmat.primitives.ciphers.modes",
        "cryptography.hazmat.primitives.serialization.load_ssh_public_key",
        "twisted.python.deprecate.deprecated",
        "twisted.python.constants.Names",
        "twisted.python.deprecate.getDeprecationWarningString",
        "itertools",
        "cryptography.hazmat.primitives.ciphers.algorithms",
        "twisted.conch.ssh.common",
        "cryptography.hazmat.primitives.asymmetric.utils.encode_rfc6979_signature"
    ],
    "/tmp/twisted/twisted/conch/ssh/service.py": [
        "__future__.division",
        "twisted.python.log",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/conch/ssh/session.py": [
        "twisted.internet.protocol",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.conch.interfaces.ISession",
        "struct",
        "twisted.python.compat._bytesChr",
        "twisted.conch.ssh.channel",
        "__future__.division",
        "twisted.internet.interfaces",
        "sys",
        "twisted.python.log",
        "signal",
        "twisted.conch.ssh.connection",
        "twisted.conch.ssh.common",
        "os"
    ],
    "/tmp/twisted/twisted/conch/ssh/sexpy.py": [
        "__future__.division",
        "twisted.python.compat.intToBytes",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/conch/ssh/transport.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.conch.ssh.common.ffs",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.conch.ssh.common.NS",
        "twisted.conch.ssh.common.getMP",
        "twisted.python.randbytes",
        "struct",
        "binascii",
        "twisted.python.compat._bytesChr",
        "cryptography.hazmat.primitives.ciphers.Cipher",
        "hashlib.sha256",
        "hashlib.sha512",
        "hashlib.md5",
        "__future__.division",
        "twisted.conch.ssh.keys",
        "twisted.conch.ssh.common.int_from_bytes",
        "twisted.conch.ssh.common.getNS",
        "twisted.python.compat.iterbytes",
        "twisted.conch.ssh.address",
        "twisted.python.log",
        "cryptography.hazmat.backends.default_backend",
        "hashlib.sha1",
        "cryptography.hazmat.primitives.ciphers.modes",
        "twisted.conch.ssh._kex",
        "zlib",
        "twisted.conch.ssh.common._MPpow",
        "cryptography.exceptions.UnsupportedAlgorithm",
        "cryptography.hazmat.primitives.ciphers.algorithms",
        "twisted.conch.ssh.common.MP",
        "hmac"
    ],
    "/tmp/twisted/twisted/conch/ssh/userauth.py": [
        "twisted.internet.defer",
        "twisted.internet.reactor",
        "__future__.absolute_import",
        "twisted.conch.ssh.transport",
        "struct",
        "twisted.conch.ssh.service",
        "twisted.python.compat._bytesChr",
        "twisted.python.compat.nativeString",
        "twisted.conch.ssh.common.NS",
        "__future__.division",
        "twisted.conch.ssh.keys",
        "twisted.conch.interfaces",
        "twisted.conch.ssh.common.getNS",
        "twisted.python.failure",
        "twisted.cred.credentials",
        "twisted.python.log",
        "twisted.conch.error",
        "twisted.cred.error.UnauthorizedLogin"
    ],
    "/tmp/twisted/twisted/conch/stdio.py": [
        "twisted.internet.defer",
        "tty",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.internet.stdio",
        "twisted.conch.insults.insults.ServerProtocol",
        "termios",
        "sys",
        "twisted.python.failure",
        "twisted.python.reflect",
        "twisted.conch.manhole.ColoredManhole",
        "os",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/conch/tap.py": [
        "twisted.application.strports",
        "twisted.cred.strcred",
        "twisted.conch.checkers",
        "twisted.conch.openssh_compat.factory",
        "twisted.conch.unix",
        "twisted.cred.portal",
        "twisted.python.usage"
    ],
    "/tmp/twisted/twisted/conch/telnet.py": [
        "twisted.internet.protocol",
        "__future__.absolute_import",
        "struct",
        "__future__.division",
        "twisted.python.compat.iterbytes",
        "zope.interface.implementer",
        "twisted.python.log",
        "twisted.cred.credentials",
        "twisted.internet.defer",
        "twisted.internet.interfaces",
        "twisted.python.compat._bytesChr",
        "twisted.protocols.basic"
    ],
    "/tmp/twisted/twisted/conch/test/__init__.py": [],
    "/tmp/twisted/twisted/conch/test/keydata.py": [
        "__future__.absolute_import",
        "twisted.python.compat._b64decodebytes",
        "twisted.python.compat.long",
        "__future__.division"
    ],
    "/tmp/twisted/twisted/conch/test/loopback.py": [
        "twisted.internet.reactor",
        "__future__.division",
        "__future__.absolute_import",
        "twisted.protocols.loopback"
    ],
    "/tmp/twisted/twisted/conch/test/test_address.py": [
        "twisted.internet.address.IPv4Address",
        "__future__.division",
        "twisted.conch.ssh.address.SSHTransportAddress",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.internet.test.test_address.AddressTestCaseMixin"
    ],
    "/tmp/twisted/twisted/conch/test/test_agent.py": [
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.test.iosim",
        "struct",
        "__future__.division",
        "twisted.conch.test.keydata",
        "twisted.conch.error.MissingKeyStoreError",
        "twisted.conch.error.ConchError"
    ],
    "/tmp/twisted/twisted/conch/test/test_channel.py": [
        "twisted.internet.address.IPv4Address",
        "__future__.division",
        "twisted.conch.ssh.address.SSHTransportAddress",
        "twisted.test.proto_helpers.StringTransport",
        "zope.interface.verify.verifyObject",
        "__future__.absolute_import",
        "twisted.python.compat.intToBytes",
        "twisted.conch.ssh.transport.SSHServerTransport",
        "twisted.trial.unittest",
        "twisted.internet.interfaces",
        "twisted.conch.ssh.channel"
    ],
    "/tmp/twisted/twisted/conch/test/test_checkers.py": [
        "collections.namedtuple",
        "__future__.absolute_import",
        "twisted.python.fakepwd.ShadowDatabase",
        "twisted.test.test_process.MockOS",
        "twisted.cred.error.UnhandledCredentials",
        "twisted.conch.checkers",
        "twisted.python.failure.Failure",
        "twisted.conch.error.ValidPublicKey",
        "crypt",
        "twisted.cred.credentials.IUsernamePassword",
        "twisted.trial.unittest.TestCase",
        "twisted.cred.credentials.ISSHPrivateKey",
        "io.BytesIO",
        "__future__.division",
        "twisted.conch.ssh.keys",
        "twisted.conch.test.keydata",
        "twisted.python.fakepwd.UserDatabase",
        "twisted.python.util",
        "twisted.python.compat._b64encodebytes",
        "twisted.cred.credentials.UsernamePassword",
        "twisted.conch.error.NotEnoughAuthentication",
        "twisted.python.filepath.FilePath",
        "os",
        "zope.interface.verify.verifyObject",
        "twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse",
        "twisted.cred.credentials.SSHPrivateKey",
        "twisted.cred.error.UnauthorizedLogin",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/conch/test/test_ckeygen.py": [
        "twisted.conch.scripts.ckeygen",
        "twisted.python.compat._PY3",
        "subprocess",
        "getpass",
        "twisted.python.compat.unicode",
        "twisted.conch.test.keydata.privateRSA_openssh_encrypted",
        "twisted.trial.unittest.TestCase",
        "twisted.conch.scripts.ckeygen.changePassPhrase",
        "twisted.conch.ssh.keys.Key",
        "twisted.conch.scripts.ckeygen.enumrepresentation",
        "io.BytesIO",
        "twisted.conch.ssh.keys.FingerprintFormats",
        "twisted.conch.scripts.ckeygen.printFingerprint",
        "twisted.conch.test.keydata.privateECDSA_openssh",
        "twisted.conch.test.keydata.publicRSA_openssh",
        "sys",
        "twisted.conch.ssh.keys.BadFingerPrintFormat",
        "twisted.conch.ssh.keys.BadKeyError",
        "twisted.conch.scripts.ckeygen.displayPublicKey",
        "twisted.conch.test.keydata.privateRSA_openssh",
        "twisted.python.filepath.FilePath",
        "io.StringIO",
        "twisted.python.reflect.requireModule",
        "twisted.conch.scripts.ckeygen._saveKey"
    ],
    "/tmp/twisted/twisted/conch/test/test_connection.py": [
        "__future__.division",
        "twisted.python.compat.long",
        "struct",
        "twisted.conch.test.test_userauth",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.conch.ssh.connection",
        "twisted.conch.ssh.common",
        "twisted.conch.error",
        "twisted.conch.ssh.channel"
    ],
    "/tmp/twisted/twisted/conch/test/test_default.py": [
        "__future__.division",
        "twisted.conch.ssh.keys.Key",
        "twisted.conch.client.default.SSHUserAuthClient",
        "twisted.conch.client.default",
        "twisted.conch.test.keydata",
        "twisted.python.filepath.FilePath",
        "__future__.absolute_import",
        "sys",
        "twisted.python.runtime.platform",
        "twisted.trial.unittest.TestCase",
        "twisted.conch.client.agent.SSHAgentClient",
        "twisted.conch.error.ConchError",
        "twisted.python.compat.nativeString",
        "twisted.python.reflect.requireModule",
        "twisted.conch.client.options.ConchOptions",
        "twisted.test.proto_helpers.StringTransport"
    ],
    "/tmp/twisted/twisted/conch/test/test_endpoints.py": [
        "zope.interface.verify.verifyClass",
        "twisted.test.iosim.FakeTransport",
        "zope.interface.implementer",
        "twisted.python.compat.networkString",
        "twisted.conch.client.knownhosts.ConsoleUI",
        "twisted.test.iosim.connect",
        "twisted.internet.defer.fail",
        "twisted.internet.error.ProcessTerminated",
        "twisted.conch.test.keydata.privateDSA_openssh",
        "twisted.conch.checkers.InMemorySSHKeyDB",
        "twisted.internet.error.ConnectionDone",
        "twisted.conch.endpoints.AuthenticationFailed",
        "twisted.test.proto_helpers.MemoryReactorClock",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.internet.error.ConnectionRefusedError",
        "twisted.python.log.msg",
        "twisted.cred.portal.Portal",
        "twisted.conch.endpoints.SSHCommandClientEndpoint",
        "twisted.conch.test.keydata.publicRSA_openssh",
        "twisted.conch.test.keydata.privateRSA_openssh",
        "twisted.conch.error.UserRejectedKey",
        "twisted.internet.defer.CancelledError",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.conch.endpoints._ISSHConnectionCreator",
        "twisted.internet.protocol.Factory",
        "twisted.conch.ssh.transport.SSHClientTransport",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.python.compat.iteritems",
        "twisted.conch.endpoints.SSHCommandAddress",
        "twisted.internet.error.ConnectingCancelledError",
        "twisted.conch.endpoints._ReadFile",
        "twisted.internet.address.IPv4Address",
        "errno.ENOSYS",
        "twisted.conch.endpoints._NewConnectionHelper",
        "twisted.internet.protocol.Protocol",
        "twisted.conch.interfaces.IConchUser",
        "twisted.python.filepath.FilePath",
        "os.path",
        "zope.interface.verify.verifyObject",
        "twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse",
        "twisted.conch.endpoints._ExistingConnectionHelper",
        "twisted.internet.interfaces.IStreamClientEndpoint",
        "twisted.conch.error.HostKeyChanged",
        "twisted.conch.error.ConchError",
        "twisted.internet.interfaces.IAddress",
        "twisted.python.reflect.requireModule",
        "struct.pack"
    ],
    "/tmp/twisted/twisted/conch/test/test_filetransfer.py": [
        "twisted.internet.defer",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.conch.ssh.session",
        "struct",
        "twisted.protocols.loopback",
        "twisted.python.compat.long",
        "re",
        "twisted.conch.avatar",
        "__future__.division",
        "warnings",
        "twisted.conch.ssh.common",
        "twisted.conch.ssh.connection",
        "twisted.conch.ssh.filetransfer",
        "twisted.python.components",
        "os"
    ],
    "/tmp/twisted/twisted/conch/test/test_forwarding.py": [
        "socket.AF_INET6",
        "__future__.division",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.internet.address.IPv6Address",
        "twisted.internet.defer",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.test.proto_helpers.MemoryReactorClock",
        "twisted.conch.ssh.forwarding"
    ],
    "/tmp/twisted/twisted/conch/test/test_helper.py": [
        "twisted.conch.insults.insults.G3",
        "twisted.conch.insults.insults.G2",
        "twisted.conch.insults.insults.G1",
        "twisted.conch.insults.insults.G0",
        "twisted.conch.insults.insults.REVERSE_VIDEO",
        "twisted.trial.unittest",
        "twisted.conch.insults.insults.NORMAL",
        "twisted.python.compat._PY3",
        "twisted.conch.insults.insults.BOLD",
        "twisted.conch.insults.insults.BLINK",
        "twisted.conch.insults.helper",
        "twisted.conch.insults.insults.privateModes",
        "twisted.conch.insults.insults.UNDERLINE",
        "twisted.conch.insults.insults.modes"
    ],
    "/tmp/twisted/twisted/conch/test/test_insults.py": [
        "twisted.conch.insults.insults.CS_ALTERNATE",
        "twisted.python.reflect.namedAny",
        "twisted.trial.unittest",
        "twisted.conch.insults.insults.ServerProtocol",
        "twisted.python.compat.iterbytes",
        "twisted.conch.insults.insults.privateModes",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.conch.insults.insults.G1",
        "twisted.conch.insults.insults.G0",
        "twisted.conch.insults.insults.BLINK",
        "twisted.python.compat.intToBytes",
        "twisted.conch.insults.insults.CS_ALTERNATE_SPECIAL",
        "twisted.conch.insults.insults.UNDERLINE",
        "twisted.conch.insults.insults.CS_DRAWING",
        "textwrap",
        "twisted.python.constants.ValueConstant",
        "twisted.python.constants.Values",
        "twisted.conch.insults.insults.ClientProtocol",
        "twisted.conch.insults.insults.CS_US",
        "twisted.conch.insults.insults.modes",
        "twisted.conch.insults.insults.CS_UK"
    ],
    "/tmp/twisted/twisted/conch/test/test_keys.py": [
        "Crypto.PublicKey.RSA",
        "Crypto.PublicKey.DSA",
        "cryptography.hazmat.primitives.asymmetric.rsa",
        "twisted.conch.ssh.sexpy",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "incremental.Version",
        "twisted.python.randbytes",
        "base64",
        "twisted.python.compat.long",
        "__future__.division",
        "twisted.conch.ssh.keys",
        "twisted.conch.test.keydata",
        "twisted.python.filepath.FilePath",
        "twisted.conch.ssh.common",
        "os"
    ],
    "/tmp/twisted/twisted/conch/test/test_knownhosts.py": [
        "__future__.absolute_import",
        "twisted.conch.ssh.keys.BadKeyError",
        "twisted.python.compat.networkString",
        "twisted.conch.client.knownhosts.ConsoleUI",
        "binascii.b2a_base64",
        "twisted.conch.client.knownhosts.UnparsedEntry",
        "twisted.conch.error.InvalidEntry",
        "twisted.trial.unittest.TestCase",
        "twisted.conch.ssh.keys.Key",
        "twisted.conch.interfaces.IKnownHostEntry",
        "__future__.division",
        "twisted.internet.defer.Deferred",
        "twisted.conch.client.knownhosts.PlainEntry",
        "twisted.test.testutils.ComparisonTestsMixin",
        "binascii.Error",
        "twisted.python.filepath.FilePath",
        "twisted.conch.client.default",
        "os",
        "zope.interface.verify.verifyObject",
        "binascii.a2b_base64",
        "twisted.conch.client.knownhosts.KnownHostsFile",
        "twisted.conch.error.HostKeyChanged",
        "twisted.python.reflect.requireModule",
        "twisted.conch.client.knownhosts.HashedEntry",
        "twisted.conch.error.UserRejectedKey"
    ],
    "/tmp/twisted/twisted/conch/test/test_manhole_tap.py": [
        "twisted.trial.unittest.TestCase",
        "twisted.conch.manhole_ssh",
        "twisted.conch.telnet",
        "twisted.application.service.MultiService",
        "twisted.cred.error",
        "twisted.python.usage",
        "twisted.cred.credentials.UsernamePassword",
        "twisted.application.internet.StreamServerEndpointService",
        "twisted.conch.manhole_tap"
    ],
    "/tmp/twisted/twisted/conch/test/test_mixin.py": [
        "twisted.trial.unittest",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.conch.mixin"
    ],
    "/tmp/twisted/twisted/conch/test/test_openssh_compat.py": [
        "twisted.python.filepath.FilePath",
        "os",
        "twisted.conch.test.keydata",
        "twisted.trial.unittest.TestCase",
        "twisted.test.test_process.MockOS",
        "twisted.conch.ssh._kex.getDHGeneratorAndPrime",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/conch/test/test_recvline.py": [
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.conch.insults.helper",
        "twisted.trial.unittest",
        "twisted.conch.recvline",
        "twisted.conch.manhole_ssh.ConchFactory",
        "twisted.conch.test.loopback.LoopbackRelay",
        "twisted.conch.ssh.userauth",
        "twisted.python.compat.bytesEnviron",
        "twisted.conch.ssh.transport",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.python.filepath",
        "twisted.python.runtime.platform",
        "twisted.conch.manhole_ssh.TerminalSessionTransport",
        "twisted.conch.ssh.channel",
        "twisted.conch.manhole_ssh.TerminalRealm",
        "twisted.conch.ssh.keys",
        "twisted.conch.telnet",
        "twisted.conch.insults.insults",
        "twisted.python.reflect",
        "twisted.cred.portal",
        "twisted.python.compat.iterbytes",
        "twisted.cred.checkers",
        "sys",
        "twisted.conch.manhole_ssh.TerminalSession",
        "twisted.conch.manhole_ssh.TerminalUser",
        "twisted.conch.test.test_telnet",
        "twisted.conch.ssh.connection",
        "twisted.conch.ssh.session",
        "twisted.python.components",
        "twisted.internet.error",
        "os"
    ],
    "/tmp/twisted/twisted/conch/test/test_scripts.py": [
        "twisted.python.test.test_shellcomp.ZshScriptTestMixin",
        "Tkinter",
        "twisted.trial.unittest.TestCase",
        "twisted.scripts.test.test_scripts.ScriptTestsMixin",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/conch/test/test_session.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.conch.ssh.session",
        "twisted.internet.error.ProcessTerminated",
        "struct",
        "twisted.python.failure.Failure",
        "__future__.division",
        "sys",
        "twisted.python.failure",
        "twisted.internet.address.IPv4Address",
        "signal",
        "twisted.conch.ssh.connection",
        "twisted.conch.ssh.common",
        "twisted.python.components",
        "twisted.internet.error",
        "twisted.internet.error.ProcessDone",
        "os"
    ],
    "/tmp/twisted/twisted/conch/test/test_ssh.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.conch.ssh.session",
        "twisted.conch.ssh.userauth",
        "twisted.internet.error.ProcessTerminated",
        "twisted.conch.test.keydata.privateDSA_openssh",
        "twisted.conch.ssh.forwarding",
        "twisted.conch.ssh.transport",
        "struct",
        "twisted.conch.ssh.factory",
        "twisted.conch.ssh.channel",
        "twisted.conch.avatar",
        "__future__.division",
        "twisted.conch.ssh.keys",
        "twisted.conch.test.keydata.publicRSA_openssh",
        "twisted.conch.test.keydata.publicDSA_openssh",
        "twisted.python.failure",
        "twisted.cred.portal",
        "twisted.conch.checkers",
        "twisted.python.log",
        "twisted.conch.test.keydata.privateRSA_openssh",
        "twisted.conch.ssh._kex",
        "twisted.conch.ssh.connection",
        "twisted.conch.test.loopback.LoopbackRelay",
        "twisted.conch.ssh.common",
        "twisted.python.components",
        "twisted.conch.error",
        "twisted.cred.error.UnauthorizedLogin"
    ],
    "/tmp/twisted/twisted/conch/test/test_tap.py": [
        "twisted.conch.tap",
        "twisted.application.internet.StreamServerEndpointService",
        "twisted.cred.credentials.IUsernamePassword",
        "twisted.trial.unittest.TestCase",
        "twisted.cred.credentials.ISSHPrivateKey",
        "twisted.cred.error",
        "twisted.conch.openssh_compat.factory.OpenSSHFactory",
        "twisted.cred.credentials.UsernamePassword"
    ],
    "/tmp/twisted/twisted/conch/test/test_telnet.py": [
        "__future__.division",
        "twisted.internet.defer",
        "zope.interface.verify.verifyObject",
        "zope.interface.implementer",
        "twisted.conch.telnet",
        "twisted.test.proto_helpers",
        "__future__.absolute_import",
        "twisted.python.compat.iterbytes",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/conch/test/test_text.py": [
        "twisted.conch.insults.text.attributes",
        "twisted.conch.insults.text",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/conch/test/test_transport.py": [
        "twisted.internet.defer",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.randbytes",
        "struct",
        "twisted.conch.ssh.service",
        "twisted.protocols.loopback",
        "binascii",
        "twisted.test.proto_helpers",
        "twisted.python.compat._bytesChr",
        "hashlib.sha256",
        "hashlib.sha512",
        "__future__.division",
        "twisted.conch.ssh.keys",
        "twisted.conch.test.keydata",
        "twisted.python.compat.iterbytes",
        "twisted.conch.ssh.address",
        "hashlib.md5",
        "hashlib.sha1",
        "twisted.python.randbytes.insecureRandom",
        "twisted.conch.ssh._kex",
        "twisted.conch.ssh.common",
        "twisted.conch.error.ConchError"
    ],
    "/tmp/twisted/twisted/conch/test/test_unix.py": [
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        ".test_session.StubClient",
        ".test_session.StubConnection",
        "twisted.python.reflect.requireModule",
        "twisted.internet.interfaces.IReactorProcess"
    ],
    "/tmp/twisted/twisted/conch/test/test_userauth.py": [
        "twisted.internet.defer",
        "twisted.cred.checkers.ICredentialsChecker",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.protocols.loopback",
        "twisted.conch.error.ValidPublicKey",
        "twisted.cred.credentials.IUsernamePassword",
        "twisted.cred.credentials.ISSHPrivateKey",
        "twisted.python.compat._bytesChr",
        "twisted.cred.portal.Portal",
        "twisted.conch.ssh.common.NS",
        "__future__.division",
        "twisted.conch.test.keydata",
        "twisted.cred.credentials.IAnonymous",
        "twisted.cred.portal.IRealm",
        "twisted.internet.task",
        "twisted.conch.checkers.SSHProtocolChecker",
        "twisted.conch.error.ConchError",
        "twisted.cred.error.UnauthorizedLogin",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/conch/test/test_window.py": [
        "twisted.conch.insults.window.TopWindow",
        "twisted.trial.unittest.TestCase",
        "twisted.conch.insults.window.TextOutput",
        "twisted.conch.insults.window.ScrolledArea"
    ],
    "/tmp/twisted/twisted/conch/ttymodes.py": [
        "tty"
    ],
    "/tmp/twisted/twisted/conch/unix.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "tty",
        "twisted.internet.error.ProcessExitedAlready",
        "zope.interface.implementer",
        "twisted.conch.ssh.filetransfer.FXF_READ",
        "twisted.conch.ssh.filetransfer",
        "pty",
        "twisted.conch.ssh.forwarding",
        "twisted.conch.interfaces.ISession",
        "twisted.conch.avatar.ConchUser",
        "grp",
        "twisted.conch.ls.lsLine",
        "twisted.conch.ssh.filetransfer.FXF_APPEND",
        "time",
        "twisted.conch.ssh.filetransfer.FXF_EXCL",
        "twisted.conch.ssh.filetransfer.FXF_WRITE",
        "twisted.conch.ssh.filetransfer.FXF_CREAT",
        "fcntl",
        "twisted.conch.error.ConchError",
        "twisted.conch.ssh.filetransfer.FXF_TRUNC",
        "pwd",
        "twisted.cred.portal",
        "twisted.python.log",
        "twisted.conch.interfaces.ISFTPServer",
        "struct",
        "socket",
        "twisted.conch.interfaces.ISFTPFile",
        "twisted.conch.ssh.session",
        "twisted.python.components",
        "twisted.conch.ttymodes",
        "os"
    ],
    "/tmp/twisted/twisted/copyright.py": [
        "__future__.division",
        "__future__.absolute_import",
        "twisted.__version__"
    ],
    "/tmp/twisted/twisted/cred/__init__.py": [],
    "/tmp/twisted/twisted/cred/_digest.py": [
        "__future__.division",
        "hashlib.sha1",
        "__future__.absolute_import",
        "binascii.hexlify",
        "hashlib.md5"
    ],
    "/tmp/twisted/twisted/cred/checkers.py": [
        "__future__.division",
        "twisted.internet.defer",
        "zope.interface.Attribute",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.failure",
        "twisted.cred.error",
        "zope.interface.Interface",
        "twisted.cred.credentials",
        "twisted.logger.Logger",
        "os"
    ],
    "/tmp/twisted/twisted/cred/credentials.py": [
        "random",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.python.compat.unicode",
        "base64",
        "re",
        "twisted.python.compat.intToBytes",
        "twisted.python.compat.nativeString",
        "zope.interface.Interface",
        "twisted.cred._digest.calcResponse",
        "__future__.division",
        "twisted.cred.error",
        "binascii.hexlify",
        "hashlib.md5",
        "twisted.cred._digest.calcHA1",
        "twisted.cred._digest.calcHA2",
        "time",
        "hmac",
        "twisted.python.randbytes.secureRandom"
    ],
    "/tmp/twisted/twisted/cred/error.py": [
        "__future__.division",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/cred/portal.py": [
        "__future__.division",
        "zope.interface.providedBy",
        "twisted.internet.defer",
        "zope.interface.Interface",
        "__future__.absolute_import",
        "twisted.python.reflect",
        "twisted.python.failure",
        "twisted.cred.error",
        "twisted.internet.defer.maybeDeferred"
    ],
    "/tmp/twisted/twisted/cred/strcred.py": [
        "__future__.division",
        "zope.interface.Attribute",
        "__future__.absolute_import",
        "sys",
        "twisted.python.usage",
        "twisted.plugin.getPlugins",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/cred/test/__init__.py": [],
    "/tmp/twisted/twisted/cred/test/test_cramauth.py": [
        "__future__.division",
        "twisted.cred.credentials.CramMD5Credentials",
        "__future__.absolute_import",
        "twisted.trial.unittest.TestCase",
        "binascii.hexlify",
        "twisted.cred.credentials.IUsernameHashedPassword",
        "hmac.HMAC"
    ],
    "/tmp/twisted/twisted/cred/test/test_cred.py": [
        "twisted.internet.defer",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.cred.checkers",
        "twisted.python.compat.nativeString",
        "zope.interface.Interface",
        "__future__.division",
        "binascii.unhexlify",
        "twisted.cred.portal",
        "binascii.hexlify",
        "twisted.cred.credentials",
        "twisted.python.components",
        "twisted.cred.error"
    ],
    "/tmp/twisted/twisted/cred/test/test_digestauth.py": [
        "twisted.internet.address.IPv4Address",
        "__future__.division",
        "twisted.python.compat.networkString",
        "hashlib.sha1",
        "zope.interface.verify.verifyObject",
        "base64",
        "twisted.cred.credentials.calcHA1",
        "__future__.absolute_import",
        "twisted.cred.credentials.calcHA2",
        "twisted.trial.unittest.TestCase",
        "binascii.hexlify",
        "twisted.cred.error.LoginFailed",
        "twisted.cred.credentials.DigestCredentialFactory",
        "twisted.cred.credentials.IUsernameDigestHash",
        "twisted.cred.credentials.calcResponse",
        "hashlib.md5"
    ],
    "/tmp/twisted/twisted/cred/test/test_simpleauth.py": [
        "__future__.division",
        "twisted.cred.credentials.UsernameHashedPassword",
        "__future__.absolute_import",
        "twisted.cred.credentials.IUsernamePassword",
        "twisted.trial.unittest.TestCase",
        "twisted.cred.credentials.IUsernameHashedPassword",
        "twisted.cred.credentials.UsernamePassword"
    ],
    "/tmp/twisted/twisted/cred/test/test_strcred.py": [
        "os",
        "twisted.plugins.cred_file",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "io.BytesIO",
        "twisted.python.compat",
        "twisted.cred.checkers",
        "twisted.python.usage",
        "__future__.division",
        "twisted.cred.strcred",
        "twisted.python.fakepwd.UserDatabase",
        "twisted.plugins.cred_anonymous",
        "twisted.cred.credentials",
        "twisted.plugin",
        "twisted.python.filepath.FilePath",
        "twisted.cred.error",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/enterprise/__init__.py": [],
    "/tmp/twisted/twisted/enterprise/adbapi.py": [
        "twisted.python.threadable",
        "twisted.internet.reactor",
        "twisted.python.threadpool",
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.python.compat",
        "twisted.python.reflect",
        "twisted.python.log",
        "sys",
        "twisted.internet.threads"
    ],
    "/tmp/twisted/twisted/internet/__init__.py": [],
    "/tmp/twisted/twisted/internet/_baseprocess.py": [
        "twisted.python.log.err",
        "twisted.python.failure.Failure",
        "twisted.python.reflect.qual",
        "twisted.python.deprecate.getWarningMethod"
    ],
    "/tmp/twisted/twisted/internet/_dumbwin32proc.py": [
        "sys",
        "win32process",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "win32file",
        "twisted.internet._pollingfile",
        "twisted.internet.interfaces.IProducer",
        "__future__.print_function",
        "twisted.internet.interfaces.IProcessTransport",
        "win32con",
        "twisted.internet._baseprocess.BaseProcess",
        "__future__.division",
        "win32event",
        "twisted.python.compat._PY3",
        "win32pipe",
        "win32security",
        "pywintypes",
        "twisted.python.win32.quoteArguments",
        "twisted.python.compat.items",
        "twisted.internet.interfaces.IConsumer",
        "twisted.internet.error",
        "twisted.python.compat._maybeMBCS",
        "os",
        "win32api"
    ],
    "/tmp/twisted/twisted/internet/_glibbase.py": [
        "__future__.division",
        "twisted.internet.posixbase",
        "twisted.python.log",
        "twisted.internet.interfaces.IReactorFDSet",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "sys",
        "twisted.internet.base",
        "twisted.internet.selectreactor"
    ],
    "/tmp/twisted/twisted/internet/_newtls.py": [
        "__future__.division",
        "twisted.internet.interfaces.ISSLTransport",
        "twisted.protocols.tls.TLSMemoryBIOProtocol",
        "twisted.internet.interfaces.ITLSTransport",
        "zope.interface.directlyProvides",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.abstract.FileDescriptor",
        "twisted.protocols.tls.TLSMemoryBIOFactory"
    ],
    "/tmp/twisted/twisted/internet/_pollingfile.py": [
        "__future__.division",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.interfaces.IConsumer",
        "win32file",
        "twisted.python.compat.unicode",
        "win32pipe",
        "pywintypes",
        "twisted.internet.interfaces.IPushProducer",
        "win32api"
    ],
    "/tmp/twisted/twisted/internet/_posixserialport.py": [
        "__future__.division",
        "twisted.internet.abstract",
        "__future__.absolute_import",
        "twisted.internet.serialport.BaseSerialPort",
        "serial.STOPBITS_ONE",
        "serial.EIGHTBITS",
        "serial.PARITY_NONE",
        "twisted.internet.fdesc"
    ],
    "/tmp/twisted/twisted/internet/_posixstdio.py": [
        "twisted.internet.reactor",
        "twisted.python.log",
        "twisted.internet.process",
        "twisted.internet.interfaces",
        "zope.interface.implementer",
        "twisted.python.failure",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/internet/_signals.py": [
        "__future__.division",
        "signal",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/internet/_sslverify.py": [
        "idna",
        "idna",
        "service_identity.VerificationError",
        "service_identity.pyopenssl.verify_hostname",
        "OpenSSL._util.binding",
        "twisted.python.compat.networkString",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.error.CertificateError",
        "incremental.Version",
        "twisted.python.compat.unicode",
        "twisted.internet.error.VerifyError",
        "twisted.python.log",
        "twisted.python.failure.Failure",
        "twisted.python.util.FancyEqMixin",
        "constantly.FlagConstant",
        "OpenSSL",
        "twisted.internet.interfaces.IAcceptableCiphers",
        "twisted.internet.interfaces.IOpenSSLContextFactory",
        "twisted.internet.interfaces.ICipher",
        "zope.interface.Interface",
        "__future__.division",
        "twisted.internet.interfaces.IOpenSSLClientConnectionCreator",
        "twisted.python.compat.nativeString",
        "warnings",
        "twisted.python.reflect",
        "twisted.internet.defer.Deferred",
        "constantly.Flags",
        "twisted.python.deprecate._mutuallyExclusiveArguments",
        "hashlib.md5",
        "twisted.python.util",
        "twisted.python._oldstyle._oldStyle",
        "OpenSSL.crypto",
        "OpenSSL.SSL",
        "itertools",
        "twisted.python.deprecate.deprecated"
    ],
    "/tmp/twisted/twisted/internet/_win32serialport.py": [
        "__future__.division",
        "win32event",
        "twisted.internet.abstract",
        "__future__.absolute_import",
        "twisted.internet.serialport.BaseSerialPort",
        "serial.STOPBITS_ONE",
        "win32file",
        "serial.EIGHTBITS",
        "serial.PARITY_NONE"
    ],
    "/tmp/twisted/twisted/internet/_win32stdio.py": [
        "twisted.internet.reactor",
        "__future__.division",
        "twisted.internet.main",
        "twisted.internet.interfaces.IHalfCloseableProtocol",
        "twisted.internet.interfaces.ITransport",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.interfaces.IConsumer",
        "twisted.python.failure.Failure",
        "twisted.internet._pollingfile",
        "twisted.internet.interfaces.IAddress",
        "os",
        "msvcrt",
        "twisted.internet.interfaces.IPushProducer",
        "win32api"
    ],
    "/tmp/twisted/twisted/internet/abstract.py": [
        "twisted.internet.reactor",
        "socket.AF_INET6",
        "__future__.division",
        "twisted.internet.interfaces",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "socket.inet_pton",
        "twisted.python.reflect",
        "twisted.python.failure",
        "twisted.python.compat.lazyByteSlice",
        "twisted.python.compat._PY3",
        "twisted.python.compat.unicode",
        "socket.error",
        "twisted.internet.main"
    ],
    "/tmp/twisted/twisted/internet/address.py": [
        "__future__.division",
        "twisted.python.runtime.platform",
        "warnings",
        "twisted.python.util.FancyEqMixin",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat._PY3",
        "twisted.python.filepath._asFilesystemBytes",
        "twisted.python.filepath._coerceToFilesystemEncoding",
        "twisted.internet.interfaces.IAddress",
        "os"
    ],
    "/tmp/twisted/twisted/internet/asyncioreactor.py": [
        "twisted.internet.main.installReactor",
        "__future__.division",
        "twisted.internet.interfaces.IReactorFDSet",
        "errno",
        "twisted.python.log.callWithLogger",
        "twisted.internet.base.DelayedCall",
        "__future__.absolute_import",
        "zope.interface.implementer",
        "twisted.internet.posixbase._NO_FILEDESC",
        "builtins.PermissionError",
        "twisted.internet.posixbase._ContinuousPolling",
        "asyncio.new_event_loop",
        "twisted.logger.Logger",
        "twisted.internet.posixbase.PosixReactorBase",
        "builtins.BrokenPipeError"
    ],
    "/tmp/twisted/twisted/internet/base.py": [
        "twisted.python.threadpool",
        "signal",
        "twisted.internet.defer",
        "twisted.python.threadable",
        "traceback",
        "twisted.internet.abstract",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.interfaces.IDelayedCall",
        "twisted.python.compat.unicode",
        "twisted.python.log",
        "twisted.internet.interfaces.IConnector",
        "twisted.python.runtime.seconds",
        "twisted.python.runtime.platform",
        "twisted.internet.main",
        "twisted.internet.interfaces.IReactorThreads",
        "heapq.heappop",
        "__future__.division",
        "warnings",
        "heapq.heapify",
        "sys",
        "twisted.python.failure",
        "twisted.internet.threads",
        "twisted.python.compat.iteritems",
        "twisted.internet.interfaces.IResolverSimple",
        "twisted.internet.interfaces.IReactorCore",
        "zope.interface.classImplements",
        "twisted.python.reflect",
        "socket",
        "twisted.internet.defer.Deferred",
        "twisted.python._oldstyle._oldStyle",
        "twisted.internet.interfaces.IReactorTime",
        "twisted.internet.interfaces.IReactorPluggableResolver",
        "twisted.internet.defer.DeferredList",
        "heapq.heappush",
        "twisted.internet.fdesc",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/internet/cfreactor.py": [
        "twisted.internet.main.installReactor",
        "twisted.internet.posixbase._Waker",
        "CoreFoundation.CFRunLoopGetMain",
        "CFNetwork.kCFSocketAutomaticallyReenableWriteCallBack",
        "CoreFoundation.kCFRunLoopCommonModes",
        "twisted.internet.interfaces.IReactorFDSet",
        "CFNetwork.CFSocketSetSocketFlags",
        "zope.interface.implementer",
        "twisted.internet.posixbase._NO_FILEDESC",
        "CoreFoundation.CFRunLoopAddTimer",
        "CoreFoundation.CFRunLoopTimerCreate",
        "CoreFoundation.CFRunLoopAddSource",
        "twisted.python.log",
        "CFNetwork.CFSocketCreateWithNative",
        "CFNetwork.CFSocketEnableCallBacks",
        "CoreFoundation.CFRunLoopRun",
        "CFNetwork.CFSocketInvalidate",
        "sys",
        "CoreFoundation.kCFAllocatorDefault",
        "twisted.internet.posixbase.PosixReactorBase",
        "CoreFoundation.CFAbsoluteTimeGetCurrent",
        "CFNetwork.CFSocketCreateRunLoopSource",
        "CFNetwork.kCFSocketConnectCallBack",
        "CoreFoundation.CFRunLoopRemoveSource",
        "CFNetwork.kCFSocketReadCallBack",
        "CFNetwork.CFSocketDisableCallBacks",
        "CoreFoundation.CFRunLoopStop",
        "CFNetwork.kCFSocketAutomaticallyReenableReadCallBack",
        "CoreFoundation.CFRunLoopTimerInvalidate",
        "CFNetwork.kCFSocketWriteCallBack"
    ],
    "/tmp/twisted/twisted/internet/default.py": [
        "twisted.internet.selectreactor.install",
        "__future__.division",
        "__future__.absolute_import",
        "twisted.python.runtime.platform"
    ],
    "/tmp/twisted/twisted/internet/defer.py": [
        "types.GeneratorType",
        "asyncio.iscoroutine",
        "twisted.internet.reactor",
        "__future__.absolute_import",
        "incremental.Version",
        "twisted.logger.Logger",
        "functools.wraps",
        "twisted.python.deprecate.warnAboutFunction",
        "warnings",
        "types",
        "__future__.division",
        "twisted.python.compat.comparable",
        "sys.version_info",
        "twisted.python.failure",
        "twisted.python.lockfile",
        "__future__.print_function",
        "twisted.python._oldstyle._oldStyle",
        "twisted.python.deprecate.deprecated",
        "traceback",
        "sys.exc_info",
        "twisted.python.compat.cmp"
    ],
    "/tmp/twisted/twisted/internet/endpoints.py": [
        "twisted.internet.ssl",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.internet.protocol.ProcessProtocol",
        "twisted.internet.stdio.StandardIO",
        "twisted.python.compat.nativeString",
        "OpenSSL.SSL.Error",
        "__future__.division",
        "twisted.python.compat.iterbytes",
        "constantly.NamedConstant",
        "twisted.internet.protocol.Protocol",
        "twisted.python.filepath.FilePath",
        "twisted.internet.interfaces.IStreamServerEndpointStringParser",
        "twisted.internet.protocol.ClientFactory",
        "twisted.plugin.getPlugins",
        "zope.interface.implementer",
        "twisted.internet.ssl.trustRootFromCertificates",
        "re",
        "twisted.internet.fdesc",
        "twisted.python.components.proxyForInterface",
        "twisted.internet.interfaces",
        "twisted.internet.threads",
        "twisted.internet.abstract.isIPv6Address",
        "twisted.internet.ssl.PrivateCertificate",
        "socket.AF_INET",
        "twisted.internet._sslverify._idnaBytes",
        "os",
        "socket.AF_INET6",
        "twisted.internet.ssl.Certificate",
        "twisted.internet.task.LoopingCall",
        "twisted.internet.ssl.CertificateOptions",
        "twisted.python.log",
        "twisted.python.failure.Failure",
        "twisted.internet._sslverify._idnaText",
        "zope.interface.directlyProvides",
        "twisted.internet.address._ProcessAddress",
        "twisted.internet.address.HostnameAddress",
        "twisted.python.compat._matchingString",
        "twisted.internet.error",
        "twisted.internet.stdio.PipeAddress",
        "twisted.internet.defer",
        "twisted.internet.protocol.Factory",
        "twisted.python.systemd.ListenFDs",
        "twisted.internet.ssl.optionsForClientTLS",
        "twisted.plugin.IPlugin",
        "warnings",
        "twisted.internet.ssl.KeyPair",
        "socket",
        "twisted.internet.interfaces.IStreamClientEndpointStringParserWithReactor",
        "constantly.Names"
    ],
    "/tmp/twisted/twisted/internet/epollreactor.py": [
        "twisted.internet.main.installReactor",
        "__future__.division",
        "twisted.internet.posixbase",
        "select.EPOLLIN",
        "select.EPOLLHUP",
        "select.epoll",
        "twisted.internet.interfaces.IReactorFDSet",
        "errno",
        "select.EPOLLERR",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "select.EPOLLOUT",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/internet/error.py": [
        "__future__.absolute_import",
        "incremental.Version",
        "errno",
        "__future__.division",
        "twisted.python.deprecate",
        "socket"
    ],
    "/tmp/twisted/twisted/internet/fdesc.py": [
        "errno",
        "twisted.internet.main.CONNECTION_DONE",
        "twisted.internet.main.CONNECTION_LOST",
        "os"
    ],
    "/tmp/twisted/twisted/internet/gireactor.py": [
        "gi.repository.GLib",
        "gi.repository.Gtk",
        "gi.repository.Gtk",
        "twisted.internet.main.installReactor",
        "gi.repository.GLib",
        "__future__.division",
        "twisted.python.modules.theSystemPath",
        "twisted.internet._glibbase",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "gi.pygtkcompat",
        "twisted.python.runtime",
        "twisted.internet.error.ReactorAlreadyRunning"
    ],
    "/tmp/twisted/twisted/internet/gtk3reactor.py": [
        "twisted.internet.main.installReactor",
        "__future__.division",
        "__future__.absolute_import",
        "twisted.internet.gireactor",
        "twisted.python.runtime",
        "os"
    ],
    "/tmp/twisted/twisted/internet/inotify.py": [
        "twisted.internet.abstract.FileDescriptor",
        "twisted.python.log",
        "twisted.python._inotify",
        "struct",
        "__future__.print_function",
        "twisted.internet.fdesc",
        "os"
    ],
    "/tmp/twisted/twisted/internet/interfaces.py": [
        "__future__.absolute_import",
        "zope.interface.Interface",
        "__future__.division",
        "zope.interface.Attribute"
    ],
    "/tmp/twisted/twisted/internet/iocpreactor/__init__.py": [
        "twisted.internet.iocpreactor.reactor.install"
    ],
    "/tmp/twisted/twisted/internet/iocpreactor/abstract.py": [
        "twisted.internet.reactor",
        "twisted.internet.iocpreactor.iocpsupport",
        "errno",
        "twisted.internet.interfaces",
        "zope.interface.implementer",
        "twisted.python.failure",
        "twisted.internet.iocpreactor.const.ERROR_HANDLE_EOF",
        "twisted.python.compat.unicode",
        "twisted.internet.error",
        "twisted.internet.abstract._LogOwner",
        "twisted.internet.main",
        "twisted.internet.abstract._ConsumerMixin",
        "twisted.internet.iocpreactor.const.ERROR_IO_PENDING"
    ],
    "/tmp/twisted/twisted/internet/iocpreactor/const.py": [],
    "/tmp/twisted/twisted/internet/iocpreactor/interfaces.py": [
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/internet/iocpreactor/reactor.py": [
        "twisted.internet.win32eventreactor._ThreadedWin32EventsMixin",
        "zope.interface.implementer",
        "twisted.internet.iocpreactor.tcp",
        "twisted.internet.iocpreactor.iocpsupport",
        "twisted.python.log",
        "twisted.internet.main",
        "twisted.internet.iocpreactor.udp",
        "warnings",
        "twisted.internet.interfaces",
        "sys",
        "twisted.python.failure",
        "twisted.internet.base",
        "socket",
        "twisted.internet._dumbwin32proc.Process",
        "twisted.internet.iocpreactor.const.WAIT_TIMEOUT",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/internet/iocpreactor/setup.py": [
        "distutils.core.setup",
        "Cython.Distutils.build_ext",
        "distutils.extension.Extension"
    ],
    "/tmp/twisted/twisted/internet/iocpreactor/tcp.py": [
        "twisted.internet.defer",
        "twisted.internet.tcp.Connector",
        "twisted.internet.iocpreactor.abstract",
        "twisted.internet.tcp._SocketCloser",
        "zope.interface.implementer",
        "twisted.internet.iocpreactor.const.SO_UPDATE_CONNECT_CONTEXT",
        "twisted.internet.iocpreactor.const.ERROR_CONNECTION_REFUSED",
        "operator",
        "twisted.internet.iocpreactor.iocpsupport",
        "twisted.internet.iocpreactor.interfaces.IReadWriteHandle",
        "twisted.internet.tcp._BaseBaseClient",
        "errno",
        "twisted.internet.iocpreactor.const.ERROR_IO_PENDING",
        "twisted.internet.tcp._BaseTCPClient",
        "twisted.internet.iocpreactor.const.SO_UPDATE_ACCEPT_CONTEXT",
        "twisted.internet.main",
        "twisted.internet.iocpreactor.const.ERROR_NETWORK_UNREACHABLE",
        "twisted.internet.tcp._AbortingMixin",
        "twisted.python.compat.nativeString",
        "twisted.internet.interfaces",
        "struct",
        "twisted.python.compat._PY3",
        "twisted.python.reflect",
        "twisted.python.failure",
        "twisted.internet.address",
        "twisted.internet.abstract.isIPv6Address",
        "twisted.internet.abstract._LogOwner",
        "zope.interface.classImplements",
        "twisted.python.log",
        "twisted.internet.protocol.Protocol",
        "socket",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/internet/iocpreactor/udp.py": [
        "twisted.internet.defer",
        "twisted.internet.iocpreactor.abstract",
        "zope.interface.implementer",
        "twisted.internet.iocpreactor.const.ERROR_CONNECTION_REFUSED",
        "twisted.internet.abstract.isIPAddress",
        "operator",
        "twisted.internet.iocpreactor.iocpsupport",
        "twisted.internet.iocpreactor.interfaces.IReadWriteHandle",
        "twisted.python.log",
        "errno",
        "warnings",
        "twisted.internet.interfaces",
        "twisted.python.failure",
        "twisted.internet.address",
        "twisted.internet.abstract.isIPv6Address",
        "twisted.internet.iocpreactor.const.ERROR_IO_PENDING",
        "struct",
        "socket",
        "twisted.internet.iocpreactor.const.ERROR_PORT_UNREACHABLE",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/internet/kqreactor.py": [
        "twisted.internet.main.installReactor",
        "twisted.internet.interfaces.IReactorFDSet",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "select.KQ_FILTER_READ",
        "select",
        "twisted.python.log",
        "errno",
        "zope.interface.Interface",
        "twisted.internet.main",
        "__future__.division",
        "twisted.internet.posixbase",
        "select.KQ_FILTER_WRITE",
        "twisted.python.failure",
        "twisted.internet.interfaces.IReactorDaemonize",
        "zope.interface.Attribute",
        "zope.interface.declarations",
        "select.KQ_EV_EOF",
        "select.KQ_EV_DELETE",
        "select.KQ_EV_ADD"
    ],
    "/tmp/twisted/twisted/internet/main.py": [
        "sys",
        "twisted.internet",
        "__future__.division",
        "__future__.absolute_import",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/internet/pollreactor.py": [
        "twisted.internet.main.installReactor",
        "select.POLLNVAL",
        "select.error",
        "select.POLLERR",
        "twisted.python.log",
        "__future__.division",
        "twisted.internet.interfaces.IReactorFDSet",
        "errno",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.posixbase",
        "select.POLLIN",
        "select.POLLHUP",
        "select.POLLOUT",
        "select.poll"
    ],
    "/tmp/twisted/twisted/internet/posixbase.py": [
        "twisted.internet._dumbwin32proc.Process",
        "twisted.internet.task.LoopingCall",
        "twisted.internet.task._EPSILON",
        "twisted.internet.interfaces.IReactorMulticast",
        "twisted.internet.interfaces.IReactorFDSet",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.base.ReactorBase",
        "twisted.internet.interfaces.IHalfCloseableDescriptor",
        "twisted.internet.process",
        "twisted.python.runtime.platformType",
        "twisted.python.log",
        "twisted.python.runtime.platform",
        "errno",
        "twisted.internet.unix",
        "twisted.internet.interfaces.IReactorUNIXDatagram",
        "twisted.internet.interfaces.IReactorSocket",
        "twisted.internet.interfaces.IReactorTCP",
        "twisted.internet.main.CONNECTION_LOST",
        "twisted.internet._signals",
        "twisted.internet.interfaces.IReactorProcess",
        "__future__.division",
        "twisted.internet.udp",
        "twisted.internet.interfaces.IReactorSSL",
        "sys",
        "twisted.python.failure",
        "twisted.internet.main.CONNECTION_DONE",
        "twisted.internet.tcp",
        "twisted.internet.interfaces.IReactorUNIX",
        "zope.interface.classImplements",
        "twisted.python.util",
        "socket",
        "twisted.internet.base._SignalReactorMixin",
        "twisted.internet.interfaces.IReactorUDP",
        "twisted.internet.fdesc",
        "twisted.internet.error",
        "os"
    ],
    "/tmp/twisted/twisted/internet/process.py": [
        "resource",
        "io",
        "twisted.python.compat.xrange",
        "twisted.internet.abstract",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "gc",
        "select",
        "twisted.python.log",
        "errno",
        "twisted.python.runtime.platform",
        "twisted.internet._baseprocess.BaseProcess",
        "twisted.internet.main.CONNECTION_LOST",
        "__future__.division",
        "stat",
        "twisted.internet.interfaces.IProcessTransport",
        "termios",
        "twisted.python.compat._PY3",
        "sys",
        "twisted.python.failure",
        "twisted.internet.main.CONNECTION_DONE",
        "__future__.print_function",
        "twisted.python.compat.items",
        "signal",
        "traceback",
        "twisted.internet.fdesc",
        "twisted.internet.error",
        "twisted.python.util.switchUID",
        "os"
    ],
    "/tmp/twisted/twisted/internet/protocol.py": [
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "random",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.log",
        "twisted.logger._loggerFor",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.python.failure",
        "twisted.python._oldstyle._oldStyle",
        "twisted.python.components",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/internet/reactor.py": [
        "sys",
        "__future__.division",
        "twisted.internet.default",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/internet/selectreactor.py": [
        "twisted.internet.main.installReactor",
        "__future__.division",
        "twisted.internet.posixbase",
        "socket",
        "errno.EBADF",
        "twisted.internet.interfaces.IReactorFDSet",
        "twisted.internet.win32eventreactor._ThreadedWin32EventsMixin",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "sys",
        "time.sleep",
        "errno.EINTR",
        "twisted.python.runtime.platformType",
        "select",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/internet/serialport.py": [
        "serial.FIVEBITS",
        "__future__.division",
        "twisted.python.runtime.platform",
        "twisted.python._oldstyle._oldStyle",
        "serial.STOPBITS_TWO",
        "serial.PARITY_ODD",
        "__future__.absolute_import",
        "twisted.internet._posixserialport.SerialPort",
        "serial.STOPBITS_ONE",
        "serial.EIGHTBITS",
        "serial.PARITY_EVEN",
        "serial.PARITY_NONE",
        "serial",
        "serial.SEVENBITS",
        "serial.SIXBITS"
    ],
    "/tmp/twisted/twisted/internet/ssl.py": [
        "twisted.internet._sslverify.DN",
        "twisted.internet._sslverify.protocolNegotiationMechanisms",
        "zope.interface.implementer_only",
        "twisted.internet._sslverify.OpenSSLDefaultPaths",
        "twisted.internet._sslverify.Certificate",
        "twisted.internet._sslverify.platformTrust",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet._sslverify.OpenSSLAcceptableCiphers",
        "twisted.internet._sslverify.trustRootFromCertificates",
        "twisted.internet._sslverify.VerificationError",
        "zope.interface.implementedBy",
        "twisted.internet._sslverify.OpenSSLCertificateOptions",
        "twisted.internet._sslverify.optionsForClientTLS",
        "OpenSSL.SSL",
        "twisted.internet._sslverify.ProtocolNegotiationSupport",
        "twisted.internet._sslverify.CertificateRequest",
        "twisted.internet._sslverify.DistinguishedName",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.internet._sslverify.OpenSSLDiffieHellmanParameters",
        "twisted.internet._sslverify.KeyPair",
        "twisted.internet.tcp",
        "twisted.internet._sslverify.PrivateCertificate",
        "twisted.python._oldstyle._oldStyle"
    ],
    "/tmp/twisted/twisted/internet/stdio.py": [
        "__future__.division",
        "twisted.python.runtime.platform",
        "__future__.absolute_import",
        "twisted.internet._posixstdio.StandardIO",
        "twisted.internet._win32stdio",
        "twisted.internet._posixstdio.PipeAddress"
    ],
    "/tmp/twisted/twisted/internet/task.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "incremental.Version",
        "twisted.python.deprecate._getDeprecationWarningString",
        "twisted.python.log",
        "twisted.python.failure.Failure",
        "__future__.division",
        "warnings",
        "sys",
        "twisted.internet.base",
        "twisted.internet.error.ReactorNotRunning",
        "twisted.python.reflect",
        "twisted.internet.interfaces.IReactorTime",
        "time"
    ],
    "/tmp/twisted/twisted/internet/tcp.py": [
        "errno.EPERM",
        "twisted.internet.abstract",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.task.deferLater",
        "errno.EAGAIN",
        "operator",
        "errno.ENFILE",
        "twisted.python.runtime.platformType",
        "errno.EISCONN",
        "errno.errorcode",
        "struct",
        "errno.EINPROGRESS",
        "errno.EWOULDBLOCK",
        "errno.ENOMEM",
        "errno.ECONNABORTED",
        "twisted.internet.main",
        "__future__.division",
        "twisted.python.util.untilConcludes",
        "errno.ENOBUFS",
        "twisted.python.compat._PY3",
        "sys",
        "twisted.python.failure",
        "twisted.python.compat.lazyByteSlice",
        "twisted.python.log",
        "twisted.internet.address",
        "twisted.internet.interfaces",
        "twisted.internet.protocol.Protocol",
        "errno.EINVAL",
        "twisted.python.reflect",
        "errno.EMFILE",
        "twisted.internet.error.CannotListenError",
        "twisted.python.deprecate",
        "socket",
        "twisted.python.versions",
        "os.strerror",
        "twisted.internet.base",
        "twisted.internet.fdesc",
        "twisted.internet.error",
        "errno.EALREADY"
    ],
    "/tmp/twisted/twisted/internet/test/__init__.py": [],
    "/tmp/twisted/twisted/internet/test/_posixifaces.py": [
        "socket.AF_INET6",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "ctypes.pointer",
        "ctypes.util.find_library",
        "twisted.python.compat.nativeString",
        "ctypes.c_uint32",
        "ctypes.Structure",
        "__future__.division",
        "ctypes.c_char_p",
        "ctypes.CDLL",
        "socket.inet_ntop",
        "sys",
        "ctypes.c_void_p",
        "ctypes.c_ubyte",
        "ctypes.c_int",
        "ctypes.c_ushort",
        "ctypes.c_uint8",
        "socket",
        "socket.AF_INET",
        "ctypes.cast",
        "ctypes.POINTER"
    ],
    "/tmp/twisted/twisted/internet/test/_win32ifaces.py": [
        "socket.AF_INET6",
        "socket.SOCK_STREAM",
        "ctypes.byref",
        "ctypes.create_string_buffer",
        "ctypes.WinDLL",
        "ctypes.Structure",
        "ctypes.create_unicode_buffer",
        "ctypes.c_void_p",
        "ctypes.c_int",
        "ctypes.wstring_at",
        "socket.socket",
        "ctypes.cast",
        "ctypes.POINTER"
    ],
    "/tmp/twisted/twisted/internet/test/connectionmixins.py": [
        "twisted.internet.interfaces.IReactorFDSet",
        "twisted.trial.unittest.SkipTest",
        "__future__.absolute_import",
        "twisted.python.log",
        "twisted.python.runtime.platform",
        "twisted.internet.interfaces.IConnector",
        "twisted.python.failure.Failure",
        "twisted.internet.test.reactormixins.needsRunningReactor",
        "twisted.python.log.msg",
        "weakref.ref",
        "__future__.division",
        "twisted.internet.defer.Deferred",
        "twisted.test.test_tcp.ClosingProtocol",
        "twisted.python.log.ILogContext",
        "twisted.internet.defer.gatherResults",
        "twisted.internet.protocol.Protocol",
        "socket",
        "twisted.python.log.err",
        "zope.interface.verify.verifyObject",
        "twisted.internet.protocol.ServerFactory",
        "gc.collect",
        "twisted.internet.protocol.ClientFactory",
        "twisted.python.context"
    ],
    "/tmp/twisted/twisted/internet/test/fakeendpoint.py": [
        "__future__.division",
        "twisted.plugin.IPlugin",
        "twisted.internet.interfaces.IStreamServerEndpointStringParser",
        "zope.interface.declarations.implementer",
        "__future__.absolute_import",
        "twisted.internet.interfaces.IStreamClientEndpoint",
        "twisted.internet.interfaces.IStreamClientEndpointStringParserWithReactor",
        "twisted.internet.interfaces.IStreamServerEndpoint"
    ],
    "/tmp/twisted/twisted/internet/test/modulehelpers.py": [
        "__future__.division",
        "twisted.internet",
        "twisted.test.test_twisted.SetAsideModule",
        "sys",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/internet/test/process_cli.py": [
        "__future__.division",
        "__future__.absolute_import",
        "sys",
        "os",
        "msvcrt"
    ],
    "/tmp/twisted/twisted/internet/test/process_helper.py": [
        "win32api",
        "win32process",
        "sys",
        "os"
    ],
    "/tmp/twisted/twisted/internet/test/reactormixins.py": [
        "twisted.python.log",
        "twisted.internet.reactor",
        "twisted.internet.cfreactor.CFReactor",
        "twisted.python.deprecate._fullyQualifiedName",
        "twisted.internet.process",
        "twisted.trial.unittest.SkipTest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.log",
        "twisted.python.failure.Failure",
        "twisted.trial.util.DEFAULT_TIMEOUT_DURATION",
        "twisted.python.reflect.namedAny",
        "twisted.python.runtime.platform",
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase",
        "os",
        "signal",
        "time",
        "twisted.trial.util.acquireAttribute"
    ],
    "/tmp/twisted/twisted/internet/test/test_abstract.py": [
        "twisted.trial.unittest.SynchronousTestCase",
        "__future__.division",
        "twisted.internet.abstract.isIPv6Address",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/internet/test/test_address.py": [
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.internet.address.IPv6Address",
        "re",
        "twisted.python.runtime.platform",
        "twisted.internet.address.UNIXAddress",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "twisted.internet.address.IPv4Address",
        "socket",
        "twisted.internet.address.HostnameAddress",
        "os"
    ],
    "/tmp/twisted/twisted/internet/test/test_base.py": [
        "twisted.python.threadpool.ThreadPool",
        "socket",
        "twisted.internet.error.DNSLookupError",
        "twisted.internet.interfaces.IReactorTime",
        "twisted.internet.task.Clock",
        "zope.interface.implementer",
        "twisted.internet.base.DelayedCall",
        "queue.Queue",
        "twisted.trial.unittest.TestCase",
        "twisted.internet.base.ThreadedResolver",
        "twisted.internet.interfaces.IReactorThreads"
    ],
    "/tmp/twisted/twisted/internet/test/test_baseprocess.py": [
        "twisted.python.deprecate.setWarningMethod",
        "twisted.trial.unittest.TestCase",
        "twisted.internet._baseprocess.BaseProcess",
        "twisted.python.deprecate.getWarningMethod"
    ],
    "/tmp/twisted/twisted/internet/test/test_core.py": [
        "__future__.division",
        "signal",
        "inspect",
        "__future__.absolute_import",
        "twisted.internet.abstract.FileDescriptor",
        "twisted.internet.defer.Deferred",
        "time",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.error.ReactorAlreadyRunning",
        "twisted.internet.error.ReactorNotRestartable"
    ],
    "/tmp/twisted/twisted/internet/test/test_coroutines.py": [
        "__future__.division",
        "twisted.python.filepath.FilePath",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.execfile",
        "sys",
        "twisted.trial.unittest.TestCase"
    ],
    "/tmp/twisted/twisted/internet/test/test_default.py": [
        "twisted.internet.reactor",
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.internet.interfaces.IReactorCore",
        "twisted.internet.test.test_main.NoReactor",
        "__future__.absolute_import",
        "sys",
        "twisted.python.runtime.Platform",
        "twisted.internet.default",
        "twisted.internet.default.install",
        "twisted.python.reflect.requireModule",
        "twisted.internet.default._getInstallFunction",
        "select"
    ],
    "/tmp/twisted/twisted/internet/test/test_endpoints.py": [
        "twisted.plugins.fakeendpoint.fake",
        "sys",
        "twisted.plugins.fakeendpoint.fakeClientWithReactor",
        "twisted.plugins.fakeendpoint.fakeClientWithReactor",
        "socket.AF_UNIX",
        "OpenSSL.SSL.OP_NO_SSLv3",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "__future__.absolute_import",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.python.failure.Failure",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "twisted.test.test_sslverify.makeCertificate",
        "twisted.internet.interfaces.IPushProducer",
        "twisted.internet.protocol.Protocol",
        "twisted.python.filepath.FilePath",
        "twisted.test.proto_helpers.RaisingMemoryReactor",
        "twisted.internet.protocol.ClientFactory",
        "twisted.plugin.getPlugins",
        "errno.EPERM",
        "twisted.internet.task.Clock",
        "socket.SOCK_STREAM",
        "zope.interface.implementer",
        "twisted.plugins",
        "twisted.internet.endpoints.StandardErrorBehavior",
        "twisted.internet.address.IPv6Address",
        "twisted.internet.address.UNIXAddress",
        "twisted.internet.interfaces",
        "twisted.internet.threads",
        "twisted.internet.ssl.PrivateCertificate",
        "twisted.python.log",
        "socket",
        "socket.AF_INET",
        "socket.AF_INET6",
        "socket.IPPROTO_TCP",
        "twisted.internet.ssl.Certificate",
        "twisted.trial.unittest",
        "twisted.internet.ssl.CertificateOptions",
        "zope.interface.verify.verifyClass",
        "twisted.internet.interfaces.ITransport",
        "twisted.protocols.basic",
        "OpenSSL.SSL.TLSv1_METHOD",
        "twisted.internet.address._ProcessAddress",
        "twisted.internet.interfaces.IConsumer",
        "twisted.internet.address.HostnameAddress",
        "twisted.protocols.policies",
        "twisted.internet.error",
        "twisted.internet.endpoints",
        "types.FunctionType",
        "zope.interface.verify.verifyObject",
        "twisted.internet.stdio.PipeAddress",
        "twisted.internet.defer",
        "twisted.test.iosim.connectableEndpoint",
        "twisted.internet.protocol.Factory",
        "OpenSSL.SSL.ContextType",
        "twisted.python.systemd.ListenFDs",
        "twisted.test.iosim.connectedServerAndClient",
        "twisted.test.proto_helpers.MemoryReactorClock",
        "OpenSSL.SSL.SSLv23_METHOD",
        "twisted.protocols.tls.TLSMemoryBIOFactory",
        "twisted.internet.ssl.KeyPair",
        "twisted.python.modules.getModule",
        "twisted.internet.error.ConnectingCancelledError",
        "twisted.internet.address.IPv4Address",
        "twisted.internet.ssl.DiffieHellmanParameters",
        "twisted.internet.stdio",
        "twisted.test.proto_helpers.StringTransportWithDisconnection"
    ],
    "/tmp/twisted/twisted/internet/test/test_epollreactor.py": [
        "__future__.division",
        "twisted.internet.error.ConnectionDone",
        "twisted.internet.task.Clock",
        "__future__.absolute_import",
        "twisted.trial.unittest.TestCase"
    ],
    "/tmp/twisted/twisted/internet/test/test_fdset.py": [
        "socket",
        "twisted.internet.interfaces.IReactorFDSet",
        "twisted.trial.unittest.SkipTest",
        "traceback",
        "zope.interface.implementer",
        "twisted.internet.tcp.EINPROGRESS",
        "twisted.internet.tcp.EWOULDBLOCK",
        "twisted.python.runtime.platform",
        "twisted.internet.abstract.FileDescriptor",
        "os",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.interfaces.IReadDescriptor"
    ],
    "/tmp/twisted/twisted/internet/test/test_filedescriptor.py": [
        "__future__.division",
        "zope.interface.verify.verifyClass",
        "twisted.trial.unittest.SynchronousTestCase",
        "__future__.absolute_import",
        "twisted.internet.abstract.FileDescriptor",
        "twisted.internet.interfaces.IPushProducer"
    ],
    "/tmp/twisted/twisted/internet/test/test_gireactor.py": [
        "twisted.internet.reactor",
        "gobject",
        "twisted.trial.unittest.SkipTest",
        "gi.repository.Gtk",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "gi.repository.Gio",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.error.ReactorAlreadyRunning",
        "twisted.internet.protocol.ProcessProtocol",
        "twisted.test.test_twisted.SetAsideModule",
        "twisted.trial.unittest.TestCase",
        "twisted.python.runtime.platform",
        "twisted.internet.interfaces.IReactorProcess",
        "__future__.division",
        "sys",
        "twisted.internet.defer.Deferred",
        "__future__.print_function",
        "twisted.python.filepath.FilePath",
        "os"
    ],
    "/tmp/twisted/twisted/internet/test/test_glibbase.py": [
        "__future__.division",
        "twisted.internet._glibbase.ensureNotImported",
        "__future__.absolute_import",
        "sys",
        "twisted.trial.unittest.TestCase"
    ],
    "/tmp/twisted/twisted/internet/test/test_inlinecb.py": [
        "__future__.division",
        "twisted.internet.defer.inlineCallbacks",
        "__future__.absolute_import",
        "sys",
        "twisted.internet.defer.Deferred",
        "twisted.trial.unittest.TestCase",
        "twisted.internet.defer.returnValue"
    ],
    "/tmp/twisted/twisted/internet/test/test_inotify.py": [
        "os",
        "twisted.internet.defer",
        "twisted.internet.reactor",
        "twisted.python.filepath",
        "twisted.trial.unittest",
        "sys",
        "twisted.python.runtime",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/internet/test/test_iocp.py": [
        "socket.AF_INET6",
        "zope.interface.verify.verifyClass",
        "twisted.trial.unittest",
        "socket.SOCK_STREAM",
        "twisted.internet.iocpreactor.tcp",
        "array.array",
        "twisted.internet.iocpreactor.iocpsupport",
        "twisted.internet.iocpreactor.interfaces.IReadWriteHandle",
        "twisted.internet.iocpreactor.reactor.IOCPReactor",
        "errno",
        "twisted.python.log.msg",
        "twisted.internet.iocpreactor.const.SO_UPDATE_ACCEPT_CONTEXT",
        "twisted.internet.iocpreactor.udp",
        "twisted.internet.iocpreactor.reactor.KEY_NORMAL",
        "twisted.internet.iocpreactor.reactor.EVENTS_PER_LOOP",
        "socket.SOL_SOCKET",
        "twisted.internet.interfaces.IPushProducer",
        "socket.socket",
        "socket.AF_INET",
        "socket.error",
        "twisted.internet.iocpreactor.abstract.FileHandle",
        "struct.pack"
    ],
    "/tmp/twisted/twisted/internet/test/test_kqueuereactor.py": [
        "twisted.internet.kqreactor._IKQueue",
        "__future__.division",
        "errno",
        "twisted.internet.kqreactor.KQueueReactor",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.trial.unittest.TestCase"
    ],
    "/tmp/twisted/twisted/internet/test/test_main.py": [
        "twisted.internet.reactor",
        "__future__.division",
        "twisted.internet.error.ReactorAlreadyInstalledError",
        "twisted.trial.unittest",
        "twisted.internet.test.modulehelpers.NoReactor",
        "__future__.absolute_import",
        "twisted.internet.main.installReactor"
    ],
    "/tmp/twisted/twisted/internet/test/test_newtls.py": [
        "twisted.protocols.tls",
        "__future__.division",
        "twisted.internet.test.test_tls.TLSMixin",
        "twisted.internet.test.test_tls.ContextGeneratingMixin",
        "twisted.trial.unittest",
        "twisted.internet.test.connectionmixins.ConnectableProtocol",
        "__future__.absolute_import",
        "twisted.internet.test.connectionmixins.runProtocolsWithReactor",
        "twisted.internet.test.test_tls.StartTLSClientCreator",
        "twisted.internet.test.test_tcp.TCPCreator",
        "twisted.internet.test.test_tls.SSLCreator",
        "twisted.internet.test.reactormixins.ReactorBuilder"
    ],
    "/tmp/twisted/twisted/internet/test/test_pollingfile.py": [
        "twisted.trial.unittest.TestCase",
        "twisted.python.runtime.platform"
    ],
    "/tmp/twisted/twisted/internet/test/test_posixbase.py": [
        "__future__.division",
        "twisted.test.test_unix.ClientProto",
        "twisted.internet.reactor",
        "twisted.internet.posixbase._Waker",
        "__future__.absolute_import",
        "twisted.internet.tcp.Port",
        "twisted.trial.unittest.TestCase",
        "twisted.internet.defer.Deferred",
        "twisted.internet.unix",
        "twisted.internet.posixbase.PosixReactorBase",
        "twisted.internet.protocol.ServerFactory"
    ],
    "/tmp/twisted/twisted/internet/test/test_posixprocess.py": [
        "fcntl",
        "__future__.division",
        "twisted.internet.process",
        "errno",
        "__future__.absolute_import",
        "sys",
        "twisted.trial.unittest.TestCase",
        "os"
    ],
    "/tmp/twisted/twisted/internet/test/test_process.py": [
        "twisted.internet.error",
        "twisted.internet.process",
        "twisted.internet.process",
        "twisted.python.compat.xrange",
        "twisted.internet.utils",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "subprocess",
        "twisted.python.compat.networkString",
        "io",
        "twisted.internet.error.ProcessTerminated",
        "twisted.python.compat.bytesEnviron",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.protocol.ProcessProtocol",
        "twisted.python.filepath._asFilesystemBytes",
        "twisted",
        "twisted.trial.unittest.TestCase",
        "twisted.python.runtime.platform",
        "twisted.internet.interfaces.IProcessTransport",
        "twisted.python.log.msg",
        "twisted.internet.interfaces.IReactorProcess",
        "__future__.division",
        "sys",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "__future__.print_function",
        "resource",
        "twisted.python.log.err",
        "twisted.python.filepath.FilePath",
        "twisted.python.compat.items",
        "signal",
        "threading",
        "twisted.internet.error.ProcessDone",
        "os"
    ],
    "/tmp/twisted/twisted/internet/test/test_protocol.py": [
        "twisted.internet.interfaces.IProtocol",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.logger.LogLevel",
        "twisted.internet.protocol.ProtocolToConsumerAdapter",
        "twisted.test.proto_helpers.MemoryReactorClock",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.internet.interfaces.IProtocolFactory",
        "__future__.division",
        "twisted.internet.defer.CancelledError",
        "twisted.internet.protocol.Factory",
        "twisted.logger.globalLogPublisher",
        "twisted.internet.protocol.Protocol",
        "zope.interface.verify.verifyObject",
        "twisted.internet.interfaces.IConsumer",
        "twisted.internet.interfaces.ILoggingContext",
        "twisted.internet.protocol.ConsumerToProtocolAdapter",
        "twisted.internet.protocol.ClientCreator"
    ],
    "/tmp/twisted/twisted/internet/test/test_serialport.py": [
        "twisted.internet.protocol.Protocol",
        "twisted.internet.error.ConnectionDone",
        "twisted.trial.unittest",
        "twisted.python.failure.Failure"
    ],
    "/tmp/twisted/twisted/internet/test/test_sigchld.py": [
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase",
        "errno",
        "signal",
        "twisted.internet.fdesc.setNonBlocking",
        "__future__.absolute_import",
        "twisted.internet._signals.isDefaultHandler",
        "twisted.internet._signals.installHandler",
        "twisted.python.log.msg",
        "os",
        "twisted.python.runtime.platformType"
    ],
    "/tmp/twisted/twisted/internet/test/test_socket.py": [
        "twisted.internet.protocol.ServerFactory",
        "socket",
        "twisted.python.log.err",
        "errno",
        "twisted.python.compat._PY3",
        "twisted.internet.interfaces.IReactorSocket",
        "twisted.python.runtime.platform",
        "twisted.internet.error.UnsupportedAddressFamily",
        "twisted.internet.test.reactormixins.needsRunningReactor",
        "zope.interface.verify",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.protocol.DatagramProtocol"
    ],
    "/tmp/twisted/twisted/internet/test/test_stdio.py": [
        "__future__.division",
        "twisted.internet.protocol.Protocol",
        "twisted.python.runtime.platform",
        "__future__.absolute_import",
        "twisted.internet.stdio.StandardIO",
        "twisted.internet.test.reactormixins.ReactorBuilder"
    ],
    "/tmp/twisted/twisted/internet/test/test_tcp.py": [
        "__future__.absolute_import",
        "functools.wraps",
        "twisted.python.runtime.platform",
        "twisted.internet.test.reactormixins.needsRunningReactor",
        "twisted.test.test_tcp.ClosingFactory",
        "__future__.division",
        "twisted.internet.interfaces.IHalfCloseableProtocol",
        "twisted.internet.interfaces.IPushProducer",
        "twisted.internet.error.UserError",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.interfaces.IPullProducer",
        "twisted.internet.defer.DeferredList",
        "twisted.internet.protocol.ClientFactory",
        "twisted.test.test_tcp.ClientStartStopFactory",
        "zope.interface.verify.verifyClass",
        "twisted.internet.interfaces.ITLSTransport",
        "zope.interface.implementer",
        "twisted.internet.endpoints.TCP4ServerEndpoint",
        "twisted.internet.defer.fail",
        "twisted.internet.test.reactormixins.stopOnError",
        "twisted.internet.address.IPv6Address",
        "twisted.internet.interfaces.IConnector",
        "twisted.internet.test.connectionmixins.EndpointCreator",
        "twisted.internet.interfaces.IReactorSocket",
        "twisted.internet.interfaces.IReactorTCP",
        "twisted.internet.error.ConnectionRefusedError",
        "twisted.internet.error.ConnectionLost",
        "twisted.internet.error.DNSLookupError",
        "twisted.internet.test.connectionmixins.findFreePort",
        "twisted.internet.test.test_core.ObjectModelIntegrationMixin",
        "twisted.internet.endpoints.TCP4ClientEndpoint",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.internet.test._win32ifaces",
        "twisted.internet.tcp.Server",
        "twisted.python.log",
        "socket",
        "twisted.internet.test._posixifaces",
        "twisted.internet.test.connectionmixins.ConnectableProtocol",
        "OpenSSL.SSL",
        "twisted.internet.interfaces.ILoggingContext",
        "twisted.internet.defer.maybeDeferred",
        "twisted.internet.ssl.ClientContextFactory",
        "twisted.internet.interfaces.IReactorFDSet",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.error.ConnectionDone",
        "twisted.python.failure.Failure",
        "errno",
        "twisted.python.compat.long",
        "twisted.internet.test.connectionmixins.LogObserverMixin",
        "twisted.internet.test.connectionmixins.ConnectionTestsMixin",
        "twisted.internet.address.IPv4Address",
        "twisted.internet.test.connectionmixins.StreamClientTestsMixin",
        "twisted.internet.tcp.Connection",
        "twisted.internet.defer.gatherResults",
        "twisted.internet.protocol.ServerFactory",
        "twisted.internet.test.connectionmixins.BrokenContextFactory",
        "twisted.test.test_tcp.MyServerFactory",
        "twisted.trial.unittest.SkipTest",
        "twisted.internet.error.ConnectionAborted",
        "twisted.internet.error.NoProtocol",
        "twisted.internet.test.connectionmixins.Stop",
        "twisted.internet.test.connectionmixins.runProtocolsWithReactor",
        "twisted.trial.unittest.TestCase",
        "twisted.test.test_tcp.MyClientFactory",
        "twisted.internet.interfaces.IResolverSimple",
        "twisted.internet.tcp._resolveIPv6"
    ],
    "/tmp/twisted/twisted/internet/test/test_threads.py": [
        "__future__.division",
        "__future__.absolute_import",
        "twisted.python.threadpool.ThreadPool",
        "threading",
        "gc",
        "twisted.python.threadable.isInIOThread",
        "weakref.ref",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.interfaces.IReactorThreads"
    ],
    "/tmp/twisted/twisted/internet/test/test_time.py": [
        "gobject",
        "twisted.trial.unittest.SkipTest",
        "twisted.internet.interfaces.IReactorTime",
        "twisted.python.runtime.platform",
        "twisted.python.log.msg",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.interfaces.IReactorThreads"
    ],
    "/tmp/twisted/twisted/internet/test/test_tls.py": [
        "twisted.protocols.tls",
        "twisted.trial.unittest.SkipTest",
        "twisted.internet.interfaces.ITLSTransport",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.internet.test.test_tcp.AbortConnectionMixin",
        "twisted.internet.error.ConnectionClosed",
        "twisted.internet.endpoints.SSL4ServerEndpoint",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.test.connectionmixins.EndpointCreator",
        "twisted.python.runtime.platform",
        "twisted.internet.test.connectionmixins.ConnectionTestsMixin",
        "__future__.division",
        "twisted.internet.interfaces.IReactorSSL",
        "twisted.internet.test.test_core.ObjectModelIntegrationMixin",
        "twisted.internet.endpoints.TCP4ClientEndpoint",
        "twisted.internet.defer.Deferred",
        "twisted.internet.ssl.KeyPair",
        "twisted.internet.endpoints.SSL4ClientEndpoint",
        "twisted.internet.ssl.PrivateCertificate",
        "twisted.internet.protocol.Protocol",
        "twisted.python.filepath.FilePath",
        "twisted.internet.ssl.ClientContextFactory",
        "twisted.internet.defer.DeferredList",
        "twisted.internet.protocol.ServerFactory",
        "twisted.internet.interfaces.IStreamClientEndpoint",
        "twisted.internet.protocol.ClientFactory",
        "twisted.internet.test.test_tcp.StreamTransportTestsMixin",
        "twisted.internet.test.connectionmixins.BrokenContextFactory",
        "twisted.internet.task.Cooperator"
    ],
    "/tmp/twisted/twisted/internet/test/test_udp.py": [
        "twisted.test.test_udp.GoodClient",
        "twisted.internet.defer",
        "twisted.trial.unittest.SkipTest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.internet.address.IPv6Address",
        "twisted.internet.interfaces.IListeningPort",
        "twisted.internet.interfaces.IReactorSocket",
        "twisted.internet.test.connectionmixins.LogObserverMixin",
        "__future__.division",
        "twisted.internet.test.connectionmixins.findFreePort",
        "twisted.test.test_udp.Server",
        "twisted.internet.defer.Deferred",
        "twisted.python.log.ILogContext",
        "twisted.internet.protocol.DatagramProtocol",
        "twisted.internet.address.IPv4Address",
        "socket",
        "twisted.python.log.err",
        "zope.interface.verify.verifyObject",
        "twisted.internet.interfaces.IReactorUDP",
        "twisted.internet.interfaces.ILoggingContext",
        "twisted.python.context",
        "twisted.internet.error",
        "twisted.internet.defer.maybeDeferred"
    ],
    "/tmp/twisted/twisted/internet/test/test_udp_internals.py": [
        "__future__.division",
        "twisted.internet.udp",
        "socket",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "errno.EWOULDBLOCK",
        "twisted.python.runtime.platformType",
        "twisted.internet.protocol.DatagramProtocol"
    ],
    "/tmp/twisted/twisted/internet/test/test_unix.py": [
        "socket.fromfd",
        "socket.socketpair",
        "twisted.python.compat._PY3",
        "twisted.internet.error.FileDescriptorOverrun",
        "twisted.internet.interfaces.IFileDescriptorReceiver",
        "socket.SOCK_STREAM",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.error.ConnectionClosed",
        "os.urandom",
        "twisted.internet.defer.fail",
        "os.close",
        "twisted.internet.test.connectionmixins.runProtocolsWithReactor",
        "stat.S_IMODE",
        "tempfile.mktemp",
        "twisted.python.runtime.platform",
        "twisted.python.log.removeObserver",
        "twisted.internet.endpoints.UNIXClientEndpoint",
        "twisted.internet.test.connectionmixins.EndpointCreator",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.python.failure.Failure",
        "twisted.internet.test.connectionmixins.ConnectableProtocol",
        "twisted.internet.address.UNIXAddress",
        "twisted.internet.endpoints.UNIXServerEndpoint",
        "twisted.internet.test.connectionmixins.ConnectionTestsMixin",
        "__future__.division",
        "os.stat",
        "twisted.python.compat.nativeString",
        "twisted.internet.interfaces",
        "twisted.internet.test.test_core.ObjectModelIntegrationMixin",
        "twisted.internet.protocol.DatagramProtocol",
        "twisted.internet.defer.Deferred",
        "twisted.python.compat.iteritems",
        "twisted.internet.interfaces.IReactorUNIX",
        "twisted.internet.task.LoopingCall",
        "hashlib.md5",
        "twisted.internet.test.connectionmixins.StreamClientTestsMixin",
        "socket.socket",
        "twisted.python.log.err",
        "twisted.python.reflect.requireModule",
        "socket.AF_INET",
        "twisted.internet.protocol.ServerFactory",
        "twisted.internet.protocol.ClientFactory",
        "pprint.pformat",
        "twisted.internet.test.test_tcp.StreamTransportTestsMixin",
        "twisted.python.log.addObserver"
    ],
    "/tmp/twisted/twisted/internet/test/test_win32events.py": [
        "twisted.internet.defer.Deferred",
        "twisted.python.threadable.getThreadID",
        "zope.interface.verify.verifyObject",
        "twisted.internet.test.reactormixins.ReactorBuilder",
        "twisted.python.failure.Failure",
        "twisted.python.threadable.isInIOThread",
        "twisted.internet.interfaces.IReactorWin32Events"
    ],
    "/tmp/twisted/twisted/internet/threads.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "__future__.division",
        "twisted.internet.defer",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "queue",
        "twisted.python.failure"
    ],
    "/tmp/twisted/twisted/internet/udp.py": [
        "errno.ECONNREFUSED",
        "errno.WSAENETRESET",
        "twisted.internet.defer",
        "errno.WSAECONNREFUSED",
        "twisted.internet.abstract",
        "errno.WSAETIMEDOUT",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "errno.WSAECONNRESET",
        "operator",
        "errno.EAGAIN",
        "twisted.python.runtime.platformType",
        "twisted.internet.error",
        "struct",
        "errno.ENOPROTOOPT",
        "errno.EWOULDBLOCK",
        "errno.WSAEINPROGRESS",
        "__future__.division",
        "warnings",
        "twisted.internet.interfaces",
        "errno.WSAEINTR",
        "twisted.python.failure",
        "twisted.internet.base",
        "errno.EINTR",
        "errno.EMSGSIZE",
        "twisted.python.log",
        "errno.WSAEWOULDBLOCK",
        "socket",
        "twisted.python._oldstyle._oldStyle",
        "errno.WSAEMSGSIZE",
        "twisted.internet.address"
    ],
    "/tmp/twisted/twisted/internet/unix.py": [
        "errno.ECONNREFUSED",
        "zope.interface.implementer_only",
        "twisted.internet.protocol",
        "twisted.internet.address",
        "twisted.internet.udp",
        "__future__.absolute_import",
        "twisted.python.util.untilConcludes",
        "errno.EAGAIN",
        "twisted.python.filepath._coerceToFilesystemEncoding",
        "zope.interface.implementedBy",
        "twisted.python.lockfile",
        "struct",
        "errno.EWOULDBLOCK",
        "twisted.internet.main",
        "__future__.division",
        "stat",
        "twisted.internet.interfaces",
        "errno.ENOBUFS",
        "zope.interface.implementer",
        "twisted.python.reflect",
        "twisted.python.failure",
        "twisted.internet.base",
        "twisted.internet.tcp",
        "errno.EINTR",
        "errno.EMSGSIZE",
        "twisted.python.log",
        "socket",
        "twisted.python.compat.lazyByteSlice",
        "twisted.internet.error",
        "os"
    ],
    "/tmp/twisted/twisted/internet/utils.py": [
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "__future__.absolute_import",
        "twisted.python.compat.reraise",
        "functools.wraps",
        "io.BytesIO",
        "__future__.division",
        "warnings",
        "sys",
        "twisted.python.failure"
    ],
    "/tmp/twisted/twisted/internet/win32eventreactor.py": [
        ".main",
        "twisted.python.threadable",
        "twisted.internet.interfaces.IReactorFDSet",
        "zope.interface.implementer",
        "win32event.CreateEvent",
        "weakref.WeakKeyDictionary",
        "twisted.python.log",
        "win32event.QS_ALLINPUT",
        "win32file.FD_ACCEPT",
        "twisted.internet.posixbase",
        "win32event.MsgWaitForMultipleObjects",
        "threading.Thread",
        "warnings",
        "twisted.internet.interfaces.IReactorWin32Events",
        "win32event.WAIT_OBJECT_0",
        "win32file.WSAEventSelect",
        "sys",
        "twisted.python.failure",
        "win32file.FD_CONNECT",
        "win32file.FD_READ",
        "twisted.internet.threads.blockingCallFromThread",
        "win32file.FD_CLOSE",
        "win32event.WAIT_TIMEOUT",
        "win32gui",
        "time"
    ],
    "/tmp/twisted/twisted/logger/__init__.py": [
        "._format.timeFormatRFC3339",
        "._global.LogBeginner",
        "._flatten.extractField",
        "._io.LoggingFile",
        "._json.eventFromJSON",
        "._format.formatTime",
        "._logger.Logger",
        "._json.jsonFileLogObserver",
        "._json.eventAsJSON",
        "._filter.FilteringLogObserver",
        "._buffer.LimitedHistoryLogObserver",
        "._format.formatEvent",
        "._observer.ILogObserver",
        "._levels.LogLevel",
        "._filter.ILogFilterPredicate",
        "._logger._loggerFor",
        "._filter.LogLevelFilterPredicate",
        "._global.globalLogBeginner",
        "._file.FileLogObserver",
        "._json.eventsFromJSONLogFile",
        "._observer.LogPublisher",
        "._legacy.LegacyLogObserverWrapper",
        "._levels.InvalidLogLevelError",
        "._format.formatEventAsClassicLogText",
        "._file.textFileLogObserver",
        "._global.globalLogPublisher",
        "._stdlib.STDLibLogObserver",
        "._filter.PredicateResult"
    ],
    "/tmp/twisted/twisted/logger/_buffer.py": [
        "collections.deque",
        "._observer.ILogObserver",
        "zope.interface.implementer"
    ],
    "/tmp/twisted/twisted/logger/_file.py": [
        "._format.timeFormatRFC3339",
        "._observer.ILogObserver",
        "zope.interface.implementer",
        "._format.formatTime",
        "twisted.python.compat.unicode",
        "twisted.python.compat.ioType",
        "._format.formatEventAsClassicLogText"
    ],
    "/tmp/twisted/twisted/logger/_filter.py": [
        "._observer.ILogObserver",
        "functools.partial",
        "._levels.LogLevel",
        "zope.interface.implementer",
        "._levels.InvalidLogLevelError",
        "zope.interface.Interface",
        "constantly.NamedConstant",
        "constantly.Names"
    ],
    "/tmp/twisted/twisted/logger/_flatten.py": [
        "collections.defaultdict",
        "twisted.python.compat.unicode",
        "string.Formatter"
    ],
    "/tmp/twisted/twisted/logger/_format.py": [
        "._flatten.flatFormat",
        "datetime.datetime",
        "twisted.python.failure.Failure",
        "twisted.python.compat.unicode",
        "twisted.python.reflect.safe_repr",
        "twisted.python._tzhelper.FixedOffsetTimeZone",
        "._flatten.aFormatter"
    ],
    "/tmp/twisted/twisted/logger/_global.py": [
        "._format.formatEvent",
        "warnings",
        "._levels.LogLevel",
        "._observer.LogPublisher",
        "._io.LoggingFile",
        "sys",
        "twisted.python.reflect.qual",
        "._filter.LogLevelFilterPredicate",
        "._filter.FilteringLogObserver",
        "._logger.Logger",
        "._file.FileLogObserver",
        "twisted.python.compat.currentframe",
        "._buffer.LimitedHistoryLogObserver"
    ],
    "/tmp/twisted/twisted/logger/_io.py": [
        "sys",
        "._levels.LogLevel"
    ],
    "/tmp/twisted/twisted/logger/_json.py": [
        "twisted.python.compat.unicode",
        "._logger.Logger",
        "._levels.LogLevel",
        "twisted.python.failure.Failure",
        "types",
        "._file.FileLogObserver",
        "constantly.NamedConstant",
        "._flatten.flattenEvent",
        "uuid.UUID",
        "json.dumps",
        "json.loads"
    ],
    "/tmp/twisted/twisted/logger/_legacy.py": [
        "._format.formatEvent",
        "._observer.ILogObserver",
        "._stdlib.StringifiableFromEvent",
        "._levels.LogLevel",
        "zope.interface.implementer",
        "._stdlib.fromStdlibLogLevelMapping"
    ],
    "/tmp/twisted/twisted/logger/_levels.py": [
        "constantly.NamedConstant",
        "constantly.Names"
    ],
    "/tmp/twisted/twisted/logger/_logger.py": [
        "._global.globalLogPublisher",
        "._levels.LogLevel",
        "twisted.python.failure.Failure",
        "._levels.InvalidLogLevelError",
        "time.time",
        "twisted.python.compat.currentframe"
    ],
    "/tmp/twisted/twisted/logger/_observer.py": [
        "zope.interface.implementer",
        "twisted.python.failure.Failure",
        "zope.interface.Interface",
        "._logger.Logger"
    ],
    "/tmp/twisted/twisted/logger/_stdlib.py": [
        "._format.formatEvent",
        "._observer.ILogObserver",
        "._levels.LogLevel",
        "zope.interface.implementer",
        "twisted.python.compat._PY3",
        "logging",
        "twisted.python.compat.unicode",
        "twisted.python.compat.currentframe"
    ],
    "/tmp/twisted/twisted/logger/_util.py": [],
    "/tmp/twisted/twisted/logger/test/__init__.py": [],
    "/tmp/twisted/twisted/logger/test/test_buffer.py": [
        ".._observer.ILogObserver",
        "zope.interface.verify.verifyObject",
        "zope.interface.verify.BrokenMethodImplementation",
        "twisted.trial.unittest",
        ".._buffer.LimitedHistoryLogObserver"
    ],
    "/tmp/twisted/twisted/logger/test/test_file.py": [
        ".._observer.ILogObserver",
        "io.StringIO",
        "zope.interface.verify.verifyObject",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.python.compat.unicode",
        "zope.interface.verify.BrokenMethodImplementation",
        ".._file.FileLogObserver",
        ".._file.textFileLogObserver"
    ],
    "/tmp/twisted/twisted/logger/test/test_filter.py": [
        ".._observer.ILogObserver",
        ".._levels.LogLevel",
        "zope.interface.verify.verifyObject",
        ".._filter.LogLevelFilterPredicate",
        ".._levels.InvalidLogLevelError",
        ".._observer.LogPublisher",
        "zope.interface.verify.BrokenMethodImplementation",
        "twisted.trial.unittest",
        ".._filter.FilteringLogObserver",
        ".._filter.PredicateResult"
    ],
    "/tmp/twisted/twisted/logger/test/test_flatten.py": [
        "itertools.count",
        ".._format.formatEvent",
        ".._flatten.extractField",
        "twisted.trial.unittest",
        "json",
        ".._flatten.KeyFlattener",
        ".._flatten.flattenEvent",
        ".._flatten.aFormatter"
    ],
    "/tmp/twisted/twisted/logger/test/test_format.py": [
        ".._format.formatEvent",
        "twisted.python.test.test_tzhelper.addTZCleanup",
        ".._format.formatWithCall",
        ".._levels.LogLevel",
        "twisted.trial.unittest.SkipTest",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "twisted.python.test.test_tzhelper.mktime",
        "twisted.python.test.test_tzhelper.setTZ",
        ".._format.formatTime",
        "twisted.python.compat.unicode",
        ".._format.formatUnformattableEvent",
        ".._format.formatEventAsClassicLogText"
    ],
    "/tmp/twisted/twisted/logger/test/test_global.py": [
        "..test.test_stdlib.nextLine",
        ".._global.MORE_THAN_ONCE_WARNING",
        ".._global.LogBeginner",
        ".._levels.LogLevel",
        "twisted.trial.unittest",
        "__future__.print_function",
        "io",
        ".._logger.Logger",
        ".._observer.LogPublisher",
        ".._file.textFileLogObserver"
    ],
    "/tmp/twisted/twisted/logger/test/test_io.py": [
        ".._levels.LogLevel",
        "twisted.trial.unittest",
        ".._io.LoggingFile",
        "sys",
        ".._logger.Logger",
        ".._observer.LogPublisher",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/logger/test/test_json.py": [
        "sys",
        ".._flatten.extractField",
        ".._json.eventFromJSON",
        "twisted.python.compat.unicode",
        ".._logger.Logger",
        ".._json.jsonFileLogObserver",
        ".._json.eventAsJSON",
        ".._format.formatEvent",
        ".._observer.ILogObserver",
        ".._levels.LogLevel",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        ".._json.eventsFromJSONLogFile",
        "zope.interface.verify.BrokenMethodImplementation",
        "io.BytesIO",
        ".._observer.LogPublisher",
        ".._json.log",
        ".._global.globalLogPublisher",
        "io.StringIO",
        "zope.interface.verify.verifyObject"
    ],
    "/tmp/twisted/twisted/logger/test/test_legacy.py": [
        ".._format.formatEvent",
        ".._observer.ILogObserver",
        ".._levels.LogLevel",
        "zope.interface.verify.verifyObject",
        "twisted.python.log",
        ".._legacy.LegacyLogObserverWrapper",
        "twisted.python.failure.Failure",
        "logging",
        "twisted.python.context",
        "time.time",
        ".._legacy.publishToNewObserver",
        "zope.interface.verify.BrokenMethodImplementation",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/logger/test/test_levels.py": [
        ".._levels.LogLevel",
        "twisted.trial.unittest",
        ".._levels.InvalidLogLevelError"
    ],
    "/tmp/twisted/twisted/logger/test/test_logger.py": [
        ".._format.formatEvent",
        ".._global.globalLogPublisher",
        ".._levels.LogLevel",
        "twisted.trial.unittest",
        ".._levels.InvalidLogLevelError",
        ".._logger.Logger"
    ],
    "/tmp/twisted/twisted/logger/test/test_observer.py": [
        ".._observer.ILogObserver",
        ".._observer.LogPublisher",
        "twisted.trial.unittest",
        "zope.interface.verify.BrokenMethodImplementation",
        "zope.interface.verify.verifyObject",
        ".._logger.Logger"
    ],
    "/tmp/twisted/twisted/logger/test/test_stdlib.py": [
        ".._observer.ILogObserver",
        ".._levels.LogLevel",
        "zope.interface.verify.verifyObject",
        "twisted.python.compat.currentframe",
        "twisted.python.compat._PY3",
        "io.TextIOWrapper",
        "sys",
        "twisted.python.failure.Failure",
        "logging",
        ".._stdlib.STDLibLogObserver",
        "inspect.getsourcefile",
        "zope.interface.verify.BrokenMethodImplementation",
        "twisted.trial.unittest",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/logger/test/test_util.py": [
        "twisted.trial.unittest",
        ".._util.formatTrace",
        ".._observer.LogPublisher"
    ],
    "/tmp/twisted/twisted/mail/_cred.py": [
        "__future__.division",
        "twisted.mail._except.IllegalClientResponse",
        "twisted.mail.interfaces.IClientAuthentication",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.nativeString",
        "twisted.cred.credentials",
        "hmac"
    ],
    "/tmp/twisted/twisted/mail/_except.py": [
        "twisted.mail.smtp.Address",
        "__future__.absolute_import",
        "__future__.division"
    ],
    "/tmp/twisted/twisted/mail/interfaces.py": [
        "__future__.absolute_import",
        "zope.interface.Interface",
        "__future__.division"
    ],
    "/tmp/twisted/twisted/names/__init__.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "incremental.Version",
        "twisted._version.__version__"
    ],
    "/tmp/twisted/twisted/names/_rfc1982.py": [
        "__future__.division",
        "twisted.python.util.FancyStrMixin",
        "datetime.timedelta",
        "__future__.absolute_import",
        "datetime.datetime",
        "twisted.python.compat.nativeString",
        "calendar"
    ],
    "/tmp/twisted/twisted/names/authority.py": [
        "__future__.division",
        "twisted.internet.defer",
        "time",
        "twisted.python.compat.execfile",
        "__future__.absolute_import",
        "twisted.python.failure",
        "twisted.names.common",
        "twisted.names.dns",
        "twisted.names.error",
        "os"
    ],
    "/tmp/twisted/twisted/names/cache.py": [
        "twisted.internet.reactor",
        "__future__.division",
        "twisted.python.log",
        "twisted.internet.defer",
        "__future__.absolute_import",
        "twisted.python.failure",
        "twisted.names.common",
        "twisted.names.dns"
    ],
    "/tmp/twisted/twisted/names/client.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.names.hosts",
        "twisted.python.log",
        "errno",
        "twisted.names.cache",
        "twisted.python.runtime.platform",
        "twisted.names.dns",
        "warnings",
        "zope.interface.moduleProvides",
        "twisted.internet.interfaces",
        "twisted.python.failure",
        "twisted.python.compat.nativeString",
        "twisted.internet.base.ThreadedResolver",
        "twisted.names.resolve",
        "twisted.python.filepath.FilePath",
        "os",
        "twisted.names.common",
        "twisted.internet.error",
        "twisted.names.root"
    ],
    "/tmp/twisted/twisted/names/common.py": [
        "twisted.names.client",
        "twisted.internet.defer",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.names.error.DNSUnknownError",
        "twisted.names.dns",
        "twisted.names.error.DNSServerError",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.python.failure",
        "twisted.names.error.DNSNotImplementedError",
        "twisted.names.error.DNSFormatError",
        "socket",
        "twisted.names.error.DNSQueryRefusedError",
        "twisted.names.error.DNSNameError",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/names/dns.py": [
        "twisted.internet.reactor",
        "twisted.internet.protocol",
        "itertools.chain",
        "random",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.python.randbytes",
        "struct",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "twisted.names.error.DNSQueryTimeoutError",
        "twisted.python.compat.cmp",
        "zope.interface.implementer",
        "zope.interface.Interface",
        "twisted.python.util",
        "twisted.python.compat.comparable",
        "inspect",
        "socket",
        "twisted.names.error.AuthoritativeDomainError",
        "twisted.python.compat._PY3",
        "twisted.python.log",
        "twisted.python.failure",
        "zope.interface.Attribute",
        "io.BytesIO",
        "twisted.internet.defer",
        "twisted.names.error.DomainError",
        "twisted.internet.error.CannotListenError"
    ],
    "/tmp/twisted/twisted/names/error.py": [
        "__future__.division",
        "twisted.internet.defer.TimeoutError",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/names/hosts.py": [
        "__future__.division",
        "twisted.internet.abstract.isIPAddress",
        "twisted.python.compat.nativeString",
        "twisted.python.filepath.FilePath",
        "__future__.absolute_import",
        "twisted.internet.defer",
        "twisted.python.failure",
        "twisted.names.common",
        "twisted.names.dns"
    ],
    "/tmp/twisted/twisted/names/resolve.py": [
        "__future__.division",
        "twisted.internet.defer",
        "twisted.internet.interfaces",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.names.common",
        "twisted.names.dns",
        "twisted.names.error"
    ],
    "/tmp/twisted/twisted/names/root.py": [
        "twisted.names.client.Resolver",
        "twisted.internet.defer",
        "twisted.python.failure.Failure",
        "twisted.names.dns",
        "twisted.names.error",
        "twisted.names.common"
    ],
    "/tmp/twisted/twisted/names/secondary.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.names.authority.FileAuthority",
        "__future__.division",
        "twisted.internet.task",
        "twisted.names.resolve",
        "twisted.internet.defer",
        "__future__.absolute_import",
        "twisted.python.failure",
        "twisted.names.client",
        "twisted.names.common",
        "twisted.names.dns",
        "twisted.application.service",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/names/server.py": [
        "__future__.division",
        "twisted.names.resolve",
        "twisted.internet.protocol",
        "twisted.python.log",
        "__future__.absolute_import",
        "twisted.names.dns",
        "time"
    ],
    "/tmp/twisted/twisted/names/srvconnect.py": [
        "__future__.division",
        "twisted.python.compat.nativeString",
        "twisted.python.compat.unicode",
        "twisted.internet.interfaces",
        "random",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.names.error.DNSNameError",
        "twisted.names.client",
        "twisted.names.dns",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/names/tap.py": [
        "twisted.names.cache",
        "twisted.names.client",
        "twisted.names.hosts",
        "twisted.application.service",
        "traceback",
        "twisted.names.authority",
        "twisted.names.server",
        "twisted.names.dns",
        "twisted.application.internet",
        "twisted.python.usage",
        "os",
        "twisted.names.secondary"
    ],
    "/tmp/twisted/twisted/names/test/__init__.py": [],
    "/tmp/twisted/twisted/names/test/test_cache.py": [
        "__future__.division",
        "twisted.internet.task",
        "zope.interface.verify.verifyClass",
        "twisted.trial.unittest",
        "twisted.names.cache",
        "__future__.absolute_import",
        "twisted.names.dns",
        "time",
        "twisted.internet.interfaces"
    ],
    "/tmp/twisted/twisted/names/test/test_client.py": [
        "twisted.internet.defer",
        "zope.interface.verify.verifyClass",
        "twisted.internet.task.Clock",
        "twisted.trial.unittest",
        "twisted.names.error.DNSQueryTimeoutError",
        "twisted.names.common.ResolverBase",
        "twisted.names.test.test_util.MemoryReactor",
        "twisted.test.proto_helpers",
        "twisted.names.cache",
        "twisted.internet.test.modulehelpers.AlternateReactor",
        "twisted.python.runtime.platform",
        "twisted.internet.error.ConnectionRefusedError",
        "twisted.names.dns",
        "__future__.division",
        "twisted.python.failure",
        "__future__.absolute_import",
        "twisted.names.test.test_hosts.GoodTempPathMixin",
        "twisted.python.filepath.FilePath",
        "zope.interface.verify.verifyObject",
        "twisted.names.client",
        "twisted.names.hosts",
        "twisted.names.error",
        "twisted.internet.error.CannotListenError",
        "twisted.internet.interfaces.IResolver"
    ],
    "/tmp/twisted/twisted/names/test/test_common.py": [
        "__future__.division",
        "twisted.names.error.DNSFormatError",
        "twisted.names.dns.ENOTIMP",
        "zope.interface.verify.verifyClass",
        "twisted.names.common.ResolverBase",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.names.error.DNSUnknownError",
        "twisted.names.error.DNSQueryRefusedError",
        "__future__.absolute_import",
        "twisted.names.dns.EFORMAT",
        "twisted.python.failure.Failure",
        "twisted.names.error.DNSNameError",
        "twisted.names.error.DNSNotImplementedError",
        "twisted.names.dns.ENAME",
        "twisted.names.error.DNSServerError",
        "twisted.names.dns.Query",
        "twisted.names.dns.ESERVER",
        "twisted.internet.interfaces.IResolver",
        "twisted.names.dns.EREFUSED"
    ],
    "/tmp/twisted/twisted/names/test/test_dns.py": [
        "zope.interface.verify.verifyClass",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "struct",
        "twisted.python.failure.Failure",
        "twisted.python.util.FancyEqMixin",
        "twisted.test.proto_helpers",
        "twisted.names.dns",
        "io.BytesIO",
        "__future__.division",
        "twisted.python.util.FancyStrMixin",
        "twisted.internet.address",
        "twisted.test.testutils.ComparisonTestsMixin",
        "twisted.internet.task",
        "twisted.internet.error.CannotListenError",
        "twisted.internet.error.ConnectionDone"
    ],
    "/tmp/twisted/twisted/names/test/test_examples.py": [
        "__future__.division",
        "twisted.python.filepath.FilePath",
        "twisted.trial.unittest.SkipTest",
        "__future__.absolute_import",
        "sys",
        "twisted.trial.unittest.TestCase",
        "twisted.python.compat.NativeStringIO"
    ],
    "/tmp/twisted/twisted/names/test/test_hosts.py": [
        "twisted.names.dns.A",
        "__future__.division",
        "twisted.names.dns.DomainError",
        "twisted.python.filepath.FilePath",
        "twisted.names.hosts.searchFileForAll",
        "twisted.names.hosts.Resolver",
        "twisted.names.dns.RRHeader",
        "twisted.names.dns.Record_A",
        "twisted.internet.defer.gatherResults",
        "__future__.absolute_import",
        "twisted.trial.unittest.TestCase",
        "twisted.names.hosts.searchFileFor",
        "twisted.names.dns.AAAA",
        "twisted.names.dns.IN",
        "twisted.names.dns.Query",
        "twisted.names.dns.Record_AAAA"
    ],
    "/tmp/twisted/twisted/names/test/test_names.py": [
        "twisted.internet.defer",
        "functools.partial",
        "twisted.internet.reactor",
        "twisted.names.dns.Record_A",
        "twisted.trial.unittest",
        "twisted.names.dns.RRHeader",
        "functools.reduce",
        "__future__.absolute_import",
        "operator",
        "twisted.names.error.DomainError",
        "twisted.names.dns.SOA",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.test.proto_helpers.MemoryReactorClock",
        "twisted.names.secondary.SecondaryAuthorityService",
        "twisted.names.dns",
        "twisted.names.secondary.SecondaryAuthority",
        "io.BytesIO",
        "__future__.division",
        "twisted.names.dns.Record_SOA",
        "twisted.names.client.Resolver",
        "twisted.internet.defer.succeed",
        "twisted.names.authority",
        "copy",
        "socket",
        "twisted.names.server",
        "twisted.names.client",
        "twisted.test.proto_helpers.waitUntilAllDisconnected",
        "twisted.names.common",
        "twisted.internet.error",
        "twisted.names.dns.Message",
        "struct.pack"
    ],
    "/tmp/twisted/twisted/names/test/test_resolve.py": [
        "twisted.trial.unittest.TestCase",
        "twisted.names.resolve.ResolverChain",
        "twisted.names.error.DomainError"
    ],
    "/tmp/twisted/twisted/names/test/test_rfc1982.py": [
        "__future__.division",
        "functools.partial",
        "twisted.trial.unittest",
        "twisted.names._rfc1982.SerialNumber",
        "__future__.absolute_import",
        "datetime.datetime",
        "calendar"
    ],
    "/tmp/twisted/twisted/names/test/test_rootresolve.py": [
        "zope.interface.verify.verifyClass",
        "twisted.names.dns.Record_A",
        "twisted.names.dns.HS",
        "twisted.names.dns.RRHeader",
        "zope.interface.implementer",
        "twisted.names.dns.CNAME",
        "twisted.names.test.test_util.MemoryReactor",
        "twisted.names.dns.Record_NS",
        "twisted.names.dns.Name",
        "twisted.names.dns.ENAME",
        "twisted.trial.unittest.TestCase",
        "twisted.names.root.Resolver",
        "twisted.python.log.msg",
        "twisted.names.dns.NS",
        "twisted.names.dns.A",
        "twisted.names.dns.Record_CNAME",
        "twisted.internet.defer.TimeoutError",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.trial.util",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.names.dns.IN",
        "twisted.internet.interfaces.IResolverSimple",
        "twisted.internet.defer.gatherResults",
        "twisted.names.dns.OK",
        "twisted.names.error.ResolverError",
        "twisted.names.error.DNSNameError",
        "twisted.names.client",
        "twisted.names.dns.Query",
        "twisted.names.dns.Message",
        "twisted.names.root"
    ],
    "/tmp/twisted/twisted/names/test/test_server.py": [
        "twisted.internet.defer",
        "zope.interface.verify.verifyClass",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.log",
        "twisted.names.dns",
        "twisted.internet.interfaces.IProtocolFactory",
        "__future__.division",
        "twisted.names.error",
        "twisted.python.failure",
        "twisted.names.resolve",
        "twisted.names.server"
    ],
    "/tmp/twisted/twisted/names/test/test_srvconnect.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "twisted.python.compat.nativeString",
        "twisted.internet.defer",
        "twisted.internet.interfaces.IConnector",
        "twisted.names.srvconnect",
        "zope.interface.verify.verifyObject",
        "random",
        "__future__.absolute_import",
        "twisted.names.common.ResolverBase",
        "twisted.names.error.DNSNameError",
        "twisted.names.client",
        "twisted.names.dns",
        "twisted.internet.error.DNSLookupError",
        "twisted.internet.error.ServiceNameUnknownError",
        "twisted.test.proto_helpers.MemoryReactor",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/names/test/test_tap.py": [
        "twisted.internet.reactor",
        "twisted.names.dns.PORT",
        "twisted.python.usage.UsageError",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.names.tap._buildResolvers",
        "twisted.python.compat._PY3",
        "twisted.internet.base.ThreadedResolver",
        "twisted.names.resolve.ResolverChain",
        "twisted.python.runtime.platform",
        "twisted.names.secondary.SecondaryAuthorityService",
        "twisted.names.client.Resolver",
        "twisted.names.tap.Options"
    ],
    "/tmp/twisted/twisted/names/test/test_util.py": [
        "twisted.internet.address.IPv4Address",
        "__future__.division",
        "random.randrange",
        "zope.interface.verify.verifyClass",
        "twisted.internet.task.Clock",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.interfaces.IReactorUDP",
        "twisted.internet.defer.succeed",
        "twisted.internet.interfaces.IUDPTransport"
    ],
    "/tmp/twisted/twisted/pair/__init__.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "incremental.Version",
        "twisted._version.__version__"
    ],
    "/tmp/twisted/twisted/pair/ethernet.py": [
        "twisted.internet.protocol",
        "struct",
        "zope.interface.implementer",
        "twisted.pair.raw",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/pair/ip.py": [
        "twisted.internet.protocol",
        "struct",
        "zope.interface.implementer",
        "twisted.pair.raw",
        "socket"
    ],
    "/tmp/twisted/twisted/pair/raw.py": [
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/pair/rawudp.py": [
        "twisted.internet.protocol",
        "struct",
        "zope.interface.implementer",
        "twisted.pair.raw"
    ],
    "/tmp/twisted/twisted/pair/test/__init__.py": [],
    "/tmp/twisted/twisted/pair/test/test_ethernet.py": [
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "twisted.pair.raw",
        "twisted.python.components",
        "twisted.pair.ethernet"
    ],
    "/tmp/twisted/twisted/pair/test/test_ip.py": [
        "twisted.pair.ip",
        "twisted.trial.unittest",
        "twisted.pair.raw",
        "twisted.python.components",
        "zope.interface"
    ],
    "/tmp/twisted/twisted/pair/test/test_rawudp.py": [
        "twisted.pair.rawudp",
        "twisted.trial.unittest",
        "twisted.internet.protocol"
    ],
    "/tmp/twisted/twisted/pair/test/test_tuntap.py": [
        "twisted.python.reflect.fullyQualifiedName",
        "twisted.internet.interfaces.IListeningPort",
        "random.randrange",
        "errno.EPERM",
        "collections.deque",
        "twisted.internet.interfaces.IReactorFDSet",
        "twisted.trial.unittest.SkipTest",
        "twisted.pair.testing._H",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.pair.tuntap._IInputOutputSystem",
        "twisted.pair.tuntap._IFNAMSIZ",
        "twisted.pair.ip.IPProtocol",
        "errno.EAGAIN",
        "twisted.python.compat.iterbytes",
        "twisted.internet.protocol.AbstractDatagramProtocol",
        "twisted.pair.testing._udp",
        "errno.EBADF",
        "twisted.pair.raw.IRawPacketProtocol",
        "struct",
        "twisted.pair.testing._IPv4",
        "twisted.python.log.removeObserver",
        "twisted.python.reflect.namedAny",
        "signal.SIGINT",
        "errno.EWOULDBLOCK",
        "twisted.pair.testing.Tunnel",
        "twisted.python.compat.intToBytes",
        "zope.interface.Interface",
        "twisted.python.reflect.ObjectNotFound",
        "errno.EINVAL",
        "twisted.pair.ethernet.EthernetProtocol",
        "twisted.pair.testing._ethernet",
        "twisted.pair.testing.MemoryIOSystem",
        "__future__.division",
        "twisted.pair.tuntap.TunnelAddress",
        "twisted.pair.tuntap.TunnelFlags",
        "twisted.trial.unittest.SynchronousTestCase",
        "zope.interface.implementer",
        "twisted.pair.tuntap.TuntapPort",
        "errno.ENOENT",
        "twisted.pair.rawudp.RawUDPProtocol",
        "twisted.internet.protocol.DatagramProtocol",
        "twisted.pair.testing._PI_SIZE",
        "twisted.python.log.textFromEventDict",
        "itertools.cycle",
        "twisted.internet.error.CannotListenError",
        "socket",
        "twisted.pair.testing._ip",
        "twisted.python.log.addObserver",
        "zope.interface.verify.verifyObject",
        "twisted.pair.tuntap._TUNSETIFF",
        "twisted.pair.tuntap._RealSystem",
        "twisted.internet.task.Clock",
        "twisted.internet.protocol.Factory",
        "twisted.internet.interfaces.IAddress",
        "os",
        "errno.ENODEV"
    ],
    "/tmp/twisted/twisted/pair/testing.py": [
        "errno.EPERM",
        "zope.interface.implementer",
        "twisted.pair.tuntap._IInputOutputSystem",
        "twisted.pair.tuntap._IFNAMSIZ",
        "errno.EAGAIN",
        "twisted.pair.ip.IPProtocol",
        "errno.EBADF",
        "functools.wraps",
        "struct",
        "errno.EWOULDBLOCK",
        "twisted.python.compat.nativeString",
        "errno.EINVAL",
        "twisted.pair.ethernet.EthernetProtocol",
        "collections.deque",
        "errno.ENOBUFS",
        "socket",
        "errno.EINTR",
        "twisted.pair.rawudp.RawUDPProtocol",
        "twisted.pair.tuntap._TUNSETIFF",
        "errno.ENOSYS",
        "twisted.internet.protocol.DatagramProtocol",
        "twisted.pair.tuntap.TunnelFlags"
    ],
    "/tmp/twisted/twisted/pair/tuntap.py": [
        "twisted.internet.defer",
        "twisted.python.reflect.fullyQualifiedName",
        "twisted.internet.abstract",
        "zope.interface.implementer",
        "zope.interface.Attribute",
        "twisted.pair.raw",
        "incremental.Version",
        "struct",
        "twisted.python.util.FancyEqMixin",
        "errno",
        "constantly.FlagConstant",
        "zope.interface.Interface",
        "fcntl",
        "collections.namedtuple",
        "twisted.python.util.FancyStrMixin",
        "warnings",
        "twisted.internet.interfaces",
        "constantly.Flags",
        "twisted.python.log",
        "twisted.internet.task",
        "twisted.python.deprecate.deprecated",
        "twisted.internet.error",
        "twisted.pair.ethernet",
        "os"
    ],
    "/tmp/twisted/twisted/persisted/__init__.py": [],
    "/tmp/twisted/twisted/persisted/aot.py": [
        "copyreg",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.python.compat._constructMethod",
        "twisted.python.log",
        "re",
        "twisted.persisted.crefutil",
        "tokenize.tokenize",
        "__future__.division",
        "twisted.python.reflect",
        "types"
    ],
    "/tmp/twisted/twisted/persisted/crefutil.py": [
        "traceback",
        "__future__.division",
        "twisted.python.log",
        "twisted.python.compat.xrange",
        "__future__.absolute_import",
        "twisted.python.reflect",
        "twisted.internet.defer.Deferred",
        "twisted.python.compat._constructMethod"
    ],
    "/tmp/twisted/twisted/persisted/dirdbm.py": [
        "twisted.python.filepath.FilePath",
        "os",
        "glob",
        "base64",
        "pickle"
    ],
    "/tmp/twisted/twisted/persisted/sob.py": [
        "Crypto.Cipher.AES",
        "Crypto.Cipher.AES",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.log",
        "zope.interface.Interface",
        "io.BytesIO",
        "twisted.persisted.styles",
        "__future__.division",
        "warnings",
        "sys",
        "hashlib.md5",
        "os",
        "twisted.python.runtime",
        "pickle"
    ],
    "/tmp/twisted/twisted/persisted/styles.py": [
        "twisted.python.reflect.namedAny",
        "gc",
        "copyreg",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "cStringIO.OutputType",
        "twisted.python.log",
        "cStringIO.InputType",
        "__future__.division",
        "io.StringIO",
        "inspect",
        "twisted.python.reflect",
        "copy",
        "types",
        "twisted.python.compat._PYPY",
        "pickle"
    ],
    "/tmp/twisted/twisted/persisted/test/__init__.py": [],
    "/tmp/twisted/twisted/persisted/test/test_styles.py": [
        "cPickle",
        "cPickle",
        "cPickle",
        "twisted.persisted.styles.unpickleMethod",
        "twisted.trial.unittest",
        "twisted.persisted.styles._UniversalPicklingError",
        "pickle"
    ],
    "/tmp/twisted/twisted/plugin.py": [
        "cPickle",
        "pickle",
        "twisted.plugins",
        "twisted.python.reflect.namedAny",
        "__future__.absolute_import",
        "twisted.python.log",
        "zope.interface.Interface",
        "__future__.division",
        "sys",
        "twisted.python.modules.getModule",
        "twisted.python.compat.iteritems",
        "zope.interface.providedBy",
        "twisted.python.components.getAdapterFactory",
        "os"
    ],
    "/tmp/twisted/twisted/plugins/__init__.py": [
        "twisted.plugin.pluginPackagePaths"
    ],
    "/tmp/twisted/twisted/plugins/cred_anonymous.py": [
        "__future__.division",
        "twisted.plugin",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.cred.checkers.AllowAnonymousAccess",
        "twisted.cred.credentials.IAnonymous",
        "twisted.cred.strcred.ICheckerFactory"
    ],
    "/tmp/twisted/twisted/plugins/cred_file.py": [
        "twisted.python.filepath.FilePath",
        "__future__.division",
        "twisted.plugin",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.cred.credentials.IUsernamePassword",
        "sys",
        "twisted.cred.checkers.FilePasswordDB",
        "twisted.cred.credentials.IUsernameHashedPassword",
        "twisted.cred.strcred.ICheckerFactory"
    ],
    "/tmp/twisted/twisted/plugins/cred_memory.py": [
        "twisted.cred.strcred.InvalidAuthArgumentString",
        "__future__.division",
        "twisted.plugin",
        "twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse",
        "__future__.absolute_import",
        "zope.interface.implementer",
        "twisted.cred.credentials.IUsernameHashedPassword",
        "twisted.cred.credentials.IUsernamePassword",
        "twisted.cred.strcred.ICheckerFactory"
    ],
    "/tmp/twisted/twisted/plugins/cred_sshkeys.py": [
        "__future__.division",
        "twisted.plugin",
        "twisted.conch.checkers.UNIXAuthorizedKeysFiles",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.conch.checkers.SSHPublicKeyChecker",
        "twisted.cred.strcred.ICheckerFactory"
    ],
    "/tmp/twisted/twisted/plugins/cred_unix.py": [
        "__future__.division",
        "twisted.cred.checkers.ICredentialsChecker",
        "twisted.plugin",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.cred.credentials.IUsernamePassword",
        "twisted.internet.defer",
        "twisted.cred.error.UnauthorizedLogin",
        "twisted.cred.strcred.ICheckerFactory"
    ],
    "/tmp/twisted/twisted/plugins/twisted_core.py": [
        "__future__.division",
        "__future__.absolute_import",
        "twisted.internet.endpoints._SystemdParser",
        "twisted.protocols.haproxy._parser.HAProxyServerParser",
        "twisted.internet.endpoints._TCP6ServerParser",
        "twisted.internet.endpoints._StandardIOParser",
        "twisted.internet.endpoints._TLSClientEndpointParser"
    ],
    "/tmp/twisted/twisted/plugins/twisted_reactors.py": [
        "__future__.division",
        "twisted.application.reactors.Reactor",
        "twisted.python.compat._PY3",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/plugins/twisted_trial.py": [
        "__future__.division",
        "twisted.plugin.IPlugin",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.trial.itrial.IReporter"
    ],
    "/tmp/twisted/twisted/plugins/twisted_web.py": [
        "twisted.application.service.ServiceMaker"
    ],
    "/tmp/twisted/twisted/positioning/__init__.py": [],
    "/tmp/twisted/twisted/positioning/_sentence.py": [
        "__future__.division",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/positioning/base.py": [
        "functools.partial",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.util.FancyEqMixin",
        "twisted.positioning.ipositioning",
        "operator.attrgetter",
        "__future__.division",
        "constantly.NamedConstant",
        "constantly.Names"
    ],
    "/tmp/twisted/twisted/positioning/ipositioning.py": [
        "__future__.division",
        "zope.interface.Attribute",
        "__future__.absolute_import",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/positioning/nmea.py": [
        "twisted.python.compat.izip",
        "twisted.python.compat.reduce",
        "zope.interface.implementer",
        "twisted.python.compat.iterbytes",
        "datetime",
        "operator",
        "twisted.positioning.ipositioning",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "twisted.positioning.base.Angles",
        "twisted.protocols.basic.LineReceiver",
        "twisted.positioning._sentence",
        "constantly.ValueConstant",
        "twisted.positioning.base",
        "constantly.Values",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/positioning/test/__init__.py": [],
    "/tmp/twisted/twisted/positioning/test/receiver.py": [
        "__future__.division",
        "twisted.positioning.base",
        "twisted.positioning.ipositioning",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/positioning/test/test_base.py": [
        "twisted.positioning.ipositioning.IPositioningBeacon",
        "zope.interface.verify",
        "twisted.trial.unittest.TestCase",
        "twisted.positioning.base",
        "twisted.positioning.base.Angles",
        "twisted.positioning.base.Directions"
    ],
    "/tmp/twisted/twisted/positioning/test/test_nmea.py": [
        "zope.interface.implementer",
        "datetime",
        "twisted.positioning.nmea",
        "twisted.positioning.ipositioning",
        "twisted.trial.unittest.TestCase",
        "operator.attrgetter",
        "twisted.python.compat.intToBytes",
        "twisted.positioning.base.Angles",
        "__future__.division",
        "twisted.positioning.test.receiver.MockPositioningReceiver",
        "twisted.positioning.base",
        "__future__.absolute_import",
        "twisted.python.compat.iteritems"
    ],
    "/tmp/twisted/twisted/positioning/test/test_sentence.py": [
        "__future__.division",
        "twisted.positioning._sentence",
        "__future__.absolute_import",
        "twisted.trial.unittest.TestCase",
        "itertools"
    ],
    "/tmp/twisted/twisted/protocols/__init__.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "incremental.Version"
    ],
    "/tmp/twisted/twisted/protocols/amp.py": [
        "functools.partial",
        "__future__.absolute_import",
        "datetime",
        "twisted.python.compat.unicode",
        "twisted.internet.error.ConnectionClosed",
        "twisted.python.failure.Failure",
        "twisted.python.compat.nativeString",
        "io.BytesIO",
        "__future__.division",
        "twisted.python.compat.iteritems",
        "decimal",
        "twisted.internet.error.ConnectionLost",
        "twisted.protocols.basic.Int16StringReceiver",
        "zope.interface.implementer",
        "twisted.internet.defer.fail",
        "twisted.python._tzhelper.FixedOffsetTimeZone",
        "twisted.python.compat.intToBytes",
        "twisted.internet.main.CONNECTION_LOST",
        "zope.interface.Interface",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.maybeDeferred",
        "twisted.internet.ssl.Certificate",
        "twisted.internet.interfaces.IFileDescriptorReceiver",
        "twisted.python.compat._PY3",
        "twisted.internet.ssl.CertificateOptions",
        "twisted.python.log",
        "twisted.python.compat.long",
        "itertools.count",
        "twisted.python._tzhelper.UTC",
        "struct.pack",
        "twisted.internet.ssl.DN",
        "twisted.internet.error.PeerVerifyError",
        "twisted.python.filepath",
        "twisted.protocols.basic.StatefulStringProtocol",
        "warnings",
        "twisted.python.reflect.accumulateClassDict",
        "twisted.internet.ssl.KeyPair",
        "types"
    ],
    "/tmp/twisted/twisted/protocols/basic.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.log",
        "re",
        "math",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.python.compat._PY3",
        "struct.unpack",
        "struct.calcsize",
        "io.BytesIO",
        "twisted.internet.error",
        "struct.pack"
    ],
    "/tmp/twisted/twisted/protocols/dict.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.python.log",
        "twisted.protocols.basic",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/__init__.py": [
        "._wrapper.proxyEndpoint"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/_exceptions.py": [
        "twisted.python.compat",
        "sys",
        "contextlib"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/_info.py": [
        "zope.interface.implementer",
        "._interfaces.IProxyInfo"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/_interfaces.py": [
        "zope.interface"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/_parser.py": [
        "twisted.internet.endpoints.quoteStringArgument",
        ".proxyEndpoint",
        "twisted.plugin.IPlugin",
        "twisted.internet.endpoints.IStreamServerEndpointStringParser",
        "zope.interface.implementer",
        "twisted.internet.endpoints.serverFromString",
        "twisted.python.compat.iteritems"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/_v1parser.py": [
        "._interfaces",
        "._exceptions.InvalidProxyHeader",
        "zope.interface.implementer",
        "twisted.internet.address",
        "._exceptions.convertError",
        "._exceptions.MissingAddressData",
        "._exceptions.InvalidNetworkProtocol",
        "._info"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/_v2parser.py": [
        "twisted.python.compat",
        "._interfaces",
        "._exceptions.InvalidProxyHeader",
        "struct",
        "binascii",
        "zope.interface.implementer",
        "constantly.ValueConstant",
        "constantly.Values",
        "twisted.internet.address",
        "._exceptions.convertError",
        "._exceptions.MissingAddressData",
        "._exceptions.InvalidNetworkProtocol",
        "._info"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/_wrapper.py": [
        "twisted.internet.endpoints._WrapperServerEndpoint",
        "._exceptions.InvalidProxyHeader",
        "twisted.internet.interfaces",
        "._v2parser.V2Parser",
        "twisted.protocols.policies",
        "._v1parser.V1Parser"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/test/__init__.py": [],
    "/tmp/twisted/twisted/protocols/haproxy/test/test_parser.py": [
        "twisted.internet.endpoints._WrapperServerEndpoint",
        "twisted.internet.endpoints.serverFromString",
        ".._parser.unparseEndpoint",
        "twisted.internet.endpoints._parse",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.internet.endpoints.TCP4ServerEndpoint",
        "twisted.internet.endpoints.UNIXServerEndpoint",
        "twisted.internet.endpoints.TCP6ServerEndpoint",
        "twisted.test.proto_helpers.MemoryReactor",
        ".._wrapper.HAProxyWrappingFactory"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/test/test_v1parser.py": [
        ".._exceptions.InvalidProxyHeader",
        "twisted.trial.unittest",
        ".._v1parser",
        "twisted.internet.address",
        ".._exceptions.MissingAddressData",
        ".._exceptions.InvalidNetworkProtocol"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/test/test_v2parser.py": [
        ".._exceptions.InvalidProxyHeader",
        "twisted.trial.unittest",
        ".._v2parser",
        "twisted.internet.address"
    ],
    "/tmp/twisted/twisted/protocols/haproxy/test/test_wrapper.py": [
        "twisted.internet.protocol.Protocol",
        "twisted.trial.unittest",
        "twisted.internet.protocol.Factory",
        "twisted.internet.address",
        ".._wrapper.HAProxyWrappingFactory",
        "twisted.test.proto_helpers.StringTransportWithDisconnection"
    ],
    "/tmp/twisted/twisted/protocols/htb.py": [
        "twisted.protocols.pcp",
        "zope.interface.implementer",
        "time.time",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/protocols/loopback.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.task.deferLater",
        "tempfile",
        "twisted.internet.main",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.python.failure",
        "twisted.protocols.policies",
        "twisted.internet.interfaces.IAddress"
    ],
    "/tmp/twisted/twisted/protocols/memcache.py": [
        "__future__.division",
        "collections.deque",
        "twisted.internet.defer.TimeoutError",
        "twisted.protocols.basic.LineReceiver",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.internet.defer.Deferred",
        "twisted.python.compat.intToBytes",
        "twisted.python.compat.nativeString",
        "twisted.python.compat.iteritems",
        "twisted.internet.defer.fail",
        "twisted.protocols.policies.TimeoutMixin",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/protocols/pcp.py": [
        "twisted.internet.interfaces",
        "zope.interface.implementer"
    ],
    "/tmp/twisted/twisted/protocols/policies.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "__future__.absolute_import",
        "twisted.python.log",
        "__future__.division",
        "zope.interface.directlyProvides",
        "sys",
        "zope.interface.providedBy",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.protocol.ServerFactory",
        "twisted.internet.interfaces.ILoggingContext",
        "twisted.internet.protocol.ClientFactory",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/protocols/portforward.py": [
        "twisted.internet.reactor",
        "twisted.internet.protocol",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/protocols/postfix.py": [
        "twisted.internet.defer",
        "twisted.python.compat.networkString",
        "urllib.parse.quote",
        "twisted.internet.protocol",
        "twisted.python.log",
        "collections.UserDict",
        "sys",
        "urllib.parse.unquote",
        "twisted.python.compat.intToBytes",
        "twisted.protocols.policies",
        "twisted.protocols.basic",
        "twisted.python.compat.nativeString"
    ],
    "/tmp/twisted/twisted/protocols/sip.py": [
        "twisted.internet.defer",
        "collections.OrderedDict",
        "twisted.internet.reactor",
        "zope.interface.implementer",
        "twisted.python.compat.unicode",
        "twisted.internet.protocol",
        "twisted.python.log",
        "warnings",
        "twisted.protocols.basic",
        "twisted.cred",
        "twisted.python.compat._PY3",
        "zope.interface.Interface",
        "twisted.python.compat.iteritems",
        "socket",
        "time"
    ],
    "/tmp/twisted/twisted/protocols/socks.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "socket",
        "struct",
        "twisted.python.log",
        "time",
        "string",
        "twisted.internet.reactor"
    ],
    "/tmp/twisted/twisted/protocols/stateful.py": [
        "twisted.internet.protocol",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/protocols/telnet.py": [
        "twisted.internet.protocol",
        "twisted.python.compat.networkString",
        "twisted.python.compat.iterbytes",
        "twisted.copyright",
        "twisted.python.compat._bytesChr",
        "io.BytesIO",
        "__future__.division",
        "warnings",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/protocols/test/__init__.py": [],
    "/tmp/twisted/twisted/protocols/test/test_basic.py": [
        "twisted.internet.protocol",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "struct",
        "twisted.internet.interfaces.IProducer",
        "twisted.test.proto_helpers",
        "twisted.protocols.basic",
        "io.BytesIO",
        "__future__.division",
        "sys",
        "twisted.python.compat.iterbytes",
        "twisted.python.reflect",
        "twisted.internet.task",
        "zope.interface.verify.verifyObject",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/protocols/test/test_tls.py": [
        "twisted.internet.error.ConnectionDone",
        "twisted.protocols.tls.TLSMemoryBIOProtocol",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.test.ssl_helpers.ServerTLSContext",
        "twisted.internet.interfaces.IHandshakeListener",
        "twisted.internet.interfaces.IOpenSSLServerConnectionCreator",
        "twisted.internet.interfaces.ISystemHandle",
        "twisted.test.iosim.connectedServerAndClient",
        "twisted.test.test_tcp.ConnectionLostNotifyingProtocol",
        "OpenSSL.SSL.WantReadError",
        "twisted.internet.ssl.optionsForClientTLS",
        "twisted.protocols.loopback.collapsingPumpPolicy",
        "twisted.internet.task.TaskStopped",
        "OpenSSL.crypto.X509Type",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.python.compat.intToBytes",
        "twisted.internet.interfaces.IPushProducer",
        "zope.interface.Interface",
        "twisted.internet.protocol.ClientFactory",
        "twisted.protocols.tls.TLSMemoryBIOFactory",
        "__future__.division",
        "twisted.internet.interfaces.IOpenSSLClientConnectionCreator",
        "twisted.trial.unittest.SynchronousTestCase",
        "zope.interface.directlyProvides",
        "OpenSSL.SSL.ConnectionType",
        "twisted.internet.defer.Deferred",
        "twisted.test.ssl_helpers.certPath",
        "twisted.python.compat.iterbytes",
        "OpenSSL.SSL.Context",
        "OpenSSL.SSL.Error",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.protocols.loopback.loopbackAsync",
        "twisted.internet.ssl.PrivateCertificate",
        "twisted.protocols.tls._PullToPush",
        "twisted.python.log",
        "twisted.internet.defer.gatherResults",
        "twisted.internet.interfaces.ISSLTransport",
        "twisted.internet.protocol.Protocol",
        "twisted.test.ssl_helpers.ClientTLSContext",
        "twisted.python.filepath.FilePath",
        "zope.interface.verify.verifyObject",
        "twisted.internet.protocol.ServerFactory",
        "twisted.test.test_sslverify.certificatesForAuthorityAndServer",
        "twisted.internet.error.ConnectionLost",
        "twisted.protocols.tls._ProducerMembrane",
        "twisted.internet.interfaces.IProtocolNegotiationFactory"
    ],
    "/tmp/twisted/twisted/protocols/tls.py": [
        "OpenSSL.SSL.ZeroReturnError",
        "twisted.internet.interfaces.IHandshakeListener",
        "twisted.protocols.policies.WrappingFactory",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.internet.interfaces.IOpenSSLServerConnectionCreator",
        "twisted.internet.interfaces.ISystemHandle",
        "twisted.internet._sslverify._setAcceptableProtocols",
        "OpenSSL.SSL.WantReadError",
        "twisted.python.reflect.safe_str",
        "twisted.python.failure.Failure",
        "twisted.protocols.policies.ProtocolWrapper",
        "twisted.internet.main.CONNECTION_LOST",
        "OpenSSL.SSL.TLSv1_METHOD",
        "__future__.division",
        "twisted.internet.interfaces.IOpenSSLClientConnectionCreator",
        "zope.interface.directlyProvides",
        "twisted.internet.task.cooperate",
        "OpenSSL.SSL.Connection",
        "OpenSSL.SSL.Context",
        "OpenSSL.SSL.Error",
        "zope.interface.providedBy",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.interfaces.IPushProducer",
        "twisted.python.log",
        "twisted.internet.interfaces.INegotiated",
        "twisted.internet.interfaces.ILoggingContext",
        "twisted.internet.interfaces.IProtocolNegotiationFactory"
    ],
    "/tmp/twisted/twisted/protocols/wire.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "struct",
        "twisted.internet.interfaces",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "time"
    ],
    "/tmp/twisted/twisted/python/__init__.py": [
        "__future__.division",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/python/_appdirs.py": [
        "__future__.division",
        "inspect",
        "__future__.absolute_import",
        "appdirs",
        "twisted.python.compat.currentframe"
    ],
    "/tmp/twisted/twisted/python/_inotify.py": [
        "ctypes.util"
    ],
    "/tmp/twisted/twisted/python/_oldstyle.py": [
        "twisted.python.reflect.fullyQualifiedName",
        "__future__.division",
        "twisted.python.util._replaceIf",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat._shouldEnableNewStyle",
        "types"
    ],
    "/tmp/twisted/twisted/python/_setup.py": [
        "setuptools.command.build_py.build_py",
        "distutils.command.build_ext",
        "platform",
        "distutils.errors.CompileError",
        "setuptools.Extension",
        "sys",
        "setuptools.find_packages",
        "os"
    ],
    "/tmp/twisted/twisted/python/_shellcomp.py": [
        "twisted.python.util",
        "inspect",
        "twisted.python.reflect",
        "itertools",
        "twisted.python.usage",
        "getopt"
    ],
    "/tmp/twisted/twisted/python/_textattributes.py": [
        "twisted.python.util.FancyEqMixin",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/python/_tzhelper.py": [
        "datetime.timedelta",
        "datetime.datetime",
        "datetime.tzinfo"
    ],
    "/tmp/twisted/twisted/python/_url.py": [
        "unicodedata.normalize",
        "urllib.parse.unquote_to_bytes",
        "urllib.parse.urlsplit",
        "urllib.parse.urlunsplit",
        "urllib.parse.quote"
    ],
    "/tmp/twisted/twisted/python/compat.py": [
        "StringIO.StringIO",
        "cStringIO.OutputType",
        "codecs",
        "cStringIO.InputType",
        "collections.OrderedDict",
        "io.IOBase",
        "itertools.izip",
        "__future__.absolute_import",
        "incremental.Version",
        "cgi.escape",
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "struct",
        "platform",
        "urlparse",
        "base64.decodestring",
        "__future__.division",
        "urllib.unquote",
        "string",
        "inspect",
        "sys",
        "io.BytesIO",
        "cookielib",
        "socket",
        "types.MethodType",
        "io.TextIOBase",
        "urllib.quote",
        "base64.encodestring",
        "os"
    ],
    "/tmp/twisted/twisted/python/components.py": [
        "pprint.pprint",
        "__future__.absolute_import",
        "zope.interface.adapter.AdapterRegistry",
        "__future__.print_function",
        "__future__.division",
        "twisted.python.compat.NativeStringIO",
        "zope.interface.interface",
        "twisted.python.reflect",
        "twisted.python._oldstyle._oldStyle",
        "zope.interface.declarations"
    ],
    "/tmp/twisted/twisted/python/constants.py": [
        "__future__.division",
        "constantly.FlagConstant",
        "constantly.ValueConstant",
        "constantly.Values",
        "constantly.Names",
        "constantly.Flags",
        "constantly.NamedConstant",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/python/context.py": [
        "__future__.division",
        "__future__.absolute_import",
        "threading.local"
    ],
    "/tmp/twisted/twisted/python/deprecate.py": [
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "functools.wraps",
        "__future__.division",
        "incremental.getVersionString",
        "inspect",
        "sys",
        "warnings.warn_explicit",
        "dis.findlinestarts",
        "warnings.warn"
    ],
    "/tmp/twisted/twisted/python/failure.py": [
        "twisted.python.log",
        "pdb",
        "__future__.absolute_import",
        "__future__.division",
        "inspect",
        "twisted.python.compat._PY3",
        "sys",
        "inspect.getmro",
        "__future__.print_function",
        "twisted.python.reflect",
        "twisted.python.compat.NativeStringIO",
        "linecache",
        "opcode"
    ],
    "/tmp/twisted/twisted/python/fakepwd.py": [
        "__future__.division",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/python/filepath.py": [
        "glob",
        "os.path.exists",
        "os.path.splitext",
        "os.path.basename",
        "os.listdir",
        "__future__.absolute_import",
        "incremental.Version",
        "twisted.python.compat.unicode",
        "stat.S_IXOTH",
        "stat.S_ISSOCK",
        "os.path.dirname",
        "stat.S_IMODE",
        "stat.S_IXUSR",
        "stat.S_IRUSR",
        "stat.S_IWOTH",
        "stat.S_IWUSR",
        "twisted.python.compat.comparable",
        "errno",
        "base64",
        "twisted.python.runtime.platform",
        "os.path.join",
        "zope.interface.Interface",
        "stat.S_IRGRP",
        "stat.S_IROTH",
        "__future__.division",
        "os.stat",
        "os.path.abspath",
        "stat.S_ISREG",
        "zope.interface.implementer",
        "sys",
        "twisted.python.util.FancyEqMixin",
        "stat.S_ISDIR",
        "twisted.python.win32.O_BINARY",
        "os.utime",
        "hashlib.sha1",
        "twisted.python.win32.ERROR_FILE_NOT_FOUND",
        "stat.S_IXGRP",
        "zope.interface.Attribute",
        "stat.S_ISBLK",
        "os.path.isabs",
        "os.path.normpath",
        "stat.S_IWGRP",
        "twisted.python.win32.ERROR_DIRECTORY",
        "twisted.python.win32.ERROR_PATH_NOT_FOUND",
        "twisted.python.win32.ERROR_INVALID_NAME",
        "twisted.python.deprecate.deprecated",
        "twisted.python.win32.WindowsError",
        "os",
        "twisted.python.compat.cmp"
    ],
    "/tmp/twisted/twisted/python/htmlizer.py": [
        "sys",
        "cgi",
        "keyword",
        ".reflect",
        "tokenize"
    ],
    "/tmp/twisted/twisted/python/lockfile.py": [
        "os.rename",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "errno",
        "win32api.OpenProcess",
        "twisted.python.runtime.platform",
        "__future__.division",
        "pywintypes",
        "time.time",
        "os"
    ],
    "/tmp/twisted/twisted/python/log.py": [
        "twisted.logger._global.LogBeginner",
        "twisted.logger.LogPublisher",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "datetime.datetime",
        "sys",
        "twisted.python.compat.unicode",
        "twisted.logger.LoggingFile",
        "twisted.logger._legacy.publishToNewObserver",
        "zope.interface.Interface",
        "__future__.division",
        "twisted.logger.LogLevel",
        "warnings",
        "twisted.logger.Logger",
        "twisted.python.util",
        "twisted.python.failure",
        "twisted.logger.STDLibLogObserver",
        "twisted.logger.globalLogPublisher",
        "twisted.logger.LegacyLogObserverWrapper",
        "twisted.python._oldstyle._oldStyle",
        "twisted.python.threadable.synchronize",
        "twisted.python.reflect",
        "twisted.python.context",
        "time",
        "twisted.logger.globalLogBeginner"
    ],
    "/tmp/twisted/twisted/python/logfile.py": [
        "__future__.division",
        "stat",
        "glob",
        "twisted.python.threadable",
        "__future__.absolute_import",
        "time",
        "os"
    ],
    "/tmp/twisted/twisted/python/modules.py": [
        "twisted.python.reflect.namedAny",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "os.path.dirname",
        "twisted.python.zippath.ZipArchive",
        "twisted.python.compat.nativeString",
        "zope.interface.Interface",
        "__future__.division",
        "zipimport",
        "os.path.split",
        "warnings",
        "inspect",
        "sys",
        "twisted.python.filepath.UnlistableError",
        "twisted.python.components.registerAdapter",
        "__future__.print_function",
        "twisted.python.filepath.FilePath"
    ],
    "/tmp/twisted/twisted/python/monkey.py": [
        "__future__.division",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/python/procutils.py": [
        "__future__.division",
        "os",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/python/randbytes.py": [
        "__future__.division",
        "string",
        "warnings",
        "random",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "os"
    ],
    "/tmp/twisted/twisted/python/reflect.py": [
        "twisted.python.deprecate._fullyQualifiedName",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.reraise",
        "twisted.python.compat",
        "collections.deque",
        "re",
        "__future__.print_function",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "sys",
        "twisted.python.compat.NativeStringIO",
        "types",
        "os",
        "traceback",
        "weakref",
        "pickle"
    ],
    "/tmp/twisted/twisted/python/roots.py": [
        "__future__.division",
        "__future__.absolute_import",
        "twisted.python.reflect"
    ],
    "/tmp/twisted/twisted/python/runtime.py": [
        "twisted.python.filepath.FilePath",
        "threading",
        "twisted.python._inotify.INotifyError",
        "twisted.python._inotify.init",
        "__future__.division",
        "warnings",
        "__future__.absolute_import",
        "sys",
        "time",
        "os"
    ],
    "/tmp/twisted/twisted/python/sendmsg.py": [
        "__future__.division",
        "collections.namedtuple",
        "socket.SCM_RIGHTS",
        "twisted.python._sendmsg.getsockfam",
        "twisted.python._sendmsg.recv1msg",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python._sendmsg.send1msg",
        "socket.CMSG_SPACE"
    ],
    "/tmp/twisted/twisted/python/syslog.py": [
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/python/systemd.py": [
        "os.environ",
        "__future__.division",
        "__future__.absolute_import",
        "os.getpid"
    ],
    "/tmp/twisted/twisted/python/test/__init__.py": [],
    "/tmp/twisted/twisted/python/test/deprecatedattributes.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "__future__.division",
        "incremental.Version",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/python/test/modules_helpers.py": [
        "sys",
        "__future__.division",
        "__future__.absolute_import",
        "twisted.python.filepath.FilePath"
    ],
    "/tmp/twisted/twisted/python/test/pullpipe.py": [
        "socket",
        "os",
        "sys",
        "twisted.python.sendmsg.recvmsg",
        "struct.unpack"
    ],
    "/tmp/twisted/twisted/python/test/test_appdirs.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/python/test/test_components.py": [
        "twisted.python.components._addHook",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "zope.interface.adapter.AdapterRegistry",
        "functools.wraps",
        "zope.interface.Interface",
        "twisted.python.components.proxyForInterface",
        "__future__.division",
        "twisted.python.compat.comparable",
        "twisted.python.components._removeHook",
        "zope.interface.Attribute",
        "twisted.python.components",
        "twisted.python.compat.cmp"
    ],
    "/tmp/twisted/twisted/python/test/test_constants.py": [
        "twisted.python.constants",
        "__future__.absolute_import",
        "twisted.python.constants.FlagConstant",
        "twisted.trial.unittest.TestCase",
        "__future__.division",
        "warnings",
        "twisted.python.constants.Values",
        "twisted.python.constants.ValueConstant",
        "twisted.python.constants.NamedConstant",
        "twisted.python.constants.Names",
        "twisted.python.constants.Flags"
    ],
    "/tmp/twisted/twisted/python/test/test_deprecate.py": [
        "package.module",
        "twisted_private_helper.module",
        "twisted_renamed_helper.module",
        "twisted_private_helper.module",
        "twisted_private_helper.module",
        "twisted.python.deprecate._getDeprecationWarningString",
        "twisted.python.deprecate._fullyQualifiedName",
        "twisted.python.compat._PY3",
        "twisted.python.deprecate.getDeprecationWarningString",
        "incremental.Version",
        "twisted.python.test.deprecatedattributes",
        "twisted.python.deprecate._getDeprecationDocstring",
        "warnings.simplefilter",
        "twisted.python.runtime.platform",
        "__future__.division",
        "warnings",
        "twisted.trial.unittest.SynchronousTestCase",
        "warnings.catch_warnings",
        "inspect",
        "os.path.normcase",
        "sys",
        "__future__.absolute_import",
        "twisted.python.deprecate._mutuallyExclusiveArguments",
        "types",
        "twisted.python.deprecate._appendToDocstring",
        "twisted.python.deprecate",
        "twisted.python.deprecate.DEPRECATION_WARNING_FORMAT",
        "twisted.python.filepath.FilePath",
        "twisted.python.deprecate.deprecated",
        "twisted.python.test.modules_helpers.TwistedModulesMixin",
        "twisted.python.deprecate.deprecatedProperty",
        "twisted.python.deprecate._passed"
    ],
    "/tmp/twisted/twisted/python/test/test_dist3.py": [
        "__future__.division",
        "twisted.python._setup.notPortedModules",
        "twisted",
        "__future__.absolute_import",
        "twisted.python.compat._PY3",
        "twisted.trial.unittest.TestCase",
        "os"
    ],
    "/tmp/twisted/twisted/python/test/test_inotify.py": [
        "ctypes.c_char_p",
        "twisted.python.filepath.FilePath",
        "twisted.python._inotify.INotifyError",
        "twisted.python._inotify.add",
        "twisted.trial.unittest.TestCase",
        "twisted.python.runtime.platform",
        "twisted.python._inotify.init",
        "twisted.python._inotify.initializeModule",
        "ctypes.c_int",
        "ctypes.c_uint32"
    ],
    "/tmp/twisted/twisted/python/test/test_runtime.py": [
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.python.runtime.shortPythonVersion",
        "twisted.trial.util.suppress",
        "sys",
        "twisted.python.runtime.Platform",
        "twisted.python.reflect.namedModule",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/python/test/test_sendmsg.py": [
        "socket.AF_INET6",
        "twisted.internet.reactor",
        "twisted.python.sendmsg.recv1msg",
        "twisted.python.compat._PY3",
        "os.close",
        "twisted.python.compat.bytesEnviron",
        "twisted.internet.protocol.ProcessProtocol",
        "socket.AF_UNIX",
        "twisted.internet.defer.inlineCallbacks",
        "errno",
        "socket.MSG_DONTWAIT",
        "os.pathsep",
        "twisted.trial.unittest.TestCase",
        "twisted.python.runtime.platform",
        "twisted.python.compat.intToBytes",
        "twisted.python.sendmsg.recvmsg",
        "twisted.python.sendmsg.send1msg",
        "os.devnull",
        "socket.socketpair",
        "warnings",
        "os.read",
        "sys",
        "twisted.internet.defer.Deferred",
        "twisted.python.sendmsg.getSocketFamily",
        "socket.SOL_SOCKET",
        "socket.socket",
        "twisted.python.filepath.FilePath",
        "twisted.python.sendmsg.SCM_RIGHTS",
        "socket.AF_INET",
        "os.pipe",
        "socket.error",
        "twisted.internet.error.ProcessDone",
        "twisted.python.sendmsg.getsockfam",
        "twisted.python.sendmsg.sendmsg",
        "struct.pack"
    ],
    "/tmp/twisted/twisted/python/test/test_setup.py": [
        "twisted.python._setup.BuildPy3",
        "twisted.python._setup.getSetupArgs",
        "twisted.python.filepath",
        "twisted.python._setup",
        "twisted",
        "twisted.python.compat._PY3",
        "twisted.trial.unittest.TestCase",
        "setuptools.dist.Distribution",
        "twisted.python._setup.ConditionalExtension",
        "os",
        "twisted.python._setup._EXTRAS_REQUIRE"
    ],
    "/tmp/twisted/twisted/python/test/test_shellcomp.py": [
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python._shellcomp",
        "twisted.python.usage",
        "twisted.python.usage.Completer",
        "io.BytesIO",
        "__future__.division",
        "twisted.python.usage.CompleteFiles",
        "sys",
        "twisted.python.reflect",
        "twisted.python.usage.Completions",
        "twisted.python.usage.CompleteList"
    ],
    "/tmp/twisted/twisted/python/test/test_syslog.py": [
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.python.syslog"
    ],
    "/tmp/twisted/twisted/python/test/test_systemd.py": [
        "__future__.division",
        "twisted.trial.unittest.TestCase",
        "twisted.python.systemd.ListenFDs",
        "__future__.absolute_import",
        "os"
    ],
    "/tmp/twisted/twisted/python/test/test_textattributes.py": [
        "twisted.trial.unittest",
        "twisted.python._textattributes.DefaultFormattingState"
    ],
    "/tmp/twisted/twisted/python/test/test_tzhelper.py": [
        "datetime.timedelta",
        "twisted.trial.unittest.SkipTest",
        "twisted.trial.unittest.TestCase",
        "time.mktime",
        "os.environ",
        "twisted.python._tzhelper.FixedOffsetTimeZone"
    ],
    "/tmp/twisted/twisted/python/test/test_url.py": [
        "__future__.unicode_literals",
        "unittest.TestCase",
        "..url.URL"
    ],
    "/tmp/twisted/twisted/python/test/test_urlpath.py": [
        "twisted.python.urlpath",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3"
    ],
    "/tmp/twisted/twisted/python/test/test_util.py": [
        "twisted.python.util.OrderedDict",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.test.test_process.MockOS",
        "shutil",
        "twisted.internet.protocol.ProcessProtocol",
        "errno",
        "twisted.internet.interfaces.IReactorProcess",
        "__future__.division",
        "warnings",
        "twisted.trial.util.suppress",
        "twisted.python.util",
        "twisted.internet.defer.Deferred",
        "sys",
        "twisted.python.filepath.FilePath",
        "twisted.internet.error.ProcessDone",
        "os.path"
    ],
    "/tmp/twisted/twisted/python/test/test_versions.py": [
        "twisted_python_versions_package",
        "__future__.division",
        "twisted.python.versions.getVersionString",
        "tempfile.mkdtemp",
        "twisted.python.filepath.FilePath",
        "__future__.absolute_import",
        "sys",
        "twisted.python.versions.IncomparableVersions",
        "twisted.python.versions.Version",
        "incremental._inf",
        "twisted.trial.unittest.SynchronousTestCase",
        "operator",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/python/test/test_zippath.py": [
        "__future__.division",
        "zipfile",
        "__future__.absolute_import",
        "twisted.python.zippath.ZipArchive",
        "twisted.test.test_paths.AbstractFilePathTests",
        "os",
        "twisted.python.filepath._coerceToFilesystemEncoding"
    ],
    "/tmp/twisted/twisted/python/test/test_zipstream.py": [
        "twisted.python.filepath",
        "zipfile",
        "twisted.trial.unittest",
        "random",
        "twisted.python.zipstream",
        "hashlib.md5"
    ],
    "/tmp/twisted/twisted/python/text.py": [],
    "/tmp/twisted/twisted/python/threadable.py": [
        "__future__.division",
        "functools.wraps",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/python/threadpool.py": [
        "__future__.division",
        "twisted.python.log",
        "twisted.python.failure.Failure",
        "twisted._threads.pool",
        "__future__.absolute_import",
        "threading",
        "twisted.python.context"
    ],
    "/tmp/twisted/twisted/python/url.py": [
        "._url.URL"
    ],
    "/tmp/twisted/twisted/python/urlpath.py": [
        "__future__.division",
        "twisted.python.compat.urlunquote",
        "twisted.python.compat.nativeString",
        "__future__.absolute_import",
        "twisted.python.compat.urllib_parse",
        "twisted.python.compat.urlquote",
        "twisted.python.url.URL",
        "twisted.python.compat.unicode"
    ],
    "/tmp/twisted/twisted/python/usage.py": [
        "twisted.copyright",
        "twisted.python._shellcomp",
        "__main__",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "__future__.print_function",
        "getopt",
        "__future__.division",
        "inspect",
        "textwrap",
        "twisted.python.util",
        "os.path",
        "sys",
        "twisted.python.reflect",
        "os"
    ],
    "/tmp/twisted/twisted/python/util.py": [
        "twisted",
        "getpass",
        "twisted.python.reflect",
        "cStringIO.StringIO",
        "collections.OrderedDict",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "incremental.Version",
        "twisted.python.compat.unicode",
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "functools.wraps",
        "errno",
        "__future__.division",
        "warnings",
        "sys",
        "__future__.print_function",
        "os"
    ],
    "/tmp/twisted/twisted/python/versions.py": [
        "__future__.division",
        "incremental.getVersionString",
        "__future__.absolute_import",
        "incremental.IncomparableVersions",
        "incremental.Version"
    ],
    "/tmp/twisted/twisted/python/win32.py": [
        "__future__.absolute_import",
        "incremental.Version",
        "re",
        "twisted.python.runtime.platform",
        "__future__.division",
        "twisted.python.deprecate.deprecated",
        "win32con",
        "win32api",
        "os"
    ],
    "/tmp/twisted/twisted/python/zippath.py": [
        "__future__.division",
        "twisted.python.compat.comparable",
        "twisted.python.filepath.FilePath",
        "errno",
        "zipfile.ZipFile",
        "twisted.python.filepath.AbstractFilePath",
        "__future__.absolute_import",
        "zope.interface.implementer",
        "twisted.python.filepath.UnlistableError",
        "twisted.python.filepath._coerceToFilesystemEncoding",
        "time",
        "twisted.python.filepath.IFilePath",
        "os",
        "twisted.python.compat.cmp"
    ],
    "/tmp/twisted/twisted/python/zipstream.py": [
        "struct",
        "zlib",
        "zipfile",
        "os.path"
    ],
    "/tmp/twisted/twisted/runner/__init__.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "incremental.Version",
        "twisted._version.__version__"
    ],
    "/tmp/twisted/twisted/runner/inetd.py": [
        "twisted.protocols.wire",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.reactor",
        "twisted.internet.process",
        "twisted.internet.protocol.ServerFactory",
        "twisted.internet.fdesc",
        "os"
    ],
    "/tmp/twisted/twisted/runner/inetdconf.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "incremental.Version"
    ],
    "/tmp/twisted/twisted/runner/inetdtap.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "twisted.application.service",
        "twisted.python.log",
        "grp",
        "twisted.runner.inetd",
        "twisted.internet.protocol.ServerFactory",
        "pwd",
        "incremental.Version",
        "twisted.application.internet",
        "twisted.python.usage",
        "twisted.runner.inetdconf",
        "socket"
    ],
    "/tmp/twisted/twisted/runner/procmon.py": [
        "twisted.internet.protocol",
        "twisted.python.log",
        "twisted.application.service",
        "twisted.internet.error",
        "twisted.protocols.basic",
        "twisted.internet.reactor"
    ],
    "/tmp/twisted/twisted/runner/procmontap.py": [
        "twisted.python.usage",
        "twisted.runner.procmon.ProcessMonitor"
    ],
    "/tmp/twisted/twisted/runner/test/__init__.py": [],
    "/tmp/twisted/twisted/runner/test/test_inetdconf.py": [
        "twisted.trial.unittest",
        "twisted.runner.inetdconf"
    ],
    "/tmp/twisted/twisted/runner/test/test_inetdtap.py": [
        "twisted.trial.unittest",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/runner/test/test_procmon.py": [
        "twisted.internet.error.ProcessExitedAlready",
        "twisted.runner.procmon.ProcessMonitor",
        "twisted.internet.task.Clock",
        "twisted.trial.unittest",
        "twisted.runner.procmon.LoggingProtocol",
        "twisted.python.failure.Failure",
        "twisted.internet.error.ProcessDone",
        "twisted.internet.error.ProcessTerminated",
        "twisted.test.proto_helpers.MemoryReactor"
    ],
    "/tmp/twisted/twisted/runner/test/test_procmontap.py": [
        "twisted.trial.unittest",
        "twisted.runner.procmontap",
        "twisted.runner.procmon.ProcessMonitor",
        "twisted.python.usage.UsageError"
    ],
    "/tmp/twisted/twisted/scripts/__init__.py": [],
    "/tmp/twisted/twisted/scripts/_twistd_unix.py": [
        "twisted.python.syslog",
        "signal",
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.application.app",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat._bytesRepr",
        "twisted.python.util.untilConcludes",
        "twisted.python.runtime.platformType",
        "twisted.python.util.gidFromString",
        "twisted.python.log",
        "twisted.application.service",
        "errno",
        "twisted.python.compat.intToBytes",
        "twisted.python.usage",
        "twisted.logger",
        "__future__.division",
        "twisted.python.util.uidFromString",
        "twisted.python.logfile",
        "__future__.print_function",
        "sys",
        "twisted.copyright",
        "twisted.internet.interfaces.IReactorDaemonize",
        "traceback",
        "twisted.python.util.switchUID",
        "os"
    ],
    "/tmp/twisted/twisted/scripts/_twistw.py": [
        "twisted.application.service",
        "twisted.copyright",
        "twisted.application.app",
        "sys",
        "twisted.application.internet",
        "os",
        "__future__.print_function",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/scripts/test/__init__.py": [],
    "/tmp/twisted/twisted/scripts/test/test_scripts.py": [
        "twisted.copyright.version",
        "twisted.trial.unittest.TestCase",
        "sys.executable",
        "os.chdir",
        "twisted.python.filepath.FilePath",
        "twisted.trial.unittest.SkipTest",
        "os.getcwd",
        "subprocess.Popen",
        "subprocess.PIPE",
        "twisted.python.test.test_shellcomp.ZshScriptTestMixin",
        "twisted.python.modules.getModule",
        "os.devnull"
    ],
    "/tmp/twisted/twisted/scripts/trial.py": [
        "trace",
        "twisted.python.util.spewer",
        "twisted.trial._dist.disttrial.DistTrialRunner",
        "twisted.internet.defer",
        "twisted.trial.runner",
        "twisted.application.app",
        "random",
        "__future__.absolute_import",
        "gc",
        "twisted.trial.itrial",
        "twisted.trial.reporter",
        "twisted.python.compat.long",
        "twisted.python.usage",
        "__future__.division",
        "warnings",
        "inspect",
        "twisted.python.reflect",
        "twisted.python.failure",
        "twisted.python.reflect.namedModule",
        "__future__.print_function",
        "sys",
        "twisted.python.filepath.FilePath",
        "twisted.plugin",
        "time",
        "os",
        "pdb"
    ],
    "/tmp/twisted/twisted/scripts/twistd.py": [
        "__future__.division",
        "twisted.application.app",
        "__future__.absolute_import",
        "twisted.scripts._twistd_unix.ServerOptions",
        "twisted.scripts._twistd_unix.UnixApplicationRunner",
        "twisted.python.runtime.platformType"
    ],
    "/tmp/twisted/twisted/spread/__init__.py": [],
    "/tmp/twisted/twisted/spread/banana.py": [
        "twisted.internet.protocol",
        "twisted.python.reflect.fullyQualifiedName",
        "__future__.absolute_import",
        "struct",
        "twisted.python.compat.long",
        "twisted.python.compat._bytesChr",
        "io.BytesIO",
        "twisted.persisted.styles",
        "__future__.division",
        "twisted.python.compat.iterbytes",
        "copy",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/spread/flavors.py": [
        "pb.ProtocolError",
        "pb.ProtocolError",
        ".jelly.setUnjellyableForClassTree",
        ".jelly.Jellyable",
        "zope.interface.implementer",
        "__future__.absolute_import",
        ".jelly.setInstanceState",
        "twisted.python.compat.unicode",
        ".jelly.unjellyableRegistry",
        "twisted.python.log",
        ".jelly.setUnjellyableForClass",
        "zope.interface.Interface",
        "__future__.division",
        "twisted.python.compat.comparable",
        ".jelly._createBlank",
        ".jelly.setUnjellyableFactoryForClass",
        "twisted.python.compat._PY3",
        "sys",
        "twisted.python.reflect",
        ".jelly.Unjellyable",
        ".jelly.getInstanceState",
        "twisted.python.compat.cmp"
    ],
    "/tmp/twisted/twisted/spread/interfaces.py": [
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/spread/jelly.py": [
        "twisted.python.reflect.namedAny",
        "functools.reduce",
        "zope.interface.implementer",
        "datetime",
        "incremental.Version",
        "twisted.python.compat.unicode",
        "twisted.spread.interfaces.IUnjellyable",
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "twisted.python.compat.long",
        "twisted.spread.interfaces.IJellyable",
        "twisted.python.compat.nativeString",
        "twisted.persisted.crefutil._Container",
        "warnings",
        "twisted.persisted.crefutil.NotKnown",
        "twisted.persisted.crefutil._Dereference",
        "twisted.python.compat._PY3",
        "twisted.python.reflect.qual",
        "copy",
        "types",
        "twisted.persisted.crefutil._InstanceMethod",
        "twisted.persisted.crefutil._Tuple",
        "decimal",
        "twisted.python.reflect.namedObject",
        "twisted.persisted.crefutil._DictKeyAndValue"
    ],
    "/tmp/twisted/twisted/spread/pb.py": [
        "twisted.internet.defer",
        "twisted.spread.flavors.Cacheable",
        "twisted.internet.protocol",
        "twisted.spread.flavors.ViewPoint",
        "twisted.spread.flavors.Copyable",
        "twisted.python.compat.xrange",
        "random",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.spread.jelly.jelly",
        "twisted.spread.flavors.RemoteCopy",
        "twisted.python.compat.unicode",
        "twisted.spread.flavors.RemoteCache",
        "twisted.spread.interfaces.IUnjellyable",
        "twisted.spread.jelly.unjelly",
        "twisted.python.log",
        "twisted.spread.flavors.setUnjellyableForClass",
        "twisted.spread.flavors.IPBRoot",
        "twisted.spread.flavors.Referenceable",
        "twisted.spread.flavors.setUnjellyableFactoryForClass",
        "twisted.spread.interfaces.IJellyable",
        "twisted.python.compat._bytesChr",
        "twisted.cred.portal.Portal",
        "twisted.cred.credentials.Anonymous",
        "twisted.spread.flavors.Jellyable",
        "zope.interface.Interface",
        "twisted.spread.flavors.setCopierForClass",
        "twisted.spread.banana",
        "twisted.spread.flavors.NoSuchMethod",
        "twisted.persisted.styles",
        "__future__.division",
        "twisted.python.compat.comparable",
        "twisted.spread.flavors.Viewable",
        "twisted.spread.flavors.RemoteCacheObserver",
        "twisted.spread.flavors.setFactoryForClass",
        "twisted.python.reflect",
        "twisted.python.failure",
        "twisted.cred.credentials.IAnonymous",
        "twisted.python.components.registerAdapter",
        "twisted.spread.flavors.Root",
        "hashlib.md5",
        "twisted.spread.flavors.copyTags",
        "twisted.spread.flavors.setCopierForClassTree",
        "twisted.cred.credentials.ICredentials",
        "twisted.spread.jelly._newInstance",
        "twisted.spread.flavors.Serializable",
        "twisted.spread.jelly.globalSecurity",
        "twisted.spread.flavors.setUnjellyableForClassTree",
        "twisted.cred.credentials.IUsernameHashedPassword",
        "twisted.python.compat.cmp"
    ],
    "/tmp/twisted/twisted/spread/publish.py": [
        "twisted.spread.flavors",
        "twisted.internet.defer",
        "__future__.division",
        "twisted.spread.jelly",
        "__future__.absolute_import",
        "time",
        "twisted.spread.banana"
    ],
    "/tmp/twisted/twisted/spread/test/__init__.py": [],
    "/tmp/twisted/twisted/spread/test/test_banana.py": [
        "functools.partial",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.internet.protocol",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.python.compat.long",
        "twisted.python.compat._bytesChr",
        "twisted.internet.main",
        "io.BytesIO",
        "__future__.division",
        "sys",
        "twisted.python.failure",
        "twisted.python.compat.iterbytes",
        "twisted.spread.banana",
        "sys.maxint"
    ],
    "/tmp/twisted/twisted/spread/test/test_jelly.py": [
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "datetime",
        "twisted.python.compat.unicode",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.spread.pb",
        "__future__.division",
        "decimal",
        "twisted.spread.jelly"
    ],
    "/tmp/twisted/twisted/spread/test/test_pb.py": [
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "__future__.absolute_import",
        "gc",
        "twisted.internet.main",
        "twisted.protocols.policies.WrappingFactory",
        "twisted.spread.util",
        "twisted.python.compat.iterbytes",
        "twisted.cred.credentials",
        "twisted.cred.error.UnauthorizedLogin",
        "zope.interface.implementer",
        "twisted.cred.checkers",
        "twisted.spread.publish",
        "twisted.internet.error.ConnectionRefusedError",
        "zope.interface.Interface",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.internet.address",
        "__future__.division",
        "io.BytesIO",
        "twisted.spread.jelly",
        "weakref",
        "os",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "twisted.cred.error.UnhandledCredentials",
        "twisted.python.log",
        "twisted.spread.pb",
        "collections.deque",
        "twisted.python.failure",
        "twisted.internet.defer.gatherResults",
        "twisted.python.compat.xrange",
        "twisted.test.proto_helpers._FakeConnector",
        "sys",
        "twisted.cred.portal",
        "time"
    ],
    "/tmp/twisted/twisted/spread/util.py": [
        "twisted.internet.defer",
        "twisted.internet.interfaces",
        "zope.interface.implementer",
        "twisted.spread.pb",
        "twisted.python.failure.Failure",
        "twisted.protocols.basic"
    ],
    "/tmp/twisted/twisted/test/__init__.py": [],
    "/tmp/twisted/twisted/test/iosim.py": [
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.internet.endpoints.TCP4ServerEndpoint",
        ".proto_helpers.MemoryReactorClock",
        "twisted.python.failure.Failure",
        "twisted.internet.error.ConnectionRefusedError",
        "OpenSSL.SSL.Error",
        "twisted.internet.interfaces",
        "__future__.division",
        "zope.interface.directlyProvides",
        "twisted.internet.endpoints.TCP4ClientEndpoint",
        "__future__.print_function",
        "twisted.internet.protocol.Protocol",
        "itertools",
        "twisted.internet.error",
        "twisted.internet.protocol.Factory"
    ],
    "/tmp/twisted/twisted/test/mock_win32process.py": [
        "win32process"
    ],
    "/tmp/twisted/twisted/test/plugin_basic.py": [
        "twisted.test.test_plugin.ITestPlugin2",
        "twisted.plugin.IPlugin",
        "zope.interface.provider",
        "twisted.test.test_plugin.ITestPlugin"
    ],
    "/tmp/twisted/twisted/test/plugin_extra1.py": [
        "twisted.test.test_plugin.ITestPlugin",
        "twisted.plugin.IPlugin",
        "zope.interface.provider"
    ],
    "/tmp/twisted/twisted/test/plugin_extra2.py": [
        "twisted.test.test_plugin.ITestPlugin",
        "twisted.plugin.IPlugin",
        "zope.interface.provider"
    ],
    "/tmp/twisted/twisted/test/process_cmdline.py": [
        "sys",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/test/process_echoer.py": [
        "sys"
    ],
    "/tmp/twisted/twisted/test/process_fds.py": [
        "sys",
        "os",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/test/process_getargv.py": [
        "__future__.division",
        "sys.argv",
        "__future__.absolute_import",
        "sys.stdout"
    ],
    "/tmp/twisted/twisted/test/process_getenv.py": [
        "os.environ",
        "sys.stdout"
    ],
    "/tmp/twisted/twisted/test/process_linger.py": [
        "sys",
        "os",
        "time"
    ],
    "/tmp/twisted/twisted/test/process_reader.py": [
        "sys"
    ],
    "/tmp/twisted/twisted/test/process_signal.py": [
        "sys",
        "signal"
    ],
    "/tmp/twisted/twisted/test/process_stdinreader.py": [
        "__future__.division",
        "__future__.absolute_import",
        "sys",
        "os",
        "msvcrt"
    ],
    "/tmp/twisted/twisted/test/process_tester.py": [
        "sys",
        "os"
    ],
    "/tmp/twisted/twisted/test/process_tty.py": [],
    "/tmp/twisted/twisted/test/process_twisted.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "twisted.python.log",
        "twisted.internet.interfaces",
        "__future__.absolute_import",
        "zope.interface.implementer",
        "sys",
        "os",
        "twisted.internet.stdio",
        "__future__.print_function",
        "twisted.internet.reactor"
    ],
    "/tmp/twisted/twisted/test/proto_helpers.py": [
        "socket.AF_INET6",
        "twisted.internet.protocol",
        "zope.interface.verify.verifyClass",
        "twisted.internet.task.Clock",
        "twisted.internet.interfaces.IReactorFDSet",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "zope.interface.implementedBy",
        "twisted.internet.address.IPv6Address",
        "twisted.internet.interfaces.IConnector",
        "twisted.internet.interfaces.ITransport",
        "twisted.internet.interfaces.IListeningPort",
        "twisted.internet.interfaces.IReactorSocket",
        "twisted.internet.interfaces.IReactorTCP",
        "twisted.internet.address.UNIXAddress",
        "twisted.protocols.basic",
        "io.BytesIO",
        "__future__.division",
        "twisted.internet.interfaces.IReactorSSL",
        "twisted.python.failure",
        "twisted.internet.address",
        "twisted.internet.abstract.isIPv6Address",
        "twisted.internet.interfaces.IReactorUNIX",
        "twisted.internet.interfaces.IReactorCore",
        "twisted.internet.interfaces.IPushProducer",
        "twisted.internet.address.IPv4Address",
        "twisted.internet.task",
        "socket.AF_INET",
        "twisted.internet.interfaces.IConsumer",
        "twisted.internet.error.UnsupportedAddressFamily",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/test/reflect_helper_IE.py": [],
    "/tmp/twisted/twisted/test/reflect_helper_VE.py": [],
    "/tmp/twisted/twisted/test/reflect_helper_ZDE.py": [],
    "/tmp/twisted/twisted/test/ssl_helpers.py": [
        "__future__.division",
        "twisted.internet.ssl",
        "twisted.python.filepath.FilePath",
        "__future__.absolute_import",
        "OpenSSL.SSL",
        "twisted.python.compat.nativeString"
    ],
    "/tmp/twisted/twisted/test/stdio_test_consumer.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "twisted.python.log",
        "twisted.internet.stdio",
        "__future__.absolute_import",
        "sys",
        "twisted.python.reflect",
        "twisted.protocols.basic",
        "twisted.internet.reactor"
    ],
    "/tmp/twisted/twisted/test/stdio_test_halfclose.py": [
        "__future__.division",
        "twisted.internet.interfaces.IHalfCloseableProtocol",
        "twisted.python.log",
        "twisted.internet.stdio",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "sys",
        "twisted.python.reflect",
        "twisted.internet.reactor"
    ],
    "/tmp/twisted/twisted/test/stdio_test_hostpeer.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "twisted.internet.stdio",
        "__future__.absolute_import",
        "sys",
        "twisted.python.reflect",
        "twisted.internet.reactor"
    ],
    "/tmp/twisted/twisted/test/stdio_test_lastwrite.py": [
        "__future__.division",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.reactor",
        "twisted.python.reflect.namedAny",
        "__future__.absolute_import",
        "sys",
        "twisted.internet.stdio.StandardIO"
    ],
    "/tmp/twisted/twisted/test/stdio_test_loseconn.py": [
        "__future__.division",
        "twisted.python.log",
        "twisted.internet.error.ConnectionDone",
        "twisted.internet.stdio",
        "__future__.absolute_import",
        "sys",
        "twisted.python.reflect",
        "twisted.internet.reactor"
    ],
    "/tmp/twisted/twisted/test/stdio_test_producer.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "twisted.python.log",
        "twisted.internet.stdio",
        "__future__.absolute_import",
        "sys",
        "twisted.python.reflect",
        "twisted.internet.reactor"
    ],
    "/tmp/twisted/twisted/test/stdio_test_write.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.internet.stdio",
        "__future__.absolute_import",
        "sys",
        "twisted.python.reflect"
    ],
    "/tmp/twisted/twisted/test/stdio_test_writeseq.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.internet.stdio",
        "__future__.absolute_import",
        "sys",
        "twisted.python.reflect"
    ],
    "/tmp/twisted/twisted/test/test_abstract.py": [
        "twisted.trial.unittest.TestCase",
        "__future__.division",
        "twisted.internet.abstract.isIPAddress",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/test/test_adbapi.py": [
        "pyPgSQL.PgSQL",
        "psycopg",
        "MySQLdb",
        "kinterbasdb",
        "kinterbasdb",
        "twisted.internet.defer",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "twisted.enterprise.adbapi.ConnectionPool",
        "twisted.python.failure.Failure",
        "stat",
        "twisted.enterprise.adbapi.Transaction",
        "twisted.internet.interfaces",
        "twisted.enterprise.adbapi.Connection",
        "os",
        "twisted.enterprise.adbapi.ConnectionLost",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/test/test_amp.py": [
        "twisted.internet.interfaces.ISSLTransport",
        "twisted.internet.reactor",
        "sys",
        "twisted.internet.ssl",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "__future__.absolute_import",
        "datetime",
        "twisted.protocols.amp",
        "twisted.python.failure.Failure",
        "__future__.division",
        "decimal",
        "zope.interface.verify.verifyClass",
        "zope.interface.implementer",
        "twisted.test.iosim",
        "twisted.python.compat.intToBytes",
        "twisted.internet.interfaces",
        "twisted.internet.address",
        "twisted.trial.unittest",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.internet.error",
        "twisted.internet.defer",
        "twisted.python.filepath",
        "zope.interface.verify.verifyObject"
    ],
    "/tmp/twisted/twisted/test/test_application.py": [
        "twisted.internet",
        "twisted.internet.defer",
        "twisted.persisted.sob",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "__future__.division",
        "twisted.application.app",
        "__future__.absolute_import",
        "twisted.test.proto_helpers.MemoryReactor",
        "twisted.protocols.wire",
        "twisted.application.service",
        "twisted.protocols.basic",
        "twisted.python.usage",
        "twisted.trial.unittest",
        "twisted.internet.interfaces",
        "twisted.application.internet",
        "twisted.python.compat.NativeStringIO",
        "copy",
        "pickle",
        "twisted.python.test.modules_helpers.TwistedModulesMixin",
        "os",
        "twisted.application.reactors"
    ],
    "/tmp/twisted/twisted/test/test_compat.py": [
        "cStringIO.StringIO",
        "StringIO.StringIO",
        "twisted.python.compat.inet_ntop",
        "twisted.python.compat.inet_pton",
        "twisted.python.compat.OrderedDict",
        "twisted.trial.unittest",
        "twisted.python.compat.iteritems",
        "twisted.python.compat.reduce",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat._bytesRepr",
        "twisted.python.compat.networkString",
        "io",
        "twisted.python.compat.unichr",
        "twisted.python.compat.unicode",
        "twisted.python.compat.bytesEnviron",
        "twisted.python.compat.reraise",
        "twisted.python.compat.execfile",
        "twisted.python.runtime.platform",
        "twisted.python.compat.intToBytes",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "twisted.python.compat.comparable",
        "sys",
        "twisted.python.compat.lazyByteSlice",
        "twisted.python.compat.NativeStringIO",
        "twisted.python.compat.iterbytes",
        "codecs",
        "twisted.python.compat._coercedUnicode",
        "twisted.python.compat._PYPY",
        "socket",
        "twisted.python.filepath.FilePath",
        "twisted.python.compat.raw_input",
        "traceback",
        "twisted.python.compat.ioType",
        "twisted.python.compat.cmp"
    ],
    "/tmp/twisted/twisted/test/test_context.py": [
        "twisted.trial.unittest.SynchronousTestCase",
        "__future__.division",
        "twisted.python.context",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/test/test_cooperator.py": [
        "__future__.division",
        "twisted.internet.task",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.trial.unittest",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/test/test_defer.py": [
        "twisted.internet.defer",
        "twisted.internet.reactor",
        "twisted.internet.task.Clock",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "gc",
        "twisted.python.log",
        "re",
        "__future__.division",
        "warnings",
        "twisted.python.failure",
        "traceback"
    ],
    "/tmp/twisted/twisted/test/test_defgen.py": [
        "__future__.division",
        "twisted.internet.defer.inlineCallbacks",
        "twisted.internet.reactor",
        "twisted.internet.defer.Deferred",
        "twisted.trial.util.suppress",
        "twisted.trial.unittest",
        "twisted.python.util.runWithWarningsSuppressed",
        "__future__.absolute_import",
        "twisted.internet.defer",
        "twisted.internet.defer.deferredGenerator",
        "twisted.internet.defer.returnValue",
        "twisted.internet.defer.waitForDeferred"
    ],
    "/tmp/twisted/twisted/test/test_dict.py": [
        "twisted.trial.unittest",
        "twisted.protocols.dict"
    ],
    "/tmp/twisted/twisted/test/test_dirdbm.py": [
        "twisted.python.rebuild",
        "twisted.persisted.dirdbm",
        "time",
        "base64.b64decode",
        "twisted.python.filepath.FilePath",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "twisted.persisted.dirdbm",
        "shutil"
    ],
    "/tmp/twisted/twisted/test/test_error.py": [
        "__future__.division",
        "socket",
        "errno",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.internet.error",
        "twisted.python.runtime.platformType"
    ],
    "/tmp/twisted/twisted/test/test_factories.py": [
        "__future__.division",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.task.Clock",
        "__future__.absolute_import",
        "twisted.internet.protocol.ReconnectingClientFactory",
        "twisted.trial.unittest.TestCase",
        "pickle"
    ],
    "/tmp/twisted/twisted/test/test_failure.py": [
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "traceback.FrameSummary",
        "re",
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase",
        "sys",
        "twisted.python.compat.NativeStringIO",
        "twisted.python.reflect",
        "twisted.python.failure",
        "traceback",
        "linecache",
        "pdb"
    ],
    "/tmp/twisted/twisted/test/test_fdesc.py": [
        "traceback",
        "fcntl",
        "errno",
        "twisted.trial.unittest",
        "sys",
        "twisted.internet.fdesc",
        "twisted.python.util.untilConcludes",
        "os"
    ],
    "/tmp/twisted/twisted/test/test_htb.py": [
        "twisted.protocols.htb",
        "twisted.trial.unittest",
        ".test_pcp.DummyConsumer"
    ],
    "/tmp/twisted/twisted/test/test_internet.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.internet.abstract",
        "__future__.division",
        "twisted.internet.interfaces",
        "time",
        "twisted.python.util",
        "twisted.internet.base",
        "twisted.internet.defer.passthru",
        "sys",
        "twisted.internet.defer.Deferred",
        "twisted.internet.error",
        "os"
    ],
    "/tmp/twisted/twisted/test/test_iosim.py": [
        "twisted.trial.unittest.TestCase",
        "__future__.division",
        "__future__.absolute_import",
        "twisted.test.iosim.FakeTransport"
    ],
    "/tmp/twisted/twisted/test/test_iutils.py": [
        "__future__.division",
        "stat",
        "twisted.internet.defer.Deferred",
        "twisted.internet.reactor",
        "warnings",
        "signal",
        "twisted.python.test.test_util.SuppressedWarningsTests",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "sys",
        "twisted.python.runtime.platform",
        "twisted.internet.error",
        "twisted.internet.interfaces",
        "os",
        "twisted.trial.unittest",
        "twisted.internet.utils"
    ],
    "/tmp/twisted/twisted/test/test_lockfile.py": [
        "__future__.division",
        "errno",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.runtime.platform",
        "twisted.python.reflect.requireModule",
        "twisted.python.lockfile",
        "os"
    ],
    "/tmp/twisted/twisted/test/test_log.py": [
        "twisted.logger.LogBeginner",
        "io.IOBase",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "calendar",
        "twisted.python.log",
        "__future__.division",
        "twisted.logger.LogLevel",
        "warnings",
        "twisted.python.log.LogPublisher",
        "sys",
        "twisted.python.failure",
        "twisted.logger.LoggingFile",
        "twisted.logger.LogPublisher",
        "__future__.print_function",
        "logging",
        "twisted.python.compat.NativeStringIO",
        "twisted.logger.test.test_stdlib.handlerAndBytesIO",
        "time",
        "os"
    ],
    "/tmp/twisted/twisted/test/test_logfile.py": [
        "__future__.division",
        "stat",
        "twisted.python.runtime",
        "os",
        "twisted.trial.unittest",
        "time",
        "__future__.absolute_import",
        "contextlib",
        "errno",
        "twisted.python.logfile",
        "pickle"
    ],
    "/tmp/twisted/twisted/test/test_loopback.py": [
        "twisted.internet.defer",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.protocols.loopback",
        "twisted.python.compat.intToBytes",
        "twisted.protocols.basic",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.internet.defer.Deferred",
        "twisted.internet.interfaces.IPushProducer",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.interfaces.IPullProducer",
        "twisted.internet.interfaces.IAddress"
    ],
    "/tmp/twisted/twisted/test/test_main.py": [
        "twisted.__main__",
        "__future__.division",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.python.compat.NativeStringIO",
        "__future__.absolute_import",
        "sys",
        "twisted.test.test_process.Accumulator",
        "twisted.trial.unittest.TestCase",
        "twisted.application.twist._options.TwistOptions"
    ],
    "/tmp/twisted/twisted/test/test_memcache.py": [
        "twisted.internet.defer.gatherResults",
        "__future__.division",
        "twisted.protocols.memcache.NoSuchCommand",
        "twisted.internet.error.ConnectionDone",
        "twisted.internet.task.Clock",
        "twisted.protocols.memcache.ServerError",
        "twisted.internet.defer.DeferredList",
        "twisted.protocols.memcache.ClientError",
        "twisted.trial.unittest.TestCase",
        "twisted.internet.defer.Deferred",
        "twisted.protocols.memcache.MemCacheProtocol",
        "__future__.absolute_import",
        "twisted.test.proto_helpers.StringTransportWithDisconnection",
        "twisted.internet.defer.TimeoutError"
    ],
    "/tmp/twisted/twisted/test/test_modules.py": [
        "__future__.division",
        "twisted.python.compat.networkString",
        "twisted.python.test.modules_helpers.TwistedModulesMixin",
        "compileall",
        "twisted.python.filepath.FilePath",
        "twisted.python.test.test_zippath.zipit",
        "twisted.python.modules",
        "twisted.python.reflect.namedAny",
        "zipfile",
        "twisted",
        "__future__.absolute_import",
        "sys",
        "itertools",
        "twisted.trial.unittest.TestCase"
    ],
    "/tmp/twisted/twisted/test/test_monkey.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.monkey.MonkeyPatcher"
    ],
    "/tmp/twisted/twisted/test/test_nooldstyle.py": [
        "__future__.division",
        "twisted.python.reflect.fullyQualifiedName",
        "twisted.python._oldstyle",
        "twisted.trial.unittest",
        "inspect",
        "twisted.python.reflect.namedAny",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat._shouldEnableNewStyle",
        "twisted.python.modules.getModule",
        "types"
    ],
    "/tmp/twisted/twisted/test/test_paths.py": [
        "twisted.trial.unittest.SkipTest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.python.filepath",
        "errno",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.python.runtime.platform",
        "__future__.division",
        "stat",
        "pickle",
        "zope.interface.verify.verifyObject",
        "twisted.python.win32.ERROR_DIRECTORY",
        "pprint.pformat",
        "time",
        "os",
        "twisted.python.win32.WindowsError"
    ],
    "/tmp/twisted/twisted/test/test_pcp.py": [
        "twisted.protocols.pcp",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/test/test_persisted.py": [
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "io",
        "copy_reg",
        "twisted.persisted.crefutil",
        "twisted.persisted.styles",
        "__future__.division",
        "sys",
        "twisted.persisted.aot",
        "cStringIO.StringIO",
        "pickle"
    ],
    "/tmp/twisted/twisted/test/test_plugin.py": [
        "mypackage",
        "mypackage.testplugin",
        "plugindummy.plugins",
        "dummy.plugins",
        "dummy.plugins",
        "compileall",
        "functools",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.log.removeObserver",
        "errno",
        "zope.interface.Interface",
        "twisted.trial.unittest",
        "__future__.division",
        "sys",
        "twisted.python.log.textFromEventDict",
        "twisted.python.filepath.FilePath",
        "os",
        "twisted.plugin",
        "time",
        "twisted.python.log.addObserver"
    ],
    "/tmp/twisted/twisted/test/test_policies.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "zope.interface.implementedBy",
        "__builtin__",
        "twisted.test.proto_helpers.StringTransport",
        "zope.interface.Interface",
        "__future__.division",
        "twisted.python.compat.NativeStringIO",
        "twisted.internet.address",
        "twisted.internet.task",
        "twisted.protocols.policies",
        "twisted.test.proto_helpers.StringTransportWithDisconnection"
    ],
    "/tmp/twisted/twisted/test/test_postfix.py": [
        "twisted.test.proto_helpers.StringTransport",
        "twisted.protocols.postfix",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/test/test_process.py": [
        "win32api",
        "twisted.test.mock_win32process",
        "twisted.internet._dumbwin32proc",
        "twisted.internet._dumbwin32proc._findShebang",
        "glob",
        "process_tester",
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.internet.process",
        "twisted.python.compat.xrange",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "gc",
        "operator",
        "twisted.python.compat.bytesEnviron",
        "errno",
        "twisted.python.log.msg",
        "io.BytesIO",
        "__future__.division",
        "stat",
        "twisted.internet.interfaces",
        "sys",
        "__future__.print_function",
        "twisted.python.filepath.FilePath",
        "signal",
        "twisted.internet.error",
        "gzip",
        "twisted.python.runtime",
        "os",
        "zope.interface.verify.verifyObject",
        "twisted.python.procutils"
    ],
    "/tmp/twisted/twisted/test/test_protocols.py": [
        "twisted.internet.defer",
        "twisted.protocols.wire",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "twisted.python.compat.iterbytes",
        "twisted.test.proto_helpers",
        "twisted.internet.address",
        "twisted.protocols.portforward"
    ],
    "/tmp/twisted/twisted/test/test_randbytes.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.randbytes"
    ],
    "/tmp/twisted/twisted/test/test_reflect.py": [
        "twisted.python.monkey",
        "twisted.python",
        "twisted.python.monkey",
        "twisted.python.monkey",
        "twisted.python",
        "twisted.python.compat",
        "twisted.python.reflect.prefixedMethods",
        "twisted.python.reflect.fullyQualifiedName",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.reflect.accumulateMethods",
        "collections.deque",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.python.reflect.addMethodNamesToDict",
        "__future__.division",
        "twisted.python.reflect",
        "weakref",
        "twisted.python.reflect.prefixedMethodNames",
        "os"
    ],
    "/tmp/twisted/twisted/test/test_roots.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "twisted.python.roots",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/test/test_sip.py": [
        "twisted.internet.defer",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "twisted.protocols.sip",
        "twisted.cred.checkers",
        "twisted.cred.portal"
    ],
    "/tmp/twisted/twisted/test/test_sob.py": [
        "textwrap.dedent",
        "__future__.division",
        "twisted.persisted.sob",
        "twisted.python.filepath.FilePath",
        "twisted.trial.unittest",
        "twisted.python.reflect.namedAny",
        "twisted.persisted.styles.Ephemeral",
        "__future__.absolute_import",
        "sys",
        "twisted.python.components",
        "twisted.python.reflect.ObjectNotFound",
        "os"
    ],
    "/tmp/twisted/twisted/test/test_socks.py": [
        "twisted.internet.defer",
        "struct",
        "twisted.internet.error.DNSLookupError",
        "twisted.trial.unittest",
        "twisted.python.compat.iterbytes",
        "twisted.test.proto_helpers",
        "twisted.protocols.socks",
        "twisted.internet.address",
        "socket"
    ],
    "/tmp/twisted/twisted/test/test_ssl.py": [
        "twisted.internet.error.ConnectionLost",
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.internet.error.ConnectionDone",
        "twisted.trial.unittest",
        "twisted.test.proto_helpers.waitUntilAllDisconnected",
        "__future__.absolute_import",
        "errno",
        "twisted.python.runtime.platform",
        "twisted.protocols.basic",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.internet.ssl",
        "twisted.test.ssl_helpers.certPath",
        "twisted.test.test_tcp.ProperlyCloseFilesMixin",
        "twisted.test.ssl_helpers.ClientTLSContext",
        "twisted.python.filepath.FilePath",
        "twisted.python.reflect.requireModule",
        "OpenSSL.crypto",
        "OpenSSL.SSL",
        "os"
    ],
    "/tmp/twisted/twisted/test/test_sslverify.py": [
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "__future__.absolute_import",
        "OpenSSL",
        "twisted.internet.error.ConnectionClosed",
        "OpenSSL.crypto.X509",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "twisted.trial.util",
        "constantly.NamedConstant",
        "twisted.python.filepath.FilePath",
        "twisted.protocols.tls.TLSMemoryBIOFactory",
        "twisted.internet.error.ConnectionLost",
        "OpenSSL.crypto.TYPE_RSA",
        "zope.interface.implementer",
        "incremental.Version",
        "twisted.internet.ssl.VerificationError",
        "OpenSSL.crypto.PKey",
        "twisted.internet.interfaces",
        "OpenSSL.SSL",
        "itertools",
        "twisted.internet.ssl.platformTrust",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "twisted.internet._sslverify",
        "twisted.test.test_twisted.SetAsideModule",
        "twisted.internet.defer",
        "twisted.test.iosim.connectedServerAndClient",
        "twisted.internet.error.CertificateError",
        "sys",
        "twisted.python.modules.getModule",
        "constantly.Names",
        "OpenSSL.crypto.FILETYPE_PEM"
    ],
    "/tmp/twisted/twisted/test/test_stateful.py": [
        "twisted.trial.unittest.TestCase",
        "twisted.protocols.test.test_basic",
        "twisted.protocols.stateful.StatefulProtocol",
        "struct.calcsize",
        "struct.unpack",
        "struct.pack"
    ],
    "/tmp/twisted/twisted/test/test_stdio.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "os",
        "twisted.python.compat.xrange",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.compat.bytesEnviron",
        "twisted.internet.reactor",
        "twisted.test.test_tcp.ConnectionLostNotifyingProtocol",
        "twisted.python.log",
        "twisted.python.filepath",
        "twisted.python.runtime.platform",
        "twisted.python.compat.intToBytes",
        "__future__.division",
        "sys",
        "twisted.internet.stdio",
        "itertools",
        "twisted.internet.error",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/test/test_stringtransport.py": [
        "twisted.internet.address.IPv4Address",
        "twisted.trial.unittest.TestCase",
        "twisted.internet.interfaces.IAddress",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.internet.interfaces.IReactorSSL",
        "twisted.internet.interfaces.IConnector",
        "zope.interface.verify.verifyObject",
        "twisted.internet.interfaces.IListeningPort",
        "twisted.internet.protocol.Factory",
        "twisted.internet.interfaces.IConsumer",
        "twisted.internet.interfaces.IReactorTCP",
        "twisted.internet.protocol.ClientFactory",
        "twisted.test.proto_helpers.RaisingMemoryReactor",
        "twisted.internet.interfaces.IReactorUNIX",
        "twisted.test.proto_helpers.MemoryReactor",
        "twisted.internet.interfaces.ITransport",
        "twisted.internet.interfaces.IPushProducer"
    ],
    "/tmp/twisted/twisted/test/test_strports.py": [
        "twisted.internet.reactor",
        "__future__.division",
        "twisted.application.strports",
        "twisted.internet.protocol.Factory",
        "__future__.absolute_import",
        "twisted.python.compat._PY3",
        "twisted.trial.unittest.TestCase",
        "twisted.internet.endpoints.TCP4ServerEndpoint",
        "twisted.internet.endpoints.UNIXServerEndpoint",
        "twisted.application.internet",
        "twisted.internet.test.test_endpoints.ParserTests"
    ],
    "/tmp/twisted/twisted/test/test_task.py": [
        "__future__.division",
        "twisted.internet.task",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.trial.unittest",
        "twisted.internet.test.modulehelpers.NoReactor",
        "__future__.absolute_import",
        "twisted.python.failure",
        "twisted.internet.error",
        "twisted.internet.interfaces",
        "twisted.internet.main.installReactor"
    ],
    "/tmp/twisted/twisted/test/test_tcp.py": [
        "twisted.internet.task",
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "random",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "functools.wraps",
        "errno",
        "twisted.python.runtime.platform",
        "twisted.python.log.msg",
        "__future__.division",
        "twisted.internet.interfaces.IHalfCloseableProtocol",
        "twisted.internet.interfaces",
        "twisted.python.compat._PY3",
        "twisted.test.proto_helpers.AccumulatingProtocol",
        "twisted.internet.address.IPv4Address",
        "resource",
        "socket",
        "twisted.python.log.err",
        "twisted.internet.interfaces.IPullProducer",
        "twisted.protocols.policies",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/test/test_tcp_internals.py": [
        "twisted.internet.process._listOpenFDs",
        "twisted.internet.reactor",
        "twisted.internet.tcp.EMFILE",
        "__future__.absolute_import",
        "twisted.internet.tcp.ENFILE",
        "twisted.python.log",
        "twisted.internet.tcp.ENOMEM",
        "errno",
        "twisted.internet.tcp.EINPROGRESS",
        "twisted.trial.unittest.TestCase",
        "twisted.python.runtime.platform",
        "twisted.internet.tcp.ECONNABORTED",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.internet.tcp.ENOBUFS",
        "twisted.internet.defer.gatherResults",
        "socket",
        "twisted.internet.protocol.ServerFactory",
        "twisted.internet.defer.maybeDeferred",
        "os",
        "twisted.internet.tcp.Port"
    ],
    "/tmp/twisted/twisted/test/test_text.py": [
        "twisted.python.compat.NativeStringIO",
        "twisted.python.text",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/test/test_threadable.py": [
        "__future__.division",
        "twisted.python.threadable",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "sys",
        "threading",
        "pickle"
    ],
    "/tmp/twisted/twisted/test/test_threadpool.py": [
        "__future__.division",
        "twisted.python.threadable",
        "twisted.python.failure",
        "twisted.trial.unittest",
        "twisted._threads.Team",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "weakref",
        "threading",
        "twisted.python.threadpool",
        "gc",
        "twisted._threads.createMemoryWorker",
        "twisted.python.context",
        "time",
        "pickle"
    ],
    "/tmp/twisted/twisted/test/test_threads.py": [
        "twisted.internet.defer",
        "twisted.python.threadable",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.log",
        "twisted.python.threadpool",
        "time",
        "__future__.division",
        "twisted.internet.interfaces",
        "sys",
        "twisted.python.failure",
        "twisted.internet.threads",
        "threading",
        "twisted.internet.error",
        "os"
    ],
    "/tmp/twisted/twisted/test/test_tpfile.py": [
        "twisted.internet.protocol",
        "twisted.protocols.loopback",
        "twisted.trial.unittest",
        "twisted.protocols.basic",
        "twisted.internet.abstract",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/test/test_twistd.py": [
        "twisted.python.usage.UsageError",
        "twisted.application.app",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.scripts._twistd_unix.checkPID",
        "twisted.test.test_process.MockOS",
        "twisted.scripts.twistd",
        "zope.interface.verify.verifyObject",
        "twisted.logger.ILogObserver",
        "twisted.application.service",
        "errno",
        "twisted.scripts._twistd_unix.UnixApplicationRunner",
        "twisted.internet.test.modulehelpers.AlternateReactor",
        "twisted.logger.globalLogBeginner",
        "twisted.logger",
        "twisted.trial.unittest",
        "__future__.division",
        "inspect",
        "twisted.python.fakepwd.UserDatabase",
        "twisted.python.compat._PY3",
        "sys",
        "twisted.internet.defer.Deferred",
        "twisted.python.compat.NativeStringIO",
        "twisted.application.service.IServiceMaker",
        "twisted.python.log.textFromEventDict",
        "twisted.logger.globalLogPublisher",
        "twisted.plugin",
        "twisted.internet.interfaces.IReactorDaemonize",
        "os",
        "signal",
        "twisted.scripts._twistd_unix.UnixAppLogger",
        "twisted.python.log.ILogObserver",
        "pstats",
        "pickle",
        "twisted.application.reactors",
        "twisted.python.components.Componentized"
    ],
    "/tmp/twisted/twisted/test/test_twisted.py": [
        "zope.interface.implementer",
        "zope.interface.Interface",
        "zope.interface.Interface",
        "zope.interface.implementer",
        "zope.interface",
        "zope.interface.Interface",
        "pkg_resources",
        "twisted.trial.unittest.SkipTest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted._checkRequirements",
        "twisted",
        "twisted.trial.unittest.TestCase",
        "types.ModuleType",
        "__future__.division",
        "sys",
        "twisted.python.reflect",
        "types.FunctionType"
    ],
    "/tmp/twisted/twisted/test/test_udp.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.compat.intToBytes",
        "__future__.division",
        "twisted.internet.udp",
        "twisted.internet.interfaces",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.maybeDeferred",
        "twisted.internet.defer.gatherResults",
        "twisted.internet.error",
        "twisted.python.runtime"
    ],
    "/tmp/twisted/twisted/test/test_unix.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.test.test_tcp.MyServerFactory",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.test.test_tcp.MyClientFactory",
        "twisted.internet.utils",
        "__future__.division",
        "twisted.internet.interfaces",
        "sys",
        "twisted.internet.address",
        "twisted.python.lockfile",
        "types",
        "socket",
        "twisted.python.filepath.FilePath",
        "twisted.internet.error",
        "os"
    ],
    "/tmp/twisted/twisted/test/test_usage.py": [
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.usage",
        "__future__.division"
    ],
    "/tmp/twisted/twisted/test/testutils.py": [
        "xml.dom.minidom",
        "twisted.internet.protocol.FileWrapper",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/trial/__init__.py": [],
    "/tmp/twisted/twisted/trial/__main__.py": [
        "sys",
        "pkg_resources.load_entry_point"
    ],
    "/tmp/twisted/twisted/trial/_asyncrunner.py": [
        "__future__.division",
        "twisted.trial._synctest._logObserver",
        "twisted.trial.reporter",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "gc",
        "doctest",
        "twisted.python.components",
        "twisted.trial.itrial"
    ],
    "/tmp/twisted/twisted/trial/_asynctest.py": [
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "__future__.division",
        "twisted.trial._synctest.FailTest",
        "twisted.trial._synctest.SkipTest",
        "twisted.internet.utils",
        "inspect",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.trial.util",
        "twisted.python.failure",
        "warnings",
        "twisted.trial._synctest.SynchronousTestCase",
        "twisted.trial.itrial"
    ],
    "/tmp/twisted/twisted/trial/_synctest.py": [
        "twisted.python.reflect.fullyQualifiedName",
        "twisted.python.util.runWithWarningsSuppressed",
        "__future__.absolute_import",
        "unittest",
        "twisted.python.log",
        "twisted.python.deprecate.warnAboutFunction",
        "tempfile",
        "twisted.trial.itrial",
        "dis.findlinestarts",
        "__future__.division",
        "warnings",
        "inspect",
        "twisted.trial.util",
        "twisted.python.failure",
        "twisted.python.deprecate.getDeprecationWarningString",
        "types",
        "twisted.python.monkey",
        "sys",
        "os"
    ],
    "/tmp/twisted/twisted/trial/itrial.py": [
        "__future__.division",
        "zope.interface",
        "zope.interface.Attribute",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/trial/reporter.py": [
        "curses",
        "win32console.FOREGROUND_BLUE",
        "win32console.GetStdHandle",
        "win32console.FOREGROUND_GREEN",
        "win32console.FOREGROUND_RED",
        "win32console.FOREGROUND_INTENSITY",
        "win32console.STD_OUTPUT_HANDLE",
        "win32console",
        "pywintypes",
        "collections.OrderedDict",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.util.untilConcludes",
        "twisted.trial.itrial",
        "twisted.python.log",
        "unittest",
        "twisted.python.failure.Failure",
        "twisted.python.components.proxyForInterface",
        "__future__.division",
        "warnings",
        "time",
        "twisted.python.compat._PY3",
        "sys",
        "twisted.trial.unittest.makeTodo",
        "twisted.python.reflect",
        "twisted.trial.util",
        "twisted.python.compat.items",
        "os"
    ],
    "/tmp/twisted/twisted/trial/runner.py": [
        "twisted.internet.reactor",
        "importlib.machinery.SourceFileLoader",
        "twisted.internet.defer",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.trial._asyncrunner._iterateTests",
        "twisted.trial.reporter._ExitWrapper",
        "twisted.trial.unittest.TestSuite",
        "twisted.python.log",
        "twisted.python.filepath",
        "twisted.trial.reporter.UncleanWarningsReporterWrapper",
        "imp",
        "__future__.division",
        "warnings",
        "inspect",
        "zope.interface.implementer",
        "sys",
        "twisted.python.failure",
        "types",
        "twisted.python.reflect",
        "twisted.trial._synctest._logObserver",
        "twisted.trial.itrial.ITestCase",
        "twisted.python.modules",
        "twisted.trial._asyncrunner._ForceGarbageCollectionDecorator",
        "doctest",
        "time",
        "os",
        "twisted.trial.util"
    ],
    "/tmp/twisted/twisted/trial/test/__init__.py": [],
    "/tmp/twisted/twisted/trial/test/detests.py": [
        "__future__.division",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.trial.util.suppress",
        "twisted.trial.unittest",
        "twisted.python.util.runWithWarningsSuppressed",
        "__future__.absolute_import",
        "twisted.internet.threads"
    ],
    "/tmp/twisted/twisted/trial/test/erroneous.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "__future__.division",
        "twisted.trial.util"
    ],
    "/tmp/twisted/twisted/trial/test/mockcustomsuite.py": [
        "twisted.trial.runner",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/trial/test/mockcustomsuite2.py": [
        "twisted.trial.runner",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/trial/test/mockcustomsuite3.py": [
        "twisted.trial.runner",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/trial/test/mockdoctest.py": [
        "__future__.division",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/trial/test/moduleself.py": [
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/trial/test/moduletest.py": [],
    "/tmp/twisted/twisted/trial/test/novars.py": [],
    "/tmp/twisted/twisted/trial/test/ordertests.py": [
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/trial/test/packages.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "sys",
        "os"
    ],
    "/tmp/twisted/twisted/trial/test/sample.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "unittest",
        "twisted.python.util.mergeFunctionMetadata"
    ],
    "/tmp/twisted/twisted/trial/test/scripttest.py": [],
    "/tmp/twisted/twisted/trial/test/skipping.py": [
        "twisted.trial.unittest.SkipTest",
        "__future__.absolute_import",
        "twisted.trial.unittest.TestCase",
        "twisted.trial.unittest.FailTest",
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase"
    ],
    "/tmp/twisted/twisted/trial/test/suppression.py": [
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "__future__.division",
        "warnings",
        "twisted.trial.util"
    ],
    "/tmp/twisted/twisted/trial/test/test_assertions.py": [
        "twisted.python.reflect.prefixedMethods",
        "twisted.python.reflect.fullyQualifiedName",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "incremental.Version",
        "twisted.internet.defer.fail",
        "unittest",
        "twisted.python.util.FancyEqMixin",
        "twisted.python.reflect.accumulateMethods",
        "twisted.python.failure.Failure",
        "__future__.division",
        "incremental.getVersionString",
        "warnings",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.python.deprecate.deprecated"
    ],
    "/tmp/twisted/twisted/trial/test/test_asyncassertions.py": [
        "twisted.internet.defer",
        "__future__.division",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.failure",
        "unittest"
    ],
    "/tmp/twisted/twisted/trial/test/test_deferred.py": [
        "twisted.internet.reactor",
        "__future__.division",
        "twisted.trial.reporter",
        "twisted.trial.util",
        "twisted.trial.unittest",
        "twisted.trial.test.detests",
        "__future__.absolute_import",
        "twisted.internet.defer",
        "unittest"
    ],
    "/tmp/twisted/twisted/trial/test/test_doctest.py": [
        "__future__.division",
        "twisted.trial.reporter",
        "twisted.trial.runner",
        "twisted.trial.unittest",
        "twisted.trial.test.mockdoctest",
        "__future__.absolute_import",
        "twisted.trial.itrial"
    ],
    "/tmp/twisted/twisted/trial/test/test_keyboard.py": [
        "__future__.division",
        "twisted.trial.reporter",
        "twisted.trial.runner",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.compat.NativeStringIO"
    ],
    "/tmp/twisted/twisted/trial/test/test_loader.py": [
        "twisted",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "goodpackage.test_sample",
        "goodpackage",
        "goodpackage",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.erroneous",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "goodpackage",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "goodpackage",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "twisted.trial.test.sample",
        "goodpackage",
        "goodpackage",
        "package",
        "twisted.trial.test.mockcustomsuite",
        "twisted.trial.test.mockcustomsuite2",
        "twisted.trial.test.mockcustomsuite3",
        "twisted.trial.test.mockcustomsuite2",
        "twisted.python.test.test_zippath.zipit",
        "uberpackage",
        "twisted.trial.runner",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.trial._asyncrunner._iterateTests",
        "unittest",
        "twisted.python.filepath",
        "__future__.division",
        "twisted.trial.reporter",
        "twisted.python.util",
        "twisted.python.modules.getModule",
        "twisted.trial.test.packages",
        "hashlib.md5",
        "sys",
        "twisted.trial.itrial.ITestCase",
        "os"
    ],
    "/tmp/twisted/twisted/trial/test/test_log.py": [
        "__future__.division",
        "twisted.internet.task",
        "twisted.internet.reactor",
        "twisted.trial.reporter",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.failure",
        "time",
        "twisted.trial._synctest",
        "twisted.python.log"
    ],
    "/tmp/twisted/twisted/trial/test/test_output.py": [
        "twisted.trial.reporter",
        "__future__.division",
        "twisted.trial.runner",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.scripts.trial",
        "twisted.python.compat.NativeStringIO",
        "twisted.trial.test.packages",
        "os",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/trial/test/test_plugins.py": [
        "twisted.trial.unittest",
        "twisted.trial.itrial.IReporter",
        "twisted.plugin.getPlugins"
    ],
    "/tmp/twisted/twisted/trial/test/test_pyunitcompat.py": [
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.trial.itrial.ITestCase",
        "traceback",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "sys",
        "twisted.python.failure.Failure",
        "twisted.trial.itrial.IReporter",
        "unittest",
        "twisted.trial.unittest.PyUnitResultAdapter"
    ],
    "/tmp/twisted/twisted/trial/test/test_reporter.py": [
        "twisted.trial.test.erroneous",
        "twisted.internet.reactor",
        "twisted.trial.test.erroneous",
        "twisted.trial.runner",
        "twisted.trial.unittest.SkipTest",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.trial.test.sample",
        "twisted.trial.reporter._ExitWrapper",
        "twisted.trial.itrial",
        "twisted.python.log",
        "re",
        "errno",
        "twisted.trial.reporter.UncleanWarningsReporterWrapper",
        "twisted.python.failure.Failure",
        "StringIO.StringIO",
        "__future__.division",
        "twisted.trial.reporter",
        "unittest.expectedFailure",
        "twisted.trial.util",
        "twisted.python.compat.NativeStringIO",
        "twisted.trial.unittest.makeTodo",
        "inspect.getmro",
        "sys",
        "unittest.TestCase",
        "twisted.trial.unittest.Todo",
        "twisted.python.reflect",
        "os"
    ],
    "/tmp/twisted/twisted/trial/test/test_runner.py": [
        "twisted.internet.defer",
        "twisted.python.reflect.namedAny",
        "twisted.trial.runner",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.log",
        "twisted.trial.util",
        "__future__.division",
        "twisted.trial.reporter",
        "sys",
        "twisted.python.failure",
        "twisted.python.compat.NativeStringIO",
        "twisted.trial.itrial.IReporter",
        "twisted.python.reflect",
        "twisted.python.filepath.FilePath",
        "twisted.trial.itrial.ITestCase",
        "zope.interface.verify.verifyObject",
        "twisted.plugin",
        "twisted.plugins.twisted_trial",
        "twisted.trial._asyncrunner._ForceGarbageCollectionDecorator",
        "twisted.scripts.trial",
        "os",
        "pdb"
    ],
    "/tmp/twisted/twisted/trial/test/test_script.py": [
        "smtplib",
        "imaplib",
        "twisted_toptobottom_temp.test_missing",
        "twisted.python.usage.UsageError",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "gc",
        "twisted.trial.test.test_loader.testNames",
        "twisted.trial.runner.TrialRunner",
        "twisted.trial.runner.TestSuite",
        "twisted.trial.runner.DestructiveTestSuite",
        "re",
        "twisted.trial.runner.TestLoader",
        "__future__.division",
        "textwrap",
        "twisted.python.util",
        "twisted.python.compat.NativeStringIO",
        "types",
        "sys",
        "twisted.python.filepath.FilePath",
        "twisted.scripts.trial",
        "twisted.trial._dist.disttrial.DistTrialRunner"
    ],
    "/tmp/twisted/twisted/trial/test/test_suppression.py": [
        "__future__.division",
        "twisted.python.reflect.namedAny",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.trial.test.suppression",
        "unittest"
    ],
    "/tmp/twisted/twisted/trial/test/test_testcase.py": [
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase",
        "__future__.absolute_import",
        "twisted.trial.unittest.TestCase"
    ],
    "/tmp/twisted/twisted/trial/test/test_tests.py": [
        "twisted.trial.test.weird",
        "twisted.trial.test.test_reporter.LoggingReporter",
        "twisted.trial.test.test_reporter.LoggingReporter",
        "twisted.internet.defer",
        "twisted.trial.test.erroneous",
        "twisted.internet.reactor",
        "twisted.python.reflect.namedAny",
        "twisted.trial.runner",
        "twisted.trial.unittest",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.trial._asyncrunner._iterateTests",
        "gc",
        "unittest",
        "twisted.trial._asyncrunner._ForceGarbageCollectionDecorator",
        "twisted.trial._asyncrunner._clearSuite",
        "twisted.trial.test.test_suppression.SuppressionMixin",
        "__future__.division",
        "twisted.trial.reporter",
        "twisted.trial.util",
        "twisted.python.compat.NativeStringIO",
        "sys",
        "weakref"
    ],
    "/tmp/twisted/twisted/trial/test/test_util.py": [
        "twisted.internet.defer",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.trial.util.DirtyReactorAggregateError",
        "twisted.python.filepath",
        "twisted.python.failure.Failure",
        "twisted.internet.interfaces.IProcessTransport",
        "__future__.division",
        "twisted.trial.unittest.SynchronousTestCase",
        "sys",
        "twisted.python.compat.NativeStringIO",
        "twisted.trial.util",
        "os",
        "twisted.internet.base.DelayedCall",
        "twisted.trial.util.excInfoOrFailureToExcInfo",
        "twisted.trial.util._Janitor",
        "twisted.trial.util.acquireAttribute"
    ],
    "/tmp/twisted/twisted/trial/test/test_warning.py": [
        "twisted_private_helper.missingsourcefile",
        "importlib.invalidate_caches",
        "twisted_renamed_helper.module",
        "__future__.division",
        "twisted.python.filepath.FilePath",
        "unittest.TestResult",
        "twisted.python.compat.NativeStringIO",
        "twisted.trial.unittest.SynchronousTestCase",
        "warnings",
        "__future__.absolute_import",
        "sys",
        "twisted.trial._synctest._collectWarnings",
        "twisted.trial._synctest._setWarningRegistryToNone"
    ],
    "/tmp/twisted/twisted/trial/test/weird.py": [
        "__future__.division",
        "unittest",
        "__future__.absolute_import",
        "twisted.internet.defer"
    ],
    "/tmp/twisted/twisted/trial/unittest.py": [
        "__future__.division",
        "twisted.trial._asyncrunner.TestSuite",
        "twisted.trial._synctest.FailTest",
        "twisted.trial._synctest.SkipTest",
        "__future__.absolute_import",
        "twisted.trial._asynctest.TestCase",
        "twisted.trial._synctest.SynchronousTestCase",
        "twisted.trial._asyncrunner.TestDecorator",
        "twisted.trial._synctest.makeTodo",
        "twisted.trial._synctest.Todo",
        "twisted.trial._synctest.PyUnitResultAdapter",
        "twisted.trial._asyncrunner.decorate"
    ],
    "/tmp/twisted/twisted/trial/util.py": [
        "twisted.internet.reactor",
        "profile",
        "twisted.internet.defer",
        "random.randrange",
        "twisted.internet.utils",
        "__future__.absolute_import",
        "twisted.python.failure.Failure",
        "__future__.division",
        "twisted.internet.interfaces",
        "__future__.print_function",
        "twisted.python.filepath.FilePath",
        "twisted.python.lockfile.FilesystemLock"
    ],
    "/tmp/twisted/twisted/web/__init__.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "incremental.Version",
        "twisted._version.__version__"
    ],
    "/tmp/twisted/twisted/web/_auth/__init__.py": [],
    "/tmp/twisted/twisted/web/_auth/basic.py": [
        "__future__.division",
        "binascii",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.web.iweb.ICredentialFactory",
        "twisted.cred.error",
        "twisted.cred.credentials"
    ],
    "/tmp/twisted/twisted/web/_auth/digest.py": [
        "__future__.division",
        "zope.interface.implementer",
        "twisted.web.iweb.ICredentialFactory",
        "__future__.absolute_import",
        "twisted.cred.credentials"
    ],
    "/tmp/twisted/twisted/web/_auth/wrapper.py": [
        "__future__.division",
        "twisted.web.resource.IResource",
        "twisted.python.log",
        "twisted.web.util",
        "twisted.cred.credentials.Anonymous",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.web.resource.ErrorPage",
        "twisted.cred.error",
        "twisted.python.components.proxyForInterface"
    ],
    "/tmp/twisted/twisted/web/_element.py": [
        "__future__.division",
        "twisted.web.iweb.IRenderable",
        "twisted.web.error.MissingRenderMethod",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.web.error.MissingTemplateLoader",
        "twisted.web.error.UnexposedMethodError"
    ],
    "/tmp/twisted/twisted/web/_flatten.py": [
        "twisted.web.iweb.IRenderable",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.web._stan.slot",
        "traceback.extract_tb",
        "twisted.python.compat.nativeString",
        "types.GeneratorType",
        "io.BytesIO",
        "__future__.division",
        "twisted.web._stan.CharRef",
        "twisted.internet.defer.Deferred",
        "twisted.web.error.UnsupportedType",
        "twisted.python.compat.iteritems",
        "twisted.web.error.FlattenerError",
        "twisted.web._stan.Comment",
        "twisted.web.error.UnfilledSlot",
        "twisted.web._stan.voidElements",
        "twisted.web._stan.Tag",
        "twisted.web._stan.CDATA",
        "sys.exc_info"
    ],
    "/tmp/twisted/twisted/web/_http2.py": [
        "twisted.internet.reactor",
        "collections.deque",
        "h2.exceptions",
        "twisted.internet.interfaces.IProtocol",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "io",
        "twisted.logger.Logger",
        "twisted.protocols.policies.TimeoutMixin",
        "twisted.internet.interfaces.ITransport",
        "priority",
        "twisted.internet.interfaces.IPushProducer",
        "__future__.division",
        "warnings",
        "sys",
        "twisted.internet.defer.Deferred",
        "twisted.protocols.tls._PullToPush",
        "twisted.internet.interfaces.ISSLTransport",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.interfaces.IConsumer"
    ],
    "/tmp/twisted/twisted/web/_newclient.py": [
        "twisted.internet.error.ConnectionDone",
        "twisted.python.reflect.fullyQualifiedName",
        "twisted.web.iweb.UNKNOWN_LENGTH",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.internet.defer.fail",
        "twisted.web.http.PotentialDataLoss",
        "twisted.python.log",
        "twisted.python.failure.Failure",
        "twisted.web.iweb.IClientRequest",
        "twisted.web.http.NOT_MODIFIED",
        "twisted.web.http._ChunkedTransferDecoder",
        "twisted.web.iweb.IResponse",
        "twisted.python.components.proxyForInterface",
        "__future__.division",
        "twisted.internet.defer.CancelledError",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.internet.interfaces.IPushProducer",
        "twisted.web.http._IdentityTransferDecoder",
        "twisted.protocols.basic.LineReceiver",
        "twisted.internet.protocol.Protocol",
        "twisted.web.http_headers.Headers",
        "twisted.web.http.NO_CONTENT",
        "twisted.web.http._DataLoss",
        "twisted.internet.interfaces.IConsumer",
        "twisted.internet.defer.maybeDeferred"
    ],
    "/tmp/twisted/twisted/web/_responses.py": [
        "__future__.absolute_import",
        "__future__.division"
    ],
    "/tmp/twisted/twisted/web/_stan.py": [
        "__future__.division",
        "__future__.absolute_import",
        "twisted.python.compat.iteritems"
    ],
    "/tmp/twisted/twisted/web/client.py": [
        "twisted.internet.ssl",
        "twisted.internet.ssl",
        "twisted.internet.reactor",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.internet.interfaces.IProtocol",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "functools.wraps",
        "twisted.python.failure.Failure",
        "twisted.python.compat.nativeString",
        "urllib.parse.urljoin",
        "__future__.division",
        "twisted.web.iweb.IPolicyForHTTPS",
        "twisted.web.http_headers.Headers",
        "zlib",
        "zope.interface.implementer",
        "twisted.python.deprecate.getDeprecationWarningString",
        "incremental.Version",
        "twisted.web._newclient.PotentialDataLoss",
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "twisted.web._newclient.HTTP11ClientProtocol",
        "twisted.web.iweb.IResponse",
        "twisted.python.compat.intToBytes",
        "twisted.python.components.proxyForInterface",
        "twisted.internet.endpoints.TCP4ClientEndpoint",
        "twisted.internet.abstract.isIPv6Address",
        "twisted.python.util.InsensitiveDict",
        "twisted.web._newclient.RequestNotSent",
        "os",
        "twisted.internet.ssl.platformTrust",
        "twisted.python.compat._PY3",
        "twisted.web._newclient._WrapperException",
        "twisted.internet.ssl.CertificateOptions",
        "twisted.python.log",
        "twisted.web._newclient.RequestTransmissionFailed",
        "twisted.python.compat.itervalues",
        "twisted.web._newclient.Response",
        "twisted.web.error.SchemeNotSupported",
        "twisted.web._newclient.ResponseNeverReceived",
        "twisted.web._newclient.ResponseDone",
        "urllib.parse.urlunparse",
        "twisted.web.iweb.IAgent",
        "twisted.web._newclient.ResponseFailed",
        "twisted.web.error",
        "twisted.internet.defer",
        "twisted.web.iweb.IBodyProducer",
        "twisted.web.iweb.UNKNOWN_LENGTH",
        "twisted.python.compat.networkString",
        "urllib.parse.urldefrag",
        "twisted.internet.ssl.optionsForClientTLS",
        "twisted.internet.interfaces.IOpenSSLContextFactory",
        "twisted.web.http",
        "warnings",
        "twisted.web._newclient.Request",
        "twisted.internet.endpoints.SSL4ClientEndpoint",
        "twisted.web.iweb.IAgentEndpointFactory",
        "twisted.internet.task"
    ],
    "/tmp/twisted/twisted/web/demo.py": [
        "__future__.division",
        "twisted.web.static",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/web/error.py": [
        "twisted.web.template.Tag",
        "traceback.format_list",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "future_builtins.ascii",
        "twisted.python.compat.intToBytes",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "twisted.web._responses.RESPONSES",
        "collections.Sequence"
    ],
    "/tmp/twisted/twisted/web/guard.py": [
        "__future__.division",
        "twisted.web._auth.basic.BasicCredentialFactory",
        "__future__.absolute_import",
        "twisted.web._auth.wrapper.HTTPAuthSessionWrapper",
        "twisted.web._auth.digest.DigestCredentialFactory"
    ],
    "/tmp/twisted/twisted/web/html.py": [
        "twisted.python.log",
        "twisted.python.compat.NativeStringIO",
        "twisted.python.deprecate.deprecated",
        "incremental.Version",
        "cgi.escape"
    ],
    "/tmp/twisted/twisted/web/http.py": [
        "twisted.internet.reactor",
        "twisted.internet.protocol",
        "twisted.web._responses.PROXY_AUTH_REQUIRED",
        "twisted.internet.interfaces.IProtocol",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "tempfile",
        "base64",
        "twisted.python.compat.nativeString",
        "twisted.web._responses.SERVICE_UNAVAILABLE",
        "twisted.web._responses.CREATED",
        "twisted.web._responses.RESET_CONTENT",
        "twisted.web._responses.PRECONDITION_FAILED",
        "twisted.python.compat._PY3",
        "twisted.web.http_headers.Headers",
        "twisted.web._responses.NOT_ACCEPTABLE",
        "urllib.parse.urlparse",
        "twisted.web._responses.MULTI_STATUS",
        "twisted.web._responses.SWITCHING",
        "twisted.web._responses.OK",
        "twisted.web._responses.NOT_IMPLEMENTED",
        "twisted.web.iweb.INonQueuedRequestFactory",
        "twisted.web._responses.NOT_ALLOWED",
        "urllib.parse.unquote_to_bytes",
        "twisted.web._responses.BAD_GATEWAY",
        "zope.interface.implementer",
        "incremental.Version",
        "calendar",
        "twisted.web._responses.ACCEPTED",
        "twisted.web._responses.EXPECTATION_FAILED",
        "twisted.web._responses.USE_PROXY",
        "twisted.web._responses.FORBIDDEN",
        "twisted.python.compat.intToBytes",
        "twisted.web._responses.BAD_REQUEST",
        "zope.interface.provider",
        "twisted.python.components.proxyForInterface",
        "twisted.internet.interfaces",
        "math",
        "cgi",
        "twisted.web._responses.NOT_MODIFIED",
        "twisted.web._responses.PAYMENT_REQUIRED",
        "urllib.parse.ParseResultBytes",
        "twisted.internet.defer.Deferred",
        "twisted.web._responses.UNSUPPORTED_MEDIA_TYPE",
        "twisted.web._responses.INSUFFICIENT_STORAGE_SPACE",
        "twisted.internet.address",
        "twisted.web._responses.REQUEST_URI_TOO_LONG",
        "io.BytesIO",
        "twisted.python.deprecate.deprecated",
        "twisted.web._responses.NO_CONTENT",
        "os",
        "twisted.web._responses.GONE",
        "twisted.web._responses.MOVED_PERMANENTLY",
        "twisted.web._responses.REQUEST_TIMEOUT",
        "twisted.python.log",
        "twisted.web._responses.MULTIPLE_CHOICE",
        "twisted.web._responses.HTTP_VERSION_NOT_SUPPORTED",
        "binascii",
        "twisted.protocols.basic",
        "twisted.web._responses.PARTIAL_CONTENT",
        "twisted.web.iweb.IRequest",
        "twisted.web._responses.LENGTH_REQUIRED",
        "twisted.protocols.policies",
        "twisted.web._responses.REQUESTED_RANGE_NOT_SATISFIABLE",
        "__future__.division",
        "twisted.python.compat.networkString",
        "twisted.web._responses.GATEWAY_TIMEOUT",
        "twisted.web._responses.NON_AUTHORITATIVE_INFORMATION",
        "twisted.web._responses.CONFLICT",
        "twisted.web._responses.TEMPORARY_REDIRECT",
        "twisted.web._responses.INTERNAL_SERVER_ERROR",
        "warnings",
        "twisted.web._responses.REQUEST_ENTITY_TOO_LARGE",
        "twisted.web._responses.FOUND",
        "twisted.web._responses.NOT_FOUND",
        "twisted.web.iweb.IAccessLogFormatter",
        "twisted.web._responses.NOT_EXTENDED",
        "twisted.web._responses.RESPONSES",
        "twisted.web._responses.UNAUTHORIZED",
        "time",
        "twisted.web._responses.SEE_OTHER"
    ],
    "/tmp/twisted/twisted/web/http_headers.py": [
        "__future__.division",
        "twisted.python.compat.comparable",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.python.compat.cmp"
    ],
    "/tmp/twisted/twisted/web/iweb.py": [
        "zope.interface.Attribute",
        "twisted.cred.credentials.IUsernameDigestHash",
        "twisted.internet.interfaces.IPushProducer",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/web/proxy.py": [
        "__future__.division",
        "twisted.web.http._QUEUED_SENTINEL",
        "twisted.web.resource.Resource",
        "twisted.internet.reactor",
        "twisted.web.http.Request",
        "__future__.absolute_import",
        "twisted.python.compat.urlquote",
        "twisted.web.http.HTTPChannel",
        "twisted.internet.protocol.ClientFactory",
        "twisted.python.compat.urllib_parse",
        "twisted.web.http.HTTPClient",
        "twisted.web.server.NOT_DONE_YET"
    ],
    "/tmp/twisted/twisted/web/resource.py": [
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.web.error.UnsupportedMethod",
        "twisted.web._responses.FORBIDDEN",
        "zope.interface.Interface",
        "twisted.python.components.proxyForInterface",
        "__future__.division",
        "twisted.python.compat.nativeString",
        "warnings",
        "twisted.web._responses.NOT_FOUND",
        "zope.interface.Attribute",
        "twisted.python.reflect.prefixedMethodNames"
    ],
    "/tmp/twisted/twisted/web/script.py": [
        "quixote.ptl_compile",
        "twisted.python.compat._PY3",
        "twisted.python.filepath._coerceToFilesystemEncoding",
        "twisted.python.compat.networkString",
        "twisted.web.static",
        "twisted.copyright",
        "twisted.python.compat.execfile",
        "__future__.division",
        "twisted.web.http",
        "twisted.web.util",
        "twisted.python.compat.NativeStringIO",
        "__future__.absolute_import",
        "twisted.web.resource",
        "traceback",
        "twisted.web.server",
        "os"
    ],
    "/tmp/twisted/twisted/web/server.py": [
        "twisted.python.urlpath",
        "twisted.internet.reactor",
        "twisted.python.logfile",
        "twisted.web.http.unquote",
        "twisted.spread.pb.ViewPoint",
        "twisted.spread.pb.Copyable",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "incremental.Version",
        "twisted.python.compat.escape",
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "twisted.web.error.UnsupportedMethod",
        "twisted.python.log",
        "twisted.copyright",
        "twisted.python.compat.intToBytes",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "twisted.web.http",
        "twisted.internet.interfaces",
        "twisted.python.compat._PY3",
        "twisted.web.util",
        "twisted.python.failure",
        "binascii.hexlify",
        "twisted.internet.address",
        "copy",
        "twisted.python.reflect",
        "urllib.parse.quote",
        "twisted.web.resource",
        "twisted.web.iweb",
        "zlib",
        "twisted.python.components",
        "os"
    ],
    "/tmp/twisted/twisted/web/static.py": [
        "urllib.unquote",
        "twisted.internet.abstract",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "incremental.Version",
        "twisted.python.compat.escape",
        "twisted.python.runtime.platformType",
        "twisted.python.log",
        "twisted.python.filepath",
        "errno",
        "twisted.python.compat.intToBytes",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "mimetypes",
        "twisted.web.http",
        "warnings",
        "twisted.python.url.URL",
        "urllib.quote",
        "twisted.internet.interfaces",
        "twisted.python.compat._PY3",
        "twisted.python.util.InsensitiveDict",
        "twisted.web.util.redirectTo",
        "twisted.web.resource",
        "twisted.python.deprecate.deprecated",
        "twisted.web.server",
        "itertools",
        "twisted.python.components",
        "time",
        "os"
    ],
    "/tmp/twisted/twisted/web/tap.py": [
        "twisted.internet.ssl.DefaultOpenSSLContextFactory",
        "twisted.web.wsgi",
        "twisted.internet.reactor",
        "twisted.web.demo",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.web.static",
        "twisted.web.distrib",
        "twisted.python.threadpool",
        "twisted.application.service",
        "twisted.web.script",
        "twisted.web.twcgi",
        "twisted.spread.pb",
        "twisted.application.internet",
        "twisted.python.usage",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.python.reflect",
        "twisted.application.strports",
        "twisted.web.server",
        "os"
    ],
    "/tmp/twisted/twisted/web/template.py": [
        "collections.OrderedDict",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.web._element.renderer",
        "twisted.web._flatten.flattenString",
        "twisted.web._stan.slot",
        "twisted.python.log",
        "twisted.web.util",
        "xml.sax.handler",
        "__future__.division",
        "warnings",
        "twisted.web._stan.CharRef",
        "twisted.web._element.Element",
        "twisted.python.compat.NativeStringIO",
        "xml.sax.make_parser",
        "twisted.web.iweb.ITemplateLoader",
        "twisted.web._stan.Comment",
        "twisted.python.filepath.FilePath",
        "twisted.python.compat.items",
        "twisted.web._stan.Tag",
        "twisted.web._stan.CDATA",
        "twisted.web._flatten.flatten"
    ],
    "/tmp/twisted/twisted/web/test/__init__.py": [],
    "/tmp/twisted/twisted/web/test/_util.py": [
        "twisted.web._flatten.flattenString",
        "__future__.division",
        "__future__.absolute_import",
        "twisted.web.server",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.internet.defer.succeed",
        "twisted.web.error.FlattenerError"
    ],
    "/tmp/twisted/twisted/web/test/requesthelper.py": [
        "twisted.internet.address.IPv4Address",
        "__future__.division",
        "incremental.Version",
        "twisted.web.server.NOT_DONE_YET",
        "twisted.internet.interfaces.ISSLTransport",
        "twisted.python.deprecate.deprecated",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.web.server.Site",
        "twisted.internet.defer.Deferred",
        "twisted.python.compat.intToBytes",
        "twisted.web.server.Session",
        "twisted.web._responses.FOUND",
        "twisted.web.resource.Resource",
        "twisted.web.http_headers.Headers",
        "io.BytesIO"
    ],
    "/tmp/twisted/twisted/web/test/test_agent.py": [
        "twisted.web.client.WebClientContextFactory",
        "twisted.web.client.HTTPConnectionPool",
        "twisted.python.failure.Failure",
        "io.BytesIO",
        "twisted.web.iweb.IPolicyForHTTPS",
        "twisted.internet.defer.CancelledError",
        "twisted.web.client.URI",
        "twisted.python.compat.cookielib",
        "twisted.internet.protocol.Protocol",
        "twisted.web.client.FileBodyProducer",
        "twisted.internet.error.ConnectionDone",
        "twisted.internet.task.Clock",
        "zope.interface.declarations.implementer",
        "twisted.python.deprecate.getDeprecationWarningString",
        "incremental.Version",
        "twisted.web._newclient.PotentialDataLoss",
        "twisted.web._newclient.HTTP11ClientProtocol",
        "twisted.test.proto_helpers.MemoryReactorClock",
        "twisted.web.iweb.IResponse",
        "twisted.python.compat.intToBytes",
        "twisted.internet.error.ConnectionRefusedError",
        "twisted.internet.error.ConnectionLost",
        "twisted.python.components.proxyForInterface",
        "twisted.internet.endpoints.TCP4ClientEndpoint",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.web._newclient.RequestNotSent",
        "twisted.protocols.tls.TLSMemoryBIOProtocol",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.web.http_headers",
        "twisted.web._newclient.RequestTransmissionFailed",
        "twisted.web._newclient.Response",
        "twisted.internet.interfaces.IOpenSSLClientConnectionCreator",
        "twisted.web.error.SchemeNotSupported",
        "twisted.web._newclient.ResponseNeverReceived",
        "twisted.web.client._HTTP11ClientFactory",
        "twisted.web.client.ResponseDone",
        "twisted.internet._sslverify.ClientTLSOptions",
        "zlib",
        "twisted.web.iweb.IAgent",
        "twisted.web._newclient.ResponseFailed",
        "twisted.web.client.BrowserLikePolicyForHTTPS",
        "twisted.web.error",
        "twisted.internet.defer",
        "twisted.web.iweb.IBodyProducer",
        "twisted.web.iweb.UNKNOWN_LENGTH",
        "twisted.internet.protocol.Factory",
        "twisted.internet._sslverify.IOpenSSLTrustRoot",
        "twisted.trial.unittest.TestCase",
        "twisted.protocols.tls.TLSMemoryBIOFactory",
        "twisted.web.client.Request",
        "twisted.internet.endpoints.SSL4ClientEndpoint",
        "twisted.web.iweb.IAgentEndpointFactory",
        "twisted.internet.task",
        "twisted.web.http_headers.Headers",
        "zope.interface.verify.verifyObject",
        "twisted.web.client"
    ],
    "/tmp/twisted/twisted/web/test/test_error.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "traceback",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "sys",
        "re",
        "twisted.web.template.Tag",
        "twisted.python.compat.nativeString",
        "twisted.web.error"
    ],
    "/tmp/twisted/twisted/web/test/test_flatten.py": [
        "twisted.web.iweb.IRenderable",
        "collections.OrderedDict",
        "zope.interface.implementer",
        "twisted.web.template.renderer",
        "twisted.web.template.flattenString",
        "twisted.web.template.slot",
        "twisted.trial.unittest.TestCase",
        "xml.etree.cElementTree.XML",
        "twisted.internet.defer.gatherResults",
        "twisted.web.template.tags",
        "twisted.web.template.CharRef",
        "twisted.web.template.Element",
        "sys",
        "twisted.web.error.UnsupportedType",
        "twisted.internet.defer.succeed",
        "twisted.web.error.FlattenerError",
        "twisted.internet.defer.passthru",
        "twisted.web.error.UnfilledSlot",
        "traceback",
        "twisted.web.template.TagLoader",
        "twisted.web.template.Tag",
        "twisted.web.template.CDATA",
        "twisted.web.test._util.FlattenTestCase",
        "twisted.test.testutils.XMLAssertionMixin",
        "twisted.web.template.Comment"
    ],
    "/tmp/twisted/twisted/web/test/test_http.py": [
        "twisted.internet.task.Clock",
        "twisted.trial.unittest",
        "random",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.test.test_internet.DummyProducer",
        "urllib.parse.urlunsplit",
        "twisted.python.compat.unicode",
        "calendar",
        "twisted.web.http.PotentialDataLoss",
        "twisted.test.proto_helpers.StringTransport",
        "urllib.parse.clear_cache",
        "base64",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.python.compat.intToBytes",
        "zope.interface.provider",
        "twisted.protocols.loopback",
        "cgi",
        "__future__.division",
        "twisted.web.http",
        "twisted.web.test.requesthelper.DummyChannel",
        "twisted.python.compat.NativeStringIO",
        "twisted.python.compat.iterbytes",
        "twisted.web.http._IdentityTransferDecoder",
        "twisted.python.compat.networkString",
        "twisted.web.iweb",
        "twisted.web.http_headers",
        "twisted.web.http._DataLoss",
        "urllib.parse.urlparse",
        "twisted.internet.error.ConnectionLost"
    ],
    "/tmp/twisted/twisted/web/test/test_http2.py": [
        "twisted.web.test.test_http.DummyHTTPHandler",
        "twisted.internet.defer",
        "twisted.web._http2.H2Connection",
        "twisted.internet.reactor",
        "twisted.protocols.test.test_tls.NonStreamingProducer",
        "h2.errors",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.test.test_internet.DummyProducer",
        "priority",
        "twisted.test.proto_helpers.StringTransport",
        "hyperframe",
        "hpack.hpack.Encoder",
        "twisted.web.test.test_http.DelayedHTTPHandler",
        "hpack.hpack.Decoder",
        "__future__.division",
        "twisted.web.http",
        "twisted.python.compat.iterbytes",
        "twisted.internet.address.IPv4Address",
        "twisted.internet.task",
        "itertools"
    ],
    "/tmp/twisted/twisted/web/test/test_http_headers.py": [
        "__future__.division",
        "__future__.absolute_import",
        "twisted.python.compat._PY3",
        "twisted.trial.unittest.TestCase",
        "twisted.web.http_headers.Headers"
    ],
    "/tmp/twisted/twisted/web/test/test_httpauth.py": [
        "twisted.web.server.NOT_DONE_YET",
        "twisted.internet.error.ConnectionDone",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.web.resource.Resource",
        "twisted.web._auth.digest",
        "twisted.web._auth.wrapper.UnauthorizedResource",
        "base64",
        "twisted.cred.credentials.IUsernamePassword",
        "twisted.python.failure.Failure",
        "twisted.web._auth.basic",
        "twisted.web.static.Data",
        "__future__.division",
        "twisted.web.resource.IResource",
        "twisted.web.iweb.ICredentialFactory",
        "twisted.cred.checkers.AllowAnonymousAccess",
        "twisted.cred.portal",
        "twisted.internet.address.IPv4Address",
        "twisted.web._auth.basic.BasicCredentialFactory",
        "zope.interface.verify.verifyObject",
        "twisted.web.test.test_web.DummyRequest",
        "twisted.cred.checkers.InMemoryUsernamePasswordDatabaseDontUse",
        "twisted.web._auth.wrapper.HTTPAuthSessionWrapper",
        "twisted.cred.checkers.ANONYMOUS",
        "twisted.cred.error",
        "twisted.web.resource.getChildForRequest"
    ],
    "/tmp/twisted/twisted/web/test/test_newclient.py": [
        "twisted.web._newclient.BODY",
        "twisted.web.iweb.IBodyProducer",
        "twisted.web._newclient.BadHeaders",
        "twisted.internet.error.ConnectionDone",
        "twisted.web._newclient.TransportProxyProducer",
        "twisted.web._newclient.ExcessWrite",
        "twisted.web._newclient.ChunkedEncoder",
        "twisted.web._newclient.UNKNOWN_LENGTH",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.web._newclient.ConnectionAborted",
        "twisted.web._newclient.DONE",
        "twisted.internet.defer.fail",
        "twisted.web._newclient.PotentialDataLoss",
        "twisted.web._newclient.ResponseFailed",
        "twisted.web._newclient.HTTP11ClientProtocol",
        "twisted.python.log",
        "twisted.web._newclient.RequestTransmissionFailed",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.web.http_headers.Headers",
        "twisted.web._newclient.Response",
        "twisted.web._newclient.STATUS",
        "__future__.division",
        "twisted.web._newclient.RequestGenerationFailed",
        "twisted.web._newclient.BadResponseVersion",
        "twisted.internet.defer.CancelledError",
        "twisted.web._newclient.ResponseNeverReceived",
        "twisted.web._newclient.Request",
        "twisted.web._newclient.ParseError",
        "twisted.web._newclient.HEADER",
        "twisted.internet.defer.succeed",
        "twisted.web._newclient.ResponseDone",
        "twisted.test.proto_helpers.AccumulatingProtocol",
        "twisted.web._newclient.WrongBodyLength",
        "twisted.web.iweb.IResponse",
        "twisted.internet.interfaces.IPushProducer",
        "twisted.web._newclient.HTTPClientParser",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.defer.Deferred",
        "zope.interface.verify.verifyObject",
        "twisted.web._newclient.HTTPParser",
        "twisted.web._newclient.LengthEnforcingConsumer",
        "twisted.web.http._DataLoss",
        "twisted.internet.interfaces.IConsumer",
        "twisted.internet.error.ConnectionLost",
        "twisted.web._newclient.RequestNotSent",
        "twisted.web._newclient.makeStatefulDispatcher"
    ],
    "/tmp/twisted/twisted/web/test/test_proxy.py": [
        "twisted.web.resource.Resource",
        "twisted.web.proxy.ReverseProxyResource",
        "twisted.web.test.test_web.DummyRequest",
        "twisted.web.server.Site",
        "twisted.web.proxy.ProxyClient",
        "twisted.trial.unittest.TestCase",
        "twisted.web.proxy.ReverseProxyRequest",
        "twisted.web.proxy.ProxyRequest",
        "twisted.web.proxy.ProxyClientFactory",
        "twisted.test.proto_helpers.MemoryReactor",
        "twisted.test.proto_helpers.StringTransportWithDisconnection"
    ],
    "/tmp/twisted/twisted/web/test/test_resource.py": [
        "twisted.web.error.UnsupportedMethod",
        "twisted.web.resource.Resource",
        "twisted.web.resource.FORBIDDEN",
        "twisted.web.test.requesthelper.DummyRequest",
        "twisted.trial.unittest.TestCase",
        "twisted.web.http_headers.Headers",
        "twisted.web.resource.ForbiddenResource",
        "twisted.web.resource.NoResource",
        "twisted.web.resource.ErrorPage",
        "twisted.web.resource.getChildForRequest",
        "twisted.web.resource.NOT_FOUND"
    ],
    "/tmp/twisted/twisted/web/test/test_script.py": [
        "twisted.web.test._util._render",
        "twisted.web.test.requesthelper.DummyRequest",
        "twisted.web.script.ResourceScriptDirectory",
        "twisted.web.script.PythonScript",
        "twisted.python.filepath.FilePath",
        "twisted.trial.unittest.TestCase",
        "twisted.web.http.NOT_FOUND",
        "os"
    ],
    "/tmp/twisted/twisted/web/test/test_stan.py": [
        "twisted.web.template.Comment",
        "__future__.division",
        "twisted.web.template.CharRef",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.trial.unittest.TestCase",
        "twisted.web.template.Tag",
        "twisted.web.template.CDATA"
    ],
    "/tmp/twisted/twisted/web/test/test_static.py": [
        "twisted.web.static.addSlash",
        "twisted.web.test.requesthelper.DummyRequest",
        "twisted.internet.abstract",
        "twisted.python.compat._PY3",
        "twisted.python.compat.networkString",
        "twisted.web.static",
        "twisted.python.runtime.platform",
        "twisted.web.server.UnsupportedMethod",
        "twisted.python.log",
        "twisted.web.script",
        "errno",
        "twisted.trial.unittest.TestCase",
        "re",
        "twisted.python.compat.intToBytes",
        "mimetypes",
        "twisted.web.http",
        "twisted.internet.interfaces",
        "inspect",
        "twisted.web._responses.FOUND",
        "twisted.web.resource",
        "twisted.python.filepath.FilePath",
        "zope.interface.verify.verifyObject",
        "io.BytesIO",
        "twisted.web.test._util._render",
        "os"
    ],
    "/tmp/twisted/twisted/web/test/test_tap.py": [
        "twisted.internet.reactor",
        "twisted.python.usage.UsageError",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.web.wsgi.WSGIResource",
        "twisted.web.distrib.UserDirectory",
        "twisted.trial.unittest.TestCase",
        "twisted.web.static.Data",
        "twisted.web.tap.makeService",
        "__future__.division",
        "stat",
        "twisted.web.script.PythonScript",
        "twisted.internet.interfaces.IReactorUNIX",
        "twisted.spread.pb.PBServerFactory",
        "twisted.web.tap.Options",
        "twisted.application.strports",
        "twisted.python.filepath.FilePath",
        "os",
        "twisted.web.twcgi.CGIScript",
        "twisted.web.server.Site",
        "twisted.web.tap.makePersonalServerFactory",
        "twisted.python.threadpool.ThreadPool",
        "twisted.web.distrib.ResourcePublisher",
        "twisted.web.static.File",
        "twisted.internet.endpoints",
        "twisted.python.reflect.requireModule"
    ],
    "/tmp/twisted/twisted/web/test/test_template.py": [
        "twisted.web.template.XMLFile",
        "twisted.web.server.NOT_DONE_YET",
        "__future__.absolute_import",
        "twisted.web.template.renderer",
        "twisted.python.compat.NativeStringIO",
        "twisted.trial.unittest.TestCase",
        "__future__.division",
        "twisted.web.template.renderElement",
        "twisted.web.template.tags",
        "twisted.web.error.MissingRenderMethod",
        "twisted.trial.util.suppress",
        "twisted.web.template.Element",
        "twisted.internet.defer.succeed",
        "twisted.web.error.FlattenerError",
        "twisted.web.iweb.ITemplateLoader",
        "twisted.internet.defer.gatherResults",
        "twisted.web.template.XMLString",
        "twisted.python.filepath.FilePath",
        "twisted.web.test._util.FlattenTestCase",
        "zope.interface.verify.verifyObject",
        "twisted.web.test.test_web.DummyRequest",
        "twisted.web.template.TagLoader",
        "twisted.web.error.MissingTemplateLoader",
        "twisted.web._element.UnexposedMethodError"
    ],
    "/tmp/twisted/twisted/web/test/test_util.py": [
        "twisted.internet.defer",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "gc",
        "twisted.web.error.FlattenerError",
        "twisted.web.util._StackElement",
        "twisted.web.template.flattenString",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.python.compat.intToBytes",
        "twisted.web.util.FailureElement",
        "twisted.web.util.formatFailure",
        "twisted.web.util._SourceFragmentElement",
        "__future__.division",
        "twisted.web.template.tags",
        "twisted.trial.unittest.SynchronousTestCase",
        "twisted.web.test.requesthelper.DummyChannel",
        "twisted.web.server.Request",
        "twisted.web.util.DeferredResource",
        "twisted.web.util",
        "twisted.web.http.FOUND",
        "twisted.web.util._SourceLineElement",
        "twisted.web.util._FrameElement",
        "twisted.web.util.redirectTo",
        "twisted.web.resource",
        "twisted.web.test.requesthelper.DummyRequest",
        "twisted.web.template.TagLoader"
    ],
    "/tmp/twisted/twisted/web/test/test_vhost.py": [
        "twisted.internet.defer.gatherResults",
        "__future__.division",
        "twisted.web.resource.NoResource",
        "twisted.web.vhost._HostResource",
        "twisted.web.vhost.VHostMonsterResource",
        "twisted.web.test.test_web.DummyRequest",
        "twisted.web.server.Site",
        "__future__.absolute_import",
        "twisted.trial.unittest.TestCase",
        "twisted.web.test._util._render",
        "twisted.web.http.NOT_FOUND",
        "twisted.web.static.Data",
        "twisted.web.vhost.NameVirtualHost"
    ],
    "/tmp/twisted/twisted/web/test/test_web.py": [
        "twisted.internet.reactor",
        "zlib",
        "twisted.internet.reactor",
        "twisted.internet.task.Clock",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "twisted.python.compat.unichr",
        "twisted.web.static.Data",
        "twisted.web.http",
        "twisted.web.test.requesthelper.DummyChannel",
        "twisted.python.compat._PY3",
        "twisted.python.reflect",
        "twisted.python.failure",
        "twisted.internet.address.IPv4Address",
        "twisted.web.resource",
        "twisted.web.iweb",
        "twisted.python.filepath.FilePath",
        "zope.interface.verify.verifyObject",
        "twisted.web.test.requesthelper.DummyRequest",
        "twisted.web.server",
        "twisted.web.error",
        "os"
    ],
    "/tmp/twisted/twisted/web/test/test_web__responses.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.web._responses",
        "string"
    ],
    "/tmp/twisted/twisted/web/test/test_webclient.py": [
        "twisted.web.util.Redirect",
        "twisted.internet.defer",
        "twisted.internet.reactor",
        "twisted.protocols.policies.WrappingFactory",
        "twisted.trial.unittest",
        "twisted.test.proto_helpers.waitUntilAllDisconnected",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "errno.ENOSPC",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.python.compat.intToBytes",
        "twisted.python.compat.nativeString",
        "twisted.python.log.msg",
        "twisted.web.static.Data",
        "urllib.parse.urljoin",
        "__future__.division",
        "twisted.internet.interfaces",
        "twisted.test",
        "twisted.web.resource",
        "twisted.python.filepath.FilePath",
        "twisted.web.server",
        "urllib.parse.urlparse",
        "twisted.web.client",
        "twisted.web.error",
        "os"
    ],
    "/tmp/twisted/twisted/web/test/test_wsgi.py": [
        "StringIO.StringIO",
        "cStringIO.StringIO",
        "io.BytesIO",
        "twisted.internet.reactor",
        "twisted.trial.unittest.SkipTest",
        "twisted.python.compat._PY3",
        "twisted.web.resource.IResource",
        "twisted.web.wsgi.WSGIResource",
        "twisted.python.log.removeObserver",
        "twisted.python.threadable.getThreadID",
        "twisted.trial.unittest.TestCase",
        "twisted.python.failure.Failure",
        "twisted.python.compat.intToBytes",
        "twisted.web.server.version",
        "twisted.web.http",
        "warnings",
        "twisted.web.test.test_web.DummyChannel",
        "twisted.web.server.Request",
        "twisted.internet.defer.Deferred",
        "twisted.python.compat.urlquote",
        "twisted.internet.defer.gatherResults",
        "twisted.python.log.err",
        "zope.interface.verify.verifyObject",
        "traceback",
        "twisted.web.resource.Resource",
        "twisted.web.server.Site",
        "twisted.python.threadpool.ThreadPool",
        "tempfile",
        "twisted.internet.error.ConnectionLost",
        "sys.exc_info",
        "twisted.python.log.addObserver"
    ],
    "/tmp/twisted/twisted/web/test/test_xmlrpc.py": [
        "twisted.internet.defer",
        "twisted.internet.reactor",
        "twisted.web.xmlrpc.XMLRPC",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "datetime",
        "twisted.web.xmlrpc._QueryFactory",
        "twisted.web.static",
        "twisted.web.xmlrpc.addIntrospection",
        "twisted.test.proto_helpers.MemoryReactor",
        "twisted.web.xmlrpc.payloadTemplate",
        "twisted.internet.error.ConnectionDone",
        "twisted.python.compat.nativeString",
        "twisted.web.xmlrpc.withRequest",
        "__future__.division",
        "twisted.web.http",
        "twisted.web.xmlrpc",
        "twisted.python.failure",
        "twisted.python.compat.NativeStringIO",
        "twisted.python.compat.networkString",
        "twisted.web.test.test_web.DummyRequest",
        "twisted.web.xmlrpc.xmlrpclib",
        "twisted.web.server",
        "twisted.web.client",
        "twisted.web.error",
        "twisted.python.reflect.namedModule"
    ],
    "/tmp/twisted/twisted/web/util.py": [
        "twisted.web.server.NOT_DONE_YET",
        "twisted.python.reflect.fullyQualifiedName",
        "twisted.python.urlpath",
        "__future__.absolute_import",
        "twisted.web.template.renderer",
        "twisted.python.compat.unicode",
        "twisted.python.compat.escape",
        "twisted.web.template.flattenString",
        "twisted.python.compat.nativeString",
        "__future__.division",
        "twisted.python.compat._PY3",
        "twisted.web.template.Element",
        "twisted.web.resource",
        "twisted.web.template.XMLString",
        "twisted.web.template.TagLoader",
        "linecache"
    ],
    "/tmp/twisted/twisted/web/vhost.py": [
        "__future__.division",
        "twisted.web.resource",
        "__future__.absolute_import",
        "twisted.python.roots"
    ],
    "/tmp/twisted/twisted/web/wsgi.py": [
        "twisted.web.server.NOT_DONE_YET",
        "twisted.python.log.err",
        "collections.Sequence",
        "zope.interface.implementer",
        "twisted.web.resource.IResource",
        "warnings.warn",
        "twisted.python.failure.Failure",
        "twisted.python.log.msg",
        "sys.exc_info",
        "twisted.python.compat.reraise",
        "twisted.web.http.INTERNAL_SERVER_ERROR",
        "twisted.internet.threads.blockingCallFromThread"
    ],
    "/tmp/twisted/twisted/web/xmlrpc.py": [
        "twisted.internet.ssl",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.python.log",
        "base64",
        "twisted.python.compat.intToBytes",
        "twisted.python.compat.nativeString",
        "twisted.python.compat.urllib_parse",
        "__future__.division",
        "twisted.web.http",
        "twisted.python.reflect",
        "twisted.python.failure",
        "twisted.web.resource",
        "xmlrpclib",
        "twisted.web.server"
    ],
    "/tmp/twisted/twisted/words/__init__.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "incremental.Version",
        "twisted._version.__version__"
    ],
    "/tmp/twisted/twisted/words/ewords.py": [],
    "/tmp/twisted/twisted/words/im/__init__.py": [],
    "/tmp/twisted/twisted/words/im/baseaccount.py": [],
    "/tmp/twisted/twisted/words/im/basechat.py": [
        "twisted.words.im.locals.AWAY",
        "twisted.words.im.locals.ONLINE",
        "twisted.words.im.locals.OFFLINE"
    ],
    "/tmp/twisted/twisted/words/im/basesupport.py": [
        "twisted.persisted.styles",
        "twisted.words.im.locals.OfflineError",
        "twisted.internet.protocol.Protocol",
        "twisted.internet.error",
        "twisted.python.reflect.prefixedMethods",
        "twisted.words.im.locals.OFFLINE"
    ],
    "/tmp/twisted/twisted/words/im/interfaces.py": [
        "zope.interface.Attribute",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/words/im/ircsupport.py": [
        "traceback",
        "twisted.internet.defer",
        "twisted.words.im.basesupport",
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "twisted.words.im.interfaces",
        "zope.interface.implementer",
        "twisted.internet.defer.succeed",
        "twisted.words.im.locals.ONLINE",
        "twisted.words.protocols.irc",
        "twisted.words.im.locals"
    ],
    "/tmp/twisted/twisted/words/im/locals.py": [],
    "/tmp/twisted/twisted/words/im/pbsupport.py": [
        "twisted.internet.defer",
        "twisted.words.im.basesupport",
        "twisted.python.log",
        "twisted.words.im.locals.AWAY",
        "twisted.words.im.locals.ONLINE",
        "zope.interface.implementer",
        "twisted.spread.pb",
        "twisted.python.failure.Failure",
        "twisted.internet.error",
        "twisted.words.im.locals.OFFLINE",
        "twisted.words.im.interfaces",
        "__future__.print_function"
    ],
    "/tmp/twisted/twisted/words/iwords.py": [
        "zope.interface.Attribute",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/words/protocols/__init__.py": [
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "incremental.Version"
    ],
    "/tmp/twisted/twisted/words/protocols/irc.py": [
        "twisted.internet.protocol",
        "twisted.internet.reactor",
        "random",
        "twisted.python.compat.unicode",
        "struct",
        "twisted.persisted.styles",
        "string",
        "textwrap",
        "shlex",
        "functools.reduce",
        "re",
        "socket",
        "traceback",
        "os",
        "os.path",
        "operator",
        "twisted.python.log",
        "errno",
        "twisted.protocols.basic",
        "twisted.python.compat.xrange",
        "stat",
        "sys",
        "twisted.internet.task",
        "twisted.python.reflect",
        "time",
        "twisted.python._textattributes"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/__init__.py": [],
    "/tmp/twisted/twisted/words/protocols/jabber/client.py": [
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.words.xish.domish",
        "twisted.words.xish.utility",
        "twisted.words.xish.xpath",
        "__future__.division",
        "twisted.words.protocols.jabber.jid.JID",
        "twisted.python.compat._coercedUnicode",
        "twisted.words.protocols.jabber.xmlstream",
        "twisted.words.protocols.jabber.error",
        "twisted.words.protocols.jabber.sasl"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/component.py": [
        "twisted.internet.defer",
        "twisted.words.protocols.jabber.ijabber",
        "zope.interface.implementer",
        "twisted.python.compat.unicode",
        "twisted.words.xish.domish",
        "twisted.python.log",
        "twisted.application.service",
        "twisted.words.protocols.jabber.jstrports",
        "twisted.words.protocols.jabber.jid.internJID",
        "twisted.python.compat._coercedUnicode",
        "twisted.words.protocols.jabber.xmlstream",
        "twisted.words.protocols.jabber.error"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/error.py": [
        "twisted.words.protocols.jabber.xmlstream.NS_STREAMS",
        "twisted.words.protocols.jabber.xmlstream.toResponse",
        "__future__.division",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.words.xish.domish",
        "copy"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/ijabber.py": [
        "zope.interface.Attribute",
        "zope.interface.Interface"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/jid.py": [
        "twisted.python.compat._PY3",
        "twisted.words.protocols.jabber.xmpp_stringprep.resourceprep",
        "twisted.words.protocols.jabber.xmpp_stringprep.nameprep",
        "twisted.python.compat.unicode",
        "twisted.words.protocols.jabber.xmpp_stringprep.nodeprep"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/jstrports.py": [
        "twisted.application.internet",
        "__future__.division",
        "__future__.absolute_import",
        "twisted.internet.endpoints._parse"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/sasl.py": [
        "twisted.internet.defer",
        "__future__.division",
        "twisted.words.protocols.jabber.sasl_mechanisms",
        "__future__.absolute_import",
        "re",
        "twisted.words.protocols.jabber.xmlstream",
        "base64.b64encode",
        "twisted.python.compat.unicode",
        "twisted.words.xish.domish",
        "base64.b64decode"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/sasl_mechanisms.py": [
        "__future__.division",
        "zope.interface.Attribute",
        "random",
        "binascii",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "time",
        "zope.interface.Interface",
        "twisted.python.compat.iteritems",
        "os",
        "hashlib.md5"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/xmlstream.py": [
        "twisted.internet.reactor",
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "twisted.words.protocols.jabber.ijabber",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.python.compat.intern",
        "twisted.python.compat.unicode",
        "twisted.python.randbytes",
        "twisted.words.xish.domish",
        "twisted.words.protocols.jabber.jid",
        "twisted.words.xish.xmlstream.STREAM_CONNECTED_EVENT",
        "twisted.python.log",
        "twisted.words.xish.xmlstream.STREAM_START_EVENT",
        "twisted.python.compat.itervalues",
        "twisted.words.xish.xmlstream.STREAM_ERROR_EVENT",
        "__future__.division",
        "zope.interface.directlyProvides",
        "twisted.python.failure",
        "binascii.hexlify",
        "twisted.python.compat.iteritems",
        "hashlib.sha1",
        "twisted.words.xish.xmlstream.STREAM_END_EVENT",
        "twisted.words.xish.xmlstream",
        "twisted.internet.error.ConnectionLost",
        "twisted.words.protocols.jabber.error"
    ],
    "/tmp/twisted/twisted/words/protocols/jabber/xmpp_stringprep.py": [
        "zope.interface.implementer",
        "incremental.Version",
        "twisted.python.compat.unichr",
        "twisted.python.deprecate.deprecatedModuleAttribute",
        "itertools.chain",
        "zope.interface.Interface",
        "unicodedata.ucd_3_2_0",
        "stringprep",
        "encodings.idna"
    ],
    "/tmp/twisted/twisted/words/service.py": [
        "twisted.internet.defer",
        "twisted.internet.protocol",
        "zope.interface.implementer",
        "twisted.cred.error",
        "twisted.python.compat.unicode",
        "twisted.words.iwords",
        "twisted.python.log",
        "twisted.copyright",
        "twisted.spread.pb",
        "twisted.python.compat.itervalues",
        "twisted.words.protocols.irc",
        "twisted.python.reflect",
        "twisted.python.failure",
        "twisted.cred.portal",
        "twisted.python.components.registerAdapter",
        "twisted.cred.credentials",
        "time.ctime",
        "twisted.words.ewords",
        "time.time"
    ],
    "/tmp/twisted/twisted/words/test/__init__.py": [],
    "/tmp/twisted/twisted/words/test/test_basechat.py": [
        "twisted.words.im.basechat",
        "twisted.trial.unittest",
        "twisted.words.im.basesupport"
    ],
    "/tmp/twisted/twisted/words/test/test_basesupport.py": [
        "twisted.internet.defer",
        "twisted.words.im.basesupport",
        "twisted.trial.unittest",
        "twisted.internet.error"
    ],
    "/tmp/twisted/twisted/words/test/test_domish.py": [
        "__future__.division",
        "zope.interface.verify.verifyObject",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.words.xish.domish",
        "twisted.python.reflect.requireModule",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/words/test/test_irc.py": [
        "twisted.test.proto_helpers.StringIOWithoutClosing",
        "twisted.internet.protocol",
        "twisted.python.compat.unicode",
        "operator",
        "twisted.test.proto_helpers.StringTransport",
        "errno",
        "twisted.trial.unittest.TestCase",
        "twisted.words.protocols.irc.IRCClient",
        "twisted.words.protocols.irc",
        "twisted.words.protocols.irc.attributes",
        "twisted.internet.task",
        "twisted.python.filepath.FilePath",
        "time"
    ],
    "/tmp/twisted/twisted/words/test/test_irc_service.py": [
        "twisted.words.test.test_irc.IRCTestCase",
        "twisted.cred.checkers",
        "twisted.words.service.InMemoryWordsRealm",
        "twisted.words.service.IRCUser",
        "twisted.test.proto_helpers",
        "twisted.cred.portal",
        "twisted.words.service.IRCFactory",
        "twisted.words.protocols.irc"
    ],
    "/tmp/twisted/twisted/words/test/test_ircsupport.py": [
        "twisted.words.im.locals.OfflineError",
        "twisted.words.im.ircsupport.IRCProto",
        "twisted.test.proto_helpers.StringTransport",
        "twisted.words.im.basechat.ChatUI",
        "twisted.words.im.ircsupport.IRCAccount",
        "twisted.words.im.basechat.Conversation",
        "twisted.words.im.basechat.GroupConversation",
        "twisted.words.test.test_irc.IRCTestCase"
    ],
    "/tmp/twisted/twisted/words/test/test_jabberclient.py": [
        "twisted.internet.defer",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.words.xish.utility",
        "twisted.words.protocols.jabber.jid",
        "__future__.division",
        "twisted.words.protocols.jabber.sasl.SASLInitiatingInitializer",
        "hashlib.sha1",
        "twisted.words.protocols.jabber.xmlstream",
        "twisted.words.protocols.jabber.client",
        "twisted.words.protocols.jabber.error"
    ],
    "/tmp/twisted/twisted/words/test/test_jabbercomponent.py": [
        "twisted.words.xish.utility.XmlPipe",
        "twisted.words.protocols.jabber.jid.JID",
        "hashlib.sha1",
        "twisted.words.protocols.jabber.ijabber",
        "zope.interface.verify.verifyObject",
        "twisted.words.protocols.jabber.component",
        "twisted.python.failure",
        "twisted.words.protocols.jabber.xmlstream",
        "twisted.python.compat.unicode",
        "twisted.words.xish.domish",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/words/test/test_jabbererror.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.words.protocols.jabber.error",
        "twisted.words.xish.domish"
    ],
    "/tmp/twisted/twisted/words/test/test_jabberjid.py": [
        "twisted.words.protocols.jabber.jid",
        "twisted.python.compat.unicode",
        "twisted.trial.unittest"
    ],
    "/tmp/twisted/twisted/words/test/test_jabberjstrports.py": [
        "__future__.division",
        "twisted.application.internet.TCPClient",
        "twisted.words.protocols.jabber.jstrports",
        "twisted.trial.unittest",
        "__future__.absolute_import"
    ],
    "/tmp/twisted/twisted/words/test/test_jabbersasl.py": [
        "__future__.division",
        "twisted.words.protocols.jabber.jid",
        "twisted.internet.defer",
        "twisted.trial.unittest",
        "zope.interface.implementer",
        "__future__.absolute_import",
        "twisted.words.protocols.jabber.sasl_mechanisms",
        "twisted.words.protocols.jabber.xmlstream",
        "twisted.python.compat.unicode",
        "twisted.words.protocols.jabber.sasl",
        "twisted.words.xish.domish"
    ],
    "/tmp/twisted/twisted/words/test/test_jabbersaslmechanisms.py": [
        "__future__.division",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.compat.networkString",
        "twisted.words.protocols.jabber.sasl_mechanisms"
    ],
    "/tmp/twisted/twisted/words/test/test_jabberxmlstream.py": [
        "twisted.internet.defer",
        "twisted.words.protocols.jabber.ijabber",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.words.xish.domish",
        "twisted.words.protocols.jabber.jid",
        "twisted.test.proto_helpers",
        "twisted.internet.interfaces.IProtocolFactory",
        "__future__.division",
        "twisted.words.test.test_xmlstream.GenericXmlStreamFactoryTestsMixin",
        "twisted.python.failure",
        "twisted.internet.task",
        "zope.interface.verify.verifyObject",
        "twisted.words.protocols.jabber.xmlstream",
        "twisted.internet.error.ConnectionLost",
        "twisted.words.protocols.jabber.error"
    ],
    "/tmp/twisted/twisted/words/test/test_jabberxmppstringprep.py": [
        "twisted.words.protocols.jabber.xmpp_stringprep.crippled",
        "twisted.trial.unittest",
        "twisted.words.protocols.jabber.xmpp_stringprep.resourceprep",
        "twisted.words.protocols.jabber.xmpp_stringprep.nameprep",
        "twisted.words.protocols.jabber.xmpp_stringprep.nodeprep"
    ],
    "/tmp/twisted/twisted/words/test/test_service.py": [
        "twisted.internet.defer",
        "twisted.internet.reactor",
        "twisted.trial.unittest",
        "twisted.python.compat.unicode",
        "twisted.cred.checkers",
        "twisted.words.service",
        "twisted.spread.pb",
        "twisted.test.proto_helpers",
        "twisted.internet.defer.Deferred",
        "twisted.internet.defer.succeed",
        "twisted.cred.portal",
        "twisted.internet.address",
        "twisted.cred.credentials",
        "twisted.words.protocols.irc",
        "twisted.words.ewords",
        "twisted.internet.defer.DeferredList",
        "time",
        "twisted.internet.defer.maybeDeferred"
    ],
    "/tmp/twisted/twisted/words/test/test_xishutil.py": [
        "twisted.words.xish.utility.EventDispatcher",
        "__future__.division",
        "collections.OrderedDict",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.words.xish.domish.Element",
        "twisted.words.xish.utility"
    ],
    "/tmp/twisted/twisted/words/test/test_xmlstream.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "twisted.trial.unittest",
        "__future__.absolute_import",
        "twisted.python.failure",
        "twisted.words.xish.xmlstream",
        "twisted.words.xish.domish",
        "twisted.words.xish.utility"
    ],
    "/tmp/twisted/twisted/words/test/test_xmpproutertap.py": [
        "twisted.words.protocols.jabber.component",
        "twisted.trial.unittest",
        "twisted.words.xmpproutertap",
        "twisted.application.internet"
    ],
    "/tmp/twisted/twisted/words/test/test_xpath.py": [
        "twisted.words.xish.xpath",
        "__future__.division",
        "twisted.trial.unittest",
        "twisted.words.xish.xpath.XPathQuery",
        "__future__.absolute_import",
        "twisted.words.xish.domish.Element",
        "twisted.words.xish.xpathparser.SyntaxError"
    ],
    "/tmp/twisted/twisted/words/xish/__init__.py": [],
    "/tmp/twisted/twisted/words/xish/domish.py": [
        "pyexpat",
        "twisted.python.compat._PY3",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.python.compat.StringType",
        "twisted.python.compat.itervalues",
        "zope.interface.Interface",
        "twisted.web.sux",
        "__future__.division",
        "zope.interface.implementer",
        "twisted.python.compat.iteritems",
        "twisted.python.compat._coercedUnicode",
        "zope.interface.Attribute"
    ],
    "/tmp/twisted/twisted/words/xish/utility.py": [
        "twisted.words.xish.xpath",
        "__future__.division",
        "twisted.python.log",
        "__future__.absolute_import",
        "twisted.python.compat.iteritems"
    ],
    "/tmp/twisted/twisted/words/xish/xmlstream.py": [
        "__future__.division",
        "twisted.internet.protocol",
        "__future__.absolute_import",
        "twisted.python.failure",
        "twisted.python.compat.intern",
        "twisted.python.compat.unicode",
        "twisted.words.xish.domish",
        "twisted.words.xish.utility"
    ],
    "/tmp/twisted/twisted/words/xish/xpath.py": [
        "twisted.words.xish.xpathparser.XPathParserScanner",
        "twisted.words.xish.xpathparser.XPathParser",
        "__future__.absolute_import",
        "twisted.python.compat.unicode",
        "twisted.python.compat.StringType",
        "__future__.division",
        "io.StringIO"
    ],
    "/tmp/twisted/twisted/words/xish/xpathparser.py": [],
    "/tmp/twisted/twisted/words/xmpproutertap.py": [
        "twisted.python.usage",
        "twisted.application.strports",
        "twisted.words.protocols.jabber.component"
    ]
}
{
    "/tmp/twitter/twitter/__init__.py": [
        "textwrap.dedent",
        ".oauth2.__doc__",
        ".oauth_dance.oauth2_dance",
        ".oauth2.OAuth2",
        ".stream.TwitterStream",
        ".auth.UserPassAuth",
        ".oauth2.read_bearer_token_file",
        ".api.Twitter",
        ".api.TwitterHTTPError",
        ".oauth2.write_bearer_token_file",
        ".oauth.write_token_file",
        ".api.TwitterError",
        ".api.TwitterResponse",
        ".auth.NoAuth",
        ".oauth.OAuth",
        ".oauth.__doc__",
        ".oauth.read_token_file",
        ".oauth_dance.oauth_dance"
    ],
    "/tmp/twitter/twitter/ansi.py": [
        "sys",
        "itertools"
    ],
    "/tmp/twitter/twitter/api.py": [
        "base64",
        ".util.PY_3_OR_HIGHER",
        "__future__.unicode_literals",
        ".util.actually_bytes",
        ".twitter_globals.POST_ACTIONS",
        "time.sleep",
        "urllib2",
        "re",
        "simplejson",
        "sys",
        ".auth.NoAuth",
        "__future__.print_function",
        "io.BytesIO",
        "urllib2",
        "time.time",
        "gzip",
        "httplib"
    ],
    "/tmp/twitter/twitter/archiver.py": [
        "getopt.GetoptError",
        "functools",
        "datetime.datetime",
        ".timezones.Local",
        ".util.expand_line",
        ".follow.lookup",
        "__future__.print_function",
        "getopt.gnu_getopt",
        ".timezones.utc",
        "urllib2",
        "sys",
        ".api.TwitterError",
        ".auth.NoAuth",
        ".oauth.OAuth",
        ".oauth_dance.oauth_dance",
        "httplib",
        ".util.err",
        ".api.Twitter",
        "time",
        "datetime.time",
        ".oauth.read_token_file",
        ".util.Fail",
        "os",
        ".util.parse_host_list"
    ],
    "/tmp/twitter/twitter/auth.py": [
        "base64.encodestring",
        "urllib"
    ],
    "/tmp/twitter/twitter/cmdline.py": [
        "code",
        "getopt.GetoptError",
        ".util.align_text",
        "datetime",
        "html.parser",
        ".util.smrt_input",
        "locale",
        "configparser.ConfigParser",
        ".util.printNicely",
        "re",
        "json",
        "__future__.print_function",
        "getopt.gnu_getopt",
        "urllib2.quote",
        "sys",
        ".api.TwitterError",
        ".oauth.OAuth",
        ".oauth_dance.oauth_dance",
        ".ansi",
        ".api.Twitter",
        "time",
        ".oauth.read_token_file",
        "os.path"
    ],
    "/tmp/twitter/twitter/follow.py": [
        "getopt.GetoptError",
        "__future__.print_function",
        "getopt.gnu_getopt",
        "urllib2",
        "sys",
        ".api.TwitterError",
        ".auth.NoAuth",
        ".oauth.OAuth",
        ".oauth_dance.oauth_dance",
        "httplib",
        ".util.err",
        ".api.Twitter",
        "time",
        ".util.Fail",
        "os",
        ".oauth.read_token_file"
    ],
    "/tmp/twitter/twitter/ircbot.py": [
        "email.utils.parsedate",
        "datetime.datetime",
        ".oauth_dance.oauth_dance",
        "heapq.heappop",
        "datetime.timedelta",
        "irclib",
        "sys",
        ".api.TwitterError",
        ".oauth.OAuth",
        "__future__.print_function",
        "ConfigParser.ConfigParser",
        ".util.htmlentitydecode",
        ".api.Twitter",
        "traceback",
        "heapq.heappush",
        "time",
        "os.path",
        ".oauth.read_token_file"
    ],
    "/tmp/twitter/twitter/logger.py": [
        ".util.printNicely",
        ".api.Twitter",
        ".oauth_dance.oauth_dance",
        "sys",
        ".api.TwitterError",
        "time.sleep",
        ".oauth.OAuth",
        "os",
        ".oauth.read_token_file",
        "__future__.print_function"
    ],
    "/tmp/twitter/twitter/oauth.py": [
        "urllib.urlencode",
        "hashlib",
        ".util.PY_3_OR_HIGHER",
        ".auth.MissingCredentialsError",
        "base64",
        ".auth.Auth",
        "__future__.print_function",
        "time.time",
        "urllib2",
        "hmac",
        "random.getrandbits"
    ],
    "/tmp/twitter/twitter/oauth2.py": [
        "urllib.urlencode",
        ".auth.MissingCredentialsError",
        "urllib.quote",
        ".auth.Auth",
        "base64.b64encode",
        "__future__.print_function"
    ],
    "/tmp/twitter/twitter/oauth_dance.py": [
        ".oauth2.OAuth2",
        ".oauth.write_token_file",
        ".api.Twitter",
        ".api.json",
        "webbrowser",
        "time",
        ".oauth.OAuth",
        ".oauth2.write_bearer_token_file",
        "__future__.print_function"
    ],
    "/tmp/twitter/twitter/stream.py": [
        ".util.PY_3_OR_HIGHER",
        "__future__.unicode_literals",
        "select",
        ".api.TwitterCall",
        "urllib2",
        "json",
        "ssl.SSLError",
        ".api.TwitterHTTPError",
        "codecs",
        ".api.wrap_response",
        "socket",
        "urllib2",
        "time"
    ],
    "/tmp/twitter/twitter/stream_example.py": [
        "argparse",
        "twitter.util.printNicely",
        "twitter.stream.HeartbeatTimeout",
        "twitter.stream.TwitterStream",
        "twitter.stream.Hangup",
        "twitter.stream.Timeout",
        "twitter.oauth.OAuth",
        "__future__.print_function"
    ],
    "/tmp/twitter/twitter/timezones.py": [
        "datetime.timedelta",
        "time",
        "datetime.tzinfo"
    ],
    "/tmp/twitter/twitter/twitter_globals.py": [],
    "/tmp/twitter/twitter/util.py": [
        "contextlib",
        "re",
        "textwrap",
        "urllib2",
        "sys",
        "__future__.print_function",
        "htmlentitydefs.name2codepoint",
        "urlparse",
        "time"
    ]
}
{
    "/tmp/twython/twython/__init__.py": [],
    "/tmp/twython/twython/advisory.py": [],
    "/tmp/twython/twython/api.py": [
        "requests_oauthlib.OAuth1",
        ".compat.urlencode",
        ".compat.quote_plus",
        "requests_oauthlib.OAuth2",
        ".compat.parse_qsl",
        ".exceptions.TwythonRateLimitError",
        "warnings",
        "requests.auth.HTTPBasicAuth",
        ".endpoints.EndpointsMixin",
        ".exceptions.TwythonAuthError",
        ".exceptions.TwythonError",
        "re",
        ".compat.json",
        ".helpers._transparent_params",
        ".advisory.TwythonDeprecationWarning",
        ".compat.str",
        ".compat.is_py2",
        "requests",
        ".__version__"
    ],
    "/tmp/twython/twython/compat.py": [
        "sys"
    ],
    "/tmp/twython/twython/endpoints.py": [
        "io.StringIO",
        ".advisory.TwythonDeprecationWarning",
        "warnings",
        "os"
    ],
    "/tmp/twython/twython/exceptions.py": [
        ".endpoints.TWITTER_HTTP_STATUS_CODE"
    ],
    "/tmp/twython/twython/helpers.py": [
        ".compat.basestring",
        ".compat.numeric_types"
    ],
    "/tmp/twython/twython/streaming/__init__.py": [],
    "/tmp/twython/twython/streaming/api.py": [
        "requests_oauthlib.OAuth1",
        "..helpers._transparent_params",
        "time",
        "..compat.json",
        "..compat.is_py3",
        ".types.TwythonStreamerTypes",
        "requests",
        "..__version__"
    ],
    "/tmp/twython/twython/streaming/types.py": []
}
{
    "/tmp/uber_rides/uber_rides/__init__.py": [],
    "/tmp/uber_rides/uber_rides/auth.py": [
        "uber_rides.session.OAuth2Credential",
        "collections.OrderedDict",
        "__future__.unicode_literals",
        "string.ascii_letters",
        "uber_rides.utils.request.build_url",
        "__future__.absolute_import",
        "urlparse.urlparse",
        "requests.codes",
        "urlparse.parse_qs",
        "uber_rides.errors.UberIllegalState",
        "__future__.division",
        "random.SystemRandom",
        "uber_rides.utils.auth",
        "requests.post",
        "__future__.print_function",
        "string.digits",
        "uber_rides.errors.ClientError",
        "uber_rides.session.Session"
    ],
    "/tmp/uber_rides/uber_rides/client.py": [
        "__future__.division",
        "requests.codes",
        "collections.OrderedDict",
        "__future__.unicode_literals",
        "uber_rides.request.Request",
        "__future__.absolute_import",
        "uber_rides.errors.ClientError",
        "uber_rides.auth.revoke_access_token",
        "uber_rides.errors.UberIllegalState",
        "uber_rides.utils.auth",
        "uber_rides.auth.refresh_access_token",
        "__future__.print_function"
    ],
    "/tmp/uber_rides/uber_rides/errors.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/uber_rides/uber_rides/request.py": [
        "string.digits",
        "__future__.division",
        "uber_rides.utils.http",
        "__future__.unicode_literals",
        "string.ascii_letters",
        "uber_rides.utils.request.build_url",
        "__future__.absolute_import",
        "uber_rides.utils.request.generate_prepared_request",
        "requests.Session",
        "uber_rides.utils.request.generate_data",
        "uber_rides.errors.UberIllegalState",
        "__future__.print_function"
    ],
    "/tmp/uber_rides/uber_rides/session.py": [
        "__future__.division",
        "requests.codes",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "uber_rides.errors.ClientError",
        "time.time",
        "uber_rides.errors.UberIllegalState",
        "uber_rides.utils.auth",
        "__future__.print_function"
    ],
    "/tmp/uber_rides/uber_rides/utils/__init__.py": [],
    "/tmp/uber_rides/uber_rides/utils/auth.py": [],
    "/tmp/uber_rides/uber_rides/utils/handlers.py": [
        "__future__.division",
        "__future__.unicode_literals",
        "uber_rides.errors.ServerError",
        "uber_rides.errors.ClientError",
        "__future__.absolute_import",
        "__future__.print_function"
    ],
    "/tmp/uber_rides/uber_rides/utils/http.py": [],
    "/tmp/uber_rides/uber_rides/utils/request.py": [
        "urllib.urlencode",
        "__future__.division",
        "uber_rides.utils.http",
        "urlparse.urljoin",
        "__future__.unicode_literals",
        "urllib.quote",
        "requests.Request",
        "__future__.absolute_import",
        "json.dumps",
        "uber_rides.utils.handlers.error_handler",
        "__future__.print_function"
    ]
}
{
    "/tmp/ubidots/ubidots/__init__.py": [
        "requests"
    ],
    "/tmp/ubidots/ubidots/apiclient.py": [
        "re",
        "json",
        "sys",
        "requests"
    ]
}
{
    "/tmp/unirest/unirest/__init__.py": [
        "utils",
        "base64",
        "google.appengine.api.urlfetch",
        "simplejson",
        "poster.streaminghttp.register_openers",
        "urllib2",
        "gzip",
        "StringIO.StringIO",
        "threading"
    ],
    "/tmp/unirest/unirest/utils.py": [
        "urllib",
        "poster.encode.multipart_encode"
    ]
}
{
    "/tmp/uvcclient/uvcclient/__init__.py": [],
    "/tmp/uvcclient/uvcclient/_camera.py": [
        "http.client",
        "logging",
        "socket",
        "json"
    ],
    "/tmp/uvcclient/uvcclient/camera.py": [
        "http.client",
        "logging",
        "socket",
        "urllib",
        "urllib.parse",
        "json"
    ],
    "/tmp/uvcclient/uvcclient/main.py": [
        "sys",
        "logging",
        "uvcclient.nvr",
        "optparse",
        "getpass",
        "uvcclient.camera",
        "uvcclient.store"
    ],
    "/tmp/uvcclient/uvcclient/nvr.py": [
        "urllib.parse",
        "http.client",
        "zlib",
        "logging",
        "pprint",
        "json",
        "os"
    ],
    "/tmp/uvcclient/uvcclient/store.py": [
        "logging",
        "base64",
        "json",
        "os"
    ]
}
{
    "/tmp/uvloop/uvloop/__init__.py": [
        "asyncio.events.BaseDefaultEventLoopPolicy",
        ".loop.Loop",
        "asyncio"
    ],
    "/tmp/uvloop/uvloop/_noop.py": [],
    "/tmp/uvloop/uvloop/_patch.py": [
        "asyncio.streams",
        "asyncio.coroutines",
        "sys",
        "asyncio"
    ],
    "/tmp/uvloop/uvloop/_testbase.py": [
        "uvloop",
        "threading",
        "unittest",
        "socket",
        "asyncio.events",
        "tempfile",
        "re",
        "collections",
        "logging",
        "ssl",
        "inspect",
        "gc",
        "os",
        "contextlib"
    ],
    "/tmp/uvloop/uvloop/includes/__init__.py": []
}
{
    "/tmp/voluptuous/voluptuous/__init__.py": [],
    "/tmp/voluptuous/voluptuous/error.py": [],
    "/tmp/voluptuous/voluptuous/humanize.py": [
        "voluptuous.Invalid",
        "voluptuous.MultipleInvalid",
        "voluptuous.error.Error"
    ],
    "/tmp/voluptuous/voluptuous/schema_builder.py": [
        "contextlib.contextmanager",
        "functools.wraps",
        "re",
        "collections",
        "inspect",
        "sys",
        "itertools.ifilter",
        ".error"
    ],
    "/tmp/voluptuous/voluptuous/util.py": [
        ".schema_builder.default_factory",
        ".error.TypeInvalid",
        ".error.LiteralInvalid"
    ],
    "/tmp/voluptuous/voluptuous/validators.py": [
        ".error.UrlInvalid",
        ".error.Invalid",
        "datetime",
        ".error.MatchInvalid",
        ".error.TrueInvalid",
        ".error.FileInvalid",
        ".schema_builder.message",
        ".schema_builder.Schema",
        ".error.AnyInvalid",
        "functools.wraps",
        ".error.CoerceInvalid",
        "re",
        ".error.TypeInvalid",
        ".error.BooleanInvalid",
        ".error.RangeInvalid",
        ".error.EmailInvalid",
        ".error.DirInvalid",
        ".error.FalseInvalid",
        ".error.AllInvalid",
        ".error.DatetimeInvalid",
        "sys",
        "urlparse",
        ".error.LengthInvalid",
        ".error.PathInvalid",
        ".error.InInvalid",
        ".error.NotInInvalid",
        ".error.ExactSequenceInvalid",
        "os"
    ]
}
{
    "/tmp/w1thermsensor/w1thermsensor/__init__.py": [],
    "/tmp/w1thermsensor/w1thermsensor/__main__.py": [
        ".cli.cli"
    ],
    "/tmp/w1thermsensor/w1thermsensor/cli.py": [
        "itertools.count",
        "json",
        ".core.W1ThermSensor",
        "click"
    ],
    "/tmp/w1thermsensor/w1thermsensor/core.py": [
        "os.listdir",
        "os.system",
        "time.sleep",
        "os.path"
    ]
}
{
    "/tmp/wakeonlan/wakeonlan/__init__.py": [],
    "/tmp/wakeonlan/wakeonlan/wol.py": [
        "socket",
        "__future__.unicode_literals",
        "__future__.absolute_import",
        "struct"
    ]
}
{
    "/tmp/webrtcvad/webrtcvad.py": [
        "_webrtcvad",
        "pkg_resources"
    ]
}
{
    "/tmp/websocket/websocket/__init__.py": [
        "struct",
        "re",
        "hashlib.md5"
    ],
    "/tmp/websocket/websocket/data/__init__.py": [],
    "/tmp/websocket/websocket/policyserver.py": [
        "gevent.server.StreamServer"
    ],
    "/tmp/websocket/websocket/server.py": [
        "websocket.data",
        "os.path.join",
        "os.path.abspath",
        "traceback",
        "gevent.pywsgi.WSGIServer",
        "datetime.datetime",
        "sys",
        "gevent",
        "websocket.policyserver.FlashPolicyServer",
        "gevent.pywsgi.WSGIHandler",
        "socket.error",
        "websocket.WebSocket",
        "os.path.dirname",
        "os.path.basename",
        "hashlib.md5"
    ]
}
{
    "/tmp/websockets/websockets/__init__.py": [
        ".client",
        ".uri",
        ".exceptions",
        ".protocol",
        ".server"
    ],
    "/tmp/websockets/websockets/client.py": [
        ".protocol.WebSocketCommonProtocol",
        ".protocol.CONNECTING",
        ".exceptions.InvalidHandshake",
        ".http.USER_AGENT",
        "asyncio",
        ".handshake.check_response",
        ".uri.parse_uri",
        "email.message",
        ".http.read_response",
        ".py35.client.Connect",
        ".handshake.build_request",
        "collections.abc",
        ".protocol.OPEN"
    ],
    "/tmp/websockets/websockets/compatibility.py": [
        "asyncio"
    ],
    "/tmp/websockets/websockets/exceptions.py": [],
    "/tmp/websockets/websockets/framing.py": [
        "io",
        ".exceptions.PayloadTooBig",
        "struct",
        "random",
        ".exceptions.WebSocketProtocolError",
        "asyncio",
        "collections"
    ],
    "/tmp/websockets/websockets/handshake.py": [
        "hashlib",
        "random",
        ".exceptions.InvalidHandshake",
        "base64"
    ],
    "/tmp/websockets/websockets/http.py": [
        ".version.version",
        "io",
        "sys",
        "asyncio",
        "email.parser"
    ],
    "/tmp/websockets/websockets/protocol.py": [
        ".compatibility.asyncio_ensure_future",
        "asyncio.queues",
        ".exceptions.PayloadTooBig",
        "random",
        ".exceptions.WebSocketProtocolError",
        "codecs",
        ".framing",
        ".exceptions.InvalidState",
        "logging",
        ".handshake",
        "struct",
        ".exceptions.ConnectionClosed",
        "collections"
    ],
    "/tmp/websockets/websockets/py35/__init__.py": [],
    "/tmp/websockets/websockets/py35/client.py": [],
    "/tmp/websockets/websockets/py35/client_server.py": [
        "..client",
        "..test_client_server.handler",
        "asyncio",
        "..server"
    ],
    "/tmp/websockets/websockets/server.py": [
        ".protocol.WebSocketCommonProtocol",
        ".exceptions.InvalidOrigin",
        ".compatibility.asyncio_ensure_future",
        ".http.read_request",
        ".exceptions.InvalidHandshake",
        ".http.USER_AGENT",
        "logging",
        "asyncio",
        ".protocol.CONNECTING",
        ".handshake.check_request",
        ".handshake.build_response",
        "email.message",
        "collections.abc",
        ".protocol.OPEN"
    ],
    "/tmp/websockets/websockets/test_client_server.py": [
        ".client",
        ".py35.client_server.ClientServerContextManager",
        ".exceptions.InvalidHandshake",
        ".http.USER_AGENT",
        "logging",
        "asyncio",
        "ssl",
        ".server",
        ".http.read_response",
        "unittest.mock",
        "os",
        ".exceptions.ConnectionClosed"
    ],
    "/tmp/websockets/websockets/test_framing.py": [
        ".framing",
        "asyncio",
        "unittest.mock",
        ".exceptions.PayloadTooBig",
        ".exceptions.WebSocketProtocolError"
    ],
    "/tmp/websockets/websockets/test_handshake.py": [
        ".exceptions.InvalidHandshake",
        "unittest",
        ".handshake.accept",
        ".handshake",
        "contextlib"
    ],
    "/tmp/websockets/websockets/test_http.py": [
        ".http",
        "unittest",
        ".http.read_message",
        "asyncio"
    ],
    "/tmp/websockets/websockets/test_protocol.py": [
        ".protocol.WebSocketCommonProtocol",
        ".exceptions.InvalidState",
        ".compatibility.asyncio_ensure_future",
        ".protocol.CONNECTING",
        "functools",
        "os",
        "asyncio",
        ".protocol.CLOSED",
        "time",
        ".framing",
        "unittest.mock",
        ".exceptions.ConnectionClosed",
        "contextlib"
    ],
    "/tmp/websockets/websockets/test_uri.py": [
        "unittest",
        ".exceptions.InvalidURI",
        ".uri"
    ],
    "/tmp/websockets/websockets/uri.py": [
        ".exceptions.InvalidURI",
        "urllib.parse",
        "collections"
    ],
    "/tmp/websockets/websockets/version.py": []
}
{
    "/tmp/wiringpi/wiringpi.py": [
        "_wiringpi",
        "imp",
        "os.path.dirname",
        "_wiringpi"
    ]
}
{
    "/tmp/wiringpi2/wiringpi2.py": [
        "warnings"
    ]
}
{
    "/tmp/wolframalpha/wolframalpha/__init__.py": [
        ".compat",
        "six.moves.map",
        "json",
        "six.moves.urllib",
        "jaraco.itertools.always_iterable",
        "xmltodict",
        "itertools"
    ],
    "/tmp/wolframalpha/wolframalpha/compat.py": [
        "six.moves.http_client",
        "six"
    ],
    "/tmp/wolframalpha/wolframalpha/pmxbot.py": [
        "wolframalpha",
        "pmxbot.core.command",
        "pmxbot",
        "__future__.absolute_import"
    ],
    "/tmp/wolframalpha/wolframalpha/test_client.py": [
        "__future__.unicode_literals",
        "six",
        "wolframalpha",
        "pytest"
    ],
    "/tmp/wolframalpha/wolframalpha/test_pmxbot.py": [
        "wolframalpha.pmxbot",
        "pmxbot"
    ]
}
{
    "/tmp/xbee_helper/xbee_helper/__init__.py": [
        "xbee_helper.device.ZigBee"
    ],
    "/tmp/xbee_helper/xbee_helper/const.py": [
        "datetime.timedelta"
    ],
    "/tmp/xbee_helper/xbee_helper/device.py": [
        "logging",
        "sys.version_info",
        "xbee.ZigBee",
        "datetime.datetime",
        "time.sleep",
        "xbee_helper.exceptions",
        "xbee_helper.const"
    ],
    "/tmp/xbee_helper/xbee_helper/exceptions.py": []
}
{
    "/tmp/xboxapi/xboxapi/__init__.py": [],
    "/tmp/xboxapi/xboxapi/xbox_api.py": [
        "requests",
        "json"
    ]
}
{
    "/tmp/xmltodict/xmltodict.py": [
        "xml.parsers.expat",
        "xml.sax.saxutils.XMLGenerator",
        "xml.sax.xmlreader.AttributesImpl",
        "sys",
        "io.StringIO",
        "marshal"
    ]
}
{
    "/tmp/yahooweather/yahooweather.py": [
        "urllib.parse.urlencode",
        "logging",
        "urllib.request.urlopen",
        "urllib.error",
        "json"
    ]
}
{
    "/tmp/yarl/yarl/__init__.py": [
        "urllib.parse.urlunsplit",
        "collections.abc.Sequence",
        "multidict.MultiDict",
        "urllib.parse.parse_qsl",
        ".quoting.unquote",
        "urllib.parse.urljoin",
        "urllib.parse.urlsplit",
        "functools.partial",
        "urllib.parse.SplitResult",
        "multidict.MultiDictProxy",
        ".quoting.quote",
        "ipaddress.ip_address",
        "collections.abc.Mapping"
    ],
    "/tmp/yarl/yarl/quoting.py": [
        "string.ascii_letters",
        "string.digits",
        "._quoting._quote",
        "._quoting._unquote",
        "string.ascii_lowercase"
    ]
}
